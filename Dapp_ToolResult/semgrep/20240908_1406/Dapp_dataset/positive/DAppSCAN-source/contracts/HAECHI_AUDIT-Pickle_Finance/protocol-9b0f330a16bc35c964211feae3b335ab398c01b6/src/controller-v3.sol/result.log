METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 48 Code rules:
  Scanning 1 file with 48 solidity rules.
                    
                    
┌──────────────────┐
│ 50 Code Findings │
└──────────────────┘
                          
    /sb/controller-v3.sol 
       solidity.best-practice.use-abi-encodecall-instead-of-encodewithselector  
          To guarantee arguments type safety it is recommended to use           
  `abi.encodeCall` instead of                                                   
          `abi.encodeWithSelector`.                                             
                                                                                
          727┆ _callOptionalReturn(token,                                       
  abi.encodeWithSelector(token.transfer.selector, to, value));                  
            ⋮┆----------------------------------------
          731┆ _callOptionalReturn(token,                                       
  abi.encodeWithSelector(token.transferFrom.selector, from, to, value));        
            ⋮┆----------------------------------------
          749┆ _callOptionalReturn(token,                                       
  abi.encodeWithSelector(token.approve.selector, spender, value));              
            ⋮┆----------------------------------------
          754┆ _callOptionalReturn(token,                                       
  abi.encodeWithSelector(token.approve.selector, spender, newAllowance));       
            ⋮┆----------------------------------------
          759┆ _callOptionalReturn(token,                                       
  abi.encodeWithSelector(token.approve.selector, spender, newAllowance));       
            ⋮┆----------------------------------------
       solidity.performance.non-payable-constructor      
          Consider making costructor payable to save gas.
                                                         
          461┆ constructor (string memory name, string memory symbol) public {
          462┆     _name = name;
          463┆     _symbol = symbol;
          464┆     _decimals = 18;
          465┆ }
            ⋮┆----------------------------------------
          894┆ constructor(
          895┆     address _governance,
          896┆     address _strategist,
          897┆     address _timelock,
          898┆     address _devfund,
          899┆     address _treasury
          900┆ ) public {
          901┆     governance = _governance;
          902┆     strategist = _strategist;
          903┆     timelock = _timelock;
             [hid 3 additional lines, adjust with --max-lines-per-finding] 
       solidity.performance.use-custom-error-not-require                        
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
                                                                                
           47┆ require(c >= a, "SafeMath: addition overflow");
            ⋮┆----------------------------------------
          102┆ require(c / a == b, "SafeMath: multiplication overflow");
            ⋮┆----------------------------------------
          324┆ require(address(this).balance >= amount, "Address: insufficient  
  balance");                                                                    
            ⋮┆----------------------------------------
          328┆ require(success, "Address: unable to send value, recipient may   
  have reverted");                                                              
            ⋮┆----------------------------------------
          385┆ require(address(this).balance >= value, "Address: insufficient   
  balance for call");                                                           
            ⋮┆----------------------------------------
          390┆ require(isContract(target), "Address: call to non-contract");
            ⋮┆----------------------------------------
          614┆ require(sender != address(0), "ERC20: transfer from the zero     
  address");                                                                    
            ⋮┆----------------------------------------
          615┆ require(recipient != address(0), "ERC20: transfer to the zero    
  address");                                                                    
            ⋮┆----------------------------------------
          634┆ require(account != address(0), "ERC20: mint to the zero          
  address");                                                                    
            ⋮┆----------------------------------------
          655┆ require(account != address(0), "ERC20: burn from the zero        
  address");                                                                    
            ⋮┆----------------------------------------
          678┆ require(owner != address(0), "ERC20: approve from the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          679┆ require(spender != address(0), "ERC20: approve to the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          746┆ require((value == 0) || (token.allowance(address(this), spender) 
  == 0),                                                                        
          747┆     "SafeERC20: approve from non-zero to non-zero allowance"
          748┆ );
            ⋮┆----------------------------------------
          776┆ require(abi.decode(returndata, (bool)), "SafeERC20: ERC20        
  operation did not succeed");                                                  
            ⋮┆----------------------------------------
          909┆ require(msg.sender == governance, "!governance");
            ⋮┆----------------------------------------
          914┆ require(msg.sender == governance, "!governance");
            ⋮┆----------------------------------------
          919┆ require(msg.sender == governance, "!governance");
            ⋮┆----------------------------------------
          924┆ require(msg.sender == governance, "!governance");
            ⋮┆----------------------------------------
          929┆ require(msg.sender == governance, "!governance");
            ⋮┆----------------------------------------
          934┆ require(msg.sender == governance, "!governance");
            ⋮┆----------------------------------------
          939┆ require(msg.sender == timelock, "!timelock");
            ⋮┆----------------------------------------
          944┆ require(
          945┆     msg.sender == strategist || msg.sender == governance,
          946┆     "!strategist"
          947┆ );
            ⋮┆----------------------------------------
          948┆ require(jars[_token] == address(0), "jar");
            ⋮┆----------------------------------------
          953┆ require(msg.sender == timelock, "!timelock");
            ⋮┆----------------------------------------
          958┆ require(msg.sender == governance, "!governance");
            ⋮┆----------------------------------------
          967┆ require(
          968┆     msg.sender == strategist || msg.sender == governance,
          969┆     "!strategist"
          970┆ );
            ⋮┆----------------------------------------
          975┆ require(
          976┆     msg.sender == strategist || msg.sender == governance,
          977┆     "!strategist"
          978┆ );
            ⋮┆----------------------------------------
          979┆ require(approvedStrategies[_token][_strategy] == true,           
  "!approved");                                                                 
            ⋮┆----------------------------------------
         1007┆ require(
         1008┆     msg.sender == strategist || msg.sender == governance,
         1009┆     "!strategist"
         1010┆ );
            ⋮┆----------------------------------------
         1015┆ require(
         1016┆     msg.sender == strategist || msg.sender == governance,
         1017┆     "!governance"
         1018┆ );
            ⋮┆----------------------------------------
         1025┆ require(
         1026┆     msg.sender == strategist || msg.sender == governance,
         1027┆     "!governance"
         1028┆ );
            ⋮┆----------------------------------------
         1054┆ require(
         1055┆     msg.sender == strategist || msg.sender == governance,
         1056┆     "!governance"
         1057┆ );
            ⋮┆----------------------------------------
         1091┆ require(msg.sender == jars[_token], "!jar");
            ⋮┆----------------------------------------
       solidity.performance.use-short-revert-string                             
          Shortening revert strings to fit in 32 bytes will decrease gas costs  
  for deployment and  gas                                                       
          costs when the revert condition has been met.                         
                                                                                
          102┆ require(c / a == b, "SafeMath: multiplication overflow");
            ⋮┆----------------------------------------
          328┆ require(success, "Address: unable to send value, recipient may   
  have reverted");                                                              
            ⋮┆----------------------------------------
          385┆ require(address(this).balance >= value, "Address: insufficient   
  balance for call");                                                           
            ⋮┆----------------------------------------
          614┆ require(sender != address(0), "ERC20: transfer from the zero     
  address");                                                                    
            ⋮┆----------------------------------------
          615┆ require(recipient != address(0), "ERC20: transfer to the zero    
  address");                                                                    
            ⋮┆----------------------------------------
          655┆ require(account != address(0), "ERC20: burn from the zero        
  address");                                                                    
            ⋮┆----------------------------------------
          678┆ require(owner != address(0), "ERC20: approve from the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          679┆ require(spender != address(0), "ERC20: approve to the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          746┆ require((value == 0) || (token.allowance(address(this), spender) 
  == 0),                                                                        
          747┆     "SafeERC20: approve from non-zero to non-zero allowance"
          748┆ );
            ⋮┆----------------------------------------
          776┆ require(abi.decode(returndata, (bool)), "SafeERC20: ERC20        
  operation did not succeed");                                                  

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 48 rules on 1 file: 50 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
