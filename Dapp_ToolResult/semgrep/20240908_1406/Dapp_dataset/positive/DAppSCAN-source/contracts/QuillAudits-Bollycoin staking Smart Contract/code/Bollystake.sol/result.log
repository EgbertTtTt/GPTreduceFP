METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 48 Code rules:
  Scanning 1 file with 48 solidity rules.
                    
                    
┌──────────────────┐
│ 52 Code Findings │
└──────────────────┘
                       
    /sb/Bollystake.sol 
       solidity.performance.array-length-outside-loop                           
          Caching the array length outside a loop saves reading it on each      
  iteration, as long as the                                                     
          array's length is not changed during the loop.                        
                                                                                
          759┆ for (uint256 s = 0; s < stakeholders.length; s += 1){
            ⋮┆----------------------------------------
          814┆ for (uint256 s = 0; s < stakeholders.length; s += 1){
            ⋮┆----------------------------------------
          826┆ for (uint256 s = 0; s < stakeholders.length; s += 1){
            ⋮┆----------------------------------------
          872┆ for (uint256 s = 0; s < stakeholders.length; s += 1){
            ⋮┆----------------------------------------
       solidity.performance.inefficient-state-variable-increment             
          <x> += <y> costs more gas than <x> = <x> + <y> for state variables.
                                                                             
          612┆ _totalSupply += amount;
            ⋮┆----------------------------------------
       solidity.performance.non-payable-constructor      
          Consider making costructor payable to save gas.
                                                         
          409┆ constructor(string memory name_, string memory symbol_) {
          410┆     _name = name_;
          411┆     _symbol = symbol_;
          412┆ }
            ⋮┆----------------------------------------
          730┆ constructor(IERC20usdt _usdt,IERC20 _BOLLY, address _owner) {
          731┆     require(address(_BOLLY) != address(0), "_BOLLY is a zero     
  address");                                                                    
          732┆     BOLLY = _BOLLY;
          733┆     owner = _owner;
          734┆     usdt = _usdt;
          735┆ }
            ⋮┆----------------------------------------
       solidity.performance.state-variable-read-in-a-loop                       
          Replace state variable reads and writes within loops with local       
  variable reads and writes.                                                    
                                                                                
          759┆ for (uint256 s = 0; s < stakeholders.length; s += 1){
            ⋮┆----------------------------------------
          760┆ if (_address == stakeholders[s]) return (true, s);
            ⋮┆----------------------------------------
          814┆ for (uint256 s = 0; s < stakeholders.length; s += 1){
            ⋮┆----------------------------------------
          815┆ _totalStakes = _totalStakes.add(stakes[stakeholders[s]]);
            ⋮┆----------------------------------------
          815┆ _totalStakes = _totalStakes.add(stakes[stakeholders[s]]);
            ⋮┆----------------------------------------
          826┆ for (uint256 s = 0; s < stakeholders.length; s += 1){
            ⋮┆----------------------------------------
          827┆ if(users[stakeholders[s]].expire > block.timestamp) {
            ⋮┆----------------------------------------
          827┆ if(users[stakeholders[s]].expire > block.timestamp) {
            ⋮┆----------------------------------------
          828┆ _totaleligibleStakes =                                           
  _totaleligibleStakes.add(stakes[stakeholders[s]]);                            
            ⋮┆----------------------------------------
          828┆ _totaleligibleStakes =                                           
  _totaleligibleStakes.add(stakes[stakeholders[s]]);                            
            ⋮┆----------------------------------------
          872┆ for (uint256 s = 0; s < stakeholders.length; s += 1){
            ⋮┆----------------------------------------
          873┆ address stakeholder = stakeholders[s];
            ⋮┆----------------------------------------
          876┆ if(users[stakeholder].expire > block.timestamp) {
            ⋮┆----------------------------------------
       solidity.performance.use-custom-error-not-require                        
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
                                                                                
          513┆ require(currentAllowance >= amount, "ERC20: transfer amount      
  exceeds allowance");                                                          
            ⋮┆----------------------------------------
          554┆ require(currentAllowance >= subtractedValue, "ERC20: decreased   
  allowance below zero");                                                       
            ⋮┆----------------------------------------
          581┆ require(sender != address(0), "ERC20: transfer from the zero     
  address");                                                                    
            ⋮┆----------------------------------------
          582┆ require(recipient != address(0), "ERC20: transfer to the zero    
  address");                                                                    
            ⋮┆----------------------------------------
          587┆ require(senderBalance >= amount, "ERC20: transfer amount exceeds 
  balance");                                                                    
            ⋮┆----------------------------------------
          608┆ require(account != address(0), "ERC20: mint to the zero          
  address");                                                                    
            ⋮┆----------------------------------------
          631┆ require(account != address(0), "ERC20: burn from the zero        
  address");                                                                    
            ⋮┆----------------------------------------
          636┆ require(accountBalance >= amount, "ERC20: burn amount exceeds    
  balance");                                                                    
            ⋮┆----------------------------------------
          665┆ require(owner != address(0), "ERC20: approve from the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          666┆ require(spender != address(0), "ERC20: approve to the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          731┆ require(address(_BOLLY) != address(0), "_BOLLY is a zero         
  address");                                                                    
            ⋮┆----------------------------------------
          744┆ require(msg.sender==owner,"only owner set new owner")  ;
            ⋮┆----------------------------------------
          838┆ require(_amount >= 10000000000000000000000,"minimum 10000 BOLLY  
  needs to be staked");                                                         
            ⋮┆----------------------------------------
          839┆ require(allowance >= _amount, "Check the Bolly allowance");
            ⋮┆----------------------------------------
          851┆ require(_isStakeholder==true, "only current stakeholders can     
  relock stake");                                                               
            ⋮┆----------------------------------------
          859┆ require( (users[msg.sender].expire < block.timestamp) && (_share 
  <= users[msg.sender].locked_amount) ,"Please wait 365 days until removing     
  stake");                                                                      
            ⋮┆----------------------------------------
          868┆ require(amount > 0, "Nothing to distribute");
            ⋮┆----------------------------------------
          869┆ require(msg.sender == owner, "Caller is not authorised");
            ⋮┆----------------------------------------
          870┆ require(allowance >= amount, "Check the USDT allowance");
            ⋮┆----------------------------------------
       solidity.performance.use-multiple-require                                
          Using multiple require statements is cheaper than using && multiple   
  check combinations.                                                           
          There are more advantages, such as easier to read code and better     
  coverage reports.                                                             
                                                                                
          859┆ require( (users[msg.sender].expire < block.timestamp) && (_share 
  <= users[msg.sender].locked_amount) ,"Please wait 365 days until removing     
  stake");                                                                      
            ⋮┆----------------------------------------
       solidity.performance.use-short-revert-string                             
          Shortening revert strings to fit in 32 bytes will decrease gas costs  
  for deployment and  gas                                                       
          costs when the revert condition has been met.                         
                                                                                
          513┆ require(currentAllowance >= amount, "ERC20: transfer amount      
  exceeds allowance");                                                          
            ⋮┆----------------------------------------
          554┆ require(currentAllowance >= subtractedValue, "ERC20: decreased   
  allowance below zero");                                                       
            ⋮┆----------------------------------------
          581┆ require(sender != address(0), "ERC20: transfer from the zero     
  address");                                                                    
            ⋮┆----------------------------------------
          582┆ require(recipient != address(0), "ERC20: transfer to the zero    
  address");                                                                    
            ⋮┆----------------------------------------
          587┆ require(senderBalance >= amount, "ERC20: transfer amount exceeds 
  balance");                                                                    
            ⋮┆----------------------------------------
          631┆ require(account != address(0), "ERC20: burn from the zero        
  address");                                                                    
            ⋮┆----------------------------------------
          636┆ require(accountBalance >= amount, "ERC20: burn amount exceeds    
  balance");                                                                    
            ⋮┆----------------------------------------
          665┆ require(owner != address(0), "ERC20: approve from the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          666┆ require(spender != address(0), "ERC20: approve to the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          838┆ require(_amount >= 10000000000000000000000,"minimum 10000 BOLLY  
  needs to be staked");                                                         
            ⋮┆----------------------------------------
          851┆ require(_isStakeholder==true, "only current stakeholders can     
  relock stake");                                                               
            ⋮┆----------------------------------------
          859┆ require( (users[msg.sender].expire < block.timestamp) && (_share 
  <= users[msg.sender].locked_amount) ,"Please wait 365 days until removing     
  stake");                                                                      

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 48 rules on 1 file: 52 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
