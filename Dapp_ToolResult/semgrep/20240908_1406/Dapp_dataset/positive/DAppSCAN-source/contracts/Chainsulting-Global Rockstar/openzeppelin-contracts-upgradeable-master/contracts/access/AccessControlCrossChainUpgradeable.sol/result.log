METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 48 Code rules:
  Scanning 1 file with 48 solidity rules.
                    
                    
┌──────────────────┐
│ 21 Code Findings │
└──────────────────┘
                                               
    /sb/AccessControlCrossChainUpgradeable.sol 
       solidity.performance.use-custom-error-not-require                        
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
                                                                                
          146┆ require(address(this).balance >= amount, "Address: insufficient  
  balance");                                                                    
            ⋮┆----------------------------------------
          149┆ require(success, "Address: unable to send value, recipient may   
  have reverted");                                                              
            ⋮┆----------------------------------------
          219┆ require(address(this).balance >= value, "Address: insufficient   
  balance for call");                                                           
            ⋮┆----------------------------------------
          265┆ require(isContract(target), "Address: call to non-contract");
            ⋮┆----------------------------------------
          379┆ require(
          380┆     (isTopLevelCall && _initialized < 1) ||                      
  (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),         
          381┆     "Initializable: contract is already initialized"
          382┆ );
            ⋮┆----------------------------------------
          407┆ require(!_initializing && _initialized < version, "Initializable:
  contract is already initialized");                                            
            ⋮┆----------------------------------------
          420┆ require(_initializing, "Initializable: contract is not           
  initializing");                                                               
            ⋮┆----------------------------------------
          431┆ require(!_initializing, "Initializable: contract is              
  initializing");                                                               
            ⋮┆----------------------------------------
          532┆ require(value == 0, "Strings: hex length insufficient");
            ⋮┆----------------------------------------
          777┆ require(account == _msgSender(), "AccessControl: can only        
  renounce roles for self");                                                    
            ⋮┆----------------------------------------
       solidity.performance.use-multiple-require                                
          Using multiple require statements is cheaper than using && multiple   
  check combinations.                                                           
          There are more advantages, such as easier to read code and better     
  coverage reports.                                                             
                                                                                
          379┆ require(
          380┆     (isTopLevelCall && _initialized < 1) ||                      
  (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),         
          381┆     "Initializable: contract is already initialized"
          382┆ );
            ⋮┆----------------------------------------
          407┆ require(!_initializing && _initialized < version, "Initializable:
  contract is already initialized");                                            
            ⋮┆----------------------------------------
       solidity.performance.use-prefix-increment-not-postfix                    
          Consider using the prefix increment expression whenever the return    
  value is not needed. The                                                      
          prefix increment expression is cheaper in terms of gas.               
                                                                                
          493┆ digits++;
            ⋮┆----------------------------------------
          515┆ length++;
            ⋮┆----------------------------------------
       solidity.performance.use-short-revert-string                             
          Shortening revert strings to fit in 32 bytes will decrease gas costs  
  for deployment and  gas                                                       
          costs when the revert condition has been met.                         
                                                                                
          149┆ require(success, "Address: unable to send value, recipient may   
  have reverted");                                                              
            ⋮┆----------------------------------------
          219┆ require(address(this).balance >= value, "Address: insufficient   
  balance for call");                                                           
            ⋮┆----------------------------------------
          379┆ require(
          380┆     (isTopLevelCall && _initialized < 1) ||                      
  (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),         
          381┆     "Initializable: contract is already initialized"
          382┆ );
            ⋮┆----------------------------------------
          407┆ require(!_initializing && _initialized < version, "Initializable:
  contract is already initialized");                                            
            ⋮┆----------------------------------------
          420┆ require(_initializing, "Initializable: contract is not           
  initializing");                                                               
            ⋮┆----------------------------------------
          431┆ require(!_initializing, "Initializable: contract is              
  initializing");                                                               
            ⋮┆----------------------------------------
          777┆ require(account == _msgSender(), "AccessControl: can only        
  renounce roles for self");                                                    

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 48 rules on 1 file: 21 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
