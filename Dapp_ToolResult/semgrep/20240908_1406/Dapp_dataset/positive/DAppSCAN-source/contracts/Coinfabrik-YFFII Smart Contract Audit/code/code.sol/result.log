METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 48 Code rules:
  Scanning 1 file with 48 solidity rules.
                    
                    
┌──────────────────┐
│ 33 Code Findings │
└──────────────────┘
                 
    /sb/code.sol 
       solidity.best-practice.use-abi-encodecall-instead-of-encodewithselector  
          To guarantee arguments type safety it is recommended to use           
  `abi.encodeCall` instead of                                                   
          `abi.encodeWithSelector`.                                             
                                                                                
           89┆ callOptionalReturn(token,                                        
  abi.encodeWithSelector(token.transfer.selector, to, value));                  
            ⋮┆----------------------------------------
           93┆ callOptionalReturn(token,                                        
  abi.encodeWithSelector(token.transferFrom.selector, from, to, value));        
            ⋮┆----------------------------------------
          100┆ callOptionalReturn(token,                                        
  abi.encodeWithSelector(token.approve.selector, spender, value));              
            ⋮┆----------------------------------------
       solidity.performance.non-payable-constructor      
          Consider making costructor payable to save gas.
                                                         
          176┆ constructor(address _rewards) public {
          177┆     governance = msg.sender;
          178┆     strategist = msg.sender;
          179┆     onesplit =                                                   
  address(0x50FDA034C0Ce7a8f7EFDAebDA7Aa7cA21CC1267e);                          
          180┆     rewards = _rewards;
          181┆ }
            ⋮┆----------------------------------------
       solidity.performance.use-custom-error-not-require                        
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
                                                                                
           22┆ require(c >= a, "SafeMath: addition overflow");
            ⋮┆----------------------------------------
           41┆ require(c / a == b, "SafeMath: multiplication overflow");
            ⋮┆----------------------------------------
           76┆ require(address(this).balance >= amount, "Address: insufficient  
  balance");                                                                    
            ⋮┆----------------------------------------
           80┆ require(success, "Address: unable to send value, recipient may   
  have reverted");                                                              
            ⋮┆----------------------------------------
           97┆ require((value == 0) || (token.allowance(address(this), spender) 
  == 0),                                                                        
           98┆     "SafeERC20: approve from non-zero to non-zero allowance"
           99┆ );
            ⋮┆----------------------------------------
          103┆ require(address(token).isContract(), "SafeERC20: call to         
  non-contract");                                                               
            ⋮┆----------------------------------------
          107┆ require(success, "SafeERC20: low-level call failed");
            ⋮┆----------------------------------------
          111┆ require(abi.decode(returndata, (bool)), "SafeERC20: ERC20        
  operation did not succeed");                                                  
            ⋮┆----------------------------------------
          184┆ require(msg.sender == governance, "!governance");
            ⋮┆----------------------------------------
          189┆ require(msg.sender == governance, "!governance");
            ⋮┆----------------------------------------
          194┆ require(msg.sender == governance, "!governance");
            ⋮┆----------------------------------------
          199┆ require(msg.sender == governance, "!governance");
            ⋮┆----------------------------------------
          204┆ require(msg.sender == governance, "!governance");
            ⋮┆----------------------------------------
          209┆ require(msg.sender == strategist || msg.sender == governance,    
  "!strategist");                                                               
            ⋮┆----------------------------------------
          210┆ require(vaults[_token] == address(0), "vault");
            ⋮┆----------------------------------------
          215┆ require(msg.sender == governance, "!governance");
            ⋮┆----------------------------------------
          220┆ require(msg.sender == governance, "!governance");
            ⋮┆----------------------------------------
          225┆ require(msg.sender == strategist || msg.sender == governance,    
  "!strategist");                                                               
            ⋮┆----------------------------------------
          230┆ require(msg.sender == strategist || msg.sender == governance,    
  "!strategist");                                                               
            ⋮┆----------------------------------------
          231┆ require(approvedStrategies[_token][_strategy] == true,           
  "!approved");                                                                 
            ⋮┆----------------------------------------
          259┆ require(msg.sender == strategist || msg.sender == governance,    
  "!strategist");                                                               
            ⋮┆----------------------------------------
          264┆ require(msg.sender == strategist || msg.sender == governance,    
  "!governance");                                                               
            ⋮┆----------------------------------------
          269┆ require(msg.sender == strategist || msg.sender == governance,    
  "!governance");                                                               
            ⋮┆----------------------------------------
          281┆ require(msg.sender == strategist || msg.sender == governance,    
  "!governance");                                                               
            ⋮┆----------------------------------------
          307┆ require(msg.sender == vaults[_token], "!vault");
            ⋮┆----------------------------------------
       solidity.performance.use-short-revert-string                             
          Shortening revert strings to fit in 32 bytes will decrease gas costs  
  for deployment and  gas                                                       
          costs when the revert condition has been met.                         
                                                                                
           41┆ require(c / a == b, "SafeMath: multiplication overflow");
            ⋮┆----------------------------------------
           80┆ require(success, "Address: unable to send value, recipient may   
  have reverted");                                                              
            ⋮┆----------------------------------------
           97┆ require((value == 0) || (token.allowance(address(this), spender) 
  == 0),                                                                        
           98┆     "SafeERC20: approve from non-zero to non-zero allowance"
           99┆ );
            ⋮┆----------------------------------------
          111┆ require(abi.decode(returndata, (bool)), "SafeERC20: ERC20        
  operation did not succeed");                                                  

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 48 rules on 1 file: 33 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
