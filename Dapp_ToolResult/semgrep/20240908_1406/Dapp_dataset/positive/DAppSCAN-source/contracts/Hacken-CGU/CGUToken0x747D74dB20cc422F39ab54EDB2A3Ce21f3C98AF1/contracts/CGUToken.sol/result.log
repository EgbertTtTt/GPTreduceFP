METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 48 Code rules:
  Scanning 1 file with 48 solidity rules.
                    
                    
┌──────────────────┐
│ 33 Code Findings │
└──────────────────┘
                     
    /sb/CGUToken.sol 
       solidity.best-practice.use-ownable2step                                  
          By demanding that the receiver of the owner permissions actively      
  accept via a contract call                                                    
          of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the 
  contract ownership                                                            
          from accidentally being transferred  to an address that cannot handle 
  it.                                                                           
                                                                                
          551┆ contract CGUToken is ERC20, IERC677, Ownable {
            ⋮┆----------------------------------------
       solidity.performance.inefficient-state-variable-increment             
          <x> += <y> costs more gas than <x> = <x> + <y> for state variables.
                                                                             
          368┆ _totalSupply += amount;
            ⋮┆----------------------------------------
       solidity.performance.non-payable-constructor      
          Consider making costructor payable to save gas.
                                                         
          165┆ constructor(string memory name_, string memory symbol_) {
          166┆     _name = name_;
          167┆     _symbol = symbol_;
          168┆ }
            ⋮┆----------------------------------------
          564┆ constructor(
          565┆     string memory tokenName,
          566┆     string memory tokenSymbol
          567┆ ) ERC20(tokenName, tokenSymbol) {}
            ⋮┆----------------------------------------
       solidity.performance.use-custom-error-not-require                        
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
                                                                                
          269┆ require(currentAllowance >= amount, "ERC20: transfer amount      
  exceeds allowance");                                                          
            ⋮┆----------------------------------------
          310┆ require(currentAllowance >= subtractedValue, "ERC20: decreased   
  allowance below zero");                                                       
            ⋮┆----------------------------------------
          337┆ require(sender != address(0), "ERC20: transfer from the zero     
  address");                                                                    
            ⋮┆----------------------------------------
          338┆ require(recipient != address(0), "ERC20: transfer to the zero    
  address");                                                                    
            ⋮┆----------------------------------------
          343┆ require(senderBalance >= amount, "ERC20: transfer amount exceeds 
  balance");                                                                    
            ⋮┆----------------------------------------
          364┆ require(account != address(0), "ERC20: mint to the zero          
  address");                                                                    
            ⋮┆----------------------------------------
          387┆ require(account != address(0), "ERC20: burn from the zero        
  address");                                                                    
            ⋮┆----------------------------------------
          392┆ require(accountBalance >= amount, "ERC20: burn amount exceeds    
  balance");                                                                    
            ⋮┆----------------------------------------
          421┆ require(owner != address(0), "ERC20: approve from the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          422┆ require(spender != address(0), "ERC20: approve to the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          514┆ require(owner() == _msgSender(), "Ownable: caller is not the     
  owner");                                                                      
            ⋮┆----------------------------------------
          522┆ require(pendingOwner() == _msgSender(), "Ownable: caller is not  
  the pending owner");                                                          
            ⋮┆----------------------------------------
          570┆ require(!initialized, "Initialized");
            ⋮┆----------------------------------------
          579┆ require(amount <= freeAmount, 'Such token amount is locked or you
  have insufficient balance');                                                  
            ⋮┆----------------------------------------
          584┆ require(locks[account].timestamp == 0, 'You can create a lock    
  only once for address');                                                      
            ⋮┆----------------------------------------
          615┆ require(currentAllowance >= amount, "ERC20: transfer amount      
  exceeds allowance");                                                          
            ⋮┆----------------------------------------
       solidity.performance.use-short-revert-string                             
          Shortening revert strings to fit in 32 bytes will decrease gas costs  
  for deployment and  gas                                                       
          costs when the revert condition has been met.                         
                                                                                
          269┆ require(currentAllowance >= amount, "ERC20: transfer amount      
  exceeds allowance");                                                          
            ⋮┆----------------------------------------
          310┆ require(currentAllowance >= subtractedValue, "ERC20: decreased   
  allowance below zero");                                                       
            ⋮┆----------------------------------------
          337┆ require(sender != address(0), "ERC20: transfer from the zero     
  address");                                                                    
            ⋮┆----------------------------------------
          338┆ require(recipient != address(0), "ERC20: transfer to the zero    
  address");                                                                    
            ⋮┆----------------------------------------
          343┆ require(senderBalance >= amount, "ERC20: transfer amount exceeds 
  balance");                                                                    
            ⋮┆----------------------------------------
          387┆ require(account != address(0), "ERC20: burn from the zero        
  address");                                                                    
            ⋮┆----------------------------------------
          392┆ require(accountBalance >= amount, "ERC20: burn amount exceeds    
  balance");                                                                    
            ⋮┆----------------------------------------
          421┆ require(owner != address(0), "ERC20: approve from the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          422┆ require(spender != address(0), "ERC20: approve to the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          522┆ require(pendingOwner() == _msgSender(), "Ownable: caller is not  
  the pending owner");                                                          
            ⋮┆----------------------------------------
          579┆ require(amount <= freeAmount, 'Such token amount is locked or you
  have insufficient balance');                                                  
            ⋮┆----------------------------------------
          584┆ require(locks[account].timestamp == 0, 'You can create a lock    
  only once for address');                                                      
            ⋮┆----------------------------------------
          615┆ require(currentAllowance >= amount, "ERC20: transfer amount      
  exceeds allowance");                                                          

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 48 rules on 1 file: 33 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
