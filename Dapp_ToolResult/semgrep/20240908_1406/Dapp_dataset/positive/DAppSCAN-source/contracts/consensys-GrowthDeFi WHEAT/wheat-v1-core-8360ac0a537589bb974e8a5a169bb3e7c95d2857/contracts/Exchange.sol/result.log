METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 48 Code rules:
  Scanning 1 file with 48 solidity rules.
                    
                    
┌──────────────────┐
│ 38 Code Findings │
└──────────────────┘
                     
    /sb/Exchange.sol 
       solidity.best-practice.use-abi-encodecall-instead-of-encodewithselector  
          To guarantee arguments type safety it is recommended to use           
  `abi.encodeCall` instead of                                                   
          `abi.encodeWithSelector`.                                             
                                                                                
          594┆ _callOptionalReturn(token,                                       
  abi.encodeWithSelector(token.transfer.selector, to, value));                  
            ⋮┆----------------------------------------
          598┆ _callOptionalReturn(token,                                       
  abi.encodeWithSelector(token.transferFrom.selector, from, to, value));        
            ⋮┆----------------------------------------
          616┆ _callOptionalReturn(token,                                       
  abi.encodeWithSelector(token.approve.selector, spender, value));              
            ⋮┆----------------------------------------
          621┆ _callOptionalReturn(token,                                       
  abi.encodeWithSelector(token.approve.selector, spender, newAllowance));       
            ⋮┆----------------------------------------
          626┆ _callOptionalReturn(token,                                       
  abi.encodeWithSelector(token.approve.selector, spender, newAllowance));       
            ⋮┆----------------------------------------
       solidity.best-practice.use-ownable2step                                  
          By demanding that the receiver of the owner permissions actively      
  accept via a contract call                                                    
          of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the 
  contract ownership                                                            
          from accidentally being transferred  to an address that cannot handle 
  it.                                                                           
                                                                                
          957┆ contract Exchange is IExchange, Ownable {
            ⋮┆----------------------------------------
       solidity.performance.non-payable-constructor      
          Consider making costructor payable to save gas.
                                                         
          966┆ constructor (address _router, address _treasury) public
          967┆ {
          968┆    router =      
  _router;                      
          969┆    treasury =        
  _treasury;                        
          970┆ }
            ⋮┆----------------------------------------
       solidity.performance.use-custom-error-not-require                        
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
                                                                                
           51┆ require(owner() == _msgSender(), "Ownable: caller is not the     
  owner");                                                                      
            ⋮┆----------------------------------------
           72┆ require(newOwner != address(0), "Ownable: new owner is the zero  
  address");                                                                    
            ⋮┆----------------------------------------
          274┆ require(c >= a, "SafeMath: addition overflow");
            ⋮┆----------------------------------------
          289┆ require(b <= a, "SafeMath: subtraction overflow");
            ⋮┆----------------------------------------
          306┆ require(c / a == b, "SafeMath: multiplication overflow");
            ⋮┆----------------------------------------
          323┆ require(b > 0, "SafeMath: division by zero");
            ⋮┆----------------------------------------
          340┆ require(b > 0, "SafeMath: modulo by zero");
            ⋮┆----------------------------------------
          452┆ require(address(this).balance >= amount, "Address: insufficient  
  balance");                                                                    
            ⋮┆----------------------------------------
          456┆ require(success, "Address: unable to send value, recipient may   
  have reverted");                                                              
            ⋮┆----------------------------------------
          513┆ require(address(this).balance >= value, "Address: insufficient   
  balance for call");                                                           
            ⋮┆----------------------------------------
          514┆ require(isContract(target), "Address: call to non-contract");
            ⋮┆----------------------------------------
          538┆ require(isContract(target), "Address: static call to             
  non-contract");                                                               
            ⋮┆----------------------------------------
          562┆ require(isContract(target), "Address: delegate call to           
  non-contract");                                                               
            ⋮┆----------------------------------------
          613┆ require((value == 0) || (token.allowance(address(this), spender) 
  == 0),                                                                        
          614┆     "SafeERC20: approve from non-zero to non-zero allowance"
          615┆ );
            ⋮┆----------------------------------------
          643┆ require(abi.decode(returndata, (bool)), "SafeERC20: ERC20        
  operation did not succeed");                                                  
            ⋮┆----------------------------------------
          831┆ require(_token == _token0 || _token == _token1, "invalid token");
            ⋮┆----------------------------------------
          858┆ require(_token == _token0 || _token == _token1, "invalid token");
            ⋮┆----------------------------------------
          884┆ require(_token == _token0 || _token == _token1, "invalid token");
            ⋮┆----------------------------------------
          904┆ require(_shares >= _minShares, "high slippage");
            ⋮┆----------------------------------------
          922┆ require(_token == _token0 || _token == _token1, "invalid token");
            ⋮┆----------------------------------------
          939┆ require(_amount >= _minAmount, "high slippage");
            ⋮┆----------------------------------------
         1092┆ require(_newRouter != address(0), "invalid address");
            ⋮┆----------------------------------------
         1105┆ require(_newTreasury != address(0), "invalid address");
            ⋮┆----------------------------------------
       solidity.performance.use-short-revert-string                             
          Shortening revert strings to fit in 32 bytes will decrease gas costs  
  for deployment and  gas                                                       
          costs when the revert condition has been met.                         
                                                                                
           72┆ require(newOwner != address(0), "Ownable: new owner is the zero  
  address");                                                                    
            ⋮┆----------------------------------------
          306┆ require(c / a == b, "SafeMath: multiplication overflow");
            ⋮┆----------------------------------------
          456┆ require(success, "Address: unable to send value, recipient may   
  have reverted");                                                              
            ⋮┆----------------------------------------
          513┆ require(address(this).balance >= value, "Address: insufficient   
  balance for call");                                                           
            ⋮┆----------------------------------------
          538┆ require(isContract(target), "Address: static call to             
  non-contract");                                                               
            ⋮┆----------------------------------------
          562┆ require(isContract(target), "Address: delegate call to           
  non-contract");                                                               
            ⋮┆----------------------------------------
          613┆ require((value == 0) || (token.allowance(address(this), spender) 
  == 0),                                                                        
          614┆     "SafeERC20: approve from non-zero to non-zero allowance"
          615┆ );
            ⋮┆----------------------------------------
          643┆ require(abi.decode(returndata, (bool)), "SafeERC20: ERC20        
  operation did not succeed");                                                  

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 48 rules on 1 file: 38 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
