METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 48 Code rules:
  Scanning 1 file with 48 solidity rules.
                    
                    
┌──────────────────┐
│ 38 Code Findings │
└──────────────────┘
                                   
    /sb/StakefishERC721Wrapper.sol 
       solidity.performance.inefficient-state-variable-increment             
          <x> += <y> costs more gas than <x> = <x> + <y> for state variables.
                                                                             
          826┆ _totalMinted += 1;
            ⋮┆----------------------------------------
       solidity.performance.use-custom-error-not-require                        
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
                                                                                
          434┆ require(address(this).balance >= amount, "Address: insufficient  
  balance");                                                                    
            ⋮┆----------------------------------------
          437┆ require(success, "Address: unable to send value, recipient may   
  have reverted");                                                              
            ⋮┆----------------------------------------
          507┆ require(address(this).balance >= value, "Address: insufficient   
  balance for call");                                                           
            ⋮┆----------------------------------------
          508┆ require(isContract(target), "Address: call to non-contract");
            ⋮┆----------------------------------------
          535┆ require(isContract(target), "Address: static call to             
  non-contract");                                                               
            ⋮┆----------------------------------------
          562┆ require(isContract(target), "Address: delegate call to           
  non-contract");                                                               
            ⋮┆----------------------------------------
          638┆ require(_status != _ENTERED, "ReentrancyGuard: reentrant call");
            ⋮┆----------------------------------------
          690┆ require(amount > 0, "Amount can't be 0");
            ⋮┆----------------------------------------
          702┆ require(success, "Transfer deposit failed");
            ⋮┆----------------------------------------
          716┆ require(msg.sender == _owners[tokenId], "Not token owner");
            ⋮┆----------------------------------------
          726┆ require(success, "Transfer deposit failed");
            ⋮┆----------------------------------------
          740┆ require(_owners[tokenId] != address(0), "Token does not exist");
            ⋮┆----------------------------------------
          746┆ require(_owners[tokenId] != address(0), "Token does not exist");
            ⋮┆----------------------------------------
          758┆ require(_isApprovedOrOwner(msg.sender, tokenId), "Not owner nor  
  approved");                                                                   
            ⋮┆----------------------------------------
          769┆ require(_isApprovedOrOwner(msg.sender, tokenId), "Not owner nor  
  approved");                                                                   
            ⋮┆----------------------------------------
          784┆ require(to != owner, "Approval to current owner");
            ⋮┆----------------------------------------
          786┆ require(
          787┆     msg.sender == owner || isApprovedForAll(owner, msg.sender),
          788┆     "Not owner nor approved for all"
          789┆ );
            ⋮┆----------------------------------------
          795┆ require(operator != msg.sender, "Approve to caller");
            ⋮┆----------------------------------------
          802┆ require(owner != address(0), "Balance query for the zero         
  address");                                                                    
            ⋮┆----------------------------------------
          808┆ require(owner != address(0), "Owner query for non-existent       
  token");                                                                      
            ⋮┆----------------------------------------
          813┆ require(_owners[tokenId] != address(0), "Approved query for      
  non-existent token");                                                         
            ⋮┆----------------------------------------
          823┆ require(to != address(0), "Mint to the zero address");
            ⋮┆----------------------------------------
          838┆ require(
          839┆     _checkOnERC721Received(address(0), to, tokenId, data),
          840┆     "Transfer to non ERC721Receiver"
          841┆ );
            ⋮┆----------------------------------------
          859┆ require(_owners[tokenId] == from, "From is not token owner");
            ⋮┆----------------------------------------
          877┆ require(_checkOnERC721Received(from, to, tokenId, data),         
  "Transfer to non ERC721Receiver");                                            
            ⋮┆----------------------------------------
          888┆ require(owner != address(0), "Operator query for non-existent    
  token");                                                                      
            ⋮┆----------------------------------------
          903┆ revert("Transfer to non ERC721Receiver");
            ⋮┆----------------------------------------
       solidity.performance.use-short-revert-string                             
          Shortening revert strings to fit in 32 bytes will decrease gas costs  
  for deployment and  gas                                                       
          costs when the revert condition has been met.                         
                                                                                
          437┆ require(success, "Address: unable to send value, recipient may   
  have reverted");                                                              
            ⋮┆----------------------------------------
          507┆ require(address(this).balance >= value, "Address: insufficient   
  balance for call");                                                           
            ⋮┆----------------------------------------
          535┆ require(isContract(target), "Address: static call to             
  non-contract");                                                               
            ⋮┆----------------------------------------
          562┆ require(isContract(target), "Address: delegate call to           
  non-contract");                                                               
            ⋮┆----------------------------------------
          802┆ require(owner != address(0), "Balance query for the zero         
  address");                                                                    
            ⋮┆----------------------------------------
          808┆ require(owner != address(0), "Owner query for non-existent       
  token");                                                                      
            ⋮┆----------------------------------------
          813┆ require(_owners[tokenId] != address(0), "Approved query for      
  non-existent token");                                                         
            ⋮┆----------------------------------------
          888┆ require(owner != address(0), "Operator query for non-existent    
  token");                                                                      
            ⋮┆----------------------------------------
       solidity.security.erc721-reentrancy    
          ERC721 onERC721Received() reentrancy
                                              
          839┆ _checkOnERC721Received(address(0), to, tokenId, data),
            ⋮┆----------------------------------------
          877┆ require(_checkOnERC721Received(from, to, tokenId, data),         
  "Transfer to non ERC721Receiver");                                            

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 48 rules on 1 file: 38 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
