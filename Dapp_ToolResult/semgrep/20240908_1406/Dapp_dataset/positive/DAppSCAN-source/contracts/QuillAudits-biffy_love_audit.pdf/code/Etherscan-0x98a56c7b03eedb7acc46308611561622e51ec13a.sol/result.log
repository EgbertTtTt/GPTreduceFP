METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 48 Code rules:
  Scanning 1 file with 48 solidity rules.
                    
                    
┌──────────────────┐
│ 39 Code Findings │
└──────────────────┘
                                                                 
    /sb/Etherscan-0x98a56c7b03eedb7acc46308611561622e51ec13a.sol 
       solidity.best-practice.use-ownable2step                                  
          By demanding that the receiver of the owner permissions actively      
  accept via a contract call                                                    
          of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the 
  contract ownership                                                            
          from accidentally being transferred  to an address that cannot handle 
  it.                                                                           
                                                                                
          943┆ contract BiffysLoveFarm is LPTokenWrapper, Ownable {
            ⋮┆----------------------------------------
       solidity.performance.non-payable-constructor      
          Consider making costructor payable to save gas.
                                                         
          225┆ constructor () internal { }
            ⋮┆----------------------------------------
       solidity.performance.use-custom-error-not-require                        
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
                                                                                
          179┆ require(initializing || isConstructor() || !initialized,         
  "Contract instance has already been initialized");                            
            ⋮┆----------------------------------------
          272┆ require(isOwner(), "Ownable: caller is not the owner");
            ⋮┆----------------------------------------
          307┆ require(newOwner != address(0), "Ownable: new owner is the zero  
  address");                                                                    
            ⋮┆----------------------------------------
          377┆ require(address(this).balance >= amount, "Address: insufficient  
  balance");                                                                    
            ⋮┆----------------------------------------
          381┆ require(success, "Address: unable to send value, recipient may   
  have reverted");                                                              
            ⋮┆----------------------------------------
          441┆ require(c >= a, "SafeMath: addition overflow");
            ⋮┆----------------------------------------
          495┆ require(c / a == b, "SafeMath: multiplication overflow");
            ⋮┆----------------------------------------
          721┆ require(sender != address(0), "ERC20: transfer from the zero     
  address");                                                                    
            ⋮┆----------------------------------------
          722┆ require(recipient != address(0), "ERC20: transfer to the zero    
  address");                                                                    
            ⋮┆----------------------------------------
          739┆ require(account != address(0), "ERC20: mint to the zero          
  address");                                                                    
            ⋮┆----------------------------------------
          758┆ require(account != address(0), "ERC20: burn from the zero        
  address");                                                                    
            ⋮┆----------------------------------------
          779┆ require(owner != address(0), "ERC20: approve from the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          780┆ require(spender != address(0), "ERC20: approve to the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          814┆ require(!has(role, account), "Roles: account already has role");
            ⋮┆----------------------------------------
          822┆ require(has(role, account), "Roles: account does not have role");
            ⋮┆----------------------------------------
          831┆ require(account != address(0), "Roles: account is the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          852┆ require(isMinter(_msgSender()), "MinterRole: caller does not have
  the Minter role");                                                            
            ⋮┆----------------------------------------
          935┆ require(!address(sender).isContract(), "plz farm by hand");
            ⋮┆----------------------------------------
          936┆ require(tx.origin == sender, "plz farm by hand");
            ⋮┆----------------------------------------
         1014┆ require(amount > 0, "Cannot stake 0");
            ⋮┆----------------------------------------
         1034┆ require(rewardRate == 0, "Must not have yet set the reward       
  rate.");                                                                      
            ⋮┆----------------------------------------
         1040┆ require(earned(account) > 0, "Must be a staker");
            ⋮┆----------------------------------------
         1041┆ require(userRewardPerTokenPaid[account] == 0, "Must have         
  incorrect reward");                                                           
            ⋮┆----------------------------------------
         1065┆ require(block.timestamp > starttime, "not start");
            ⋮┆----------------------------------------
       solidity.performance.use-short-revert-string                             
          Shortening revert strings to fit in 32 bytes will decrease gas costs  
  for deployment and  gas                                                       
          costs when the revert condition has been met.                         
                                                                                
          179┆ require(initializing || isConstructor() || !initialized,         
  "Contract instance has already been initialized");                            
            ⋮┆----------------------------------------
          307┆ require(newOwner != address(0), "Ownable: new owner is the zero  
  address");                                                                    
            ⋮┆----------------------------------------
          381┆ require(success, "Address: unable to send value, recipient may   
  have reverted");                                                              
            ⋮┆----------------------------------------
          495┆ require(c / a == b, "SafeMath: multiplication overflow");
            ⋮┆----------------------------------------
          721┆ require(sender != address(0), "ERC20: transfer from the zero     
  address");                                                                    
            ⋮┆----------------------------------------
          722┆ require(recipient != address(0), "ERC20: transfer to the zero    
  address");                                                                    
            ⋮┆----------------------------------------
          758┆ require(account != address(0), "ERC20: burn from the zero        
  address");                                                                    
            ⋮┆----------------------------------------
          779┆ require(owner != address(0), "ERC20: approve from the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          780┆ require(spender != address(0), "ERC20: approve to the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          822┆ require(has(role, account), "Roles: account does not have role");
            ⋮┆----------------------------------------
          831┆ require(account != address(0), "Roles: account is the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          852┆ require(isMinter(_msgSender()), "MinterRole: caller does not have
  the Minter role");                                                            
            ⋮┆----------------------------------------
         1034┆ require(rewardRate == 0, "Must not have yet set the reward       
  rate.");                                                                      

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 48 rules on 1 file: 39 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
