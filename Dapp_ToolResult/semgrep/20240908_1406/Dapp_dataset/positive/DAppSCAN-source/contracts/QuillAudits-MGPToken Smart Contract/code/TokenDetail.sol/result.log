METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 48 Code rules:
  Scanning 1 file with 48 solidity rules.
                    
                    
┌──────────────────┐
│ 32 Code Findings │
└──────────────────┘
                        
    /sb/TokenDetail.sol 
       solidity.performance.non-payable-constructor      
          Consider making costructor payable to save gas.
                                                         
          379┆ constructor (string memory name_, string memory symbol_) public {
          380┆     _name = name_;
          381┆     _symbol = symbol_;
          382┆     _decimals = 18;
          383┆ }
            ⋮┆----------------------------------------
          793┆ constructor() public {
          794┆     impl = msg.sender;
          795┆ }
            ⋮┆----------------------------------------
          819┆ constructor() public {
          820┆     governor = msg.sender;
          821┆ }
            ⋮┆----------------------------------------
          853┆ constructor() public ERC20("Magic Power Token", "MGP") {
          854┆     _setupDecimals(18);
          855┆     _mint(msg.sender, 100000000000000 * 1e18);
          856┆ }
            ⋮┆----------------------------------------
       solidity.performance.use-custom-error-not-require                        
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
                                                                                
          199┆ require(c >= a, "SafeMath: addition overflow");
            ⋮┆----------------------------------------
          214┆ require(b <= a, "SafeMath: subtraction overflow");
            ⋮┆----------------------------------------
          231┆ require(c / a == b, "SafeMath: multiplication overflow");
            ⋮┆----------------------------------------
          248┆ require(b > 0, "SafeMath: division by zero");
            ⋮┆----------------------------------------
          265┆ require(b > 0, "SafeMath: modulo by zero");
            ⋮┆----------------------------------------
          533┆ require(sender != address(0), "ERC20: transfer from the zero     
  address");                                                                    
            ⋮┆----------------------------------------
          534┆ require(recipient != address(0), "ERC20: transfer to the zero    
  address");                                                                    
            ⋮┆----------------------------------------
          553┆ require(account != address(0), "ERC20: mint to the zero          
  address");                                                                    
            ⋮┆----------------------------------------
          574┆ require(account != address(0), "ERC20: burn from the zero        
  address");                                                                    
            ⋮┆----------------------------------------
          597┆ require(owner != address(0), "ERC20: approve from the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          598┆ require(spender != address(0), "ERC20: approve to the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          719┆ require(!paused(), "Pausable: paused");
            ⋮┆----------------------------------------
          731┆ require(paused(), "Pausable: not paused");
            ⋮┆----------------------------------------
          782┆ require(!paused(), "ERC20Pausable: token transfer while paused");
            ⋮┆----------------------------------------
          798┆ require(msg.sender == impl, "FORBIDDEN");
            ⋮┆----------------------------------------
          803┆ require(_newImpl != address(0), "INVALID_ADDRESS");
            ⋮┆----------------------------------------
          804┆ require(_newImpl != impl, "NO_CHANGE");
            ⋮┆----------------------------------------
          824┆ require(msg.sender == governor, "FORBIDDEN");
            ⋮┆----------------------------------------
          829┆ require(_newGovernor != address(0), "INVALID_ADDRESS");
            ⋮┆----------------------------------------
          830┆ require(_newGovernor != governor, "NO_CHANGE");
            ⋮┆----------------------------------------
          872┆ require(!blacklist[msg.sender], "!black");
            ⋮┆----------------------------------------
       solidity.performance.use-short-revert-string                             
          Shortening revert strings to fit in 32 bytes will decrease gas costs  
  for deployment and  gas                                                       
          costs when the revert condition has been met.                         
                                                                                
          231┆ require(c / a == b, "SafeMath: multiplication overflow");
            ⋮┆----------------------------------------
          533┆ require(sender != address(0), "ERC20: transfer from the zero     
  address");                                                                    
            ⋮┆----------------------------------------
          534┆ require(recipient != address(0), "ERC20: transfer to the zero    
  address");                                                                    
            ⋮┆----------------------------------------
          574┆ require(account != address(0), "ERC20: burn from the zero        
  address");                                                                    
            ⋮┆----------------------------------------
          597┆ require(owner != address(0), "ERC20: approve from the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          598┆ require(spender != address(0), "ERC20: approve to the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          782┆ require(!paused(), "ERC20Pausable: token transfer while paused");

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 48 rules on 1 file: 32 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
