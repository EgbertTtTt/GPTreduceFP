METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 48 Code rules:
  Scanning 1 file with 48 solidity rules.
                    
                    
┌──────────────────┐
│ 76 Code Findings │
└──────────────────┘
                       
    /sb/Bollystake.sol 
       solidity.best-practice.use-ownable2step                                  
          By demanding that the receiver of the owner permissions actively      
  accept via a contract call                                                    
          of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the 
  contract ownership                                                            
          from accidentally being transferred  to an address that cannot handle 
  it.                                                                           
                                                                                
          788┆ contract Bollystake is ERC20("sBOLLY Staked Bollycoin",          
  "sBOLLY"),Ownable {                                                           
            ⋮┆----------------------------------------
       solidity.performance.array-length-outside-loop                           
          Caching the array length outside a loop saves reading it on each      
  iteration, as long as the                                                     
          array's length is not changed during the loop.                        
                                                                                
          825┆ for (uint256 s = 0; s < stakeholders.length; s += 1){
            ⋮┆----------------------------------------
          881┆ for (uint256 s = 0; s < stakeholders.length; s += 1){
            ⋮┆----------------------------------------
          895┆ for (uint256 s = 0; s < stakeholders.length; s += 1){
            ⋮┆----------------------------------------
          908┆ for (uint256 s = 0; s < stakeholders.length; s += 1){
            ⋮┆----------------------------------------
          921┆ for (uint256 s = 0; s < stakeholders.length; s += 1){
            ⋮┆----------------------------------------
       solidity.performance.inefficient-state-variable-increment             
          <x> += <y> costs more gas than <x> = <x> + <y> for state variables.
                                                                             
          684┆ _totalSupply += amount;
            ⋮┆----------------------------------------
       solidity.performance.non-payable-constructor      
          Consider making costructor payable to save gas.
                                                         
          481┆ constructor(string memory name_, string memory symbol_) {
          482┆     _name = name_;
          483┆     _symbol = symbol_;
          484┆ }
            ⋮┆----------------------------------------
          793┆ constructor(IERC20 _BOLLY) {
          794┆     require(address(_BOLLY) != address(0), "_BOLLY is a zero     
  address");                                                                    
          795┆     BOLLY = _BOLLY;
          796┆ }
            ⋮┆----------------------------------------
       solidity.performance.state-variable-read-in-a-loop                       
          Replace state variable reads and writes within loops with local       
  variable reads and writes.                                                    
                                                                                
          825┆ for (uint256 s = 0; s < stakeholders.length; s += 1){
            ⋮┆----------------------------------------
          826┆ if (_address == stakeholders[s]) return (true, s);
            ⋮┆----------------------------------------
          881┆ for (uint256 s = 0; s < stakeholders.length; s += 1){
            ⋮┆----------------------------------------
          882┆ _totalStakes = _totalStakes.add(stakes[stakeholders[s]]);
            ⋮┆----------------------------------------
          882┆ _totalStakes = _totalStakes.add(stakes[stakeholders[s]]);
            ⋮┆----------------------------------------
          895┆ for (uint256 s = 0; s < stakeholders.length; s += 1){
            ⋮┆----------------------------------------
          896┆ _expired_stakes = expired_stakes(stakeholders[s]);
            ⋮┆----------------------------------------
          897┆ _usereligiblestakes =                                            
  stakes[stakeholders[s]].sub(_expired_stakes);                                 
            ⋮┆----------------------------------------
          897┆ _usereligiblestakes =                                            
  stakes[stakeholders[s]].sub(_expired_stakes);                                 
            ⋮┆----------------------------------------
          908┆ for (uint256 s = 0; s < stakeholders.length; s += 1){
            ⋮┆----------------------------------------
          909┆ _expired_stakes = expired_stakes(stakeholders[s]);
            ⋮┆----------------------------------------
          910┆ eligible_stakes[s] =                                             
  stakes[stakeholders[s]].sub(_expired_stakes);                                 
            ⋮┆----------------------------------------
          910┆ eligible_stakes[s] =                                             
  stakes[stakeholders[s]].sub(_expired_stakes);                                 
            ⋮┆----------------------------------------
          911┆ user_address[s]= stakeholders[s];
            ⋮┆----------------------------------------
          921┆ for (uint256 s = 0; s < stakeholders.length; s += 1){
            ⋮┆----------------------------------------
          922┆  ...                                                             
  user_stake[stakeholders[s]][0].locked_amount,user_stake[stakeholders[s]][1].lo
  cked_amount,user_stake[stakeholders[s]][2].locked_amount,user_stake[stakeholde
  rs[s ... [0m                                                                  
            [shortened a long line from output, adjust with                     
  --max-chars-per-line]                                                         
            ⋮┆----------------------------------------
          922┆  ...                                                             
  stakeholders[s]][0].locked_amount,user_stake[stakeholders[s]][1].locked_amount
  ,user_stake[stakeholders[s]][2].locked_amount,user_stake[stakeholders[s]][3].l
  ocke ... [0m                                                                  
            [shortened a long line from output, adjust with                     
  --max-chars-per-line]                                                         
            ⋮┆----------------------------------------
          922┆  ...                                                             
  user_stake[stakeholders[s]][1].locked_amount,user_stake[stakeholders[s]][2].lo
  cked_amount,user_stake[stakeholders[s]][3].locked_amount,user_stake[stakeholde
  rs[s ... [0m                                                                  
            [shortened a long line from output, adjust with                     
  --max-chars-per-line]                                                         
            ⋮┆----------------------------------------
          922┆  ...                                                             
  stakeholders[s]][1].locked_amount,user_stake[stakeholders[s]][2].locked_amount
  ,user_stake[stakeholders[s]][3].locked_amount,user_stake[stakeholders[s]][4].l
  ocke ... [0m                                                                  
            [shortened a long line from output, adjust with                     
  --max-chars-per-line]                                                         
            ⋮┆----------------------------------------
          922┆  ...                                                             
  user_stake[stakeholders[s]][2].locked_amount,user_stake[stakeholders[s]][3].lo
  cked_amount,user_stake[stakeholders[s]][4].locked_amount,user_stake[stakeholde
  rs[s ... [0m                                                                  
            [shortened a long line from output, adjust with                     
  --max-chars-per-line]                                                         
            ⋮┆----------------------------------------
          922┆  ...                                                             
  stakeholders[s]][2].locked_amount,user_stake[stakeholders[s]][3].locked_amount
  ,user_stake[stakeholders[s]][4].locked_amount,user_stake[stakeholders[s]][5].l
  ocke ... [0m                                                                  
            [shortened a long line from output, adjust with                     
  --max-chars-per-line]                                                         
            ⋮┆----------------------------------------
          922┆  ...                                                             
  user_stake[stakeholders[s]][3].locked_amount,user_stake[stakeholders[s]][4].lo
  cked_amount,user_stake[stakeholders[s]][5].locked_amount,user_stake[stakeholde
  rs[s ... [0m                                                                  
            [shortened a long line from output, adjust with                     
  --max-chars-per-line]                                                         
            ⋮┆----------------------------------------
          922┆  ...                                                             
  stakeholders[s]][3].locked_amount,user_stake[stakeholders[s]][4].locked_amount
  ,user_stake[stakeholders[s]][5].locked_amount,user_stake[stakeholders[s]][6].l
  ocke ... [0m                                                                  
            [shortened a long line from output, adjust with                     
  --max-chars-per-line]                                                         
            ⋮┆----------------------------------------
          922┆  ...                                                             
  user_stake[stakeholders[s]][4].locked_amount,user_stake[stakeholders[s]][5].lo
  cked_amount,user_stake[stakeholders[s]][6].locked_amount]; ... [0m            
            [shortened a long line from output, adjust with                     
  --max-chars-per-line]                                                         
            ⋮┆----------------------------------------
          922┆  ...                                                             
  stakeholders[s]][4].locked_amount,user_stake[stakeholders[s]][5].locked_amount
  ,user_stake[stakeholders[s]][6].locked_amount]; ... [0m                       
            [shortened a long line from output, adjust with                     
  --max-chars-per-line]                                                         
            ⋮┆----------------------------------------
          922┆  ...                                                             
  user_stake[stakeholders[s]][5].locked_amount,user_stake[stakeholders[s]][6].lo
  cked_amount]; ... [0m                                                         
            [shortened a long line from output, adjust with                     
  --max-chars-per-line]                                                         
            ⋮┆----------------------------------------
          922┆  ...                                                             
  stakeholders[s]][5].locked_amount,user_stake[stakeholders[s]][6].locked_amount
  ]; ... [0m                                                                    
            [shortened a long line from output, adjust with                     
  --max-chars-per-line]                                                         
            ⋮┆----------------------------------------
          922┆  ... user_stake[stakeholders[s]][6].locked_amount]; ... [0m
            [shortened a long line from output, adjust with                     
  --max-chars-per-line]                                                         
            ⋮┆----------------------------------------
          922┆  ... stakeholders[s]][6].locked_amount]; ... [0m
            [shortened a long line from output, adjust with                     
  --max-chars-per-line]                                                         
            ⋮┆----------------------------------------
          923┆ user_address[s]= stakeholders[s];
            ⋮┆----------------------------------------
          925┆ if(user_stake[stakeholders[s]][k].expire > block.timestamp ) {
            ⋮┆----------------------------------------
          925┆ if(user_stake[stakeholders[s]][k].expire > block.timestamp ) {
            ⋮┆----------------------------------------
          926┆                                                                  
  all_user_eligible_stakes[s][k]=user_stake[stakeholders[s]][k].locked_amount;  
            ⋮┆----------------------------------------
          926┆                                                                  
  all_user_eligible_stakes[s][k]=user_stake[stakeholders[s]][k].locked_amount;  
            ⋮┆----------------------------------------
       solidity.performance.use-custom-error-not-require                        
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
                                                                                
          296┆ require(owner() == _msgSender(), "Ownable: caller is not the     
  owner");                                                                      
            ⋮┆----------------------------------------
          316┆ require(newOwner != address(0), "Ownable: new owner is the zero  
  address");                                                                    
            ⋮┆----------------------------------------
          585┆ require(currentAllowance >= amount, "ERC20: transfer amount      
  exceeds allowance");                                                          
            ⋮┆----------------------------------------
          626┆ require(currentAllowance >= subtractedValue, "ERC20: decreased   
  allowance below zero");                                                       
            ⋮┆----------------------------------------
          653┆ require(sender != address(0), "ERC20: transfer from the zero     
  address");                                                                    
                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘
            ⋮┆----------------------------------------
          654┆ require(recipient != address(0), "ERC20: transfer to the zero    
  address");                                                                    
            ⋮┆----------------------------------------
          659┆ require(senderBalance >= amount, "ERC20: transfer amount exceeds 

Ran 48 rules on 1 file: 76 findings.
  balance");                                                                    
            ⋮┆----------------------------------------
          680┆ require(account != address(0), "ERC20: mint to the zero          
  address");                                                                    
            ⋮┆----------------------------------------
          703┆ require(account != address(0), "ERC20: burn from the zero        
  address");                                                                    
            ⋮┆----------------------------------------
          708┆ require(accountBalance >= amount, "ERC20: burn amount exceeds    
  balance");                                                                    
            ⋮┆----------------------------------------
          737┆ require(owner != address(0), "ERC20: approve from the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          738┆ require(spender != address(0), "ERC20: approve to the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          794┆ require(address(_BOLLY) != address(0), "_BOLLY is a zero         
  address");                                                                    
            ⋮┆----------------------------------------
          950┆ require(_days                                                    
  ==30||_days==60||_days==90||_days==180||_days==365||_days==540||_days==730,"nu
  mber of days should be among 30,60,90,180,365,540,730");                      
            ⋮┆----------------------------------------
          984┆ require(_isStakeholder==true, "only current stakeholders can     
  relock stake");                                                               
            ⋮┆----------------------------------------
          985┆ require(_days                                                    
  ==30||_days==60||_days==90||_days==180||_days==365||_days==540||_days==730,"nu
  mber of days should be among 30,60,90,180,365,540,730");                      
            ⋮┆----------------------------------------
         1023┆ require( (expired_amount>0) ,"Please wait until some stakes are  
  expired");                                                                    
            ⋮┆----------------------------------------
         1039┆ require( (locked_amount>0) ,"Please wait until some stakes are   
  expired");                                                                    
            ⋮┆----------------------------------------
       solidity.performance.use-short-revert-string                             
          Shortening revert strings to fit in 32 bytes will decrease gas costs  
  for deployment and  gas                                                       
          costs when the revert condition has been met.                         
                                                                                
          316┆ require(newOwner != address(0), "Ownable: new owner is the zero  
  address");                                                                    
            ⋮┆----------------------------------------
          585┆ require(currentAllowance >= amount, "ERC20: transfer amount      
  exceeds allowance");                                                          
            ⋮┆----------------------------------------
          626┆ require(currentAllowance >= subtractedValue, "ERC20: decreased   
  allowance below zero");                                                       
            ⋮┆----------------------------------------
          653┆ require(sender != address(0), "ERC20: transfer from the zero     
  address");                                                                    
            ⋮┆----------------------------------------
          654┆ require(recipient != address(0), "ERC20: transfer to the zero    
  address");                                                                    
            ⋮┆----------------------------------------
          659┆ require(senderBalance >= amount, "ERC20: transfer amount exceeds 
  balance");                                                                    
            ⋮┆----------------------------------------
          703┆ require(account != address(0), "ERC20: burn from the zero        
  address");                                                                    
            ⋮┆----------------------------------------
          708┆ require(accountBalance >= amount, "ERC20: burn amount exceeds    
  balance");                                                                    
            ⋮┆----------------------------------------
          737┆ require(owner != address(0), "ERC20: approve from the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          738┆ require(spender != address(0), "ERC20: approve to the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          950┆ require(_days                                                    
  ==30||_days==60||_days==90||_days==180||_days==365||_days==540||_days==730,"nu
  mber of days should be among 30,60,90,180,365,540,730");                      
            ⋮┆----------------------------------------
          984┆ require(_isStakeholder==true, "only current stakeholders can     
  relock stake");                                                               
            ⋮┆----------------------------------------
          985┆ require(_days                                                    
  ==30||_days==60||_days==90||_days==180||_days==365||_days==540||_days==730,"nu
  mber of days should be among 30,60,90,180,365,540,730");                      
            ⋮┆----------------------------------------
         1023┆ require( (expired_amount>0) ,"Please wait until some stakes are  
  expired");                                                                    
            ⋮┆----------------------------------------
         1039┆ require( (locked_amount>0) ,"Please wait until some stakes are   
  expired");                                                                    


A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
