METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 48 Code rules:
  Scanning 1 file with 48 solidity rules.
                    
                    
┌──────────────────┐
│ 12 Code Findings │
└──────────────────┘
                         
    /sb/ReserveLogic.sol 
       solidity.best-practice.use-abi-encodecall-instead-of-encodewithselector  
          To guarantee arguments type safety it is recommended to use           
  `abi.encodeCall` instead of                                                   
          `abi.encodeWithSelector`.                                             
                                                                                
          143┆ callOptionalReturn(token,                                        
  abi.encodeWithSelector(token.transfer.selector, to, value));                  
            ⋮┆----------------------------------------
          152┆ callOptionalReturn(token,                                        
  abi.encodeWithSelector(token.transferFrom.selector, from, to, value));        
            ⋮┆----------------------------------------
          164┆ callOptionalReturn(token,                                        
  abi.encodeWithSelector(token.approve.selector, spender, value));              
            ⋮┆----------------------------------------
       solidity.performance.use-custom-error-not-require                        
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
                                                                                
          127┆ require(address(this).balance >= amount, 'Address: insufficient  
  balance');                                                                    
            ⋮┆----------------------------------------
          131┆ require(success, 'Address: unable to send value, recipient may   
  have reverted');                                                              
            ⋮┆----------------------------------------
          160┆ require(
          161┆   (value == 0) || (token.allowance(address(this), spender) == 0),
          162┆   'SafeERC20: approve from non-zero to non-zero allowance'
          163┆ );
            ⋮┆----------------------------------------
          168┆ require(address(token).isContract(), 'SafeERC20: call to         
  non-contract');                                                               
            ⋮┆----------------------------------------
          172┆ require(success, 'SafeERC20: low-level call failed');
            ⋮┆----------------------------------------
          177┆ require(abi.decode(returndata, (bool)), 'SafeERC20: ERC20        
  operation did not succeed');                                                  
            ⋮┆----------------------------------------
       solidity.performance.use-short-revert-string                             
          Shortening revert strings to fit in 32 bytes will decrease gas costs  
  for deployment and  gas                                                       
          costs when the revert condition has been met.                         
                                                                                
          131┆ require(success, 'Address: unable to send value, recipient may   
  have reverted');                                                              
            ⋮┆----------------------------------------
          160┆ require(
          161┆   (value == 0) || (token.allowance(address(this), spender) == 0),
          162┆   'SafeERC20: approve from non-zero to non-zero allowance'
          163┆ );
            ⋮┆----------------------------------------
          177┆ require(abi.decode(returndata, (bool)), 'SafeERC20: ERC20        
  operation did not succeed');                                                  

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 48 rules on 1 file: 12 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
