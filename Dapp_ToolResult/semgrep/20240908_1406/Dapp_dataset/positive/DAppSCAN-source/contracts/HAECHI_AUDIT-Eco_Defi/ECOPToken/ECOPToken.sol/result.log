METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 48 Code rules:
  Scanning 1 file with 48 solidity rules.
                   
                   
┌─────────────────┐
│ 6 Code Findings │
└─────────────────┘
                      
    /sb/ECOPToken.sol 
       solidity.performance.non-payable-constructor      
          Consider making costructor payable to save gas.
                                                         
          219┆ constructor() public {
          220┆     owner = msg.sender;
          221┆ }
            ⋮┆----------------------------------------
          256┆    constructor() public {
          257┆        
  //ERC20             
          258┆            totalSupply_ =  49000000 * 10 **            
  uint256(decimals);                                                  
          259┆        
  //BEP20             
          260┆            //totalSupply_ =  51000000 * 10 **            
  uint256(decimals);                                                    
          261┆            balances[msg.sender] =       
  totalSupply_;                                        
          262┆    }
            ⋮┆----------------------------------------
       solidity.performance.use-custom-error-not-require                        
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
                                                                                
           41┆ require(c >= a, "SafeMath: addition overflow");
            ⋮┆----------------------------------------
           96┆ require(c / a == b, "SafeMath: multiplication overflow");
            ⋮┆----------------------------------------
       solidity.performance.use-prefix-increment-not-postfix                    
          Consider using the prefix increment expression whenever the return    
  value is not needed. The                                                      
          prefix increment expression is cheaper in terms of gas.               
                                                                                
          209┆ for (uint256 i = 1; i < y; i++)
            ⋮┆----------------------------------------
       solidity.performance.use-short-revert-string                             
          Shortening revert strings to fit in 32 bytes will decrease gas costs  
  for deployment and  gas                                                       
          costs when the revert condition has been met.                         
                                                                                
           96┆ require(c / a == b, "SafeMath: multiplication overflow");

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 48 rules on 1 file: 6 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
