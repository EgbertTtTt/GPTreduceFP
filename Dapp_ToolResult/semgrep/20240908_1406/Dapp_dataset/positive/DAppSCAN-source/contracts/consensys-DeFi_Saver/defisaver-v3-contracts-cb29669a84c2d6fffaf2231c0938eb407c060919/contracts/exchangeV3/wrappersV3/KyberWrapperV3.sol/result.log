METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 48 Code rules:
  Scanning 1 file with 48 solidity rules.
                    
                    
┌──────────────────┐
│ 29 Code Findings │
└──────────────────┘
                           
    /sb/KyberWrapperV3.sol 
       solidity.best-practice.use-abi-encodecall-instead-of-encodewithselector  
          To guarantee arguments type safety it is recommended to use           
  `abi.encodeCall` instead of                                                   
          `abi.encodeWithSelector`.                                             
                                                                                
          185┆ _callOptionalReturn(token,                                       
  abi.encodeWithSelector(token.transfer.selector, to, value));                  
            ⋮┆----------------------------------------
          194┆ _callOptionalReturn(
          195┆     token,
          196┆     abi.encodeWithSelector(token.transferFrom.selector, from, to,
  value)                                                                        
          197┆ );
            ⋮┆----------------------------------------
          209┆ _callOptionalReturn(token,                                       
  abi.encodeWithSelector(token.approve.selector, spender, 0));                  
            ⋮┆----------------------------------------
          210┆ _callOptionalReturn(token,                                       
  abi.encodeWithSelector(token.approve.selector, spender, value));              
            ⋮┆----------------------------------------
          219┆ _callOptionalReturn(
          220┆     token,
          221┆     abi.encodeWithSelector(token.approve.selector, spender,      
  newAllowance)                                                                 
          222┆ );
            ⋮┆----------------------------------------
          234┆ _callOptionalReturn(
          235┆     token,
          236┆     abi.encodeWithSelector(token.approve.selector, spender,      
  newAllowance)                                                                 
          237┆ );
            ⋮┆----------------------------------------
       solidity.performance.non-payable-constructor      
          Consider making costructor payable to save gas.
                                                         
          419┆ constructor() {
          420┆     owner = msg.sender;
          421┆     admin = 0x25eFA336886C74eA8E282ac466BdCd0199f85BB9;
          422┆ }
            ⋮┆----------------------------------------
       solidity.performance.use-custom-error-not-require                        
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
                                                                                
           42┆ require(address(this).balance >= amount, "Address: insufficient  
  balance");                                                                    
            ⋮┆----------------------------------------
           46┆ require(success, "Address: unable to send value, recipient may   
  have reverted");                                                              
            ⋮┆----------------------------------------
           76┆ require(address(this).balance >= value, "Address: insufficient   
  balance for call");                                                           
            ⋮┆----------------------------------------
           86┆ require(isContract(target), "Address: call to non-contract");
            ⋮┆----------------------------------------
          112┆ require(c >= a, "SafeMath: addition overflow");
            ⋮┆----------------------------------------
          141┆ require(c / a == b, "SafeMath: multiplication overflow");
            ⋮┆----------------------------------------
          248┆ require(abi.decode(returndata, (bool)), "SafeERC20: ERC20        
  operation did not succeed");                                                  
            ⋮┆----------------------------------------
          317┆ require((z = x + y) >= x, "");
            ⋮┆----------------------------------------
          321┆ require((z = x - y) <= x, "");
            ⋮┆----------------------------------------
          325┆ require(y == 0 || (z = x * y) / y == x, "");
            ⋮┆----------------------------------------
          427┆ require(admin == msg.sender, "msg.sender not admin");
            ⋮┆----------------------------------------
          434┆ require(admin == msg.sender, "msg.sender not admin");
            ⋮┆----------------------------------------
          447┆ require(adminVault.owner() == msg.sender, "msg.sender not        
  owner");                                                                      
            ⋮┆----------------------------------------
          452┆ require(adminVault.admin() == msg.sender, "msg.sender not        
  admin");                                                                      
            ⋮┆----------------------------------------
          539┆ require(destAmount == _destAmount, "Wrong dest amount");
            ⋮┆----------------------------------------
       solidity.performance.use-short-revert-string                             
          Shortening revert strings to fit in 32 bytes will decrease gas costs  
  for deployment and  gas                                                       
          costs when the revert condition has been met.                         
                                                                                
           46┆ require(success, "Address: unable to send value, recipient may   
  have reverted");                                                              
            ⋮┆----------------------------------------
           76┆ require(address(this).balance >= value, "Address: insufficient   
  balance for call");                                                           
            ⋮┆----------------------------------------
          141┆ require(c / a == b, "SafeMath: multiplication overflow");
            ⋮┆----------------------------------------
          248┆ require(abi.decode(returndata, (bool)), "SafeERC20: ERC20        
  operation did not succeed");                                                  
            ⋮┆----------------------------------------
       solidity.security.basic-arithmetic-underflow
          Possible arithmetic underflow            
                                                   
          552┆ return (srcAmount - srcAmountAfter);
            ⋮┆----------------------------------------
          566┆ rate = rate * (10**(18 - getDecimals(_srcAddr)));
            ⋮┆----------------------------------------
          568┆ rate = rate / (10**(18 - getDecimals(_destAddr)));

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 48 rules on 1 file: 29 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
