METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 48 Code rules:
  Scanning 1 file with 48 solidity rules.
                    
                    
┌──────────────────┐
│ 41 Code Findings │
└──────────────────┘
                  
    /sb/Solos.sol 
       solidity.performance.non-payable-constructor      
          Consider making costructor payable to save gas.
                                                         
         1472┆ constructor(
         1473┆     address _admin,
         1474┆     address _validatorRegistration,
         1475┆     address _validators,
         1476┆     uint256 _validatorPrice,
         1477┆     uint256 _cancelLockDuration
         1478┆ )
         1479┆     OwnablePausable(_admin)
         1480┆ {
         1481┆     validatorRegistration =                                      
  IDepositContract(_validatorRegistration);                                     
             [hid 10 additional lines, adjust with --max-lines-per-finding] 
       solidity.performance.use-custom-error-not-require                        
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
                                                                                
           88┆ require(c >= a, "SafeMath: addition overflow");
            ⋮┆----------------------------------------
          103┆ require(b <= a, "SafeMath: subtraction overflow");
            ⋮┆----------------------------------------
          120┆ require(c / a == b, "SafeMath: multiplication overflow");
            ⋮┆----------------------------------------
          137┆ require(b > 0, "SafeMath: division by zero");
            ⋮┆----------------------------------------
          154┆ require(b > 0, "SafeMath: modulo by zero");
            ⋮┆----------------------------------------
          266┆ require(address(this).balance >= amount, "Address: insufficient  
  balance");                                                                    
            ⋮┆----------------------------------------
          270┆ require(success, "Address: unable to send value, recipient may   
  have reverted");                                                              
            ⋮┆----------------------------------------
          327┆ require(address(this).balance >= value, "Address: insufficient   
  balance for call");                                                           
            ⋮┆----------------------------------------
          328┆ require(isContract(target), "Address: call to non-contract");
            ⋮┆----------------------------------------
          352┆ require(isContract(target), "Address: static call to             
  non-contract");                                                               
            ⋮┆----------------------------------------
          376┆ require(isContract(target), "Address: delegate call to           
  non-contract");                                                               
            ⋮┆----------------------------------------
          449┆ require(_status != _ENTERED, "ReentrancyGuard: reentrant call");
            ⋮┆----------------------------------------
          588┆ require(set._values.length > index, "EnumerableSet: index out of 
  bounds");                                                                     
            ⋮┆----------------------------------------
          904┆ require(hasRole(_roles[role].adminRole, _msgSender()),           
  "AccessControl: sender must be an admin to grant");                           
            ⋮┆----------------------------------------
          919┆ require(hasRole(_roles[role].adminRole, _msgSender()),           
  "AccessControl: sender must be an admin to revoke");                          
            ⋮┆----------------------------------------
          939┆ require(account == _msgSender(), "AccessControl: can only        
  renounce roles for self");                                                    
            ⋮┆----------------------------------------
         1031┆ require(!paused(), "Pausable: paused");
            ⋮┆----------------------------------------
         1043┆ require(paused(), "Pausable: not paused");
            ⋮┆----------------------------------------
         1140┆ require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender),                 
  "OwnablePausable: permission denied");                                        
            ⋮┆----------------------------------------
         1148┆ require(hasRole(PAUSER_ROLE, msg.sender), "OwnablePausable:      
  permission denied");                                                          
            ⋮┆----------------------------------------
         1497┆ require(_withdrawalCredentials != "" && _withdrawalCredentials[0]
  == 0x00, "Solos: invalid withdrawal credentials");                            
            ⋮┆----------------------------------------
         1498┆ require(msg.value > 0 && msg.value.mod(VALIDATOR_DEPOSIT) == 0,  
  "Solos: invalid deposit amount");                                             
            ⋮┆----------------------------------------
         1526┆ require(block.timestamp >= solo.releaseTime, "Solos: current time
  is before release time");                                                     
            ⋮┆----------------------------------------
         1529┆ require(newAmount.mod(VALIDATOR_DEPOSIT) == 0, "Solos: invalid   
  cancel amount");                                                              
            ⋮┆----------------------------------------
         1567┆ require(validators.isOperator(msg.sender), "Solos: permission    
  denied");                                                                     
            ⋮┆----------------------------------------
       solidity.performance.use-multiple-require                                
          Using multiple require statements is cheaper than using && multiple   
  check combinations.                                                           
          There are more advantages, such as easier to read code and better     
  coverage reports.                                                             
                                                                                
         1497┆ require(_withdrawalCredentials != "" && _withdrawalCredentials[0]
  == 0x00, "Solos: invalid withdrawal credentials");                            
            ⋮┆----------------------------------------
         1498┆ require(msg.value > 0 && msg.value.mod(VALIDATOR_DEPOSIT) == 0,  
  "Solos: invalid deposit amount");                                             
            ⋮┆----------------------------------------
       solidity.performance.use-short-revert-string                             
          Shortening revert strings to fit in 32 bytes will decrease gas costs  
  for deployment and  gas                                                       
          costs when the revert condition has been met.                         
                                                                                
          120┆ require(c / a == b, "SafeMath: multiplication overflow");
            ⋮┆----------------------------------------
          270┆ require(success, "Address: unable to send value, recipient may   
  have reverted");                                                              
            ⋮┆----------------------------------------
          327┆ require(address(this).balance >= value, "Address: insufficient   
  balance for call");                                                           
            ⋮┆----------------------------------------
          352┆ require(isContract(target), "Address: static call to             
  non-contract");                                                               
            ⋮┆----------------------------------------
          376┆ require(isContract(target), "Address: delegate call to           
  non-contract");                                                               
            ⋮┆----------------------------------------
          588┆ require(set._values.length > index, "EnumerableSet: index out of 
  bounds");                                                                     
            ⋮┆----------------------------------------
          904┆ require(hasRole(_roles[role].adminRole, _msgSender()),           
  "AccessControl: sender must be an admin to grant");                           
            ⋮┆----------------------------------------
          919┆ require(hasRole(_roles[role].adminRole, _msgSender()),           
  "AccessControl: sender must be an admin to revoke");                          
            ⋮┆----------------------------------------
          939┆ require(account == _msgSender(), "AccessControl: can only        
  renounce roles for self");                                                    
            ⋮┆----------------------------------------
         1140┆ require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender),                 
  "OwnablePausable: permission denied");                                        
            ⋮┆----------------------------------------
         1148┆ require(hasRole(PAUSER_ROLE, msg.sender), "OwnablePausable:      
  permission denied");                                                          
            ⋮┆----------------------------------------
         1497┆ require(_withdrawalCredentials != "" && _withdrawalCredentials[0]
  == 0x00, "Solos: invalid withdrawal credentials");                            
            ⋮┆----------------------------------------
         1526┆ require(block.timestamp >= solo.releaseTime, "Solos: current time
  is before release time");                                                     

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 48 rules on 1 file: 41 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
