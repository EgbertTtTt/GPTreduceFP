METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 48 Code rules:
  Scanning 1 file with 48 solidity rules.
                    
                    
┌──────────────────┐
│ 23 Code Findings │
└──────────────────┘
                                 
    /sb/GovernanceMothership.sol 
       solidity.best-practice.use-ownable2step                                  
          By demanding that the receiver of the owner permissions actively      
  accept via a contract call                                                    
          of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the 
  contract ownership                                                            
          from accidentally being transferred  to an address that cannot handle 
  it.                                                                           
                                                                                
          699┆ contract GovernanceMothership is Ownable, BalanceAccounting {
            ⋮┆----------------------------------------
       solidity.performance.array-length-outside-loop                           
          Caching the array length outside a loop saves reading it on each      
  iteration, as long as the                                                     
          array's length is not changed during the loop.                        
                                                                                
          742┆ for (uint256 j = 0; j < accounts.length; ++j) {
            ⋮┆----------------------------------------
       solidity.performance.non-payable-constructor      
          Consider making costructor payable to save gas.
                                                         
          710┆ constructor(IERC20 _inchToken) public {
          711┆     inchToken = _inchToken;
          712┆ }
            ⋮┆----------------------------------------
       solidity.performance.state-variable-read-in-a-loop                       
          Replace state variable reads and writes within loops with local       
  variable reads and writes.                                                    
                                                                                
          746┆ IGovernanceModule(_modules.at(i)).notifyStakesChanged(accounts,  
  balances);                                                                    
            ⋮┆----------------------------------------
          763┆ IGovernanceModule(_modules.at(i)).notifyStakeChanged(account,    
  balance);                                                                     
            ⋮┆----------------------------------------
       solidity.performance.unnecessary-checked-arithmetic-in-loop              
          A lot of times there is no risk that the loop counter can overflow.   
  Using Solidity's                                                              
          unchecked block saves the overflow checks.                            
                                                                                
          742┆ for (uint256 j = 0; j < accounts.length; ++j) {
            ⋮┆----------------------------------------
          745┆ for (uint256 i = 0; i < modulesLength; ++i) {
            ⋮┆----------------------------------------
          762┆ for (uint256 i = 0; i < modulesLength; ++i) {
            ⋮┆----------------------------------------
       solidity.performance.use-custom-error-not-require                        
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
                                                                                
           63┆ require(owner() == _msgSender(), "Ownable: caller is not the     
  owner");                                                                      
            ⋮┆----------------------------------------
           84┆ require(newOwner != address(0), "Ownable: new owner is the zero  
  address");                                                                    
            ⋮┆----------------------------------------
          172┆ require(c >= a, "SafeMath: addition overflow");
            ⋮┆----------------------------------------
          187┆ require(b <= a, "SafeMath: subtraction overflow");
            ⋮┆----------------------------------------
          204┆ require(c / a == b, "SafeMath: multiplication overflow");
            ⋮┆----------------------------------------
          221┆ require(b > 0, "SafeMath: division by zero");
            ⋮┆----------------------------------------
          238┆ require(b > 0, "SafeMath: modulo by zero");
            ⋮┆----------------------------------------
          501┆ require(set._values.length > index, "EnumerableSet: index out of 
  bounds");                                                                     
            ⋮┆----------------------------------------
          715┆ require(amount > 0, "Empty stake is not allowed");
            ⋮┆----------------------------------------
          723┆ require(amount > 0, "Empty unstake is not allowed");
            ⋮┆----------------------------------------
          751┆ require(_modules.add(module), "Module already registered");
            ⋮┆----------------------------------------
          756┆ require(_modules.remove(module), "Module was not registered");
            ⋮┆----------------------------------------
       solidity.performance.use-short-revert-string                             
          Shortening revert strings to fit in 32 bytes will decrease gas costs  
  for deployment and  gas                                                       
          costs when the revert condition has been met.                         
                                                                                
           84┆ require(newOwner != address(0), "Ownable: new owner is the zero  
  address");                                                                    
            ⋮┆----------------------------------------
          204┆ require(c / a == b, "SafeMath: multiplication overflow");
            ⋮┆----------------------------------------
          501┆ require(set._values.length > index, "EnumerableSet: index out of 
  bounds");                                                                     

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 48 rules on 1 file: 23 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
