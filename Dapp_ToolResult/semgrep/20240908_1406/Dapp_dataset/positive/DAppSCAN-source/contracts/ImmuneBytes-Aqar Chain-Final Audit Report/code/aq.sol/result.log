METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 48 Code rules:
  Scanning 1 file with 48 solidity rules.
                    
                    
┌──────────────────┐
│ 58 Code Findings │
└──────────────────┘
               
    /sb/aq.sol 
       solidity.best-practice.use-ownable2step                                  
          By demanding that the receiver of the owner permissions actively      
  accept via a contract call                                                    
          of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the 
  contract ownership                                                            
          from accidentally being transferred  to an address that cannot handle 
  it.                                                                           
                                                                                
          340┆ contract aqarchain is Ownable {
            ⋮┆----------------------------------------
       solidity.performance.init-variables-with-default-value                   
          Uninitialized variables are assigned with the types default value.    
  Explicitly initializing a                                                     
          variable with its default value costs unnecessary gas.                
                                                                                
          386┆ uint256 public i=0;
            ⋮┆----------------------------------------
          389┆ uint256 claimamount=0;
            ⋮┆----------------------------------------
          402┆ bool public seedrun = false;
            ⋮┆----------------------------------------
          403┆ bool public privaterun = false;
            ⋮┆----------------------------------------
          404┆ bool public publicrun = false;
            ⋮┆----------------------------------------
          405┆ bool public claimbool = false;
            ⋮┆----------------------------------------
       solidity.performance.non-payable-constructor      
          Consider making costructor payable to save gas.
                                                         
          293┆ constructor() internal {
          294┆     address msgSender = _msgSender();
          295┆     _owner = msgSender;
          296┆     emit OwnershipTransferred(address(0), msgSender);
          297┆ }
            ⋮┆----------------------------------------
          416┆   constructor() public {
          417┆     pancakerouter1 = IUniswapV2Router01(
          418┆         0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3
          419┆     );
          420┆ }
            ⋮┆----------------------------------------
       solidity.performance.use-custom-error-not-require                        
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
                                                                                
          215┆ require(c / a == b, "SafeMath: multiplication overflow");
            ⋮┆----------------------------------------
          310┆ require(_owner == _msgSender(), "Ownable: caller is not the      
  owner");                                                                      
            ⋮┆----------------------------------------
          331┆ require(
          332┆     newOwner != address(0),
          333┆     "Ownable: new owner is the zero address"
          334┆ );
            ⋮┆----------------------------------------
          434┆ require(_amount>=100000000000000000000 ,"Enter amount greater    
  than 100 usd");                                                               
            ⋮┆----------------------------------------
          435┆ require(seedamount<=7000000000000000000000000,"seed round token  
  sale completed");                                                             
            ⋮┆----------------------------------------
          437┆ require(seedrun = true,"seed round is not started or over");
            ⋮┆----------------------------------------
          448┆ revert("try reducing amount or seed round is finished");
            ⋮┆----------------------------------------
          454┆ require(
          455┆     msg.value.mul(getBnbRate()).div(1e18) >=                     
  100000000000000000000,                                                        
          456┆     "the input bnb amount should be greater than hundred"
          457┆ );
            ⋮┆----------------------------------------
          458┆ require(seedamount<=7000000000000000000000000,"seed round token  
  sale completed");                                                             
            ⋮┆----------------------------------------
          460┆ require(seedrun = true,"seed round is not started or over");
            ⋮┆----------------------------------------
          470┆ revert("try reducing amount or seed round is finished");
            ⋮┆----------------------------------------
          474┆ require(_amount>=100000000000000000000,"Enter amount greter than 
  100 usd");                                                                    
            ⋮┆----------------------------------------
          475┆ require(privateamount<=12000000000000000000000000,"private round 
  token sale completed");                                                       
            ⋮┆----------------------------------------
          476┆ require(privaterun=true,"Private sale haven't started yet");
            ⋮┆----------------------------------------
          487┆ revert("private round is over");
            ⋮┆----------------------------------------
          492┆ require(
          493┆     msg.value.mul(getBnbRate()).div(1e18) >=                     
  100000000000000000000 ,                                                       
          494┆      "the input bnb amount should be greater than hundred usd"
          495┆  );
            ⋮┆----------------------------------------
          496┆ require(privaterun=true,"Private sale haven't started yet");
            ⋮┆----------------------------------------
          497┆ require(privateamount<=12000000000000000000000000,"private round 
  token sale completed");                                                       
            ⋮┆----------------------------------------
          507┆ revert("private round is over");
            ⋮┆----------------------------------------
          512┆ require(_amount>=100000000000000000000 ,"Enter amount more than  
  100 usd");                                                                    
            ⋮┆----------------------------------------
          514┆ require(publicamount<=1000000000000000000000000,"public round    
  token sale completed");                                                       
            ⋮┆----------------------------------------
          515┆ require(publicrun=true,"Public sale haven't started yet");
            ⋮┆----------------------------------------
          526┆ revert("public round is over");
            ⋮┆----------------------------------------
          531┆ require(
          532┆      msg.value.mul(getBnbRate()).div(1e18) >=                    
  100000000000000000000 ,                                                       
          533┆     "the input bnb amount should be greater than hundred and less
  than sfivethousand"                                                           
          534┆ );
            ⋮┆----------------------------------------
          535┆ require(publicrun=true,"Public sale haven't started yet");
            ⋮┆----------------------------------------
          537┆ require(privateamount<=1000000000000000000000000,"private round  
  token sale completed");                                                       
            ⋮┆----------------------------------------
          547┆ revert("private round is over");
            ⋮┆----------------------------------------
          552┆ require(claimbool = true,"claiming amount should be true");
            ⋮┆----------------------------------------
          596┆ require(
          597┆     getContractTokenBalance(_token) >= value,
          598┆     "the contract doesnt have tokens"
          599┆ );
            ⋮┆----------------------------------------
       solidity.performance.use-prefix-increment-not-postfix                    
          Consider using the prefix increment expression whenever the return    
  value is not needed. The                                                      
          prefix increment expression is cheaper in terms of gas.               
                                                                                
          444┆ i++;
            ⋮┆----------------------------------------
          466┆ i++;
            ⋮┆----------------------------------------
          483┆ i++;
            ⋮┆----------------------------------------
          503┆ i++;
            ⋮┆----------------------------------------
          522┆ i++;
            ⋮┆----------------------------------------
          543┆ i++;
            ⋮┆----------------------------------------
       solidity.performance.use-short-revert-string                             
          Shortening revert strings to fit in 32 bytes will decrease gas costs  
  for deployment and  gas                                                       
          costs when the revert condition has been met.                         
                                                                                
          215┆ require(c / a == b, "SafeMath: multiplication overflow");
            ⋮┆----------------------------------------
          331┆ require(
          332┆     newOwner != address(0),
          333┆     "Ownable: new owner is the zero address"
          334┆ );
            ⋮┆----------------------------------------
          434┆ require(_amount>=100000000000000000000 ,"Enter amount greater    
  than 100 usd");                                                               
            ⋮┆----------------------------------------
          437┆ require(seedrun = true,"seed round is not started or over");
            ⋮┆----------------------------------------
          448┆ revert("try reducing amount or seed round is finished");
            ⋮┆----------------------------------------
          454┆ require(
          455┆     msg.value.mul(getBnbRate()).div(1e18) >=                     
  100000000000000000000,                                                        
          456┆     "the input bnb amount should be greater than hundred"
          457┆ );
            ⋮┆----------------------------------------
          460┆ require(seedrun = true,"seed round is not started or over");
            ⋮┆----------------------------------------
          470┆ revert("try reducing amount or seed round is finished");
            ⋮┆----------------------------------------
          475┆ require(privateamount<=12000000000000000000000000,"private round 
  token sale completed");                                                       
            ⋮┆----------------------------------------
          492┆ require(
          493┆     msg.value.mul(getBnbRate()).div(1e18) >=                     
  100000000000000000000 ,                                                       
          494┆      "the input bnb amount should be greater than hundred usd"
          495┆  );
            ⋮┆----------------------------------------
          497┆ require(privateamount<=12000000000000000000000000,"private round 
  token sale completed");                                                       
            ⋮┆----------------------------------------
          514┆ require(publicamount<=1000000000000000000000000,"public round    
  token sale completed");                                                       
            ⋮┆----------------------------------------
          531┆ require(
          532┆      msg.value.mul(getBnbRate()).div(1e18) >=                    
  100000000000000000000 ,                                                       
          533┆     "the input bnb amount should be greater than hundred and less
  than sfivethousand"                                                           
          534┆ );
            ⋮┆----------------------------------------
          537┆ require(privateamount<=1000000000000000000000000,"private round  
  token sale completed");                                                       

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 48 rules on 1 file: 58 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
