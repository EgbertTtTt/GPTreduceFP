METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 48 Code rules:
  Scanning 1 file with 48 solidity rules.
                    
                    
┌──────────────────┐
│ 43 Code Findings │
└──────────────────┘
                          
    /sb/DeHealthToken.sol 
       solidity.performance.inefficient-state-variable-increment             
          <x> += <y> costs more gas than <x> = <x> + <y> for state variables.
                                                                             
          518┆ _totalSupply += amount;
            ⋮┆----------------------------------------
          527┆ _totalSupply += amount;
            ⋮┆----------------------------------------
         1087┆ loadedBalance += totalLoaded;
            ⋮┆----------------------------------------
       solidity.performance.unnecessary-checked-arithmetic-in-loop              
          A lot of times there is no risk that the loop counter can overflow.   
  Using Solidity's                                                              
          unchecked block saves the overflow checks.                            
                                                                                
         1083┆ for(uint i=0;i<_address.length;i++){
            ⋮┆----------------------------------------
       solidity.performance.use-custom-error-not-require                        
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
                                                                                
           36┆ require(_initializing || !_initialized, "Initializable: contract 
  is already initialized");                                                     
            ⋮┆----------------------------------------
          131┆ require(value == 0, "Strings: hex length insufficient");
            ⋮┆----------------------------------------
          419┆ require(currentAllowance >= amount, "ERC20: transfer amount      
  exceeds allowance");                                                          
            ⋮┆----------------------------------------
          460┆ require(currentAllowance >= subtractedValue, "ERC20: decreased   
  allowance below zero");                                                       
            ⋮┆----------------------------------------
          487┆ require(sender != address(0), "ERC20: transfer from the zero     
  address");                                                                    
            ⋮┆----------------------------------------
          488┆ require(recipient != address(0), "ERC20: transfer to the zero    
  address");                                                                    
            ⋮┆----------------------------------------
          493┆ require(senderBalance >= amount, "ERC20: transfer amount exceeds 
  balance");                                                                    
            ⋮┆----------------------------------------
          514┆ require(account != address(0), "ERC20: mint to the zero          
  address");                                                                    
            ⋮┆----------------------------------------
          526┆ require(account != address(0), "ERC20: mint to the zero          
  address");                                                                    
            ⋮┆----------------------------------------
          544┆ require(account != address(0), "ERC20: burn from the zero        
  address");                                                                    
            ⋮┆----------------------------------------
          549┆ require(accountBalance >= amount, "ERC20: burn amount exceeds    
  balance");                                                                    
            ⋮┆----------------------------------------
          578┆ require(owner != address(0), "ERC20: approve from the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          579┆ require(spender != address(0), "ERC20: approve to the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          676┆ require(!paused(), "Pausable: paused");
            ⋮┆----------------------------------------
          688┆ require(paused(), "Pausable: not paused");
            ⋮┆----------------------------------------
          748┆ require(!paused(), "ERC20Pausable: token transfer while paused");
            ⋮┆----------------------------------------
          984┆ require(account == _msgSender(), "AccessControl: can only        
  renounce roles for self");                                                    
            ⋮┆----------------------------------------
         1073┆ require(isActive,"Token: not active");
            ⋮┆----------------------------------------
         1075┆                                                                  
  require(!IGuardContract2(guardContract).isProhibitedTransfer(sender,          
  recipient, amount, _msgSender()), "Token: Guard have locked this              
  transaction");                                                                
            ⋮┆----------------------------------------
         1080┆ require(!isActive, "Can't load balance into activated token");
            ⋮┆----------------------------------------
         1081┆ require(_address.length == _balances.length,"Incorrect length");
            ⋮┆----------------------------------------
         1091┆ require(!isActive,"Already activated");
            ⋮┆----------------------------------------
       solidity.performance.use-prefix-increment-not-postfix                    
          Consider using the prefix increment expression whenever the return    
  value is not needed. The                                                      
          prefix increment expression is cheaper in terms of gas.               
                                                                                
           92┆ digits++;
            ⋮┆----------------------------------------
          114┆ length++;
            ⋮┆----------------------------------------
         1083┆ for(uint i=0;i<_address.length;i++){
            ⋮┆----------------------------------------
       solidity.performance.use-short-revert-string                             
          Shortening revert strings to fit in 32 bytes will decrease gas costs  
  for deployment and  gas                                                       
          costs when the revert condition has been met.                         
                                                                                
           36┆ require(_initializing || !_initialized, "Initializable: contract 
  is already initialized");                                                     
            ⋮┆----------------------------------------
          419┆ require(currentAllowance >= amount, "ERC20: transfer amount      
  exceeds allowance");                                                          
            ⋮┆----------------------------------------
          460┆ require(currentAllowance >= subtractedValue, "ERC20: decreased   
  allowance below zero");                                                       
            ⋮┆----------------------------------------
          487┆ require(sender != address(0), "ERC20: transfer from the zero     
  address");                                                                    
            ⋮┆----------------------------------------
          488┆ require(recipient != address(0), "ERC20: transfer to the zero    
  address");                                                                    
            ⋮┆----------------------------------------
          493┆ require(senderBalance >= amount, "ERC20: transfer amount exceeds 
  balance");                                                                    
            ⋮┆----------------------------------------
          544┆ require(account != address(0), "ERC20: burn from the zero        
  address");                                                                    
            ⋮┆----------------------------------------
          549┆ require(accountBalance >= amount, "ERC20: burn amount exceeds    
  balance");                                                                    
            ⋮┆----------------------------------------
          578┆ require(owner != address(0), "ERC20: approve from the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          579┆ require(spender != address(0), "ERC20: approve to the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          748┆ require(!paused(), "ERC20Pausable: token transfer while paused");
            ⋮┆----------------------------------------
          984┆ require(account == _msgSender(), "AccessControl: can only        
  renounce roles for self");                                                    
            ⋮┆----------------------------------------
         1075┆                                                                  
  require(!IGuardContract2(guardContract).isProhibitedTransfer(sender,          
  recipient, amount, _msgSender()), "Token: Guard have locked this              
  transaction");                                                                
            ⋮┆----------------------------------------
         1080┆ require(!isActive, "Can't load balance into activated token");

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 48 rules on 1 file: 43 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
