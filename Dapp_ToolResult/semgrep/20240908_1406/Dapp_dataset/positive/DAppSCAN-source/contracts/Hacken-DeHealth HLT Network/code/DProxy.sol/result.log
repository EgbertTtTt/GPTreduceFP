METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 48 Code rules:
  Scanning 1 file with 48 solidity rules.
                    
                    
┌──────────────────┐
│ 22 Code Findings │
└──────────────────┘
                   
    /sb/DProxy.sol 
       solidity.performance.use-custom-error-not-require                        
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
                                                                                
          153┆ require(address(this).balance >= amount, "Address: insufficient  
  balance");                                                                    
            ⋮┆----------------------------------------
          156┆ require(success, "Address: unable to send value, recipient may   
  have reverted");                                                              
            ⋮┆----------------------------------------
          226┆ require(address(this).balance >= value, "Address: insufficient   
  balance for call");                                                           
            ⋮┆----------------------------------------
          227┆ require(isContract(target), "Address: call to non-contract");
            ⋮┆----------------------------------------
          254┆ require(isContract(target), "Address: static call to             
  non-contract");                                                               
            ⋮┆----------------------------------------
          281┆ require(isContract(target), "Address: delegate call to           
  non-contract");                                                               
            ⋮┆----------------------------------------
          425┆ require(Address.isContract(newImplementation), "ERC1967: new     
  implementation is not a contract");                                           
            ⋮┆----------------------------------------
          484┆ require(oldImplementation == _getImplementation(),               
  "ERC1967Upgrade: upgrade breaks further upgrades");                           
            ⋮┆----------------------------------------
          513┆ require(newAdmin != address(0), "ERC1967: new admin is the zero  
  address");                                                                    
            ⋮┆----------------------------------------
          549┆ require(Address.isContract(newBeacon), "ERC1967: new beacon is   
  not a contract");                                                             
            ⋮┆----------------------------------------
          550┆ require(
          551┆     Address.isContract(IBeacon(newBeacon).implementation()),
          552┆     "ERC1967: beacon implementation is not a contract"
          553┆ );
            ⋮┆----------------------------------------
          716┆ require(msg.sender != _getAdmin(), "TransparentUpgradeableProxy: 
  admin cannot fallback to proxy target");                                      
            ⋮┆----------------------------------------
       solidity.performance.use-short-revert-string                             
          Shortening revert strings to fit in 32 bytes will decrease gas costs  
  for deployment and  gas                                                       
          costs when the revert condition has been met.                         
                                                                                
          156┆ require(success, "Address: unable to send value, recipient may   
  have reverted");                                                              
            ⋮┆----------------------------------------
          226┆ require(address(this).balance >= value, "Address: insufficient   
  balance for call");                                                           
            ⋮┆----------------------------------------
          254┆ require(isContract(target), "Address: static call to             
  non-contract");                                                               
            ⋮┆----------------------------------------
          281┆ require(isContract(target), "Address: delegate call to           
  non-contract");                                                               
            ⋮┆----------------------------------------
          425┆ require(Address.isContract(newImplementation), "ERC1967: new     
  implementation is not a contract");                                           
            ⋮┆----------------------------------------
          484┆ require(oldImplementation == _getImplementation(),               
  "ERC1967Upgrade: upgrade breaks further upgrades");                           
            ⋮┆----------------------------------------
          513┆ require(newAdmin != address(0), "ERC1967: new admin is the zero  
  address");                                                                    
            ⋮┆----------------------------------------
          549┆ require(Address.isContract(newBeacon), "ERC1967: new beacon is   
  not a contract");                                                             
            ⋮┆----------------------------------------
          550┆ require(
          551┆     Address.isContract(IBeacon(newBeacon).implementation()),
          552┆     "ERC1967: beacon implementation is not a contract"
          553┆ );
            ⋮┆----------------------------------------
          716┆ require(msg.sender != _getAdmin(), "TransparentUpgradeableProxy: 
  admin cannot fallback to proxy target");                                      

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 48 rules on 1 file: 22 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
