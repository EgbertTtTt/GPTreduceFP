METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 48 Code rules:
  Scanning 1 file with 48 solidity rules.
                    
                    
┌──────────────────┐
│ 49 Code Findings │
└──────────────────┘
                       
    /sb/TravelCare.sol 
       solidity.best-practice.use-ownable2step                                  
          By demanding that the receiver of the owner permissions actively      
  accept via a contract call                                                    
          of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the 
  contract ownership                                                            
          from accidentally being transferred  to an address that cannot handle 
  it.                                                                           
                                                                                
          640┆ Ownable,
            ⋮┆----------------------------------------
       solidity.performance.non-payable-constructor      
          Consider making costructor payable to save gas.
                                                         
          333┆ constructor (string memory name_, string memory symbol_) public {
          334┆     _name = name_;
          335┆     _symbol = symbol_;
          336┆     _decimals = 18;
          337┆ }
            ⋮┆----------------------------------------
          669┆ constructor(
          670┆     address _marketingWallet,
          671┆     uint256 _marketingFee,
          672┆     uint256 _burningFee,
          673┆     uint256 _maxTxAmount
          674┆ ) ERC20("TravelCare", "TRAVEL") {
          675┆     marketingWallet = _marketingWallet;
          676┆     marketingFee = _marketingFee;
          677┆     burningFee = _burningFee;
          678┆     maxTxAmount = _maxTxAmount;
             [hid 26 additional lines, adjust with --max-lines-per-finding] 
       solidity.performance.use-custom-error-not-require                        
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
                                                                                
          182┆ require(c >= a, "SafeMath: addition overflow");
            ⋮┆----------------------------------------
          197┆ require(b <= a, "SafeMath: subtraction overflow");
            ⋮┆----------------------------------------
          214┆ require(c / a == b, "SafeMath: multiplication overflow");
            ⋮┆----------------------------------------
          231┆ require(b > 0, "SafeMath: division by zero");
            ⋮┆----------------------------------------
          248┆ require(b > 0, "SafeMath: modulo by zero");
            ⋮┆----------------------------------------
          487┆ require(sender != address(0), "ERC20: transfer from the zero     
  address");                                                                    
            ⋮┆----------------------------------------
          488┆ require(recipient != address(0), "ERC20: transfer to the zero    
  address");                                                                    
            ⋮┆----------------------------------------
          507┆ require(account != address(0), "ERC20: mint to the zero          
  address");                                                                    
            ⋮┆----------------------------------------
          528┆ require(account != address(0), "ERC20: burn from the zero        
  address");                                                                    
            ⋮┆----------------------------------------
          551┆ require(owner != address(0), "ERC20: approve from the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          552┆ require(spender != address(0), "ERC20: approve to the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          611┆ require(owner() == _msgSender(), "Ownable: caller is not the     
  owner");                                                                      
            ⋮┆----------------------------------------
          632┆ require(newOwner != address(0), "Ownable: new owner is the zero  
  address");                                                                    
            ⋮┆----------------------------------------
          768┆ require(
          769┆     uint8(_rewardType) > uint8(RewardType.None),
          770┆     "TravelCare::changeRewardRequirements: invalid reward type"
          771┆ );
            ⋮┆----------------------------------------
          780┆ require(
          781┆    totalSupply() + _amount <= CAP,
          782┆     "TravelCare::mint: minting exceeds CAP"
          783┆ );
            ⋮┆----------------------------------------
          859┆ require(
          860┆     sender != address(0),
          861┆     "ERC20::_transfer: transfer from the zero address"
          862┆ );
            ⋮┆----------------------------------------
          864┆ require(
          865┆     recipient != address(0),
          866┆     "ERC20::_transfer: transfer to the zero address"
          867┆ );
            ⋮┆----------------------------------------
          871┆ require(
          872┆     amount <= maxTxAmount,
          873┆     "ERC20::_transfer: amount exceeds maxTxAmount"
          874┆ );
            ⋮┆----------------------------------------
       solidity.performance.use-nested-if                                       
          Using nested is cheaper than using && multiple check combinations.    
  There are more                                                                
          advantages, such as easier to read code and better coverage reports.  
                                                                                
          713┆ if (
          714┆     userRewardsToTimestamp[RewardType.Arctic_Tern] != 0 &&
          715┆     (
          716┆         block.timestamp -                                        
  userRewardsToTimestamp[RewardType.Arctic_Tern]                                
          717┆         >= categories[RewardType.Arctic_Tern].minDuration
          718┆     )
          719┆ )
          720┆     return RewardType.Arctic_Tern;
            ⋮┆----------------------------------------
          722┆ if (
          723┆     userRewardsToTimestamp[RewardType.Golden_Eagle] != 0 &&
          724┆     (
          725┆         block.timestamp -                                        
  userRewardsToTimestamp[RewardType.Golden_Eagle]                               
          726┆         >= categories[RewardType.Golden_Eagle].minDuration
          727┆     )
          728┆ )
          729┆     return RewardType.Golden_Eagle;
            ⋮┆----------------------------------------
          731┆ if (
          732┆     userRewardsToTimestamp[RewardType.Purple_Martin] != 0 &&
          733┆     (
          734┆         block.timestamp -                                        
  userRewardsToTimestamp[RewardType.Purple_Martin]                              
          735┆         >= categories[RewardType.Purple_Martin].minDuration
          736┆     )
          737┆ )
          738┆     return RewardType.Purple_Martin;
            ⋮┆----------------------------------------
          740┆ if (
          741┆     userRewardsToTimestamp[RewardType.Indigo_Bunting] != 0 &&
          742┆     (
          743┆         block.timestamp -                                        
  userRewardsToTimestamp[RewardType.Indigo_Bunting]                             
          744┆         >= categories[RewardType.Indigo_Bunting].minDuration
          745┆     )
          746┆ )
          747┆     return RewardType.Indigo_Bunting;
            ⋮┆----------------------------------------
          749┆ if (
          750┆     userRewardsToTimestamp[RewardType.Pink_Flamingo] != 0 &&
          751┆     (
          752┆         block.timestamp -                                        
  userRewardsToTimestamp[RewardType.Pink_Flamingo]                              
          753┆         >= categories[RewardType.Pink_Flamingo].minDuration
          754┆     )
          755┆ )
          756┆     return RewardType.Pink_Flamingo;
            ⋮┆----------------------------------------
          870┆ if (sender != _owner && recipient != _owner)
          871┆     require(
          872┆         amount <= maxTxAmount,
          873┆         "ERC20::_transfer: amount exceeds maxTxAmount"
          874┆     );
            ⋮┆----------------------------------------
          922┆ if (
          923┆     userRewardsToTimestamp[RewardType.Pink_Flamingo] == 0 &&
          924┆     balance >= categories[RewardType.Pink_Flamingo].minBalance
          925┆ )
          926┆     userRewardsToTimestamp[RewardType.Pink_Flamingo] =           
  block.timestamp;                                                              
            ⋮┆----------------------------------------
          928┆ if (
          929┆     userRewardsToTimestamp[RewardType.Indigo_Bunting] == 0 &&
          930┆     balance >= categories[RewardType.Indigo_Bunting].minBalance
          931┆ )
          932┆     userRewardsToTimestamp[RewardType.Indigo_Bunting] =          
  block.timestamp;                                                              
            ⋮┆----------------------------------------
          934┆ if (
          935┆     userRewardsToTimestamp[RewardType.Purple_Martin] == 0 &&
          936┆     balance >= categories[RewardType.Purple_Martin].minBalance
          937┆ )
          938┆     userRewardsToTimestamp[RewardType.Purple_Martin] =           
  block.timestamp;                                                              
            ⋮┆----------------------------------------
          940┆ if (
          941┆     userRewardsToTimestamp[RewardType.Golden_Eagle] == 0 &&
          942┆     balance >= categories[RewardType.Golden_Eagle].minBalance
          943┆ )
          944┆     userRewardsToTimestamp[RewardType.Golden_Eagle] =            
  block.timestamp;                                                              
            ⋮┆----------------------------------------
          946┆ if (
          947┆     userRewardsToTimestamp[RewardType.Arctic_Tern] == 0 &&
          948┆     balance >= categories[RewardType.Arctic_Tern].minBalance
          949┆ )
          950┆     userRewardsToTimestamp[RewardType.Arctic_Tern] =             
  block.timestamp;                                                              
            ⋮┆----------------------------------------
          957┆ if (
          958┆     userRewardsToTimestamp[RewardType.Pink_Flamingo] != 0 &&
          959┆     balance < categories[RewardType.Pink_Flamingo].minBalance
          960┆ )
          961┆     userRewardsToTimestamp[RewardType.Pink_Flamingo] = 0;
            ⋮┆----------------------------------------
          963┆ if (
          964┆     userRewardsToTimestamp[RewardType.Indigo_Bunting] != 0 &&
          965┆     balance < categories[RewardType.Indigo_Bunting].minBalance
          966┆ )
          967┆     userRewardsToTimestamp[RewardType.Indigo_Bunting] = 0;
            ⋮┆----------------------------------------
          969┆ if (
          970┆     userRewardsToTimestamp[RewardType.Purple_Martin] != 0 &&
          971┆     balance < categories[RewardType.Purple_Martin].minBalance
          972┆ )
          973┆     userRewardsToTimestamp[RewardType.Purple_Martin] = 0;
            ⋮┆----------------------------------------
          975┆ if (
          976┆     userRewardsToTimestamp[RewardType.Golden_Eagle] != 0 &&
          977┆     balance < categories[RewardType.Golden_Eagle].minBalance
          978┆ )
          979┆     userRewardsToTimestamp[RewardType.Golden_Eagle] = 0;
            ⋮┆----------------------------------------
          981┆ if (
          982┆     userRewardsToTimestamp[RewardType.Arctic_Tern] != 0 &&
          983┆     balance < categories[RewardType.Arctic_Tern].minBalance
          984┆ )
          985┆     userRewardsToTimestamp[RewardType.Arctic_Tern] = 0;
            ⋮┆----------------------------------------
       solidity.performance.use-short-revert-string                             
          Shortening revert strings to fit in 32 bytes will decrease gas costs  
  for deployment and  gas                                                       
          costs when the revert condition has been met.                         
                                                                                
          214┆ require(c / a == b, "SafeMath: multiplication overflow");
            ⋮┆----------------------------------------
          487┆ require(sender != address(0), "ERC20: transfer from the zero     
  address");                                                                    
            ⋮┆----------------------------------------
          488┆ require(recipient != address(0), "ERC20: transfer to the zero    
  address");                                                                    
            ⋮┆----------------------------------------
          528┆ require(account != address(0), "ERC20: burn from the zero        
  address");                                                                    
            ⋮┆----------------------------------------
          551┆ require(owner != address(0), "ERC20: approve from the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          552┆ require(spender != address(0), "ERC20: approve to the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          632┆ require(newOwner != address(0), "Ownable: new owner is the zero  
  address");                                                                    
            ⋮┆----------------------------------------
          768┆ require(
          769┆     uint8(_rewardType) > uint8(RewardType.None),
          770┆     "TravelCare::changeRewardRequirements: invalid reward type"
          771┆ );
            ⋮┆----------------------------------------
          780┆ require(
          781┆    totalSupply() + _amount <= CAP,
          782┆     "TravelCare::mint: minting exceeds CAP"
          783┆ );
            ⋮┆----------------------------------------
          859┆ require(
          860┆     sender != address(0),
          861┆     "ERC20::_transfer: transfer from the zero address"
          862┆ );
            ⋮┆----------------------------------------
          864┆ require(
          865┆     recipient != address(0),
          866┆     "ERC20::_transfer: transfer to the zero address"
          867┆ );
            ⋮┆----------------------------------------
          871┆ require(
          872┆     amount <= maxTxAmount,
          873┆     "ERC20::_transfer: amount exceeds maxTxAmount"
          874┆ );

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 48 rules on 1 file: 49 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
