METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 48 Code rules:
  Scanning 1 file with 48 solidity rules.
                    
                    
┌──────────────────┐
│ 11 Code Findings │
└──────────────────┘
                 
    /sb/BNum.sol 
       solidity.performance.unnecessary-checked-arithmetic-in-loop              
          A lot of times there is no risk that the loop counter can overflow.   
  Using Solidity's                                                              
          unchecked block saves the overflow checks.                            
                                                                                
          200┆ for (uint i = 1; term >= precision; i++) {
            ⋮┆----------------------------------------
       solidity.performance.use-custom-error-not-require                        
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
                                                                                
           94┆ require(c >= a, "ERR_ADD_OVERFLOW");
            ⋮┆----------------------------------------
          103┆ require(!flag, "ERR_SUB_UNDERFLOW");
            ⋮┆----------------------------------------
          124┆ require(a == 0 || c0 / a == b, "ERR_MUL_OVERFLOW");
            ⋮┆----------------------------------------
          126┆ require(c1 >= c0, "ERR_MUL_OVERFLOW");
            ⋮┆----------------------------------------
          135┆ require(b != 0, "ERR_DIV_ZERO");
            ⋮┆----------------------------------------
          137┆ require(a == 0 || c0 / a == BONE, "ERR_DIV_INTERNAL"); // bmul   
  overflow                                                                      
            ⋮┆----------------------------------------
          139┆ require(c1 >= c0, "ERR_DIV_INTERNAL"); //  badd require
            ⋮┆----------------------------------------
          168┆ require(base >= MIN_BPOW_BASE, "ERR_BPOW_BASE_TOO_LOW");
            ⋮┆----------------------------------------
          169┆ require(base <= MAX_BPOW_BASE, "ERR_BPOW_BASE_TOO_HIGH");
            ⋮┆----------------------------------------
       solidity.performance.use-prefix-increment-not-postfix                    
          Consider using the prefix increment expression whenever the return    
  value is not needed. The                                                      
          prefix increment expression is cheaper in terms of gas.               
                                                                                
          200┆ for (uint i = 1; term >= precision; i++) {

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 48 rules on 1 file: 11 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
