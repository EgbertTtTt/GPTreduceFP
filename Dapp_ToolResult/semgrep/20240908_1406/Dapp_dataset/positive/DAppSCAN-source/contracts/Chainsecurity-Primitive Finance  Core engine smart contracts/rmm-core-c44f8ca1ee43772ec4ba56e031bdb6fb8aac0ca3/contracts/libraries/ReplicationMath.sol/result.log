METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 48 Code rules:
  Scanning 1 file with 48 solidity rules.
                    
                    
┌──────────────────┐
│ 10 Code Findings │
└──────────────────┘
                            
    /sb/ReplicationMath.sol 
       solidity.performance.use-multiple-require                                
          Using multiple require statements is cheaper than using && multiple   
  check combinations.                                                           
          There are more advantages, such as easier to read code and better     
  coverage reports.                                                             
                                                                                
           37┆ require(x >= -0x8000000000000000 && x <= 0x7FFFFFFFFFFFFFFF);
            ⋮┆----------------------------------------
           93┆ require(result >= MIN_64x64 && result <= MAX_64x64);
            ⋮┆----------------------------------------
          121┆ require(result >= MIN_64x64 && result <= MAX_64x64);
            ⋮┆----------------------------------------
          136┆ require(result >= MIN_64x64 && result <= MAX_64x64);
            ⋮┆----------------------------------------
          151┆ require(result >= MIN_64x64 && result <= MAX_64x64);
            ⋮┆----------------------------------------
          167┆ require(
          168┆     y >= -0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF &&
          169┆         y <= 0x1000000000000000000000000000000000000000000000000
          170┆ );
            ⋮┆----------------------------------------
          231┆ require(result >= MIN_64x64 && result <= MAX_64x64);
            ⋮┆----------------------------------------
          322┆ require(result >= MIN_64x64 && result <= MAX_64x64);
            ⋮┆----------------------------------------
          453┆ require(result >= MIN_64x64 && result <= MAX_64x64);
            ⋮┆----------------------------------------
       solidity.performance.use-nested-if                                       
          Using nested is cheaper than using && multiple check combinations.    
  There are more                                                                
          advantages, such as easier to read code and better coverage reports.  
                                                                                
          818┆ if (p <= HIGH_TAIL && p >= LOW_TAIL) {
          819┆     return central(p);
          820┆ } else if (p < LOW_TAIL) {
          821┆     return tail(p);
          822┆ } else {
          823┆     int128 negativeTail = -tail(ONE_INT.sub(p));
          824┆     return negativeTail;
          825┆ }

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 48 rules on 1 file: 10 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
