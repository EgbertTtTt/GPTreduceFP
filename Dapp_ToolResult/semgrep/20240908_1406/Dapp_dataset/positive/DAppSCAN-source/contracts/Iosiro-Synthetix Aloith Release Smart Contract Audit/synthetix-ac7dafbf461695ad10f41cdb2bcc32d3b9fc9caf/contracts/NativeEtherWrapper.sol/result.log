METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 48 Code rules:
  Scanning 1 file with 48 solidity rules.
                    
                    
┌──────────────────┐
│ 40 Code Findings │
└──────────────────┘
                               
    /sb/NativeEtherWrapper.sol 
       solidity.performance.array-length-outside-loop                           
          Caching the array length outside a loop saves reading it on each      
  iteration, as long as the                                                     
          array's length is not changed during the loop.                        
                                                                                
          367┆ for (uint i = 0; i < first.length; i++) {
            ⋮┆----------------------------------------
          371┆ for (uint j = 0; j < second.length; j++) {
            ⋮┆----------------------------------------
          372┆ combination[first.length + j] = second[j];
            ⋮┆----------------------------------------
          384┆ for (uint i = 0; i < requiredAddresses.length; i++) {
            ⋮┆----------------------------------------
          398┆ for (uint i = 0; i < requiredAddresses.length; i++) {
            ⋮┆----------------------------------------
       solidity.performance.non-payable-constructor      
          Consider making costructor payable to save gas.
                                                         
            9┆ constructor(address _owner) public {
           10┆     require(_owner != address(0), "Owner address cannot be 0");
           11┆     owner = _owner;
           12┆     emit OwnerChanged(address(0), _owner);
           13┆ }
            ⋮┆----------------------------------------
          262┆ constructor(address _owner) public Owned(_owner) {}
            ⋮┆----------------------------------------
          322┆ constructor(address _owner) public Owned(_owner) {}
            ⋮┆----------------------------------------
          354┆ constructor(address _resolver) internal {
          355┆     resolver = AddressResolver(_resolver);
          356┆ }
            ⋮┆----------------------------------------
          430┆ constructor(address _owner, address _resolver) public            
  Owned(_owner) MixinResolver(_resolver) {}                                     
            ⋮┆----------------------------------------
       solidity.performance.state-variable-read-in-a-loop                       
          Replace state variable reads and writes within loops with local       
  variable reads and writes.                                                    
                                                                                
          272┆ repository[name] = destination;
            ⋮┆----------------------------------------
          289┆ if (repository[names[i]] != destinations[i]) {
            ⋮┆----------------------------------------
          388┆ resolver.requireAndGetAddress(name,                              
  string(abi.encodePacked("Resolver missing target: ", name)));                 
            ⋮┆----------------------------------------
          389┆ addressCache[name] = destination;
            ⋮┆----------------------------------------
          401┆ if (resolver.getAddress(name) != addressCache[name] ||           
  addressCache[name] == address(0)) {                                           
            ⋮┆----------------------------------------
          401┆ if (resolver.getAddress(name) != addressCache[name] ||           
  addressCache[name] == address(0)) {                                           
            ⋮┆----------------------------------------
          401┆ if (resolver.getAddress(name) != addressCache[name] ||           
  addressCache[name] == address(0)) {                                           
            ⋮┆----------------------------------------
       solidity.performance.unnecessary-checked-arithmetic-in-loop              
          A lot of times there is no risk that the loop counter can overflow.   
  Using Solidity's                                                              
          unchecked block saves the overflow checks.                            
                                                                                
          269┆ for (uint i = 0; i < names.length; i++) {
            ⋮┆----------------------------------------
          280┆ for (uint i = 0; i < destinations.length; i++) {
            ⋮┆----------------------------------------
          288┆ for (uint i = 0; i < names.length; i++) {
            ⋮┆----------------------------------------
          367┆ for (uint i = 0; i < first.length; i++) {
            ⋮┆----------------------------------------
          371┆ for (uint j = 0; j < second.length; j++) {
            ⋮┆----------------------------------------
          384┆ for (uint i = 0; i < requiredAddresses.length; i++) {
            ⋮┆----------------------------------------
          398┆ for (uint i = 0; i < requiredAddresses.length; i++) {
            ⋮┆----------------------------------------
       solidity.performance.use-custom-error-not-require                        
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
                                                                                
           10┆ require(_owner != address(0), "Owner address cannot be 0");
            ⋮┆----------------------------------------
           21┆ require(msg.sender == nominatedOwner, "You must be nominated     
  before you can accept ownership");                                            
            ⋮┆----------------------------------------
           33┆ require(msg.sender == owner, "Only the contract owner may perform
  this action");                                                                
            ⋮┆----------------------------------------
          267┆ require(names.length == destinations.length, "Input lengths must 
  match");                                                                      
            ⋮┆----------------------------------------
          308┆ require(address(issuer) != address(0), "Cannot find Issuer       
  address");                                                                    
            ⋮┆----------------------------------------
          458┆ require(amount > 0, "msg.value must be greater than 0");
            ⋮┆----------------------------------------
          476┆ require(amount > 0, "amount must be greater than 0");
            ⋮┆----------------------------------------
       solidity.performance.use-prefix-increment-not-postfix                    
          Consider using the prefix increment expression whenever the return    
  value is not needed. The                                                      
          prefix increment expression is cheaper in terms of gas.               
                                                                                
          269┆ for (uint i = 0; i < names.length; i++) {
            ⋮┆----------------------------------------
          280┆ for (uint i = 0; i < destinations.length; i++) {
            ⋮┆----------------------------------------
          288┆ for (uint i = 0; i < names.length; i++) {
            ⋮┆----------------------------------------
          367┆ for (uint i = 0; i < first.length; i++) {
            ⋮┆----------------------------------------
          371┆ for (uint j = 0; j < second.length; j++) {
            ⋮┆----------------------------------------
          384┆ for (uint i = 0; i < requiredAddresses.length; i++) {
            ⋮┆----------------------------------------
          398┆ for (uint i = 0; i < requiredAddresses.length; i++) {
            ⋮┆----------------------------------------
       solidity.performance.use-short-revert-string                             
          Shortening revert strings to fit in 32 bytes will decrease gas costs  
  for deployment and  gas                                                       
          costs when the revert condition has been met.                         
                                                                                
           21┆ require(msg.sender == nominatedOwner, "You must be nominated     
  before you can accept ownership");                                            
            ⋮┆----------------------------------------
           33┆ require(msg.sender == owner, "Only the contract owner may perform
  this action");                                                                

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘
Some files were skipped or only partially analyzed.
  Partially scanned: 1 files only partially analyzed due to parsing or internal Semgrep errors

Ran 48 rules on 1 file: 40 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
