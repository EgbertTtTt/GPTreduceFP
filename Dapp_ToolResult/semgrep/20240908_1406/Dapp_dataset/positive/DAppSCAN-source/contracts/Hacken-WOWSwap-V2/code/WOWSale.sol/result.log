METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 48 Code rules:
  Scanning 1 file with 48 solidity rules.
                   
                   
┌─────────────────┐
│ 9 Code Findings │
└─────────────────┘
                    
    /sb/WOWSale.sol 
       solidity.performance.non-payable-constructor      
          Consider making costructor payable to save gas.
                                                         
          227┆ constructor(address wowToken) {
          228┆     token = WOWToken(wowToken);
          229┆     DEC = 10 ** uint256(token.decimals());
          230┆ }
            ⋮┆----------------------------------------
          306┆ constructor() {
          307┆     balances[owner] = _totalSupply;
          308┆     emit Transfer(address(0x0), owner, _totalSupply);
          309┆ }
            ⋮┆----------------------------------------
       solidity.performance.use-custom-error-not-require                        
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
                                                                                
           37┆ require(c >= a, "SafeMath: addition overflow");
            ⋮┆----------------------------------------
           91┆ require(c / a == b, "SafeMath: multiplication overflow");
            ⋮┆----------------------------------------
          247┆ require((block.timestamp >= startSale && block.timestamp <       
  endSale), "Crowdsale is over");                                               
            ⋮┆----------------------------------------
          248┆ require(tokenPrice > 0, "Token price is not defined");
            ⋮┆----------------------------------------
          271┆ require(block.timestamp >= endSale || tokensLeft == 0, "Close    
  requirements are not met");                                                   
            ⋮┆----------------------------------------
       solidity.performance.use-multiple-require                                
          Using multiple require statements is cheaper than using && multiple   
  check combinations.                                                           
          There are more advantages, such as easier to read code and better     
  coverage reports.                                                             
                                                                                
          247┆ require((block.timestamp >= startSale && block.timestamp <       
  endSale), "Crowdsale is over");                                               
            ⋮┆----------------------------------------
       solidity.performance.use-short-revert-string                             
          Shortening revert strings to fit in 32 bytes will decrease gas costs  
  for deployment and  gas                                                       
          costs when the revert condition has been met.                         
                                                                                
           91┆ require(c / a == b, "SafeMath: multiplication overflow");

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 48 rules on 1 file: 9 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
