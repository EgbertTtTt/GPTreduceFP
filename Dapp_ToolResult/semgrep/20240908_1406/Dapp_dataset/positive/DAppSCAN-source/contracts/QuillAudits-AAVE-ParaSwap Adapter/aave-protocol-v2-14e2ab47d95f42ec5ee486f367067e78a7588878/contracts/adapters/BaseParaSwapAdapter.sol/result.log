METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 48 Code rules:
  Scanning 1 file with 48 solidity rules.
                    
                    
┌──────────────────┐
│ 20 Code Findings │
└──────────────────┘
                                
    /sb/BaseParaSwapAdapter.sol 
       solidity.best-practice.use-abi-encodecall-instead-of-encodewithselector  
          To guarantee arguments type safety it is recommended to use           
  `abi.encodeCall` instead of                                                   
          `abi.encodeWithSelector`.                                             
                                                                                
          301┆ callOptionalReturn(token,                                        
  abi.encodeWithSelector(token.transfer.selector, to, value));                  
            ⋮┆----------------------------------------
          310┆ callOptionalReturn(token,                                        
  abi.encodeWithSelector(token.transferFrom.selector, from, to, value));        
            ⋮┆----------------------------------------
          322┆ callOptionalReturn(token,                                        
  abi.encodeWithSelector(token.approve.selector, spender, value));              
            ⋮┆----------------------------------------
       solidity.best-practice.use-ownable2step                                  
          By demanding that the receiver of the owner permissions actively      
  accept via a contract call                                                    
          of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the 
  contract ownership                                                            
          from accidentally being transferred  to an address that cannot handle 
  it.                                                                           
                                                                                
          969┆ abstract contract BaseParaSwapAdapter is FlashLoanReceiverBase,  
  Ownable {                                                                     
            ⋮┆----------------------------------------
       solidity.performance.non-payable-constructor      
          Consider making costructor payable to save gas.
                                                         
          370┆ constructor() internal {
          371┆   address msgSender = _msgSender();
          372┆   _owner = msgSender;
          373┆   emit OwnershipTransferred(address(0), msgSender);
          374┆ }
            ⋮┆----------------------------------------
       solidity.performance.use-custom-error-not-require                        
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
                                                                                
           17┆ require(c >= a, 'SafeMath: addition overflow');
            ⋮┆----------------------------------------
           73┆ require(c / a == b, 'SafeMath: multiplication overflow');
            ⋮┆----------------------------------------
          284┆ require(address(this).balance >= amount, 'Address: insufficient  
  balance');                                                                    
            ⋮┆----------------------------------------
          288┆ require(success, 'Address: unable to send value, recipient may   
  have reverted');                                                              
            ⋮┆----------------------------------------
          318┆ require(
          319┆   (value == 0) || (token.allowance(address(this), spender) == 0),
          320┆   'SafeERC20: approve from non-zero to non-zero allowance'
          321┆ );
            ⋮┆----------------------------------------
          326┆ require(address(token).isContract(), 'SafeERC20: call to         
  non-contract');                                                               
            ⋮┆----------------------------------------
          330┆ require(success, 'SafeERC20: low-level call failed');
            ⋮┆----------------------------------------
          335┆ require(abi.decode(returndata, (bool)), 'SafeERC20: ERC20        
  operation did not succeed');                                                  
            ⋮┆----------------------------------------
          387┆ require(_owner == _msgSender(), 'Ownable: caller is not the      
  owner');                                                                      
            ⋮┆----------------------------------------
          408┆ require(newOwner != address(0), 'Ownable: new owner is the zero  
  address');                                                                    
            ⋮┆----------------------------------------
       solidity.performance.use-short-revert-string                             
          Shortening revert strings to fit in 32 bytes will decrease gas costs  
  for deployment and  gas                                                       
          costs when the revert condition has been met.                         
                                                                                
           73┆ require(c / a == b, 'SafeMath: multiplication overflow');
            ⋮┆----------------------------------------
          288┆ require(success, 'Address: unable to send value, recipient may   
  have reverted');                                                              
            ⋮┆----------------------------------------
          318┆ require(
          319┆   (value == 0) || (token.allowance(address(this), spender) == 0),
          320┆   'SafeERC20: approve from non-zero to non-zero allowance'
          321┆ );
            ⋮┆----------------------------------------
          335┆ require(abi.decode(returndata, (bool)), 'SafeERC20: ERC20        
  operation did not succeed');                                                  
            ⋮┆----------------------------------------
          408┆ require(newOwner != address(0), 'Ownable: new owner is the zero  
  address');                                                                    

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 48 rules on 1 file: 20 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
