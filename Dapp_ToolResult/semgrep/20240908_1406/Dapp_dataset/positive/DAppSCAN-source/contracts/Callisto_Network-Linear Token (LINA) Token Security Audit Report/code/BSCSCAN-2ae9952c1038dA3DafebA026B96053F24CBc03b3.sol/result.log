METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 48 Code rules:
  Scanning 1 file with 48 solidity rules.
                    
                    
┌──────────────────┐
│ 23 Code Findings │
└──────────────────┘
                                                             
    /sb/BSCSCAN-2ae9952c1038dA3DafebA026B96053F24CBc03b3.sol 
       solidity.performance.use-custom-error-not-require                        
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
                                                                                
           34┆ require(c >= a, "SafeMath: addition overflow");
            ⋮┆----------------------------------------
           93┆ require(c / a == b, "SafeMath: multiplication overflow");
            ⋮┆----------------------------------------
          203┆ require(_initializing || _isConstructor() || !_initialized,      
  "Initializable: contract is already initialized");                            
            ⋮┆----------------------------------------
          564┆ require(sender != address(0), "ERC20: transfer from the zero     
  address");                                                                    
            ⋮┆----------------------------------------
          565┆ require(recipient != address(0), "ERC20: transfer to the zero    
  address");                                                                    
            ⋮┆----------------------------------------
          584┆ require(account != address(0), "ERC20: mint to the zero          
  address");                                                                    
            ⋮┆----------------------------------------
          605┆ require(account != address(0), "ERC20: burn from the zero        
  address");                                                                    
            ⋮┆----------------------------------------
          632┆ require(owner != address(0), "ERC20: approve from the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          633┆ require(spender != address(0), "ERC20: approve to the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          687┆ require(_admin != address(0), "LnAdminUpgradeable: zero          
  address");                                                                    
            ⋮┆----------------------------------------
          699┆ require(msg.sender == candidate, "LnAdminUpgradeable: only       
  candidate can become admin");                                                 
            ⋮┆----------------------------------------
          706┆ require((msg.sender == admin), "LnAdminUpgradeable: only the     
  contract admin can perform this action");                                     
            ⋮┆----------------------------------------
          725┆ require(totalSupply().add(amount) <= MAX_SUPPLY, "LinearFinance: 
  max supply exceeded");                                                        
            ⋮┆----------------------------------------
       solidity.performance.use-short-revert-string                             
          Shortening revert strings to fit in 32 bytes will decrease gas costs  
  for deployment and  gas                                                       
          costs when the revert condition has been met.                         
                                                                                
           93┆ require(c / a == b, "SafeMath: multiplication overflow");
            ⋮┆----------------------------------------
          203┆ require(_initializing || _isConstructor() || !_initialized,      
  "Initializable: contract is already initialized");                            
            ⋮┆----------------------------------------
          564┆ require(sender != address(0), "ERC20: transfer from the zero     
  address");                                                                    
            ⋮┆----------------------------------------
          565┆ require(recipient != address(0), "ERC20: transfer to the zero    
  address");                                                                    
            ⋮┆----------------------------------------
          605┆ require(account != address(0), "ERC20: burn from the zero        
  address");                                                                    
            ⋮┆----------------------------------------
          632┆ require(owner != address(0), "ERC20: approve from the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          633┆ require(spender != address(0), "ERC20: approve to the zero       
  address");                                                                    
            ⋮┆----------------------------------------
          699┆ require(msg.sender == candidate, "LnAdminUpgradeable: only       
  candidate can become admin");                                                 
            ⋮┆----------------------------------------
          706┆ require((msg.sender == admin), "LnAdminUpgradeable: only the     
  contract admin can perform this action");                                     
            ⋮┆----------------------------------------
          725┆ require(totalSupply().add(amount) <= MAX_SUPPLY, "LinearFinance: 
  max supply exceeded");                                                        

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 48 rules on 1 file: 23 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
