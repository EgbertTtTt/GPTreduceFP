METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1 file tracked by git with 48 Code rules:
  Scanning 1 file with 48 solidity rules.
                   
                   
┌─────────────────┐
│ 9 Code Findings │
└─────────────────┘
                          
    /sb/StandardToken.sol 
       solidity.best-practice.use-ownable2step                                  
          By demanding that the receiver of the owner permissions actively      
  accept via a contract call                                                    
          of its own,  `Ownable2Step` and `Ownable2StepUpgradeable` prevent the 
  contract ownership                                                            
          from accidentally being transferred  to an address that cannot handle 
  it.                                                                           
                                                                                
           27┆ contract Pausable is Ownable {
            ⋮┆----------------------------------------
           69┆ contract StandardToken is Ownable, Pausable {
            ⋮┆----------------------------------------
       solidity.performance.inefficient-state-variable-increment             
          <x> += <y> costs more gas than <x> = <x> + <y> for state variables.
                                                                             
          223┆ totalSupply += _value;
            ⋮┆----------------------------------------
       solidity.performance.init-variables-with-default-value                   
          Uninitialized variables are assigned with the types default value.    
  Explicitly initializing a                                                     
          variable with its default value costs unnecessary gas.                
                                                                                
           31┆ bool public paused = false;
            ⋮┆----------------------------------------
          103┆ bool public MINT_FORBIDDEN = false;
            ⋮┆----------------------------------------
       solidity.performance.non-payable-constructor      
          Consider making costructor payable to save gas.
                                                         
           22┆ constructor() {
           23┆     owner = msg.sender;
           24┆ }
            ⋮┆----------------------------------------
          260┆ constructor(address _owner) {
          261┆ 
          262┆     name = 'Big League';
          263┆     symbol = 'BGLG';
          264┆ 
          265┆     decimals = 18;
          266┆     totalSupply = 125 * 1e6 * 1e18;
          267┆ 
          268┆     owner = _owner;
          269┆ 
             [hid 12 additional lines, adjust with --max-lines-per-finding] 
       solidity.performance.use-custom-error-not-require                        
          Consider using custom errors as they are more gas efficient while     
  allowing developers  to                                                       
          describe the error in detail using NatSpec.                           
                                                                                
          221┆ require(!MINT_FORBIDDEN, "mint is forbidden forever. sorry");
            ⋮┆----------------------------------------
       solidity.security.no-slippage-check          
          No slippage check in a Uniswap v2/v3 trade
                                                    
          183┆                                                                  
  router.swapExactTokensForETHSupportingFeeOnTransferTokens(amountToSwap, 0,    
  path, address(this), block.timestamp);                                        

                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 48 rules on 1 file: 9 findings.

A new version of Semgrep is available. See https://semgrep.dev/docs/upgrading

Versions prior to 1.43.0 will cease to work with Semgrep.dev after March 11th 2024, please upgrade.
