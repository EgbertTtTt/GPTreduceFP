Extract contract BasicToken from /sb/GNTPaymentChannels.sol
Extract contract GNTPaymentChannels from /sb/GNTPaymentChannels.sol
Extract contract Gate from /sb/GNTPaymentChannels.sol
Extract contract GolemNetworkTokenBatching from /sb/GNTPaymentChannels.sol
Extract contract SafeMath from /sb/GNTPaymentChannels.sol
Extract contract StandardToken from /sb/GNTPaymentChannels.sol
Extract contract TokenProxy from /sb/GNTPaymentChannels.sol
Extracted 7 contract(s) from /sb/GNTPaymentChannels.sol
[0;32m> Created "fuzzMe"[0m
[0;32m> To fuzz contracts:[0m
  chmod +x fuzzMe
  ./fuzzMe
contracts/SafeMath.sol:234:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Gate(ERC20Basic _token, address _proxy) public {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/SafeMath.sol:281:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function TokenProxy(ERC20Basic _token) public {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/SafeMath.sol:362:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GolemNetworkTokenBatching(ERC20Basic _gntToken) TokenProxy(_gntToken) public {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/SafeMath.sol:423:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GNTPaymentChannels(address _token, uint256 _close_delay)
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/SafeMath.sol:547:9: Warning: Use of the "var" keyword is deprecated.
        var amount = _value - ch.withdrawn;
        ^--------^
contracts/SafeMath.sol:602:9: Warning: Use of the "var" keyword is deprecated.
        var amount = ch.deposited - ch.withdrawn;
        ^--------^
contracts/SafeMath.sol:457:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/SafeMath.sol:516:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[channel];
        ^---------------^
contracts/SafeMath.sol:526:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/SafeMath.sol:545:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/SafeMath.sol:559:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/SafeMath.sol:588:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/SafeMath.sol:601:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/SafeMath.sol:99:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
contracts/SafeMath.sol:152:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
contracts/SafeMath.sol:168:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
contracts/SafeMath.sol:194:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
contracts/SafeMath.sol:215:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
contracts/SafeMath.sol:302:9: Warning: Invoking events without "emit" prefix is deprecated.
        GateOpened(gate, user);
        ^--------------------^
contracts/SafeMath.sol:322:9: Warning: Invoking events without "emit" prefix is deprecated.
        Minted(user, value);
        ^-----------------^
contracts/SafeMath.sol:339:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burned(user, _value);
        ^------------------^
contracts/SafeMath.sol:380:13: Warning: Invoking events without "emit" prefix is deprecated.
            BatchTransfer(msg.sender, addr, v, closureTime);
            ^---------------------------------------------^
contracts/SafeMath.sol:497:52: Warning: "sha3" has been deprecated in favour of "keccak256"
        return (channels[_ch].owner) == (ecrecover(sha3(_ch, _value), _v, _r, _s));
                                                   ^---------------^
contracts/SafeMath.sol:497:52: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return (channels[_ch].owner) == (ecrecover(sha3(_ch, _value), _v, _r, _s));
                                                   ^---------------^
contracts/SafeMath.sol:505:27: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 channel = sha3(id++);
                          ^--------^
contracts/SafeMath.sol:505:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 channel = sha3(id++);
                          ^--------^
contracts/SafeMath.sol:505:27: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
        bytes32 channel = sha3(id++);
                          ^--------^
contracts/SafeMath.sol:507:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewChannel(msg.sender, _receiver, channel); // event
        ^----------------------------------------^
contracts/SafeMath.sol:519:9: Warning: Invoking events without "emit" prefix is deprecated.
        Fund(ch.receiver, channel, _value);
        ^--------------------------------^
contracts/SafeMath.sol:533:13: Warning: Invoking events without "emit" prefix is deprecated.
            Fund(ch.receiver, _channel, _amount); // event
            ^----------------------------------^
contracts/SafeMath.sol:561:9: Warning: Invoking events without "emit" prefix is deprecated.
        TimeLocked(ch.owner, ch.receiver, _channel);
        ^-----------------------------------------^
contracts/SafeMath.sol:591:13: Warning: Invoking events without "emit" prefix is deprecated.
            Withdraw(ch.owner, ch.receiver);
            ^-----------------------------^
contracts/SafeMath.sol:605:19: Warning: Invoking events without "emit" prefix is deprecated.
                { ForceClose(ch.owner, ch.receiver, _channel); }
                  ^-----------------------------------------^
contracts/SafeMath.sol:607:19: Warning: Invoking events without "emit" prefix is deprecated.
                { Close(ch.owner, ch.receiver, _channel); }
                  ^------------------------------------^
contracts/SafeMath.sol:495:5: Warning: No visibility specified. Defaulting to "public". 
    function isValidSig(bytes32 _ch, uint _value,
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/SafeMath.sol:511:5: Warning: No visibility specified. Defaulting to "public". 
    function onTokenReceived(address _from, uint _value, bytes _data) {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/SafeMath.sol:524:5: Warning: No visibility specified. Defaulting to "public". 
    function fund(bytes32 _channel, uint256 _amount)
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/SafeMath.sol:482:5: Warning: Function state mutability can be restricted to view
    function isLocked(bytes32 _channel) public returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/TokenProxy.sol:234:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Gate(ERC20Basic _token, address _proxy) public {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/TokenProxy.sol:281:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function TokenProxy(ERC20Basic _token) public {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/TokenProxy.sol:362:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GolemNetworkTokenBatching(ERC20Basic _gntToken) TokenProxy(_gntToken) public {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/TokenProxy.sol:423:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GNTPaymentChannels(address _token, uint256 _close_delay)
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/TokenProxy.sol:547:9: Warning: Use of the "var" keyword is deprecated.
        var amount = _value - ch.withdrawn;
        ^--------^
contracts/TokenProxy.sol:602:9: Warning: Use of the "var" keyword is deprecated.
        var amount = ch.deposited - ch.withdrawn;
        ^--------^
contracts/TokenProxy.sol:457:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/TokenProxy.sol:516:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[channel];
        ^---------------^
contracts/TokenProxy.sol:526:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/TokenProxy.sol:545:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/TokenProxy.sol:559:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/TokenProxy.sol:588:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/TokenProxy.sol:601:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/TokenProxy.sol:99:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
contracts/TokenProxy.sol:152:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
contracts/TokenProxy.sol:168:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
contracts/TokenProxy.sol:194:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
contracts/TokenProxy.sol:215:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
contracts/TokenProxy.sol:302:9: Warning: Invoking events without "emit" prefix is deprecated.
        GateOpened(gate, user);
        ^--------------------^
contracts/TokenProxy.sol:322:9: Warning: Invoking events without "emit" prefix is deprecated.
        Minted(user, value);
        ^-----------------^
contracts/TokenProxy.sol:339:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burned(user, _value);
        ^------------------^
contracts/TokenProxy.sol:380:13: Warning: Invoking events without "emit" prefix is deprecated.
            BatchTransfer(msg.sender, addr, v, closureTime);
            ^---------------------------------------------^
contracts/TokenProxy.sol:497:52: Warning: "sha3" has been deprecated in favour of "keccak256"
        return (channels[_ch].owner) == (ecrecover(sha3(_ch, _value), _v, _r, _s));
                                                   ^---------------^
contracts/TokenProxy.sol:497:52: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return (channels[_ch].owner) == (ecrecover(sha3(_ch, _value), _v, _r, _s));
                                                   ^---------------^
contracts/TokenProxy.sol:505:27: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 channel = sha3(id++);
                          ^--------^
contracts/TokenProxy.sol:505:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 channel = sha3(id++);
                          ^--------^
contracts/TokenProxy.sol:505:27: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
        bytes32 channel = sha3(id++);
                          ^--------^
contracts/TokenProxy.sol:507:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewChannel(msg.sender, _receiver, channel); // event
        ^----------------------------------------^
contracts/TokenProxy.sol:519:9: Warning: Invoking events without "emit" prefix is deprecated.
        Fund(ch.receiver, channel, _value);
        ^--------------------------------^
contracts/TokenProxy.sol:533:13: Warning: Invoking events without "emit" prefix is deprecated.
            Fund(ch.receiver, _channel, _amount); // event
            ^----------------------------------^
contracts/TokenProxy.sol:561:9: Warning: Invoking events without "emit" prefix is deprecated.
        TimeLocked(ch.owner, ch.receiver, _channel);
        ^-----------------------------------------^
contracts/TokenProxy.sol:591:13: Warning: Invoking events without "emit" prefix is deprecated.
            Withdraw(ch.owner, ch.receiver);
            ^-----------------------------^
contracts/TokenProxy.sol:605:19: Warning: Invoking events without "emit" prefix is deprecated.
                { ForceClose(ch.owner, ch.receiver, _channel); }
                  ^-----------------------------------------^
contracts/TokenProxy.sol:607:19: Warning: Invoking events without "emit" prefix is deprecated.
                { Close(ch.owner, ch.receiver, _channel); }
                  ^------------------------------------^
contracts/TokenProxy.sol:495:5: Warning: No visibility specified. Defaulting to "public". 
    function isValidSig(bytes32 _ch, uint _value,
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/TokenProxy.sol:511:5: Warning: No visibility specified. Defaulting to "public". 
    function onTokenReceived(address _from, uint _value, bytes _data) {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/TokenProxy.sol:524:5: Warning: No visibility specified. Defaulting to "public". 
    function fund(bytes32 _channel, uint256 _amount)
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/TokenProxy.sol:482:5: Warning: Function state mutability can be restricted to view
    function isLocked(bytes32 _channel) public returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/GolemNetworkTokenBatching.sol:234:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Gate(ERC20Basic _token, address _proxy) public {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/GolemNetworkTokenBatching.sol:281:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function TokenProxy(ERC20Basic _token) public {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/GolemNetworkTokenBatching.sol:362:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GolemNetworkTokenBatching(ERC20Basic _gntToken) TokenProxy(_gntToken) public {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/GolemNetworkTokenBatching.sol:423:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GNTPaymentChannels(address _token, uint256 _close_delay)
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/GolemNetworkTokenBatching.sol:547:9: Warning: Use of the "var" keyword is deprecated.
        var amount = _value - ch.withdrawn;
        ^--------^
contracts/GolemNetworkTokenBatching.sol:602:9: Warning: Use of the "var" keyword is deprecated.
        var amount = ch.deposited - ch.withdrawn;
        ^--------^
contracts/GolemNetworkTokenBatching.sol:457:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/GolemNetworkTokenBatching.sol:516:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[channel];
        ^---------------^
contracts/GolemNetworkTokenBatching.sol:526:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/GolemNetworkTokenBatching.sol:545:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/GolemNetworkTokenBatching.sol:559:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/GolemNetworkTokenBatching.sol:588:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/GolemNetworkTokenBatching.sol:601:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/GolemNetworkTokenBatching.sol:99:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
contracts/GolemNetworkTokenBatching.sol:152:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
contracts/GolemNetworkTokenBatching.sol:168:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
contracts/GolemNetworkTokenBatching.sol:194:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
contracts/GolemNetworkTokenBatching.sol:215:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
contracts/GolemNetworkTokenBatching.sol:302:9: Warning: Invoking events without "emit" prefix is deprecated.
        GateOpened(gate, user);
        ^--------------------^
contracts/GolemNetworkTokenBatching.sol:322:9: Warning: Invoking events without "emit" prefix is deprecated.
        Minted(user, value);
        ^-----------------^
contracts/GolemNetworkTokenBatching.sol:339:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burned(user, _value);
        ^------------------^
contracts/GolemNetworkTokenBatching.sol:380:13: Warning: Invoking events without "emit" prefix is deprecated.
            BatchTransfer(msg.sender, addr, v, closureTime);
            ^---------------------------------------------^
contracts/GolemNetworkTokenBatching.sol:497:52: Warning: "sha3" has been deprecated in favour of "keccak256"
        return (channels[_ch].owner) == (ecrecover(sha3(_ch, _value), _v, _r, _s));
                                                   ^---------------^
contracts/GolemNetworkTokenBatching.sol:497:52: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return (channels[_ch].owner) == (ecrecover(sha3(_ch, _value), _v, _r, _s));
                                                   ^---------------^
contracts/GolemNetworkTokenBatching.sol:505:27: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 channel = sha3(id++);
                          ^--------^
contracts/GolemNetworkTokenBatching.sol:505:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 channel = sha3(id++);
                          ^--------^
contracts/GolemNetworkTokenBatching.sol:505:27: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
        bytes32 channel = sha3(id++);
                          ^--------^
contracts/GolemNetworkTokenBatching.sol:507:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewChannel(msg.sender, _receiver, channel); // event
        ^----------------------------------------^
contracts/GolemNetworkTokenBatching.sol:519:9: Warning: Invoking events without "emit" prefix is deprecated.
        Fund(ch.receiver, channel, _value);
        ^--------------------------------^
contracts/GolemNetworkTokenBatching.sol:533:13: Warning: Invoking events without "emit" prefix is deprecated.
            Fund(ch.receiver, _channel, _amount); // event
            ^----------------------------------^
contracts/GolemNetworkTokenBatching.sol:561:9: Warning: Invoking events without "emit" prefix is deprecated.
        TimeLocked(ch.owner, ch.receiver, _channel);
        ^-----------------------------------------^
contracts/GolemNetworkTokenBatching.sol:591:13: Warning: Invoking events without "emit" prefix is deprecated.
            Withdraw(ch.owner, ch.receiver);
            ^-----------------------------^
contracts/GolemNetworkTokenBatching.sol:605:19: Warning: Invoking events without "emit" prefix is deprecated.
                { ForceClose(ch.owner, ch.receiver, _channel); }
                  ^-----------------------------------------^
contracts/GolemNetworkTokenBatching.sol:607:19: Warning: Invoking events without "emit" prefix is deprecated.
                { Close(ch.owner, ch.receiver, _channel); }
                  ^------------------------------------^
contracts/GolemNetworkTokenBatching.sol:495:5: Warning: No visibility specified. Defaulting to "public". 
    function isValidSig(bytes32 _ch, uint _value,
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/GolemNetworkTokenBatching.sol:511:5: Warning: No visibility specified. Defaulting to "public". 
    function onTokenReceived(address _from, uint _value, bytes _data) {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/GolemNetworkTokenBatching.sol:524:5: Warning: No visibility specified. Defaulting to "public". 
    function fund(bytes32 _channel, uint256 _amount)
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/GolemNetworkTokenBatching.sol:482:5: Warning: Function state mutability can be restricted to view
    function isLocked(bytes32 _channel) public returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/StandardToken.sol:234:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Gate(ERC20Basic _token, address _proxy) public {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/StandardToken.sol:281:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function TokenProxy(ERC20Basic _token) public {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/StandardToken.sol:362:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GolemNetworkTokenBatching(ERC20Basic _gntToken) TokenProxy(_gntToken) public {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/StandardToken.sol:423:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GNTPaymentChannels(address _token, uint256 _close_delay)
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/StandardToken.sol:547:9: Warning: Use of the "var" keyword is deprecated.
        var amount = _value - ch.withdrawn;
        ^--------^
contracts/StandardToken.sol:602:9: Warning: Use of the "var" keyword is deprecated.
        var amount = ch.deposited - ch.withdrawn;
        ^--------^
contracts/StandardToken.sol:457:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/StandardToken.sol:516:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[channel];
        ^---------------^
contracts/StandardToken.sol:526:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/StandardToken.sol:545:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/StandardToken.sol:559:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/StandardToken.sol:588:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/StandardToken.sol:601:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/StandardToken.sol:99:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
contracts/StandardToken.sol:152:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
contracts/StandardToken.sol:168:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
contracts/StandardToken.sol:194:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
contracts/StandardToken.sol:215:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
contracts/StandardToken.sol:302:9: Warning: Invoking events without "emit" prefix is deprecated.
        GateOpened(gate, user);
        ^--------------------^
contracts/StandardToken.sol:322:9: Warning: Invoking events without "emit" prefix is deprecated.
        Minted(user, value);
        ^-----------------^
contracts/StandardToken.sol:339:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burned(user, _value);
        ^------------------^
contracts/StandardToken.sol:380:13: Warning: Invoking events without "emit" prefix is deprecated.
            BatchTransfer(msg.sender, addr, v, closureTime);
            ^---------------------------------------------^
contracts/StandardToken.sol:497:52: Warning: "sha3" has been deprecated in favour of "keccak256"
        return (channels[_ch].owner) == (ecrecover(sha3(_ch, _value), _v, _r, _s));
                                                   ^---------------^
contracts/StandardToken.sol:497:52: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return (channels[_ch].owner) == (ecrecover(sha3(_ch, _value), _v, _r, _s));
                                                   ^---------------^
contracts/StandardToken.sol:505:27: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 channel = sha3(id++);
                          ^--------^
contracts/StandardToken.sol:505:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 channel = sha3(id++);
                          ^--------^
contracts/StandardToken.sol:505:27: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
        bytes32 channel = sha3(id++);
                          ^--------^
contracts/StandardToken.sol:507:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewChannel(msg.sender, _receiver, channel); // event
        ^----------------------------------------^
contracts/StandardToken.sol:519:9: Warning: Invoking events without "emit" prefix is deprecated.
        Fund(ch.receiver, channel, _value);
        ^--------------------------------^
contracts/StandardToken.sol:533:13: Warning: Invoking events without "emit" prefix is deprecated.
            Fund(ch.receiver, _channel, _amount); // event
            ^----------------------------------^
contracts/StandardToken.sol:561:9: Warning: Invoking events without "emit" prefix is deprecated.
        TimeLocked(ch.owner, ch.receiver, _channel);
        ^-----------------------------------------^
contracts/StandardToken.sol:591:13: Warning: Invoking events without "emit" prefix is deprecated.
            Withdraw(ch.owner, ch.receiver);
            ^-----------------------------^
contracts/StandardToken.sol:605:19: Warning: Invoking events without "emit" prefix is deprecated.
                { ForceClose(ch.owner, ch.receiver, _channel); }
                  ^-----------------------------------------^
contracts/StandardToken.sol:607:19: Warning: Invoking events without "emit" prefix is deprecated.
                { Close(ch.owner, ch.receiver, _channel); }
                  ^------------------------------------^
contracts/StandardToken.sol:495:5: Warning: No visibility specified. Defaulting to "public". 
    function isValidSig(bytes32 _ch, uint _value,
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/StandardToken.sol:511:5: Warning: No visibility specified. Defaulting to "public". 
    function onTokenReceived(address _from, uint _value, bytes _data) {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/StandardToken.sol:524:5: Warning: No visibility specified. Defaulting to "public". 
    function fund(bytes32 _channel, uint256 _amount)
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/StandardToken.sol:482:5: Warning: Function state mutability can be restricted to view
    function isLocked(bytes32 _channel) public returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/Gate.sol:234:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Gate(ERC20Basic _token, address _proxy) public {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/Gate.sol:281:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function TokenProxy(ERC20Basic _token) public {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/Gate.sol:362:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GolemNetworkTokenBatching(ERC20Basic _gntToken) TokenProxy(_gntToken) public {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/Gate.sol:423:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GNTPaymentChannels(address _token, uint256 _close_delay)
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/Gate.sol:547:9: Warning: Use of the "var" keyword is deprecated.
        var amount = _value - ch.withdrawn;
        ^--------^
contracts/Gate.sol:602:9: Warning: Use of the "var" keyword is deprecated.
        var amount = ch.deposited - ch.withdrawn;
        ^--------^
contracts/Gate.sol:457:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/Gate.sol:516:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[channel];
        ^---------------^
contracts/Gate.sol:526:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/Gate.sol:545:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/Gate.sol:559:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/Gate.sol:588:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/Gate.sol:601:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/Gate.sol:99:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
contracts/Gate.sol:152:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
contracts/Gate.sol:168:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
contracts/Gate.sol:194:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
contracts/Gate.sol:215:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
contracts/Gate.sol:302:9: Warning: Invoking events without "emit" prefix is deprecated.
        GateOpened(gate, user);
        ^--------------------^
contracts/Gate.sol:322:9: Warning: Invoking events without "emit" prefix is deprecated.
        Minted(user, value);
        ^-----------------^
contracts/Gate.sol:339:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burned(user, _value);
        ^------------------^
contracts/Gate.sol:380:13: Warning: Invoking events without "emit" prefix is deprecated.
            BatchTransfer(msg.sender, addr, v, closureTime);
            ^---------------------------------------------^
contracts/Gate.sol:497:52: Warning: "sha3" has been deprecated in favour of "keccak256"
        return (channels[_ch].owner) == (ecrecover(sha3(_ch, _value), _v, _r, _s));
                                                   ^---------------^
contracts/Gate.sol:497:52: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return (channels[_ch].owner) == (ecrecover(sha3(_ch, _value), _v, _r, _s));
                                                   ^---------------^
contracts/Gate.sol:505:27: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 channel = sha3(id++);
                          ^--------^
contracts/Gate.sol:505:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 channel = sha3(id++);
                          ^--------^
contracts/Gate.sol:505:27: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
        bytes32 channel = sha3(id++);
                          ^--------^
contracts/Gate.sol:507:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewChannel(msg.sender, _receiver, channel); // event
        ^----------------------------------------^
contracts/Gate.sol:519:9: Warning: Invoking events without "emit" prefix is deprecated.
        Fund(ch.receiver, channel, _value);
        ^--------------------------------^
contracts/Gate.sol:533:13: Warning: Invoking events without "emit" prefix is deprecated.
            Fund(ch.receiver, _channel, _amount); // event
            ^----------------------------------^
contracts/Gate.sol:561:9: Warning: Invoking events without "emit" prefix is deprecated.
        TimeLocked(ch.owner, ch.receiver, _channel);
        ^-----------------------------------------^
contracts/Gate.sol:591:13: Warning: Invoking events without "emit" prefix is deprecated.
            Withdraw(ch.owner, ch.receiver);
            ^-----------------------------^
contracts/Gate.sol:605:19: Warning: Invoking events without "emit" prefix is deprecated.
                { ForceClose(ch.owner, ch.receiver, _channel); }
                  ^-----------------------------------------^
contracts/Gate.sol:607:19: Warning: Invoking events without "emit" prefix is deprecated.
                { Close(ch.owner, ch.receiver, _channel); }
                  ^------------------------------------^
contracts/Gate.sol:495:5: Warning: No visibility specified. Defaulting to "public". 
    function isValidSig(bytes32 _ch, uint _value,
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/Gate.sol:511:5: Warning: No visibility specified. Defaulting to "public". 
    function onTokenReceived(address _from, uint _value, bytes _data) {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/Gate.sol:524:5: Warning: No visibility specified. Defaulting to "public". 
    function fund(bytes32 _channel, uint256 _amount)
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/Gate.sol:482:5: Warning: Function state mutability can be restricted to view
    function isLocked(bytes32 _channel) public returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/GNTPaymentChannels.sol:234:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Gate(ERC20Basic _token, address _proxy) public {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/GNTPaymentChannels.sol:281:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function TokenProxy(ERC20Basic _token) public {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/GNTPaymentChannels.sol:362:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GolemNetworkTokenBatching(ERC20Basic _gntToken) TokenProxy(_gntToken) public {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/GNTPaymentChannels.sol:423:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GNTPaymentChannels(address _token, uint256 _close_delay)
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/GNTPaymentChannels.sol:547:9: Warning: Use of the "var" keyword is deprecated.
        var amount = _value - ch.withdrawn;
        ^--------^
contracts/GNTPaymentChannels.sol:602:9: Warning: Use of the "var" keyword is deprecated.
        var amount = ch.deposited - ch.withdrawn;
        ^--------^
contracts/GNTPaymentChannels.sol:457:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/GNTPaymentChannels.sol:516:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[channel];
        ^---------------^
contracts/GNTPaymentChannels.sol:526:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/GNTPaymentChannels.sol:545:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/GNTPaymentChannels.sol:559:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/GNTPaymentChannels.sol:588:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/GNTPaymentChannels.sol:601:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/GNTPaymentChannels.sol:99:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
contracts/GNTPaymentChannels.sol:152:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
contracts/GNTPaymentChannels.sol:168:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
contracts/GNTPaymentChannels.sol:194:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
contracts/GNTPaymentChannels.sol:215:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
contracts/GNTPaymentChannels.sol:302:9: Warning: Invoking events without "emit" prefix is deprecated.
        GateOpened(gate, user);
        ^--------------------^
contracts/GNTPaymentChannels.sol:322:9: Warning: Invoking events without "emit" prefix is deprecated.
        Minted(user, value);
        ^-----------------^
contracts/GNTPaymentChannels.sol:339:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burned(user, _value);
        ^------------------^
contracts/GNTPaymentChannels.sol:380:13: Warning: Invoking events without "emit" prefix is deprecated.
            BatchTransfer(msg.sender, addr, v, closureTime);
            ^---------------------------------------------^
contracts/GNTPaymentChannels.sol:497:52: Warning: "sha3" has been deprecated in favour of "keccak256"
        return (channels[_ch].owner) == (ecrecover(sha3(_ch, _value), _v, _r, _s));
                                                   ^---------------^
contracts/GNTPaymentChannels.sol:497:52: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return (channels[_ch].owner) == (ecrecover(sha3(_ch, _value), _v, _r, _s));
                                                   ^---------------^
contracts/GNTPaymentChannels.sol:505:27: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 channel = sha3(id++);
                          ^--------^
contracts/GNTPaymentChannels.sol:505:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 channel = sha3(id++);
                          ^--------^
contracts/GNTPaymentChannels.sol:505:27: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
        bytes32 channel = sha3(id++);
                          ^--------^
contracts/GNTPaymentChannels.sol:507:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewChannel(msg.sender, _receiver, channel); // event
        ^----------------------------------------^
contracts/GNTPaymentChannels.sol:519:9: Warning: Invoking events without "emit" prefix is deprecated.
        Fund(ch.receiver, channel, _value);
        ^--------------------------------^
contracts/GNTPaymentChannels.sol:533:13: Warning: Invoking events without "emit" prefix is deprecated.
            Fund(ch.receiver, _channel, _amount); // event
            ^----------------------------------^
contracts/GNTPaymentChannels.sol:561:9: Warning: Invoking events without "emit" prefix is deprecated.
        TimeLocked(ch.owner, ch.receiver, _channel);
        ^-----------------------------------------^
contracts/GNTPaymentChannels.sol:591:13: Warning: Invoking events without "emit" prefix is deprecated.
            Withdraw(ch.owner, ch.receiver);
            ^-----------------------------^
contracts/GNTPaymentChannels.sol:605:19: Warning: Invoking events without "emit" prefix is deprecated.
                { ForceClose(ch.owner, ch.receiver, _channel); }
                  ^-----------------------------------------^
contracts/GNTPaymentChannels.sol:607:19: Warning: Invoking events without "emit" prefix is deprecated.
                { Close(ch.owner, ch.receiver, _channel); }
                  ^------------------------------------^
contracts/GNTPaymentChannels.sol:495:5: Warning: No visibility specified. Defaulting to "public". 
    function isValidSig(bytes32 _ch, uint _value,
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/GNTPaymentChannels.sol:511:5: Warning: No visibility specified. Defaulting to "public". 
    function onTokenReceived(address _from, uint _value, bytes _data) {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/GNTPaymentChannels.sol:524:5: Warning: No visibility specified. Defaulting to "public". 
    function fund(bytes32 _channel, uint256 _amount)
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/GNTPaymentChannels.sol:482:5: Warning: Function state mutability can be restricted to view
    function isLocked(bytes32 _channel) public returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/BasicToken.sol:234:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Gate(ERC20Basic _token, address _proxy) public {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/BasicToken.sol:281:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function TokenProxy(ERC20Basic _token) public {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/BasicToken.sol:362:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GolemNetworkTokenBatching(ERC20Basic _gntToken) TokenProxy(_gntToken) public {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/BasicToken.sol:423:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GNTPaymentChannels(address _token, uint256 _close_delay)
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/BasicToken.sol:547:9: Warning: Use of the "var" keyword is deprecated.
        var amount = _value - ch.withdrawn;
        ^--------^
contracts/BasicToken.sol:602:9: Warning: Use of the "var" keyword is deprecated.
        var amount = ch.deposited - ch.withdrawn;
        ^--------^
contracts/BasicToken.sol:457:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/BasicToken.sol:516:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[channel];
        ^---------------^
contracts/BasicToken.sol:526:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/BasicToken.sol:545:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/BasicToken.sol:559:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/BasicToken.sol:588:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/BasicToken.sol:601:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        PaymentChannel ch = channels[_channel];
        ^---------------^
contracts/BasicToken.sol:99:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
contracts/BasicToken.sol:152:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
contracts/BasicToken.sol:168:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
contracts/BasicToken.sol:194:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
contracts/BasicToken.sol:215:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
contracts/BasicToken.sol:302:9: Warning: Invoking events without "emit" prefix is deprecated.
        GateOpened(gate, user);
        ^--------------------^
contracts/BasicToken.sol:322:9: Warning: Invoking events without "emit" prefix is deprecated.
        Minted(user, value);
        ^-----------------^
contracts/BasicToken.sol:339:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burned(user, _value);
        ^------------------^
contracts/BasicToken.sol:380:13: Warning: Invoking events without "emit" prefix is deprecated.
            BatchTransfer(msg.sender, addr, v, closureTime);
            ^---------------------------------------------^
contracts/BasicToken.sol:497:52: Warning: "sha3" has been deprecated in favour of "keccak256"
        return (channels[_ch].owner) == (ecrecover(sha3(_ch, _value), _v, _r, _s));
                                                   ^---------------^
contracts/BasicToken.sol:497:52: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return (channels[_ch].owner) == (ecrecover(sha3(_ch, _value), _v, _r, _s));
                                                   ^---------------^
contracts/BasicToken.sol:505:27: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 channel = sha3(id++);
                          ^--------^
contracts/BasicToken.sol:505:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 channel = sha3(id++);
                          ^--------^
contracts/BasicToken.sol:505:27: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
        bytes32 channel = sha3(id++);
                          ^--------^
contracts/BasicToken.sol:507:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewChannel(msg.sender, _receiver, channel); // event
        ^----------------------------------------^
contracts/BasicToken.sol:519:9: Warning: Invoking events without "emit" prefix is deprecated.
        Fund(ch.receiver, channel, _value);
        ^--------------------------------^
contracts/BasicToken.sol:533:13: Warning: Invoking events without "emit" prefix is deprecated.
            Fund(ch.receiver, _channel, _amount); // event
            ^----------------------------------^
contracts/BasicToken.sol:561:9: Warning: Invoking events without "emit" prefix is deprecated.
        TimeLocked(ch.owner, ch.receiver, _channel);
        ^-----------------------------------------^
contracts/BasicToken.sol:591:13: Warning: Invoking events without "emit" prefix is deprecated.
            Withdraw(ch.owner, ch.receiver);
            ^-----------------------------^
contracts/BasicToken.sol:605:19: Warning: Invoking events without "emit" prefix is deprecated.
                { ForceClose(ch.owner, ch.receiver, _channel); }
                  ^-----------------------------------------^
contracts/BasicToken.sol:607:19: Warning: Invoking events without "emit" prefix is deprecated.
                { Close(ch.owner, ch.receiver, _channel); }
                  ^------------------------------------^
contracts/BasicToken.sol:495:5: Warning: No visibility specified. Defaulting to "public". 
    function isValidSig(bytes32 _ch, uint _value,
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/BasicToken.sol:511:5: Warning: No visibility specified. Defaulting to "public". 
    function onTokenReceived(address _from, uint _value, bytes _data) {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/BasicToken.sol:524:5: Warning: No visibility specified. Defaulting to "public". 
    function fund(bytes32 _channel, uint256 _amount)
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/BasicToken.sol:482:5: Warning: Function state mutability can be restricted to view
    function isLocked(bytes32 _channel) public returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
assets/ReentrancyAttacker.sol:8:7: Warning: Return value of low-level calls not used.
      msg.sender.call(bytes4(255));
      ^--------------------------^
assets/ReentrancyAttacker.sol:5:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
assets/NormalAttacker.sol:5:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
>> Fuzz SafeMath
** Write stats: 0.002025
** Write stats: 5.00008
** Write stats: 10.0002
** Write stats: 15.0002
** Write stats: 20.0078
** Write stats: 25.0001
** Write stats: 30.0004
** Write stats: 35.0002
** Write stats: 40.0001
** Write stats: 45.0092
** Write stats: 50.0001
** Write stats: 55.0001
** Write stats: 60.0021
** Write stats: 65.0001
** Write stats: 70.0001
** Write stats: 75.0001
** Write stats: 80.0001
** Write stats: 85.0001
** Write stats: 90.0013
./fuzzMe: line 11:    33 Killed                  ./fuzzer --file contracts/SafeMath.sol.json --name SafeMath --assets assets/ --duration 255 --mode 1 --reporter 1 --log 0 --attacker ReentrancyAttacker
>> Fuzz TokenProxy
** Write stats: 0.030054
** Write stats: 5.07165
** Write stats: 10.002
** Write stats: 15.0019
** Write stats: 20.0108
** Write stats: 25.0159
** Write stats: 30.0177
** Write stats: 35.8918
** Write stats: 40.0084
** Write stats: 45.0053
** Write stats: 50.4485
** Write stats: 55.0199
** Write stats: 60.0276
** Write stats: 65.0004
** Write stats: 70.02
** Write stats: 75.0044
** Write stats: 80.0062
** Write stats: 85.0245
** Write stats: 90.0206
** Write stats: 95.3363
** Write stats: 100.003
** Write stats: 105.001
** Write stats: 110.01
** Write stats: 115.017
** Write stats: 120.006
** Write stats: 125.181
** Write stats: 130.007
** Write stats: 135.049
** Write stats: 140.004
** Write stats: 145.059
** Write stats: 150.011
** Write stats: 155.02
** Write stats: 160.007
** Write stats: 165.029
** Write stats: 170.027
** Write stats: 175.001
** Write stats: 180.056
** Write stats: 185.019
** Write stats: 190.023
** Write stats: 195.003
** Write stats: 200.019
** Write stats: 205.009
** Write stats: 210.006
** Write stats: 215.045
** Write stats: 220.016
** Write stats: 225.025
** Write stats: 230.005
** Write stats: 235.029
** Write stats: 240.023
** Write stats: 250.046
** Write stats: 255.029
** Write stats: 255.255
>> Fuzz GolemNetworkTokenBatching
** Write stats: 0.074718
** Write stats: 1.39345
>> Fuzz StandardToken
** Write stats: 0.030552
** Write stats: 5.66814
** Write stats: 10.483
** Write stats: 15.0009
** Write stats: 20.0018
** Write stats: 25.0038
** Write stats: 30.0014
** Write stats: 35.0012
** Write stats: 40.0129
** Write stats: 45.1234
** Write stats: 55.0103
** Write stats: 60.0032
** Write stats: 65.0001
** Write stats: 70.0112
** Write stats: 75.0006
** Write stats: 80.0029
** Write stats: 85.0086
** Write stats: 90.2555
** Write stats: 95.0011
** Write stats: 100.025
** Write stats: 105.041
** Write stats: 110.008
** Write stats: 115.006
** Write stats: 120.154
** Write stats: 125.009
** Write stats: 130.024
** Write stats: 140.012
** Write stats: 145.005
** Write stats: 150.009
** Write stats: 155.004
** Write stats: 160.003
** Write stats: 165.01
** Write stats: 170.349
** Write stats: 175.956
** Write stats: 180.001
** Write stats: 185.002
** Write stats: 190.03
** Write stats: 195.005
** Write stats: 200.009
** Write stats: 205.005
** Write stats: 210.361
** Write stats: 215.011
** Write stats: 220.01
** Write stats: 225.006
** Write stats: 230.008
** Write stats: 235.01
** Write stats: 240.005
** Write stats: 245.016
** Write stats: 250.012
** Write stats: 255.007
** Write stats: 255.313
>> Fuzz Gate
** Write stats: 0.005146
** Write stats: 5.00019
** Write stats: 10.0001
** Write stats: 15.0005
** Write stats: 20.0002
** Write stats: 25.3485
** Write stats: 30.001
** Write stats: 35.0005
** Write stats: 40.0002
** Write stats: 45.0001
** Write stats: 50.0002
** Write stats: 60.057
** Write stats: 65.0007
** Write stats: 70.0004
** Write stats: 75.0004
** Write stats: 80.0005
** Write stats: 85.0007
** Write stats: 90.0006
** Write stats: 95.0002
** Write stats: 100
** Write stats: 105
** Write stats: 110
** Write stats: 115
** Write stats: 120.097
** Write stats: 130.003
** Write stats: 135
** Write stats: 140
** Write stats: 145
** Write stats: 150.017
** Write stats: 155
** Write stats: 160.003
** Write stats: 165
** Write stats: 170
** Write stats: 175
** Write stats: 180
** Write stats: 185
** Write stats: 200.027
** Write stats: 205
** Write stats: 210
** Write stats: 215.042
** Write stats: 220.03
** Write stats: 225.002
** Write stats: 230
** Write stats: 235
** Write stats: 240.012
** Write stats: 245.001
** Write stats: 250
** Write stats: 255
** Write stats: 255.036
>> Fuzz GNTPaymentChannels
** Write stats: 0.046038
** Write stats: 5.00119
** Write stats: 10.0007
** Write stats: 15.7633
** Write stats: 20.2941
** Write stats: 25.0014
** Write stats: 30.2236
** Write stats: 35.0002
** Write stats: 40.0019
** Write stats: 45.0026
** Write stats: 50.0025
** Write stats: 55.0406
** Write stats: 60.0007
** Write stats: 65.4223
** Write stats: 70.1988
** Write stats: 75.002
** Write stats: 80.6457
** Write stats: 85.7407
** Write stats: 90.0123
** Write stats: 95.5821
** Write stats: 100.191
** Write stats: 105.202
** Write stats: 110.001
** Write stats: 115.003
** Write stats: 120.329
** Write stats: 125.453
** Write stats: 130.489
** Write stats: 135.197
** Write stats: 140.006
** Write stats: 145.004
** Write stats: 155.262
** Write stats: 160.003
** Write stats: 165.001
** Write stats: 170.002
** Write stats: 175.803
** Write stats: 180.003
** Write stats: 185.016
** Write stats: 190.004
** Write stats: 195.04
** Write stats: 200.003
** Write stats: 205.799
** Write stats: 210.003
** Write stats: 215.003
** Write stats: 220.446
** Write stats: 225.001
** Write stats: 230.002
** Write stats: 240.002
** Write stats: 245.004
** Write stats: 250.685
** Write stats: 255.002
** Write stats: 255.239
>> Fuzz BasicToken
** Write stats: 0.004392
** Write stats: 5.0025
** Write stats: 10.0029
** Write stats: 15.0052
** Write stats: 20.005
** Write stats: 25.0006
** Write stats: 35.0299
** Write stats: 40.0033
** Write stats: 45.0034
** Write stats: 50.0096
** Write stats: 55.0005
** Write stats: 60.0059
** Write stats: 65.0049
** Write stats: 70.0129
** Write stats: 75.0104
** Write stats: 80.0317
** Write stats: 85.0187
** Write stats: 90.0181
** Write stats: 95.0043
** Write stats: 100.009
** Write stats: 105.012
** Write stats: 110.014
** Write stats: 115.024
** Write stats: 120.014
** Write stats: 125.026
** Write stats: 130.016
** Write stats: 135.044
** Write stats: 140.008
** Write stats: 145.021
** Write stats: 150.025
** Write stats: 155.002
** Write stats: 160.021
** Write stats: 165.009
** Write stats: 170.022
** Write stats: 175.914
** Write stats: 180.012
** Write stats: 185.009
** Write stats: 190.037
** Write stats: 195.019
** Write stats: 200.009
** Write stats: 205.02
** Write stats: 210.025
** Write stats: 215.006
** Write stats: 220.01
** Write stats: 225.014
** Write stats: 230.014
** Write stats: 235.004
** Write stats: 240.002
** Write stats: 245.011
** Write stats: 250.016
** Write stats: 255.034
** Write stats: 255.037
