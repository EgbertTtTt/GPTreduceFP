WARNING:root:You are using solc version 0.4.26, The latest supported version is 0.4.19
INFO:CryticCompile:Compilation warnings/errors on /sb/ROSCA.sol:
/sb/ROSCA.sol:123:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:130:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:137:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:144:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:151:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:158:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:165:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:172:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:185:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function ROSCA (
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/ROSCA.sol:192:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:197:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:202:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:206:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:220:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:234:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:277:70: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (delinquentWinner == 0 || members[delinquentWinner].paid) throw;
                                                                     ^---^
/sb/ROSCA.sol:387:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:413:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:421:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/sb/ROSCA.sol:479:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/sb/ROSCA.sol:531:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:306:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      User member = members[membersAddresses[j]];
      ^---------^
/sb/ROSCA.sol:355:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    User member = members[msg.sender];
    ^---------^
/sb/ROSCA.sol:42:43: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x1dF62f291b2E969fB0849d99D9Ce41e2F137006e'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
  address constant internal FEE_ADDRESS = 0x1df62f291b2e969fb0849d99d9ce41e2f137006e;
                                          ^----------------------------------------^
/sb/ROSCA.sol:47:52: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x1dF62f291b2E969fB0849d99D9Ce41e2F137006e'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
  address constant internal ESCAPE_HATCH_ENABLER = 0x1df62f291b2e969fb0849d99d9ce41e2f137006e;
                                                   ^----------------------------------------^
/sb/ROSCA.sol:244:7: Warning: Invoking events without "emit" prefix is deprecated.
      LogStartOfRound(currentRound);
      ^---------------------------^
/sb/ROSCA.sol:247:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogEndOfROSCA();
        ^-------------^
/sb/ROSCA.sol:294:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogRoundFundsReleased(winnerAddress, lowestBid);
    ^---------------------------------------------^
/sb/ROSCA.sol:368:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogContributionMade(msg.sender, msg.value);
    ^----------------------------------------^
/sb/ROSCA.sol:400:7: Warning: Invoking events without "emit" prefix is deprecated.
      LogUnsuccessfulBid(msg.sender, bidInWei, lowestBid);
      ^-------------------------------------------------^
/sb/ROSCA.sol:405:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogNewLowestBid(lowestBid, winnerAddress);
    ^---------------------------------------^
/sb/ROSCA.sol:425:31: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    uint256 amountAvailable = this.balance - totalFees;
                              ^----------^
/sb/ROSCA.sol:429:7: Warning: Invoking events without "emit" prefix is deprecated.
      LogCannotWithdrawFully(amountToWithdraw);
      ^--------------------------------------^
/sb/ROSCA.sol:439:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogFundsWithdrawal(msg.sender, amountToWithdraw);
    ^----------------------------------------------^
/sb/ROSCA.sol:466:12: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    return this.balance - totalFees;
           ^----------^
/sb/ROSCA.sol:483:31: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    uint256 amountToCollect = this.balance - totalFees;
                              ^----------^
/sb/ROSCA.sol:490:7: Warning: Invoking events without "emit" prefix is deprecated.
      LogForepersonSurplusWithdrawal(amountToCollect);
      ^---------------------------------------------^
/sb/ROSCA.sol:511:7: Warning: Invoking events without "emit" prefix is deprecated.
      LogFundsWithdrawal(FEE_ADDRESS, totalFees);
      ^----------------------------------------^
/sb/ROSCA.sol:521:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogEscapeHatchEnabled();
    ^---------------------^
/sb/ROSCA.sol:534:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogEscapeHatchActivated();
    ^-----------------------^
/sb/ROSCA.sol:542:37: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    LogEmergencyWithdrawalPerformed(this.balance);
                                    ^----------^
/sb/ROSCA.sol:542:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogEmergencyWithdrawalPerformed(this.balance);
    ^-------------------------------------------^
/sb/ROSCA.sol:185:3: Warning: No visibility specified. Defaulting to "public". 
  function ROSCA (
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/ROSCA.sol:299:3: Warning: No visibility specified. Defaulting to "public". 
  function recalculateTotalFees() {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/ROSCA.sol:541:3: Warning: No visibility specified. Defaulting to "public". 
  function emergencyWithdrawal() onlyFromForeperson onlyIfEscapeHatchActive {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/ROSCA.sol:342:3: Warning: Function state mutability can be restricted to view
  function removeFees(uint256 amount) internal returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/ROSCA.sol:453:31: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        totalCredit -= int256(removeFees(membersAddresses.length * contributionSize));
                              ^----------------------------------------------------^

INFO:root:contract /sb/ROSCA.sol:ROSCA:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 43.0%
INFO:symExec:	  Integer Underflow: 			 True
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): True
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/sb/ROSCA.sol:255:36: Warning: Integer Underflow.
    uint16 numUnpaidParticipants = uint16(membersAddresses.length) - (currentRound - 1)
Integer Underflow occurs if:
    roundPeriodInDays = 281466386776064
    membersAddresses.length = 65532
    startTime = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    endOfROSCA = 0
/sb/ROSCA.sol:288:55: Warning: Integer Underflow.
    swapWinner(winnerIndex, winnerSelectedThroughBid, numUnpaidParticipants - 1
Integer Underflow occurs if:
    roundPeriodInDays = 281470681743360
    membersAddresses.length = 65534
    winnerAddress = 1461501637330902918203684832716283019655932542975
    startTime = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    endOfROSCA = 0
INFO:symExec:Flow1
/sb/ROSCA.sol:504:10: Warning: Transaction-Ordering Dependency.
    if (!FEE_ADDRESS.send(tempTotalFees)
Flow2
/sb/ROSCA.sol:544:5: Warning: Transaction-Ordering Dependency.
    selfdestruct(foreperson)
INFO:symExec:	====== Analysis Completed ======
