WARNING:root:You are using solc version 0.4.26, The latest supported version is 0.4.19
INFO:CryticCompile:Compilation warnings/errors on /sb/ProjectKudos.sol:
/sb/ProjectKudos.sol:86:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ProjectKudos() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos.sol:107:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (user.kudosLimit > 0) throw;
                                 ^---^
/sb/ProjectKudos.sol:131:58: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (giver.kudosGiven + kudos > giver.kudosLimit) throw;
                                                         ^---^
/sb/ProjectKudos.sol:162:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            grantReason != GrantReason.Twitter) throw;
                                                ^---^
/sb/ProjectKudos.sol:167:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (user.isJudge) throw;
                          ^---^
/sb/ProjectKudos.sol:170:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (user.grant[reason]) throw;
                                ^---^
/sb/ProjectKudos.sol:317:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (bytes(str).length > 32) throw;
                                    ^---^
/sb/ProjectKudos.sol:333:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < votePeriod.start) throw;
                                    ^---^
/sb/ProjectKudos.sol:334:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now >= votePeriod.end) throw;
                                   ^---^
/sb/ProjectKudos.sol:342:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/sb/ProjectKudos.sol:206:57: Warning: This declaration shadows an existing declaration.
    function getProjectKudosByUsers(string projectCode, address[] users) constant returns(uint[]) {
                                                        ^-------------^
/sb/ProjectKudos.sol:63:5: The shadowed declaration is here:
    mapping(address => UserInfo) users;
    ^--------------------------------^

/sb/ProjectKudos.sol:227:66: Warning: This declaration shadows an existing declaration.
    function getKudosPerProject(address giver) constant returns (bytes32[] projects, uint[] kudos) {
                                                                 ^----------------^
/sb/ProjectKudos.sol:70:5: The shadowed declaration is here:
    mapping(bytes32 => ProjectInfo) projects;
    ^--------------------------------------^

/sb/ProjectKudos.sol:105:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        UserInfo user = users[userAddres];
        ^-----------^
/sb/ProjectKudos.sol:129:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        UserInfo giver = users[msg.sender];
        ^------------^
/sb/ProjectKudos.sol:134:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        ProjectInfo project = projects[code];
        ^-----------------^
/sb/ProjectKudos.sol:157:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        UserInfo user = users[userToGrant];
        ^-----------^
/sb/ProjectKudos.sol:193:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        ProjectInfo project = projects[code];
        ^-----------------^
/sb/ProjectKudos.sol:208:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        ProjectInfo project = projects[code];
        ^-----------------^
/sb/ProjectKudos.sol:228:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        UserIndex idx = usersIndex[giver];
        ^-----------^
/sb/ProjectKudos.sol:240:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        UserInfo user = users[addr];
        ^-----------^
/sb/ProjectKudos.sol:251:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        UserInfo user = users[addr];
        ^-----------^
/sb/ProjectKudos.sol:268:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        UserIndex idx = usersIndex[msg.sender];
        ^-----------^
/sb/ProjectKudos.sol:143:26: Warning: "sha3" has been deprecated in favour of "keccak256"
        Vote(msg.sender, sha3(projectCode), kudos);
                         ^---------------^
/sb/ProjectKudos.sol:143:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        Vote(msg.sender, sha3(projectCode), kudos);
                         ^---------------^
/sb/ProjectKudos.sol:143:26: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        Vote(msg.sender, sha3(projectCode), kudos);
                         ^---------------^
/sb/ProjectKudos.sol:143:9: Warning: Invoking events without "emit" prefix is deprecated.
        Vote(msg.sender, sha3(projectCode), kudos);
        ^----------------------------------------^
/sb/ProjectKudos.sol:86:5: Warning: No visibility specified. Defaulting to "public". 
    function ProjectKudos() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos.sol:103:5: Warning: No visibility specified. Defaulting to "public". 
    function register(address userAddres, bool isJudge) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos.sol:127:5: Warning: No visibility specified. Defaulting to "public". 
    function giveKudos(string projectCode, uint kudos) duringVote {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos.sol:155:5: Warning: No visibility specified. Defaulting to "public". 
    function grantKudos(address userToGrant, uint reason) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos.sol:191:5: Warning: No visibility specified. Defaulting to "public". 
    function getProjectKudos(string projectCode) constant returns(uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos.sol:206:5: Warning: No visibility specified. Defaulting to "public". 
    function getProjectKudosByUsers(string projectCode, address[] users) constant returns(uint[]) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos.sol:227:5: Warning: No visibility specified. Defaulting to "public". 
    function getKudosPerProject(address giver) constant returns (bytes32[] projects, uint[] kudos) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos.sol:239:5: Warning: No visibility specified. Defaulting to "public". 
    function getKudosLeft(address addr) constant returns(uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos.sol:250:5: Warning: No visibility specified. Defaulting to "public". 
    function getKudosGiven(address addr) constant returns(uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos.sol:192:24: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        bytes32 code = strToBytes(projectCode);
                       ^---------------------^
/sb/ProjectKudos.sol:207:24: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        bytes32 code = strToBytes(projectCode);
                       ^---------------------^
/sb/ProjectKudos.sol:289:5: Warning: Function state mutability can be restricted to pure
    function grantUintToReason(uint reason) private returns (GrantReason result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos.sol:301:5: Warning: Function state mutability can be restricted to pure
    function grantReasonToUint(GrantReason reason) private returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos.sol:315:5: Warning: Function state mutability can be restricted to pure
    function strToBytes(string str) private returns (bytes32 ret) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:root:contract /sb/ProjectKudos.sol:ProjectKudos:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 35.7%
INFO:symExec:	  Integer Underflow: 			 True
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/sb/ProjectKudos.sol:241:16: Warning: Integer Underflow.
        return user.kudosLimit - user.kudosGiven
INFO:symExec:/sb/ProjectKudos.sol:191:5: Warning: Integer Overflow.
    function getProjectKudos(string projectCode) constant returns(uint) {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    projectCode = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/sb/ProjectKudos.sol:241:34: Warning: Integer Overflow.
        return user.kudosLimit - user.kudosGiven
/sb/ProjectKudos.sol:114:9: Warning: Integer Overflow.
        user.isJudge
Integer Overflow occurs if:
    owner = 0
    isJudge = 0
/sb/ProjectKudos.sol:206:5: Warning: Integer Overflow.
    function getProjectKudosByUsers(string projectCode, address[] users) constant returns(uint[]) {
    ^
Spanning multiple lines.
Integer Overflow occurs if:
    projectCode = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/sb/ProjectKudos.sol:252:16: Warning: Integer Overflow.
        return user.kudosGiven
INFO:symExec:	====== Analysis Completed ======
