/sb/Investment.sol
line 15:0 extraneous input 'abstract' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 16:65 extraneous input 'payable' expecting {',', ')'}
line 658:31 mismatched input 'payable' expecting {',', ')'}
line 658:48 no viable alternative at input 'recipient,'
line 658:48 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 658:64 mismatched input ')' expecting {';', '='}
line 659:15 mismatched input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 659:23 mismatched input '(' expecting ')'
line 659:29 extraneous input '.' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 659:38 mismatched input '>=' expecting {';', '='}
line 659:47 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 662:14 missing ')' at 'success'
line 662:21 mismatched input ',' expecting {';', '='}
line 662:41 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 662:48 mismatched input ':' expecting {';', '='}
line 662:57 mismatched input '}' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 662:58 extraneous input '(' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 859:49 no viable alternative at input '(bool))'
line 859:48 no viable alternative at input 'bool)'
line 859:50 mismatched input ',' expecting ';'
line 859:96 extraneous input ')' expecting ';'
line 876:0 extraneous input 'abstract' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 937:0 extraneous input 'abstract' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 1137:27 extraneous input 'path' expecting {',', ')'}
line 1137:31 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1138:18 mismatched input ',' expecting {';', '='}
line 1140:4 mismatched input ')' expecting {';', '='}
line 1140:34 mismatched input 'memory' expecting ')'
line 1140:48 extraneous input ')' expecting {';', '='}
line 1145:27 extraneous input 'path' expecting {',', ')'}
line 1145:31 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1146:18 mismatched input ',' expecting {';', '='}
line 1148:4 mismatched input ')' expecting {';', '='}
line 1148:34 mismatched input 'memory' expecting ')'
line 1148:48 extraneous input ')' expecting {';', '='}
line 1152:27 extraneous input 'path' expecting {',', ')'}
line 1152:31 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1153:18 mismatched input ',' expecting {';', '='}
line 1155:4 mismatched input ')' expecting {';', '='}
line 1155:42 mismatched input 'memory' expecting ')'
line 1155:56 extraneous input ')' expecting {';', '='}
line 1160:27 extraneous input 'path' expecting {',', ')'}
line 1160:31 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1161:18 mismatched input ',' expecting {';', '='}
line 1163:4 mismatched input ')' expecting {';', '='}
line 1163:34 mismatched input 'memory' expecting ')'
line 1163:48 extraneous input ')' expecting {';', '='}
line 1168:27 extraneous input 'path' expecting {',', ')'}
line 1168:31 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1169:18 mismatched input ',' expecting {';', '='}
line 1171:4 mismatched input ')' expecting {';', '='}
line 1171:34 mismatched input 'memory' expecting ')'
line 1171:48 extraneous input ')' expecting {';', '='}
line 1175:27 extraneous input 'path' expecting {',', ')'}
line 1175:31 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1176:18 mismatched input ',' expecting {';', '='}
line 1178:4 mismatched input ')' expecting {';', '='}
line 1178:42 mismatched input 'memory' expecting ')'
line 1178:56 extraneous input ')' expecting {';', '='}
line 1198:64 extraneous input 'path' expecting {',', ')'}
line 1200:64 extraneous input 'path' expecting {',', ')'}
line 1227:27 extraneous input 'path' expecting {',', ')'}
line 1227:31 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1228:18 mismatched input ',' expecting {';', '='}
line 1230:4 mismatched input ')' expecting {';', '='}
line 1234:27 extraneous input 'path' expecting {',', ')'}
line 1234:31 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1235:18 mismatched input ',' expecting {';', '='}
line 1237:4 mismatched input ')' expecting {';', '='}
line 1242:27 extraneous input 'path' expecting {',', ')'}
line 1242:31 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1243:18 mismatched input ',' expecting {';', '='}
line 1245:4 mismatched input ')' expecting {';', '='}
line 1556:28 extraneous input 'totalSupply' expecting {';', '='}
line 2173:47 missing ';' at '{'
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 533
column: 28
content: (address(0),account,amount)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 554
column: 28
content: (account,address(0),amount)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 914
column: 8
content: _owner=address(0)

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 436
column: 4
content: functionapprove(addressspender,uint256amount)publicvirtualoverridereturns(bool){_approve(_msgSender(),spender,amount);returntrue;}

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 1639
column: 4
content: functionapprove(addressspender,uint256rawAmount)externaloverridereturns(bool){uint96amount;if(rawAmount==uint256(-1)){amount=uint96(-1);}else{amount=safe96(rawAmount,"GovernanceToken::approve: amount exceeds 96 bits");}allowances[msg.sender][spender]=amount;emitApproval(msg.sender,spender,amount);returntrue;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 1819
column: 15
content: upper>lower

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 338
column: 33
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 340
column: 54
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 342
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 344
column: 11
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 345
column: 11
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 346
column: 10
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 877
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 948
column: 9
content: private

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 1852
column: 8
content: if(locking[src].date>block.timestamp&&locking[src].amount>0&&balances[src]<locking[src].amount){revert("GovernanceToken::_transferTokens: amount are locked");}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 336
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 806
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1543
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1979
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1968
column: 4
content: functiongetChainId()internalpurereturns(uint256){uint256chainId;assembly{chainId:=chainid()}returnchainId;}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 631
column: 4
content: functionisContract(addressaccount)internalviewreturns(bool){uint256size;assembly{size:=extcodesize(account)}returnsize>0;}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 119
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 130
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 140
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 155
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 165
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1066
column: 16
content: (uint256amountA,uint256amountB,uint256liquidity)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1082
column: 16
content: (uint256amountToken,uint256amountETH,uint256liquidity)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1096
column: 23
content: (uint256amountA,uint256amountB)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1105
column: 23
content: (uint256amountToken,uint256amountETH)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1119
column: 23
content: (uint256amountA,uint256amountB)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1132
column: 23
content: (uint256amountToken,uint256amountETH)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 810
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.transfer.selector,to,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 814
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.transferFrom.selector,from,to,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 832
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 837
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,newAllowance))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 842
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,newAllowance))

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1971
column: 8
content: assembly{chainId:=chainid()}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 658
column: 4
content: functionsendValue(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1134
column: 4
content: functionswapExactTokensForTokens(uint256amountIn,uint256amountOutMin,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1142
column: 4
content: functionswapTokensForExactTokens(uint256amountOut,uint256amountInMax,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1150
column: 4
content: functionswapExactETHForTokens(uint256amountOutMin,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1157
column: 4
content: functionswapTokensForExactETH(uint256amountOut,uint256amountInMax,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1165
column: 4
content: functionswapExactTokensForETH(uint256amountIn,uint256amountOutMin,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1173
column: 4
content: functionswapETHForExactTokens(uint256amountOut,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1224
column: 4
content: functionswapExactTokensForTokensSupportingFeeOnTransferTokens(uint256amountIn,uint256amountOutMin,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1232
column: 4
content: functionswapExactETHForTokensSupportingFeeOnTransferTokens(uint256amountOutMin,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1239
column: 4
content: functionswapExactTokensForETHSupportingFeeOnTransferTokens(uint256amountIn,uint256amountOutMin,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 658
column: 39
content: recipient,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 658
column: 50
content: uint256amount)internal{

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 659
column: 8
content: require

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 659
column: 15
content: (address<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 659
column: 23
content: (this).balance>=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 659
column: 41
content: amount,"Address: insufficient balance");

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 662
column: 8
content: (bool<missing ')'>success,)=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 662
column: 27
content: recipient.call{value:

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 662
column: 50
content: amount

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1137
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1138
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1139
column: 8
content: uint256deadline)externalreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1140
column: 23
content: (uint256[]memoryamounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1145
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1146
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1147
column: 8
content: uint256deadline)externalreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1148
column: 23
content: (uint256[]memoryamounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1152
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1153
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1154
column: 8
content: uint256deadline)externalpayablereturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1155
column: 31
content: (uint256[]memoryamounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1160
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1161
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1162
column: 8
content: uint256deadline)externalreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1163
column: 23
content: (uint256[]memoryamounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1168
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1169
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1170
column: 8
content: uint256deadline)externalreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1171
column: 23
content: (uint256[]memoryamounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1175
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1176
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1177
column: 8
content: uint256deadline)externalpayablereturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1178
column: 31
content: (uint256[]memoryamounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1227
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1228
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1229
column: 8
content: uint256deadline)external;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1234
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1235
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1236
column: 8
content: uint256deadline)externalpayable;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1242
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1243
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1244
column: 8
content: uint256deadline)external;

SOLIDITY_VISIBILITY :52
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :8
SOLIDITY_ADDRESS_HARDCODED :3
SOLIDITY_GAS_LIMIT_IN_LOOPS :1
SOLIDITY_UNCHECKED_CALL :5
SOLIDITY_SHOULD_RETURN_STRUCT :11
SOLIDITY_SHOULD_NOT_BE_PURE :1
SOLIDITY_ERC20_APPROVE :2
SOLIDITY_SAFEMATH :4
SOLIDITY_REVERT_REQUIRE :1
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_SHOULD_NOT_BE_VIEW :1
