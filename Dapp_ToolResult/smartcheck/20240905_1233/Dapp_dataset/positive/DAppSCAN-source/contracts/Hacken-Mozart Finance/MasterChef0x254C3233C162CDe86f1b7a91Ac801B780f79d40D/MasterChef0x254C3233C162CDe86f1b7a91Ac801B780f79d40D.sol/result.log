/sb/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol
line 371:31 mismatched input 'payable' expecting {',', ')'}
line 371:48 no viable alternative at input 'recipient,'
line 371:48 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 371:64 mismatched input ')' expecting {';', '='}
line 372:15 mismatched input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 372:23 mismatched input '(' expecting ')'
line 372:29 extraneous input '.' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 372:38 mismatched input '>=' expecting {';', '='}
line 372:47 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 375:14 missing ')' at 'success'
line 375:21 mismatched input ',' expecting {';', '='}
line 375:41 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 375:48 mismatched input ':' expecting {';', '='}
line 375:57 mismatched input '}' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 375:58 extraneous input '(' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 573:49 no viable alternative at input '(bool))'
line 573:48 no viable alternative at input 'bool)'
line 573:50 mismatched input ',' expecting ';'
line 573:96 extraneous input ')' expecting ';'
line 589:0 extraneous input 'abstract' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 590:65 extraneous input 'payable' expecting {',', ')'}
line 613:0 extraneous input 'abstract' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 682:0 extraneous input 'abstract' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 651
column: 8
content: _owner=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 1035
column: 22
content: (address(0),_delegates[_to],_amount)

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1418
column: 8
content: for(uint256i=0;i<rewardInfo.length;i++){BlockRewardInfomemoryblockRewardInfo=rewardInfo[i];if(blockRewardInfo.lastBlock<=prevBlock||blockRewardInfo.firstBlock>=currentBlock)continue;if(blockRewardInfo.lastBlock>=currentBlock){uint256diffBlockCount=currentBlock.sub(prevBlock);rewardAmount=rewardAmount.add(diffBlockCount.mul(blockRewardInfo.reward));break;}else{uint256diffBlockCount=blockRewardInfo.lastBlock.sub(prevBlock);rewardAmount=rewardAmount.add(diffBlockCount.mul(blockRewardInfo.reward));prevBlock=blockRewardInfo.lastBlock;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1666
column: 8
content: for(uint256i=0;i<rewardInfo.length;i++){BlockRewardInfomemoryinfo=rewardInfo[i];if(blockNumber>=info.firstBlock&&blockNumber<info.lastBlock){reward=info.reward;break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1418
column: 8
content: for(uint256i=0;i<rewardInfo.length;i++){BlockRewardInfomemoryblockRewardInfo=rewardInfo[i];if(blockRewardInfo.lastBlock<=prevBlock||blockRewardInfo.firstBlock>=currentBlock)continue;if(blockRewardInfo.lastBlock>=currentBlock){uint256diffBlockCount=currentBlock.sub(prevBlock);rewardAmount=rewardAmount.add(diffBlockCount.mul(blockRewardInfo.reward));break;}else{uint256diffBlockCount=blockRewardInfo.lastBlock.sub(prevBlock);rewardAmount=rewardAmount.add(diffBlockCount.mul(blockRewardInfo.reward));prevBlock=blockRewardInfo.lastBlock;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1455
column: 8
content: for(uint256pid=0;pid<length;++pid){updatePool(pid);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1666
column: 8
content: for(uint256i=0;i<rewardInfo.length;i++){BlockRewardInfomemoryinfo=rewardInfo[i];if(blockNumber>=info.firstBlock&&blockNumber<info.lastBlock){reward=info.reward;break;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 1191
column: 15
content: upper>lower

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1393
column: 4
content: functionset(uint256_pid,uint256_allocPoint,uint16_depositFeeBP,bool_withUpdate)publiconlyOwner{require(_depositFeeBP<=10000,"set: invalid deposit fee basis points");if(_withUpdate){massUpdatePools();}totalAllocPoint=totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);poolInfo[_pid].allocPoint=_allocPoint;poolInfo[_pid].depositFeeBP=_depositFeeBP;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1554
column: 4
content: functionsetFeeAddress(address_feeAddress)public{require(msg.sender==feeAddress,"setFeeAddress: FORBIDDEN");feeAddress=_feeAddress;emitSetFeeAddress(msg.sender,_feeAddress);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 24
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 2
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 3
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 3
column: 24
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 4
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 4
column: 24
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 5
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 5
column: 24
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 6
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 6
column: 24
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 7
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 7
column: 24
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 8
column: 16
content: >=

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 8
column: 24
content: <

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 9
column: 16
content: >=

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 614
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 694
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 695
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 697
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 754
column: 32
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 756
column: 52
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 758
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 759
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 761
column: 11
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 762
column: 11
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 763
column: 10
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1339
column: 12
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 520
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 752
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1278
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1262
column: 4
content: functiongetChainId()internalpurereturns(uint){uint256chainId;assembly{chainId:=chainid()}returnchainId;}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 344
column: 4
content: functionisContract(addressaccount)internalviewreturns(bool){uint256size;assembly{size:=extcodesize(account)}returnsize>0;}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 38
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 49
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 59
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 74
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 84
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 524
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.transfer.selector,to,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 528
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.transferFrom.selector,from,to,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 546
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 551
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,newAllowance))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 556
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,newAllowance))

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1264
column: 8
content: assembly{chainId:=chainid()}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 371
column: 4
content: functionsendValue(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 371
column: 39
content: recipient,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 371
column: 50
content: uint256amount)internal{

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 372
column: 8
content: require

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 372
column: 15
content: (address<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 372
column: 23
content: (this).balance>=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 372
column: 41
content: amount,"Address: insufficient balance");

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 375
column: 8
content: (bool<missing ')'>success,)=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 375
column: 27
content: recipient.call{value:

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 375
column: 50
content: amount

SOLIDITY_VISIBILITY :10
SOLIDITY_OVERPOWERED_ROLE :2
SOLIDITY_PRAGMAS_VERSION :16
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :12
SOLIDITY_EXTRA_GAS_IN_LOOPS :2
SOLIDITY_ADDRESS_HARDCODED :2
SOLIDITY_GAS_LIMIT_IN_LOOPS :4
SOLIDITY_UNCHECKED_CALL :5
SOLIDITY_SHOULD_RETURN_STRUCT :5
SOLIDITY_SHOULD_NOT_BE_PURE :1
SOLIDITY_SAFEMATH :3
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_SHOULD_NOT_BE_VIEW :1
