/sb/Solos.sol
line 2:7 mismatched input 'abicoder' expecting {'solidity', 'experimental'}
line 265:31 mismatched input 'payable' expecting {',', ')'}
line 265:48 no viable alternative at input 'recipient,'
line 265:48 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 265:64 mismatched input ')' expecting {';', '='}
line 266:15 mismatched input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 266:23 mismatched input '(' expecting ')'
line 266:29 extraneous input '.' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 266:38 mismatched input '>=' expecting {';', '='}
line 266:47 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 269:14 missing ')' at 'success'
line 269:21 mismatched input ',' expecting {';', '='}
line 269:41 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 269:48 mismatched input ':' expecting {';', '='}
line 269:57 mismatched input '}' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 269:58 extraneous input '(' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 766:0 extraneous input 'abstract' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 767:65 extraneous input 'payable' expecting {',', ')'}
line 812:0 extraneous input 'abstract' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 996:0 extraneous input 'abstract' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 1133:0 extraneous input 'abstract' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 1238:23 extraneous input 'pubkey' expecting {',', ')'}
line 1239:23 extraneous input 'withdrawal_credentials' expecting {',', ')'}
line 1239:45 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1240:23 mismatched input 'signature' expecting {';', '='}
line 1240:32 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1242:4 mismatched input ')' expecting {';', '='}
line 1433:50 extraneous input '_validator' expecting {',', ')'}
line 1443:30 extraneous input 'payable' expecting ';'
line 1450:45 extraneous input 'solos' expecting {';', '='}
line 1453:37 extraneous input 'validatorRegistration' expecting {';', '='}
line 1456:28 extraneous input 'validatorPrice' expecting {';', '='}
line 1459:28 extraneous input 'cancelLockDuration' expecting {';', '='}
line 1566:50 extraneous input '_validator' expecting {',', ')'}
line 1577:37 missing ';' at '{'
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 823
column: 49
content: 0x00

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1497
column: 77
content: 0x00

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 1442
column: 0
content: contractSolosisISolos,ReentrancyGuard,OwnablePausable{usingAddressforaddresspayable;usingSafeMathforuint256;uint256publicconstantVALIDATOR_DEPOSIT=32ether;mapping(bytes32=>Solo)publicoverridesolos;IDepositContractpublicoverridevalidatorRegistration;uint256publicoverridevalidatorPrice;uint256publicoverridecancelLockDuration;IValidatorsprivatevalidators;constructor(address_admin,address_validatorRegistration,address_validators,uint256_validatorPrice,uint256_cancelLockDuration)OwnablePausable(_admin){validatorRegistration=IDepositContract(_validatorRegistration);validators=IValidators(_validators);validatorPrice=_validatorPrice;emitValidatorPriceUpdated(_validatorPrice);cancelLockDuration=_cancelLockDuration;emitCancelLockDurationUpdated(_cancelLockDuration);}functionaddDeposit(bytes32_withdrawalCredentials)externalpayableoverridewhenNotPaused{require(_withdrawalCredentials!=""&&_withdrawalCredentials[0]==0x00,"Solos: invalid withdrawal credentials");require(msg.value>0&&msg.value.mod(VALIDATOR_DEPOSIT)==0,"Solos: invalid deposit amount");bytes32soloId=keccak256(abi.encodePacked(address(this),msg.sender,_withdrawalCredentials));Solostoragesolo=solos[soloId];solo.amount=solo.amount.add(msg.value);if(solo.withdrawalCredentials==""){solo.withdrawalCredentials=_withdrawalCredentials;}solo.releaseTime=block.timestamp+cancelLockDuration;emitDepositAdded(soloId,msg.sender,msg.value,_withdrawalCredentials);}functioncancelDeposit(bytes32_withdrawalCredentials,uint256_amount)externaloverridenonReentrant{bytes32soloId=keccak256(abi.encodePacked(address(this),msg.sender,_withdrawalCredentials));Solostoragesolo=solos[soloId];require(block.timestamp>=solo.releaseTime,"Solos: current time is before release time");uint256newAmount=solo.amount.sub(_amount,"Solos: insufficient balance");require(newAmount.mod(VALIDATOR_DEPOSIT)==0,"Solos: invalid cancel amount");emitDepositCanceled(soloId,msg.sender,_amount,solo.withdrawalCredentials);if(newAmount>0){solo.amount=newAmount;solo.releaseTime=block.timestamp+cancelLockDuration;}else{deletesolos[soloId];}msg.sender.sendValue(_amount);}functionsetValidatorPrice(uint256_validatorPrice)externaloverrideonlyAdmin{validatorPrice=_validatorPrice;emitValidatorPriceUpdated(_validatorPrice);}functionsetCancelLockDuration(uint256_cancelLockDuration)externaloverrideonlyAdmin{cancelLockDuration=_cancelLockDuration;emitCancelLockDurationUpdated(_cancelLockDuration);}functionregisterValidator(Validatorcalldata_validator)externaloverridewhenNotPaused{require(validators.isOperator(msg.sender),"Solos: permission denied");Solostoragesolo=solos[_validator.soloId];solo.amount=solo.amount.sub(VALIDATOR_DEPOSIT,"Solos: insufficient balance");validators.register(keccak256(abi.encodePacked(_validator.publicKey)));emitValidatorRegistered(_validator.soloId,_validator.publicKey,validatorPrice,msg.sender);validatorRegistration.deposit<missing ';'>{value:VALIDATOR_DEPOSIT}(_validator.publicKey,abi.encodePacked(solo.withdrawalCredentials),_validator.signature,_validator.depositDataRoot);}}

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 431
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 432
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 434
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 821
column: 34
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1007
column: 9
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1462
column: 16
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1444
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 238
column: 4
content: functionisContract(addressaccount)internalviewreturns(bool){uint256size;assembly{size:=extcodesize(account)}returnsize>0;}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 25
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 36
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 46
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 61
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 71
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1381
column: 58
content: (uint256amount,bytes32withdrawalCredentials,uint256releaseTime)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 1544
column: 19
content: sendValue(_amount)

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 265
column: 4
content: functionsendValue(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1155
column: 4
content: constructor(address_admin){_setupRole(DEFAULT_ADMIN_ROLE,_admin);_setupRole(PAUSER_ROLE,_admin);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1237
column: 4
content: functiondeposit(bytescalldatapubkey,bytescalldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1472
column: 4
content: constructor(address_admin,address_validatorRegistration,address_validators,uint256_validatorPrice,uint256_cancelLockDuration)OwnablePausable(_admin){validatorRegistration=IDepositContract(_validatorRegistration);validators=IValidators(_validators);validatorPrice=_validatorPrice;emitValidatorPriceUpdated(_validatorPrice);cancelLockDuration=_cancelLockDuration;emitCancelLockDurationUpdated(_cancelLockDuration);}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 265
column: 39
content: recipient,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 265
column: 50
content: uint256amount)internal{

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 266
column: 8
content: require

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 266
column: 15
content: (address<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 266
column: 23
content: (this).balance>=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 266
column: 41
content: amount,"Address: insufficient balance");

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 269
column: 8
content: (bool<missing ')'>success,)=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 269
column: 27
content: recipient.call{value:

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 269
column: 50
content: amount

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1239
column: 23
content: withdrawal_credentials,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1240
column: 8
content: bytescalldata

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1240
column: 23
content: signature,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1241
column: 8
content: bytes32deposit_data_root)externalpayable;

SOLIDITY_VISIBILITY :17
SOLIDITY_SAFEMATH :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :6
SOLIDITY_ADDRESS_HARDCODED :2
SOLIDITY_UNCHECKED_CALL :1
SOLIDITY_SHOULD_RETURN_STRUCT :6
SOLIDITY_SHOULD_NOT_BE_VIEW :1
