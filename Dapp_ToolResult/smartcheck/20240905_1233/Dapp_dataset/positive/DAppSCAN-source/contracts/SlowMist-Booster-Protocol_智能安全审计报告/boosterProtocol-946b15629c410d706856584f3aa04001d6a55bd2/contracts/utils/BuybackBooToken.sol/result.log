/sb/BuybackBooToken.sol
line 338:31 mismatched input 'payable' expecting {',', ')'}
line 338:48 no viable alternative at input 'recipient,'
line 338:48 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 338:64 mismatched input ')' expecting {';', '='}
line 339:15 mismatched input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 339:23 mismatched input '(' expecting ')'
line 339:29 extraneous input '.' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 339:38 mismatched input '>=' expecting {';', '='}
line 339:47 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 342:14 missing ')' at 'success'
line 342:21 mismatched input ',' expecting {';', '='}
line 342:41 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 342:48 mismatched input ':' expecting {';', '='}
line 342:57 mismatched input '}' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 342:58 extraneous input '(' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 539:49 no viable alternative at input '(bool))'
line 539:48 no viable alternative at input 'bool)'
line 539:50 mismatched input ',' expecting ';'
line 539:96 extraneous input ')' expecting ';'
line 554:0 extraneous input 'abstract' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 555:65 extraneous input 'payable' expecting {',', ')'}
line 934:27 extraneous input 'path' expecting {',', ')'}
line 934:31 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 935:18 mismatched input ',' expecting {';', '='}
line 937:4 mismatched input ')' expecting {';', '='}
line 937:31 mismatched input 'memory' expecting ')'
line 937:45 extraneous input ')' expecting {';', '='}
line 942:27 extraneous input 'path' expecting {',', ')'}
line 942:31 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 943:18 mismatched input ',' expecting {';', '='}
line 945:4 mismatched input ')' expecting {';', '='}
line 945:31 mismatched input 'memory' expecting ')'
line 945:45 extraneous input ')' expecting {';', '='}
line 947:73 extraneous input 'path' expecting {',', ')'}
line 947:77 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 947:89 mismatched input ',' expecting {';', '='}
line 947:104 mismatched input ')' expecting {';', '='}
line 950:20 mismatched input 'memory' expecting ')'
line 950:34 extraneous input ')' expecting {';', '='}
line 952:88 extraneous input 'path' expecting {',', ')'}
line 952:92 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 952:104 mismatched input ',' expecting {';', '='}
line 952:119 mismatched input ')' expecting {';', '='}
line 954:20 mismatched input 'memory' expecting ')'
line 954:34 extraneous input ')' expecting {';', '='}
line 956:88 extraneous input 'path' expecting {',', ')'}
line 956:92 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 956:104 mismatched input ',' expecting {';', '='}
line 956:119 mismatched input ')' expecting {';', '='}
line 958:20 mismatched input 'memory' expecting ')'
line 958:34 extraneous input ')' expecting {';', '='}
line 960:70 extraneous input 'path' expecting {',', ')'}
line 960:74 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 960:86 mismatched input ',' expecting {';', '='}
line 960:101 mismatched input ')' expecting {';', '='}
line 963:20 mismatched input 'memory' expecting ')'
line 963:34 extraneous input ')' expecting {';', '='}
line 971:64 extraneous input 'path' expecting {',', ')'}
line 973:64 extraneous input 'path' expecting {',', ')'}
line 997:27 extraneous input 'path' expecting {',', ')'}
line 997:31 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 998:18 mismatched input ',' expecting {';', '='}
line 1000:4 mismatched input ')' expecting {';', '='}
line 1004:27 extraneous input 'path' expecting {',', ')'}
line 1004:31 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1005:18 mismatched input ',' expecting {';', '='}
line 1007:4 mismatched input ')' expecting {';', '='}
line 1012:27 extraneous input 'path' expecting {',', ')'}
line 1012:31 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1013:18 mismatched input ',' expecting {';', '='}
line 1015:4 mismatched input ')' expecting {';', '='}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 1085
column: 46
content: 0xED7d5F38C79115ca12fe6C0041abb22F0A06C300

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 1086
column: 40
content: 0xfe5392013a4bA722CAf16FD116baaba8604Bb275

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 1087
column: 34
content: 0xa71EdC38d189767582C38A3145b5873052c3e47a

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1040
column: 14
content: 0x100000000000000000000000000000000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1045
column: 14
content: 0x10000000000000000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1049
column: 14
content: 0x100000000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1053
column: 14
content: 0x10000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1057
column: 14
content: 0x100

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1061
column: 14
content: 0x10

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1065
column: 14
content: 0x8

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 787
column: 28
content: (address(0),account,amount)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 808
column: 28
content: (account,address(0),amount)

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 690
column: 4
content: functionapprove(addressspender,uint256amount)publicvirtualoverridereturns(bool){_approve(_msgSender(),spender,amount);returntrue;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1097
column: 4
content: functionsetLockedAddr(address_lockedAddr)external{require(msg.sender==lockedAddr,'prev one');lockedAddr=_lockedAddr;}

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 592
column: 33
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 594
column: 54
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 596
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 598
column: 11
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 599
column: 11
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 600
column: 10
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 486
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 590
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1023
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1082
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 311
column: 4
content: functionisContract(addressaccount)internalviewreturns(bool){uint256size;assembly{size:=extcodesize(account)}returnsize>0;}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 98
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 109
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 119
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 134
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 144
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 880
column: 23
content: (uintamountA,uintamountB,uintliquidity)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 889
column: 31
content: (uintamountToken,uintamountETH,uintliquidity)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 899
column: 23
content: (uintamountA,uintamountB)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 908
column: 23
content: (uintamountToken,uintamountETH)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 919
column: 23
content: (uintamountA,uintamountB)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 929
column: 23
content: (uintamountToken,uintamountETH)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 490
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.transfer.selector,to,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 494
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.transferFrom.selector,from,to,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 512
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 517
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,newAllowance))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 522
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,newAllowance))

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 338
column: 4
content: functionsendValue(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 931
column: 4
content: functionswapExactTokensForTokens(uintamountIn,uintamountOutMin,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 939
column: 4
content: functionswapTokensForExactTokens(uintamountOut,uintamountInMax,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 947
column: 4
content: functionswapExactETHForTokens(uintamountOutMin,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 952
column: 4
content: functionswapTokensForExactETH(uintamountOut,uintamountInMax,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 956
column: 4
content: functionswapExactTokensForETH(uintamountIn,uintamountOutMin,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 960
column: 4
content: functionswapETHForExactTokens(uintamountOut,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 994
column: 4
content: functionswapExactTokensForTokensSupportingFeeOnTransferTokens(uintamountIn,uintamountOutMin,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1002
column: 4
content: functionswapExactETHForTokensSupportingFeeOnTransferTokens(uintamountOutMin,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1009
column: 4
content: functionswapExactTokensForETHSupportingFeeOnTransferTokens(uintamountIn,uintamountOutMin,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 338
column: 39
content: recipient,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 338
column: 50
content: uint256amount)internal{

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 339
column: 8
content: require

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 339
column: 15
content: (address<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 339
column: 23
content: (this).balance>=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 339
column: 41
content: amount,"Address: insufficient balance");

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 342
column: 8
content: (bool<missing ')'>success,)=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 342
column: 27
content: recipient.call{value:

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 342
column: 50
content: amount

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 934
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 935
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 936
column: 8
content: uintdeadline)externalreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 937
column: 23
content: (uint[]memoryamounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 942
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 943
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 944
column: 8
content: uintdeadline)externalreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 945
column: 23
content: (uint[]memoryamounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 947
column: 73
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 947
column: 79
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 947
column: 91
content: uintdeadline)externalpayablereturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 950
column: 12
content: (uint[]memoryamounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 952
column: 88
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 952
column: 94
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 952
column: 106
content: uintdeadline)externalreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 954
column: 12
content: (uint[]memoryamounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 956
column: 88
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 956
column: 94
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 956
column: 106
content: uintdeadline)externalreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 958
column: 12
content: (uint[]memoryamounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 960
column: 70
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 960
column: 76
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 960
column: 88
content: uintdeadline)externalpayablereturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 963
column: 12
content: (uint[]memoryamounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 997
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 998
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 999
column: 8
content: uintdeadline)external;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1004
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1005
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1006
column: 8
content: uintdeadline)externalpayable;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1012
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1013
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1014
column: 8
content: uintdeadline)external;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1085
column: 4
content: IMdexRouterconstantrouter=IMdexRouter(0xED7d5F38C79115ca12fe6C0041abb22F0A06C300);

SOLIDITY_VISIBILITY :53
SOLIDITY_SAFEMATH :4
SOLIDITY_OVERPOWERED_ROLE :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :6
SOLIDITY_ADDRESS_HARDCODED :12
SOLIDITY_UNCHECKED_CALL :5
SOLIDITY_SHOULD_RETURN_STRUCT :11
SOLIDITY_SHOULD_NOT_BE_VIEW :1
SOLIDITY_ERC20_APPROVE :1
