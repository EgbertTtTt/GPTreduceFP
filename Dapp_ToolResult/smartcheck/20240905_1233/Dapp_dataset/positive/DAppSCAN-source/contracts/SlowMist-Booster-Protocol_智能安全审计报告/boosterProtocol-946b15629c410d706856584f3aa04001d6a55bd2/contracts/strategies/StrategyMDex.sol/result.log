/sb/StrategyMDex.sol
line 338:31 mismatched input 'payable' expecting {',', ')'}
line 338:48 no viable alternative at input 'recipient,'
line 338:48 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 338:64 mismatched input ')' expecting {';', '='}
line 339:15 mismatched input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 339:23 mismatched input '(' expecting ')'
line 339:29 extraneous input '.' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 339:38 mismatched input '>=' expecting {';', '='}
line 339:47 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 342:14 missing ')' at 'success'
line 342:21 mismatched input ',' expecting {';', '='}
line 342:41 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 342:48 mismatched input ':' expecting {';', '='}
line 342:57 mismatched input '}' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 342:58 extraneous input '(' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 539:49 no viable alternative at input '(bool))'
line 539:48 no viable alternative at input 'bool)'
line 539:50 mismatched input ',' expecting ';'
line 539:96 extraneous input ')' expecting ';'
line 554:0 extraneous input 'abstract' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 555:65 extraneous input 'payable' expecting {',', ')'}
line 577:0 extraneous input 'abstract' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 699:27 extraneous input 'path' expecting {',', ')'}
line 699:31 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 700:18 mismatched input ',' expecting {';', '='}
line 702:4 mismatched input ')' expecting {';', '='}
line 702:31 mismatched input 'memory' expecting ')'
line 702:45 extraneous input ')' expecting {';', '='}
line 707:27 extraneous input 'path' expecting {',', ')'}
line 707:31 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 708:18 mismatched input ',' expecting {';', '='}
line 710:4 mismatched input ')' expecting {';', '='}
line 710:31 mismatched input 'memory' expecting ')'
line 710:45 extraneous input ')' expecting {';', '='}
line 712:73 extraneous input 'path' expecting {',', ')'}
line 712:77 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 712:89 mismatched input ',' expecting {';', '='}
line 712:104 mismatched input ')' expecting {';', '='}
line 715:20 mismatched input 'memory' expecting ')'
line 715:34 extraneous input ')' expecting {';', '='}
line 717:88 extraneous input 'path' expecting {',', ')'}
line 717:92 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 717:104 mismatched input ',' expecting {';', '='}
line 717:119 mismatched input ')' expecting {';', '='}
line 719:20 mismatched input 'memory' expecting ')'
line 719:34 extraneous input ')' expecting {';', '='}
line 721:88 extraneous input 'path' expecting {',', ')'}
line 721:92 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 721:104 mismatched input ',' expecting {';', '='}
line 721:119 mismatched input ')' expecting {';', '='}
line 723:20 mismatched input 'memory' expecting ')'
line 723:34 extraneous input ')' expecting {';', '='}
line 725:70 extraneous input 'path' expecting {',', ')'}
line 725:74 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 725:86 mismatched input ',' expecting {';', '='}
line 725:101 mismatched input ')' expecting {';', '='}
line 728:20 mismatched input 'memory' expecting ')'
line 728:34 extraneous input ')' expecting {';', '='}
line 736:64 extraneous input 'path' expecting {',', ')'}
line 738:64 extraneous input 'path' expecting {',', ')'}
line 762:27 extraneous input 'path' expecting {',', ')'}
line 762:31 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 763:18 mismatched input ',' expecting {';', '='}
line 765:4 mismatched input ')' expecting {';', '='}
line 769:27 extraneous input 'path' expecting {',', ')'}
line 769:31 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 770:18 mismatched input ',' expecting {';', '='}
line 772:4 mismatched input ')' expecting {';', '='}
line 777:27 extraneous input 'path' expecting {',', ')'}
line 777:31 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 778:18 mismatched input ',' expecting {';', '='}
line 780:4 mismatched input ')' expecting {';', '='}
line 895:64 extraneous input 'path' expecting {',', ')'}
line 897:64 extraneous input 'path' expecting {',', ')'}
line 1873:71 extraneous input 'userInfo' expecting {';', '='}
line 1876:28 extraneous input 'bank' expecting {';', '='}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 1094
column: 52
content: 0xFB03e11D93632D97a8981158A632Dd5986F5E909

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 1095
column: 31
content: 0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 1465
column: 49
content: 0xb0b670fc1F7724119963018DB0BfA86aDb22d941

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 1466
column: 53
content: 0xED7d5F38C79115ca12fe6C0041abb22F0A06C300

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 1867
column: 49
content: 0xb0b670fc1F7724119963018DB0BfA86aDb22d941

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 1868
column: 46
content: 0xED7d5F38C79115ca12fe6C0041abb22F0A06C300

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1022
column: 14
content: 0x100000000000000000000000000000000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1027
column: 14
content: 0x10000000000000000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1031
column: 14
content: 0x100000000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1035
column: 14
content: 0x10000

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1039
column: 14
content: 0x100

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1043
column: 14
content: 0x10

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 1047
column: 14
content: 0x8

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 615
column: 8
content: _owner=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 1352
column: 28
content: (address(0),account,amount)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 1373
column: 28
content: (account,address(0),amount)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 2337
column: 12
content: userInfo[_pid][_account].borrowFrom=address(0)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1492
column: 27
content: IERC20(_token).balanceOf(strategy).mul(_balancerate).div(1e9).mul(_feerate)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1750
column: 17
content: _c.mul(1000).div(amtB.add(resB)).mul(resA)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1764
column: 21
content: _lpTokenAmount.mul(a).div(ERC20(_lpToken).totalSupply()).mul(2)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1766
column: 21
content: _lpTokenAmount.mul(b).div(ERC20(_lpToken).totalSupply()).mul(2)

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 1255
column: 4
content: functionapprove(addressspender,uint256amount)publicvirtualoverridereturns(bool){_approve(_msgSender(),spender,amount);returntrue;}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 2026
column: 8
content: for(uint256pid=0;pid<length;++pid){updatePool(pid);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1473
column: 4
content: functionsetSConfig(address_sconfig)externalonlyOwner{sconfig=IStrategyConfig(_sconfig);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1986
column: 4
content: functionsetAcionPool(address_actionPool)externalonlyOwner{actionPool=IActionPools(_actionPool);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1990
column: 4
content: functionsetSConfig(address_sconfig)externalonlyOwner{utils.setSConfig(_sconfig);}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1994
column: 4
content: functionsetMiniRewardAmount(uint256_pid,uint256_miniRewardAmount)externalonlyOwner{poolInfo[_pid].miniRewardAmount=_miniRewardAmount;}

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 578
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1157
column: 33
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1159
column: 54
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1161
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1163
column: 11
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1164
column: 11
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 1165
column: 10
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 486
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1005
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1091
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1155
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1459
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1843
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 311
column: 4
content: functionisContract(addressaccount)internalviewreturns(bool){uint256size;assembly{size:=extcodesize(account)}returnsize>0;}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 98
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 109
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 119
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 134
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 144
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 645
column: 23
content: (uintamountA,uintamountB,uintliquidity)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 654
column: 31
content: (uintamountToken,uintamountETH,uintliquidity)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 664
column: 23
content: (uintamountA,uintamountB)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 673
column: 23
content: (uintamountToken,uintamountETH)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 684
column: 23
content: (uintamountA,uintamountB)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 694
column: 23
content: (uintamountToken,uintamountETH)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 833
column: 49
content: (uint112reserve0,uint112reserve1,uint32blockTimestampLast)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 887
column: 79
content: (uint256reserveA,uint256reserveB)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 912
column: 20
content: (addressowner,uint256amount,addressstrategy,uint256pid)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 949
column: 76
content: (uint256,uint256,address,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 950
column: 61
content: (address[]memorycollateralToken,addressbaseToken,addresslpToken,uint256poolId,uint256totalLPAmount,uint256totalLPRefund)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 951
column: 81
content: (addressborrowFrom,uint256bid)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 982
column: 16
content: (addresscallFrom,uint256callId,addressrewardToken)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 995
column: 16
content: (addresslpToken,uint256allocRate,uint256totalAmount)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1073
column: 57
content: (address,uint256,uint256,uint256,uint256,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1075
column: 73
content: (uint256,uint256,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1442
column: 85
content: (address,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1445
column: 86
content: (address,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1448
column: 84
content: (address,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1451
column: 83
content: (address,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1454
column: 89
content: (address,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1721
column: 26
content: (uintswapAmt,boolisReversed)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1899
column: 16
content: (addresslpToken,uint256allocRate,uint256totalAmount)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1911
column: 15
content: (address[]memorycollateralToken,addressbaseToken,addresslpToken,uint256poolId,uint256totalLPAmount,uint256totalLPReinvest)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1934
column: 39
content: (addressborrowFrom,uint256bid)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1940
column: 30
content: (uint256a1,uint256a2)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 2308
column: 24
content: (uint256withdrawLPTokenAmount,uint256rewardsRate,uint256borrowRate)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 490
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.transfer.selector,to,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 494
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.transferFrom.selector,from,to,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 512
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 517
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,newAllowance))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 522
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,newAllowance))

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 338
column: 4
content: functionsendValue(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 696
column: 4
content: functionswapExactTokensForTokens(uintamountIn,uintamountOutMin,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 704
column: 4
content: functionswapTokensForExactTokens(uintamountOut,uintamountInMax,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 712
column: 4
content: functionswapExactETHForTokens(uintamountOutMin,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 717
column: 4
content: functionswapTokensForExactETH(uintamountOut,uintamountInMax,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 721
column: 4
content: functionswapExactTokensForETH(uintamountIn,uintamountOutMin,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 725
column: 4
content: functionswapETHForExactTokens(uintamountOut,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 759
column: 4
content: functionswapExactTokensForTokensSupportingFeeOnTransferTokens(uintamountIn,uintamountOutMin,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 767
column: 4
content: functionswapExactETHForTokensSupportingFeeOnTransferTokens(uintamountOutMin,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 774
column: 4
content: functionswapExactTokensForETHSupportingFeeOnTransferTokens(uintamountIn,uintamountOutMin,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 338
column: 39
content: recipient,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 338
column: 50
content: uint256amount)internal{

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 339
column: 8
content: require

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 339
column: 15
content: (address<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 339
column: 23
content: (this).balance>=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 339
column: 41
content: amount,"Address: insufficient balance");

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 342
column: 8
content: (bool<missing ')'>success,)=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 342
column: 27
content: recipient.call{value:

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 342
column: 50
content: amount

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 699
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 700
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 701
column: 8
content: uintdeadline)externalreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 702
column: 23
content: (uint[]memoryamounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 707
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 708
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 709
column: 8
content: uintdeadline)externalreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 710
column: 23
content: (uint[]memoryamounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 712
column: 73
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 712
column: 79
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 712
column: 91
content: uintdeadline)externalpayablereturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 715
column: 12
content: (uint[]memoryamounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 717
column: 88
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 717
column: 94
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 717
column: 106
content: uintdeadline)externalreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 719
column: 12
content: (uint[]memoryamounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 721
column: 88
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 721
column: 94
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 721
column: 106
content: uintdeadline)externalreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 723
column: 12
content: (uint[]memoryamounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 725
column: 70
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 725
column: 76
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 725
column: 88
content: uintdeadline)externalpayablereturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 728
column: 12
content: (uint[]memoryamounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 762
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 763
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 764
column: 8
content: uintdeadline)external;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 769
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 770
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 771
column: 8
content: uintdeadline)externalpayable;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 777
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 778
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 779
column: 8
content: uintdeadline)external;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1094
column: 4
content: IMdexHecoPoolconstanthecopool=IMdexHecoPool(0xFB03e11D93632D97a8981158A632Dd5986F5E909);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1095
column: 4
content: addressmdxToken=address(0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1465
column: 4
content: IMdexFactoryconstantfactory=IMdexFactory(0xb0b670fc1F7724119963018DB0BfA86aDb22d941);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1867
column: 4
content: IMdexFactoryconstantfactory=IMdexFactory(0xb0b670fc1F7724119963018DB0BfA86aDb22d941);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1868
column: 4
content: IMdexRouterconstantrouter=IMdexRouter(0xED7d5F38C79115ca12fe6C0041abb22F0A06C300);

SOLIDITY_VISIBILITY :57
SOLIDITY_SAFEMATH :6
SOLIDITY_OVERPOWERED_ROLE :4
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :7
SOLIDITY_ADDRESS_HARDCODED :17
SOLIDITY_GAS_LIMIT_IN_LOOPS :1
SOLIDITY_UNCHECKED_CALL :5
SOLIDITY_DIV_MUL :4
SOLIDITY_SHOULD_RETURN_STRUCT :32
SOLIDITY_SHOULD_NOT_BE_VIEW :1
SOLIDITY_ERC20_APPROVE :1
