/sb/MasterChef.sol
line 359:31 mismatched input 'payable' expecting {',', ')'}
line 359:48 no viable alternative at input 'recipient,'
line 359:48 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 359:64 mismatched input ')' expecting {';', '='}
line 360:15 mismatched input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 360:23 mismatched input '(' expecting ')'
line 360:29 extraneous input '.' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 360:38 mismatched input '>=' expecting {';', '='}
line 360:47 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 363:14 missing ')' at 'success'
line 363:21 mismatched input ',' expecting {';', '='}
line 363:41 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 363:48 mismatched input ':' expecting {';', '='}
line 363:57 mismatched input '}' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 363:58 extraneous input '(' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 586:49 no viable alternative at input '(bool))'
line 586:48 no viable alternative at input 'bool)'
line 586:50 mismatched input ',' expecting ';'
line 586:96 extraneous input ')' expecting ';'
line 625:0 extraneous input 'abstract' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 626:65 extraneous input 'payable' expecting {',', ')'}
line 648:0 extraneous input 'abstract' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 716:0 extraneous input 'abstract' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 686
column: 8
content: _owner=address(0)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 1084
column: 22
content: (address(0),_delegates[_to],_amount)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1529
column: 31
content: multiplier.mul(LCPerBlock).mul(pool.allocPoint).div(totalAllocPoint).mul(stakingPercent)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1568
column: 27
content: multiplier.mul(LCPerBlock).mul(pool.allocPoint).div(totalAllocPoint).mul(stakingPercent)

ruleId: SOLIDITY_DIV_MUL
patternId: 09hhh1
severity: 2
line: 1588
column: 80
content: amount.mul(pool.bonusPoint).div(totalBonusPoint).mul(1e12)

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1499
column: 8
content: for(uint256i=0;i<poolInfo.length;i++){PoolInfostoragepool=poolInfo[i];if(pool.bonusPoint>0){poolBonusPerShare[i].push(0);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1541
column: 12
content: for(uint256i=0;i<bonusInfo.length;i++){values[i]=user.amount.mul(poolBonusPerShare[_pid][i]).div(1e12).sub(userBonusDebt[i][_user]);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1581
column: 12
content: for(uint256i=0;i<poolInfo.length;i++){PoolInfostoragepool=poolInfo[i];uint256lpSupply=pool.lpToken.balanceOf(address(this));if(lpSupply<=0){continue;}if(pool.bonusPoint>0){poolBonusPerShare[i][_pid]=poolBonusPerShare[i][_pid].add(amount.mul(pool.bonusPoint).div(totalBonusPoint).mul(1e12).div(lpSupply));}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1614
column: 12
content: for(uint256i=0;i<bonusInfo.length;i++){uint256pending=user.amount.mul(poolBonusPerShare[_pid][i]).div(1e12).sub(userBonusDebt[i][_user]);if(pending>0){BonusInfostoragebonusPool=bonusInfo[i];bonusPool.lastBalance=bonusPool.lastBalance.sub(pending);bonusPool.bonusToken.safeTransfer(address(_user),pending);}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1643
column: 12
content: for(uint256i=0;i<bonusInfo.length;i++){userBonusDebt[i][msg.sender]=user.amount.mul(poolBonusPerShare[_pid][i]).div(1e12);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 1668
column: 12
content: for(uint256i=0;i<bonusInfo.length;i++){userBonusDebt[i][msg.sender]=user.amount.mul(poolBonusPerShare[_pid][i]).div(1e12);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1499
column: 8
content: for(uint256i=0;i<poolInfo.length;i++){PoolInfostoragepool=poolInfo[i];if(pool.bonusPoint>0){poolBonusPerShare[i].push(0);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1541
column: 12
content: for(uint256i=0;i<bonusInfo.length;i++){values[i]=user.amount.mul(poolBonusPerShare[_pid][i]).div(1e12).sub(userBonusDebt[i][_user]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1551
column: 8
content: for(uint256pid=0;pid<length;++pid){updatePool(pid);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1581
column: 12
content: for(uint256i=0;i<poolInfo.length;i++){PoolInfostoragepool=poolInfo[i];uint256lpSupply=pool.lpToken.balanceOf(address(this));if(lpSupply<=0){continue;}if(pool.bonusPoint>0){poolBonusPerShare[i][_pid]=poolBonusPerShare[i][_pid].add(amount.mul(pool.bonusPoint).div(totalBonusPoint).mul(1e12).div(lpSupply));}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1614
column: 12
content: for(uint256i=0;i<bonusInfo.length;i++){uint256pending=user.amount.mul(poolBonusPerShare[_pid][i]).div(1e12).sub(userBonusDebt[i][_user]);if(pending>0){BonusInfostoragebonusPool=bonusInfo[i];bonusPool.lastBalance=bonusPool.lastBalance.sub(pending);bonusPool.bonusToken.safeTransfer(address(_user),pending);}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1643
column: 12
content: for(uint256i=0;i<bonusInfo.length;i++){userBonusDebt[i][msg.sender]=user.amount.mul(poolBonusPerShare[_pid][i]).div(1e12);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 1668
column: 12
content: for(uint256i=0;i<bonusInfo.length;i++){userBonusDebt[i][msg.sender]=user.amount.mul(poolBonusPerShare[_pid][i]).div(1e12);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 1240
column: 15
content: upper>lower

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1508
column: 4
content: functionset(uint256_pid,uint256_allocPoint,bool_withUpdate)publiconlyOwner{if(_withUpdate){massUpdatePools();}totalAllocPoint=totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);poolInfo[_pid].allocPoint=_allocPoint;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1698
column: 4
content: functionsetDevAddress(address_dev0addr,address_dev1addr,address_dev2addr)publiconlyOwner{dev0addr=_dev0addr;dev1addr=_dev1addr;dev2addr=_dev2addr;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1703
column: 4
content: functionsetSafuAddress(address_safuaddr)publiconlyOwner{safuaddr=_safuaddr;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1706
column: 4
content: functionsetTreasuryAddress(address_treasuryaddr)publiconlyOwner{treasuryaddr=_treasuryaddr;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1715
column: 4
content: functionsetReferralCommissionRate(uint16_referralCommissionRate)publiconlyOwner{require(_referralCommissionRate<=MAXIMUM_REFERRAL_COMMISSION_RATE,"setReferralCommissionRate: invalid referral commission rate basis points");referralCommissionRate=_referralCommissionRate;}

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 649
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 728
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 729
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 731
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 784
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 789
column: 32
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 791
column: 52
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 793
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 795
column: 11
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 796
column: 11
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 797
column: 10
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 507
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 786
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1326
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 1311
column: 4
content: functiongetChainId()internalpurereturns(uint){uint256chainId;assembly{chainId:=chainid()}returnchainId;}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 332
column: 4
content: functionisContract(addressaccount)internalviewreturns(bool){uint256size;assembly{size:=extcodesize(account)}returnsize>0;}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 24
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 35
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 45
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 60
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 70
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 515
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.transfer.selector,to,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 524
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.transferFrom.selector,from,to,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 547
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 556
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,newAllowance))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 568
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,newAllowance))

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1313
column: 8
content: assembly{chainId:=chainid()}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 359
column: 4
content: functionsendValue(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 359
column: 39
content: recipient,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 359
column: 50
content: uint256amount)internal{

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 360
column: 8
content: require

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 360
column: 15
content: (address<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 360
column: 23
content: (this).balance>=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 360
column: 41
content: amount,"Address: insufficient balance");

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 363
column: 8
content: (bool<missing ')'>success,)=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 363
column: 27
content: recipient.call{value:

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 363
column: 50
content: amount

SOLIDITY_VISIBILITY :10
SOLIDITY_OVERPOWERED_ROLE :5
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :11
SOLIDITY_EXTRA_GAS_IN_LOOPS :6
SOLIDITY_ADDRESS_HARDCODED :2
SOLIDITY_GAS_LIMIT_IN_LOOPS :8
SOLIDITY_UNCHECKED_CALL :5
SOLIDITY_DIV_MUL :3
SOLIDITY_SHOULD_RETURN_STRUCT :5
SOLIDITY_SHOULD_NOT_BE_PURE :1
SOLIDITY_SAFEMATH :3
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_SHOULD_NOT_BE_VIEW :1
