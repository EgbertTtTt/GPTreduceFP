/sb/History.sol
line 37:16 extraneous input '.' expecting {'solidity', 'experimental', 'from', '{', '}', '(', 'for', 'function', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'emit', 'if', 'assembly', '_', 'continue', 'break', 'return', 'revert', 'address', 'byte', 'let', '=:', 'switch', DecimalNumber, Identifier, HexNumber, HexLiteral, StringLiteral}
line 72:16 extraneous input '.' expecting {'solidity', 'experimental', 'from', '{', '}', '(', 'for', 'function', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'emit', 'if', 'assembly', '_', 'continue', 'break', 'return', 'revert', 'address', 'byte', 'let', '=:', 'switch', DecimalNumber, Identifier, HexNumber, HexLiteral, StringLiteral}
line 101:16 extraneous input '.' expecting {'solidity', 'experimental', 'from', '{', '}', '(', 'for', 'function', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'emit', 'if', 'assembly', '_', 'continue', 'break', 'return', 'revert', 'address', 'byte', 'let', '=:', 'switch', DecimalNumber, Identifier, HexNumber, HexLiteral, StringLiteral}
line 116:16 extraneous input '.' expecting {'solidity', 'experimental', 'from', '{', '}', '(', 'for', 'function', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'emit', 'if', 'assembly', '_', 'continue', 'break', 'return', 'revert', 'address', 'byte', 'let', '=:', 'switch', DecimalNumber, Identifier, HexNumber, HexLiteral, StringLiteral}
line 152:16 extraneous input '.' expecting {'solidity', 'experimental', 'from', '{', '}', '(', 'for', 'function', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'emit', 'if', 'assembly', '_', 'continue', 'break', 'return', 'revert', 'address', 'byte', 'let', '=:', 'switch', DecimalNumber, Identifier, HexNumber, HexLiteral, StringLiteral}
line 197:34 extraneous input '.' expecting {'solidity', 'experimental', 'from', '{', '}', '(', 'for', 'function', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'emit', 'if', 'assembly', '_', 'continue', 'break', 'return', 'revert', 'address', 'byte', 'let', '=:', 'switch', DecimalNumber, Identifier, HexNumber, HexLiteral, StringLiteral}
line 213:23 extraneous input '.' expecting {'solidity', 'experimental', 'from', '{', '}', '(', 'for', 'function', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'emit', 'if', 'assembly', '_', 'continue', 'break', 'return', 'revert', 'address', 'byte', 'let', '=:', 'switch', DecimalNumber, Identifier, HexNumber, HexLiteral, StringLiteral}
line 261:23 mismatched input '(' expecting {',', ')'}
line 261:35 mismatched input '.' expecting ')'
line 261:40 extraneous input ',' expecting {'solidity', 'experimental', 'from', '{', '}', '(', 'for', 'function', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'emit', 'if', 'assembly', '_', 'continue', 'break', 'return', 'revert', 'address', 'byte', 'let', '=:', 'switch', DecimalNumber, Identifier, HexNumber, HexLiteral, StringLiteral}
line 261:43 extraneous input ')' expecting {'solidity', 'experimental', 'from', '{', '}', '(', 'for', 'function', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'emit', 'if', 'assembly', '_', 'continue', 'break', 'return', 'revert', 'address', 'byte', 'let', '=:', 'switch', DecimalNumber, Identifier, HexNumber, HexLiteral, StringLiteral}
line 264:16 extraneous input ')' expecting {'solidity', 'experimental', 'from', '{', '}', '(', 'for', 'function', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'emit', 'if', 'assembly', '_', 'continue', 'break', 'return', 'revert', 'address', 'byte', 'let', '=:', 'switch', DecimalNumber, Identifier, HexNumber, HexLiteral, StringLiteral}
line 266:12 extraneous input ')' expecting {'solidity', 'experimental', 'from', '{', '}', '(', 'for', 'function', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'emit', 'if', 'assembly', '_', 'continue', 'break', 'return', 'revert', 'address', 'byte', 'let', '=:', 'switch', DecimalNumber, Identifier, HexNumber, HexLiteral, StringLiteral}
line 440:40 mismatched input '.' expecting ')'
line 440:45 extraneous input ',' expecting {'solidity', 'experimental', 'from', '{', '}', '(', 'for', 'function', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'emit', 'if', 'assembly', '_', 'continue', 'break', 'return', 'revert', 'address', 'byte', 'let', '=:', 'switch', DecimalNumber, Identifier, HexNumber, HexLiteral, StringLiteral}
line 440:48 extraneous input ')' expecting {'solidity', 'experimental', 'from', '{', '}', '(', 'for', 'function', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'emit', 'if', 'assembly', '_', 'continue', 'break', 'return', 'revert', 'address', 'byte', 'let', '=:', 'switch', DecimalNumber, Identifier, HexNumber, HexLiteral, StringLiteral}
line 467:35 mismatched input '(' expecting {',', ')'}
line 467:40 mismatched input '.' expecting ')'
line 467:45 extraneous input ',' expecting {'solidity', 'experimental', 'from', '{', '}', '(', 'for', 'function', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'emit', 'if', 'assembly', '_', 'continue', 'break', 'return', 'revert', 'address', 'byte', 'let', '=:', 'switch', DecimalNumber, Identifier, HexNumber, HexLiteral, StringLiteral}
line 467:48 extraneous input ')' expecting {'solidity', 'experimental', 'from', '{', '}', '(', 'for', 'function', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'emit', 'if', 'assembly', '_', 'continue', 'break', 'return', 'revert', 'address', 'byte', 'let', '=:', 'switch', DecimalNumber, Identifier, HexNumber, HexLiteral, StringLiteral}
line 467:52 extraneous input ')' expecting {'solidity', 'experimental', 'from', '{', '}', '(', 'for', 'function', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'emit', 'if', 'assembly', '_', 'continue', 'break', 'return', 'revert', 'address', 'byte', 'let', '=:', 'switch', DecimalNumber, Identifier, HexNumber, HexLiteral, StringLiteral}
line 498:23 mismatched input '.' expecting ')'
line 498:28 extraneous input ',' expecting {'solidity', 'experimental', 'from', '{', '}', '(', 'for', 'function', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'emit', 'if', 'assembly', '_', 'continue', 'break', 'return', 'revert', 'address', 'byte', 'let', '=:', 'switch', DecimalNumber, Identifier, HexNumber, HexLiteral, StringLiteral}
line 498:36 extraneous input ')' expecting {'solidity', 'experimental', 'from', '{', '}', '(', 'for', 'function', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'emit', 'if', 'assembly', '_', 'continue', 'break', 'return', 'revert', 'address', 'byte', 'let', '=:', 'switch', DecimalNumber, Identifier, HexNumber, HexLiteral, StringLiteral}
line 514:36 mismatched input '.' expecting ')'
line 514:41 extraneous input ')' expecting {'solidity', 'experimental', 'from', '{', '}', '(', 'for', 'function', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'length', 'balance', 'emit', 'if', 'assembly', '_', 'continue', 'break', 'return', 'revert', 'address', 'byte', 'let', '=:', 'switch', DecimalNumber, Identifier, HexNumber, HexLiteral, StringLiteral}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 29
column: 4
content: functionaddressPtr(stringmemoryname)internalpurereturns(Addressstoragedata){bytes32typehash=keccak256("address");bytes32offset=keccak256(abi.encodePacked(typehash,name));assembly{data.slot:=offset}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 64
column: 4
content: functionuint256Ptr(stringmemoryname)internalpurereturns(Uint256storagedata){bytes32typehash=keccak256("uint256");bytes32offset=keccak256(abi.encodePacked(typehash,name));assembly{data.slot:=offset}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 93
column: 4
content: functionmappingAddressToUnit256Ptr(stringmemoryname)internalpurereturns(mapping(address=>uint256)storagedata){bytes32typehash=keccak256("mapping(address => uint256)");bytes32offset=keccak256(abi.encodePacked(typehash,name));assembly{data.slot:=offset}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 108
column: 4
content: functionmappingAddressToUnit256ArrayPtr(stringmemoryname)internalpurereturns(mapping(address=>uint256[])storagedata){bytes32typehash=keccak256("mapping(address => uint256[])");bytes32offset=keccak256(abi.encodePacked(typehash,name));assembly{data.slot:=offset}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 144
column: 4
content: functionmappingAddressToPackedAddressUint(stringmemoryname)internalpurereturns(mapping(address=>AddressUint)storagedata){bytes32typehash=keccak256("mapping(address => AddressUint)");bytes32offset=keccak256(abi.encodePacked(typehash,name));assembly{data.slot:=offset}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 207
column: 4
content: function_getMapping(bytes32pointer)privatepurereturns(mapping(address=>uint256[])storagestorageData){assembly{storageData.slot:=pointer}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 387
column: 15
content: minIndex!=maxIndex

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 29
column: 4
content: functionaddressPtr(stringmemoryname)internalpurereturns(Addressstoragedata){bytes32typehash=keccak256("address");bytes32offset=keccak256(abi.encodePacked(typehash,name));assembly{data.slot:=offset}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 64
column: 4
content: functionuint256Ptr(stringmemoryname)internalpurereturns(Uint256storagedata){bytes32typehash=keccak256("uint256");bytes32offset=keccak256(abi.encodePacked(typehash,name));assembly{data.slot:=offset}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 93
column: 4
content: functionmappingAddressToUnit256Ptr(stringmemoryname)internalpurereturns(mapping(address=>uint256)storagedata){bytes32typehash=keccak256("mapping(address => uint256)");bytes32offset=keccak256(abi.encodePacked(typehash,name));assembly{data.slot:=offset}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 108
column: 4
content: functionmappingAddressToUnit256ArrayPtr(stringmemoryname)internalpurereturns(mapping(address=>uint256[])storagedata){bytes32typehash=keccak256("mapping(address => uint256[])");bytes32offset=keccak256(abi.encodePacked(typehash,name));assembly{data.slot:=offset}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 144
column: 4
content: functionmappingAddressToPackedAddressUint(stringmemoryname)internalpurereturns(mapping(address=>AddressUint)storagedata){bytes32typehash=keccak256("mapping(address => AddressUint)");bytes32offset=keccak256(abi.encodePacked(typehash,name));assembly{data.slot:=offset}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 188
column: 4
content: functionload(stringmemoryname)internalpurereturns(HistoricalBalancesmemory){mapping(address=>uint256[])storagestorageData=Storage.mappingAddressToUnit256ArrayPtr(name);bytes32pointer;assembly{pointer:=storageData.slot}returnHistoricalBalances(name,pointer);}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 207
column: 4
content: function_getMapping(bytes32pointer)privatepurereturns(mapping(address=>uint256[])storagestorageData){assembly{storageData.slot:=pointer}}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 458
column: 4
content: function_loadAndUnpack(uint256[]storagedata,uint256i)privateviewreturns(uint256,uint256){uint256loaded;assembly{loaded:=sload(add(add<missing ')'>(data.slot,1),i))}return(loaded>>192,loaded&0x0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff);}

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 506
column: 4
content: function_loadBounds(uint256[]storagedata)privateviewreturns(uint256minInd,uint256length){uint256packedData;assembly{packedData:=sload(data.slot)}minInd=packedData>>128;length=packedData&0x00000000000000000000000000000000ffffffffffffffffffffffffffffffff;}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 373
column: 27
content: (uint256,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 461
column: 16
content: (uint256,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 509
column: 16
content: (uint256minInd,uint256length)

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 36
column: 8
content: assembly{data.slot:=offset}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 71
column: 8
content: assembly{data.slot:=offset}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 100
column: 8
content: assembly{data.slot:=offset}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 115
column: 8
content: assembly{data.slot:=offset}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 151
column: 8
content: assembly{data.slot:=offset}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 196
column: 8
content: assembly{pointer:=storageData.slot}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 212
column: 8
content: assembly{storageData.slot:=pointer}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 256
column: 8
content: assembly{sstore(add(add<missing ')'>(storageData.slot,1),index),packedData)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 437
column: 8
content: assembly{letdataLocation:=add(data.slot,1)for{leti:=oldMin}lt(i,newMin){i:=add(i,1)}{sstore(add(dataLocation,i),0)}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 466
column: 8
content: assembly{loaded:=sload(add(add<missing ')'>(data.slot,1),i))}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 487
column: 8
content: assembly{letclearedLength:=and(length,0x00000000000000000000000000000000ffffffffffffffffffffffffffffffff)letminInd:=shl(128,minIndex)letpacked:=or(minInd,clearedLength)sstore(data.slot,packed)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 513
column: 8
content: assembly{packedData:=sload(data.slot)}

SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :6
SOLIDITY_GAS_LIMIT_IN_LOOPS :1
SOLIDITY_USING_INLINE_ASSEMBLY :12
SOLIDITY_SHOULD_RETURN_STRUCT :3
SOLIDITY_SHOULD_NOT_BE_VIEW :2
SOLIDITY_SHOULD_NOT_BE_PURE :7
