/sb/TradeCallee.sol
line 11:34 mismatched input 'payable' expecting {',', ')'}
line 11:49 no viable alternative at input '_sender,'
line 11:49 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 11:57 extraneous input 'memory' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 11:69 mismatched input ')' expecting {';', '='}
line 368:31 mismatched input 'payable' expecting {',', ')'}
line 368:48 no viable alternative at input 'recipient,'
line 368:48 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 368:64 mismatched input ')' expecting {';', '='}
line 369:15 mismatched input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 369:23 mismatched input '(' expecting ')'
line 369:29 extraneous input '.' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 369:38 mismatched input '>=' expecting {';', '='}
line 369:47 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 372:14 missing ')' at 'success'
line 372:21 mismatched input ',' expecting {';', '='}
line 372:41 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 372:47 mismatched input ':' expecting {';', '='}
line 372:55 mismatched input '}' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 372:56 extraneous input '(' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 556:49 no viable alternative at input '(bool))'
line 556:48 no viable alternative at input 'bool)'
line 556:50 mismatched input ',' expecting ';'
line 556:96 extraneous input ')' expecting ';'
line 595:34 mismatched input 'payable' expecting {',', ')'}
line 595:49 no viable alternative at input '_sender,'
line 595:49 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 595:57 extraneous input 'memory' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 595:69 mismatched input ')' expecting {';', '='}
line 595:89 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 596:15 mismatched input '(' expecting {';', '='}
line 596:27 mismatched input '==' expecting ')'
line 596:40 mismatched input ',' expecting {';', '='}
line 599:20 missing ')' at 'trader'
line 599:26 mismatched input ',' expecting {';', '='}
line 600:48 extraneous input 'memory' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 600:61 mismatched input ',' expecting {';', '='}
line 601:47 extraneous input 'memory' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 601:64 mismatched input ',' expecting {';', '='}
line 602:22 extraneous input 'memory' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 602:50 mismatched input ',' expecting {';', '='}
line 604:8 extraneous input ')' expecting {';', '='}
line 606:20 no viable alternative at input '(address,'
line 606:20 no viable alternative at input 'address,'
line 606:20 extraneous input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 606:44 mismatched input '.' expecting {';', '='}
line 606:57 extraneous input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 606:81 mismatched input '.' expecting {';', '='}
line 606:93 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 606:104 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 606:110 mismatched input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 612:15 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 613:14 mismatched input '.' expecting {';', '='}
line 613:22 extraneous input '==' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 613:31 mismatched input ',' expecting {';', '='}
line 617:21 missing ')' at 'i'
line 617:30 extraneous input '<' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 617:38 mismatched input '.' expecting {';', '='}
line 617:45 extraneous input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 617:48 mismatched input '++' expecting {';', '='}
line 620:26 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 620:37 mismatched input ')' expecting {';', '='}
line 620:55 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 620:62 mismatched input ',' expecting {';', '='}
line 620:71 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 620:76 mismatched input ')' expecting {';', '='}
line 620:103 mismatched input ')' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 622:26 extraneous input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 622:37 mismatched input ')' expecting {';', '='}
line 622:60 mismatched input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 622:68 mismatched input '(' expecting ')'
line 622:78 extraneous input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 622:101 mismatched input '[' expecting {';', '='}
line 622:103 mismatched input ']' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 626:8 extraneous input 'uint256' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 569
column: 0
content: contractTradeCalleeisCalleeInterface{usingSafeERC20forERC20Interface;uint256privatePROTOCOL_FEE_BASE=70000;ZeroXExchangeInterfacepublicexchange;WETH9Interfacepublicweth;addresspubliccontroller;constructor(address_exchange,address_weth,address_controller)public{exchange=ZeroXExchangeInterface(_exchange);weth=WETH9Interface(_weth);controller=_controller;}functioncallFunction(addresspayable_sender,bytesmemory_data)externaloverride{require(msg.sender==controller,"TradeCallee: sender is not controller");(address<missing ')'>trader,ZeroXExchangeInterface.LimitOrder[]memoryorders,ZeroXExchangeInterface.Signature[]memorysignatures,uint128[]memorytakerTokenFillAmounts,boolrevertIfIncomplete)=abi.decode(_data,<missing ')'>(<missing ';'>address,ZeroXExchangeInterface.LimitOrder[],ZeroXExchangeInterface.Signature[],uint128[],bool));require(tx.origin==trader,"TradeCallee: funds can only be transferred in from the person sending the transaction");for(uint256<missing ')'>i=0;i<orders.length;i++){addresstakerAsset=orders[i].takerToken;ERC20Interface(takerAsset).safeTransferFrom(trader,address(this),takerTokenFillAmounts[i]);ERC20Interface(takerAsset).safeIncreaseAllowance(address<missing ';'>(exchange),takerTokenFillAmounts[i]);}

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 573
column: 12
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 477
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 339
column: 4
content: functionisContract(addressaccount)internalviewreturns(bool){uint256size;assembly{size:=extcodesize(account)}returnsize>0;}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 50
column: 31
content: (uint128[]memorytakerTokenFilledAmounts,uint128[]memorymakerTokenFilledAmounts)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 485
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.transfer.selector,to,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 494
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.transferFrom.selector,from,to,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 517
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 526
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,newAllowance))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 538
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,newAllowance))

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 11
column: 4
content: functioncallFunction(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 368
column: 4
content: functionsendValue(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 595
column: 4
content: functioncallFunction(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 11
column: 42
content: _sender,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 11
column: 51
content: bytesmemory_data)external;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 368
column: 39
content: recipient,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 368
column: 50
content: uint256amount)internal{

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 369
column: 8
content: require

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 369
column: 15
content: (address<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 369
column: 23
content: (this).balance>=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 369
column: 41
content: amount,"Address: insufficient balance");

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 372
column: 8
content: (bool<missing ')'>success,)=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 372
column: 27
content: recipient.call{value:

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 372
column: 49
content: amount

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 595
column: 42
content: _sender,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 595
column: 51
content: bytesmemory_data)external

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 595
column: 80
content: override{require

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 596
column: 15
content: (msg.sender==controller,"TradeCallee: sender is not controller");

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 598
column: 8
content: (address<missing ')'>trader,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 600
column: 12
content: ZeroXExchangeInterface.LimitOrder[]memoryorders,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 601
column: 12
content: ZeroXExchangeInterface.Signature[]memorysignatures,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 602
column: 12
content: uint128[]memorytakerTokenFillAmounts,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 603
column: 12
content: boolrevertIfIncomplete)=abi.decode(_data,<missing ')'>(<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 606
column: 13
content: address,ZeroXExchangeInterface.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 606
column: 45
content: LimitOrder[],ZeroXExchangeInterface.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 606
column: 82
content: Signature[],

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 606
column: 95
content: uint128[],

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 606
column: 106
content: bool));

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 612
column: 8
content: require(tx.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 613
column: 15
content: origin==trader,"TradeCallee: funds can only be transferred in from the person sending the transaction");for

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 617
column: 12
content: (uint256<missing ')'>i=0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 617
column: 28
content: i<orders.

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 617
column: 39
content: length;i++){

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 618
column: 12
content: addresstakerAsset=orders[i].takerToken;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 620
column: 12
content: ERC20Interface(takerAsset).

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 620
column: 39
content: safeTransferFrom(trader,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 620
column: 64
content: address(this),

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 620
column: 79
content: takerTokenFillAmounts[i]);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 622
column: 12
content: ERC20Interface(takerAsset).

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 622
column: 39
content: safeIncreaseAllowance

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 622
column: 60
content: (address<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 622
column: 68
content: (exchange),takerTokenFillAmounts[

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 622
column: 102
content: i]);

SOLIDITY_VISIBILITY :43
SOLIDITY_SAFEMATH :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :1
SOLIDITY_UNCHECKED_CALL :5
SOLIDITY_SHOULD_RETURN_STRUCT :1
SOLIDITY_SHOULD_NOT_BE_VIEW :1
