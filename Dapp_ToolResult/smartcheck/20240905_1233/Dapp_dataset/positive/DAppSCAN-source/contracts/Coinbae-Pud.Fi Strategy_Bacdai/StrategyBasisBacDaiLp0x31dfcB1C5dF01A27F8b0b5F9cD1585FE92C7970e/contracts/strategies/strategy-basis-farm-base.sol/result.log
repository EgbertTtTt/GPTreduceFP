/sb/strategy-basis-farm-base.sol
line 171:0 extraneous input 'abstract' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 172:65 extraneous input 'payable' expecting {',', ')'}
line 307:31 mismatched input 'payable' expecting {',', ')'}
line 307:48 no viable alternative at input 'recipient,'
line 307:48 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 307:64 mismatched input ')' expecting {';', '='}
line 308:15 mismatched input '(' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 308:23 mismatched input '(' expecting ')'
line 308:29 extraneous input '.' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 308:38 mismatched input '>=' expecting {';', '='}
line 308:47 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 311:14 missing ')' at 'success'
line 311:21 mismatched input ',' expecting {';', '='}
line 311:41 extraneous input '{' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 311:48 mismatched input ':' expecting {';', '='}
line 311:57 mismatched input '}' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 311:58 extraneous input '(' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 762:49 no viable alternative at input '(bool))'
line 762:48 no viable alternative at input 'bool)'
line 762:50 mismatched input ',' expecting ';'
line 762:96 extraneous input ')' expecting ';'
line 961:27 extraneous input 'path' expecting {',', ')'}
line 961:31 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 962:18 mismatched input ',' expecting {';', '='}
line 964:4 mismatched input ')' expecting {';', '='}
line 964:34 mismatched input 'memory' expecting ')'
line 964:48 extraneous input ')' expecting {';', '='}
line 1009:64 extraneous input 'path' expecting {',', ')'}
line 1014:64 extraneous input 'path' expecting {',', ')'}
line 1021:27 extraneous input 'path' expecting {',', ')'}
line 1021:31 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1022:18 mismatched input ',' expecting {';', '='}
line 1024:4 mismatched input ')' expecting {';', '='}
line 1024:42 mismatched input 'memory' expecting ')'
line 1024:56 extraneous input ')' expecting {';', '='}
line 1028:27 extraneous input 'path' expecting {',', ')'}
line 1028:31 mismatched input ',' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 1029:18 mismatched input ',' expecting {';', '='}
line 1031:4 mismatched input ')' expecting {';', '='}
line 1031:42 mismatched input 'memory' expecting ')'
line 1031:56 extraneous input ')' expecting {';', '='}
line 1133:23 extraneous input 'data' expecting {',', ')'}
line 1184:0 extraneous input 'abstract' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 1536:0 extraneous input 'abstract' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 1207
column: 26
content: 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 1214
column: 34
content: 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 1215
column: 33
content: 0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 622
column: 28
content: (address(0),account,amount)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 643
column: 28
content: (account,address(0),amount)

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 526
column: 4
content: functionapprove(addressspender,uint256amount)publicvirtualoverridereturns(bool){_approve(_msgSender(),spender,amount);returntrue;}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 1370
column: 4
content: functionexecute(address_target,bytesmemory_data)publicpayablereturns(bytesmemoryresponse){require(msg.sender==strategist,"!strategist");require(_target!=address(0),"!target");assembly{letsucceeded:=delegatecall(sub(gas(),5000),_target,add(_data,0x20),mload(_data),0,0)letsize:=returndatasize()response:=mload(0x40)mstore(0x40,add(response,and(add(add(size,0x20),0x1f),not(0x1f))))mstore(response,size)returndatacopy(add(response,0x20),0,size)switchiszero(succeeded)case1{revert(add(response,0x20),size)}}}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 1184
column: 9
content: contractStrategyBase{usingSafeERC20forIERC20;usingAddressforaddress;usingSafeMathforuint256;uint256publicperformanceTreasuryFee=500;uint256publicconstantperformanceTreasuryMax=10000;uint256publicperformanceDevFee=1000;uint256publicconstantperformanceDevMax=10000;uint256publicwithdrawalTreasuryFee=0;uint256publicconstantwithdrawalTreasuryMax=100000;uint256publicwithdrawalDevFundFee=0;uint256publicconstantwithdrawalDevFundMax=100000;addresspubliclp;addresspublicweth=0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;addresspubliccontroller;addresspublicstrategist;addresspublicuniv2Router2=0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;addresspublicsushiRouter=0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F;mapping(address=>bool)publicharvesters;constructor(address_lp,address_strategist,address_controller)public{require(_lp!=address(0));require(_strategist!=address(0));lp=_lp;strategist=_strategist;controller=_controller;}modifieronlyBenevolent{require(harvesters[msg.sender]||msg.sender==controller||msg.sender==strategist);_;}functionbalanceOfWant()publicviewreturns(uint256){returnIERC20(lp).balanceOf(address(this));}functionbalanceOfPool()publicvirtualviewreturns(uint256);functionbalanceOf()publicviewreturns(uint256){returnbalanceOfWant().add(balanceOfPool());}functiongetName()externalvirtualpurereturns(stringmemory);functionwhitelistHarvester(address_harvester)external{require(msg.sender==controller||msg.sender==strategist,"not authorized");harvesters[_harvester]=true;}functionrevokeHarvester(address_harvester)external{require(msg.sender==controller||msg.sender==strategist,"not authorized");harvesters[_harvester]=false;}functionsetWithdrawalDevFundFee(uint256_withdrawalDevFundFee)external{require(msg.sender==strategist,"!strategist");withdrawalDevFundFee=_withdrawalDevFundFee;}functionsetWithdrawalTreasuryFee(uint256_withdrawalTreasuryFee)external{require(msg.sender==strategist,"!strategist");withdrawalTreasuryFee=_withdrawalTreasuryFee;}functionsetPerformanceDevFee(uint256_performanceDevFee)external{require(msg.sender==strategist,"!strategist");performanceDevFee=_performanceDevFee;}functionsetPerformanceTreasuryFee(uint256_performanceTreasuryFee)external{require(msg.sender==strategist,"!strategist");performanceTreasuryFee=_performanceTreasuryFee;}functionsetStrategist(address_strategist)external{require(msg.sender==strategist,"!strategist");strategist=_strategist;}functionsetController(address_controller)external{require(msg.sender==strategist,"!strategist");controller=_controller;}functionsetUniv2Router2(address_univ2Router2)external{require(msg.sender==strategist,"!strategist");univ2Router2=_univ2Router2;}functionsetSushiRouter(address_sushiRouter)external{require(msg.sender==strategist,"!strategist");sushiRouter=_sushiRouter;}functionsetWETH(address_weth)external{require(msg.sender==strategist,"!strategist");weth=_weth;}functiondeposit()publicvirtual;functionwithdraw(uint256_amount)external{require(msg.sender==controller,"!controller");uint256_balance=IERC20(lp).balanceOf(address(this));if(_balance<_amount){_amount=_withdrawSome(_amount.sub(_balance));_amount=_amount.add(_balance);}uint256_feeDev=_amount.mul(withdrawalDevFundFee).div(withdrawalDevFundMax);IERC20(lp).safeTransfer(IController(controller).devaddr(),_feeDev);uint256_feeTreasury=_amount.mul(withdrawalTreasuryFee).div(withdrawalTreasuryMax);IERC20(lp).safeTransfer(IController(controller).treasury(),_feeTreasury);IERC20(lp).safeTransfer(controller,_amount.sub(_feeDev).sub(_feeTreasury));}functionwithdrawAll(address_newStrategy)externalreturns(uint256balance){require(msg.sender==controller,"!controller");_withdrawAll();balance=IERC20(lp).balanceOf(address(this));require(_newStrategy!=address(0),"!newStrategy");IERC20(lp).safeTransfer(_newStrategy,balance);}function_withdrawAll()internal{_withdrawSome(balanceOfPool());}function_withdrawSome(uint256_amount)internalvirtualreturns(uint256);functionharvest()publicvirtual;functionexecute(address_target,bytesmemory_data)publicpayablereturns(bytesmemoryresponse){require(msg.sender==strategist,"!strategist");require(_target!=address(0),"!target");assembly{letsucceeded:=delegatecall(sub(gas(),5000),_target,add(_data,0x20),mload(_data),0,0)letsize:=returndatasize()response:=mload(0x40)mstore(0x40,add(response,and(add(add(size,0x20),0x1f),not(0x1f))))mstore(response,size)returndatacopy(add(response,0x20),0,size)switchiszero(succeeded)case1{revert(add(response,0x20),size)}}}function_swapUniswap(address_from,address_to,uint256_amount)internal{require(_to!=address(0));IERC20(_from).safeApprove(univ2Router2,0);IERC20(_from).safeApprove(univ2Router2,_amount);address[]memorypath;if(_from==weth||_to==weth){path=newaddress[](2);path[0]=_from;path[1]=_to;}else{path=newaddress[](3);path[0]=_from;path[1]=weth;path[2]=_to;}UniswapRouterV2(univ2Router2).swapExactTokensForTokens(_amount,0,path,address(this),now.add(60));}function_swapUniswapWithPath(address[]memorypath,uint256_amount)internal{require(path[1]!=address(0));IERC20(path[0]).safeApprove(univ2Router2,0);IERC20(path[0]).safeApprove(univ2Router2,_amount);UniswapRouterV2(univ2Router2).swapExactTokensForTokens(_amount,0,path,address(this),now.add(60));}function_swapSushiswap(address_from,address_to,uint256_amount)internal{require(_to!=address(0));IERC20(_from).safeApprove(sushiRouter,0);IERC20(_from).safeApprove(sushiRouter,_amount);address[]memorypath;if(_from==weth||_to==weth){path=newaddress[](2);path[0]=_from;path[1]=_to;}else{path=newaddress[](3);path[0]=_from;path[1]=weth;path[2]=_to;}UniswapRouterV2(sushiRouter).swapExactTokensForTokens(_amount,0,path,address(this),now.add(60));}function_swapSushiswapWithPath(address[]memorypath,uint256_amount)internal{require(path[1]!=address(0));IERC20(path[0]).safeApprove(sushiRouter,0);IERC20(path[0]).safeApprove(sushiRouter,_amount);UniswapRouterV2(sushiRouter).swapExactTokensForTokens(_amount,0,path,address(this),now.add(60));}function_distributePerformanceFeesAndDeposit()internal{uint256_lp=IERC20(lp).balanceOf(address(this));if(_lp>0){IERC20(lp).safeTransfer(IController(controller).treasury(),_lp.mul(performanceTreasuryFee).div(performanceTreasuryMax));IERC20(lp).safeTransfer(IController(controller).devaddr(),_lp.mul(performanceDevFee).div(performanceDevMax));deposit();}}}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1273
column: 4
content: functionsetWithdrawalDevFundFee(uint256_withdrawalDevFundFee)external{require(msg.sender==strategist,"!strategist");withdrawalDevFundFee=_withdrawalDevFundFee;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1278
column: 4
content: functionsetWithdrawalTreasuryFee(uint256_withdrawalTreasuryFee)external{require(msg.sender==strategist,"!strategist");withdrawalTreasuryFee=_withdrawalTreasuryFee;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1283
column: 4
content: functionsetPerformanceDevFee(uint256_performanceDevFee)external{require(msg.sender==strategist,"!strategist");performanceDevFee=_performanceDevFee;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1288
column: 4
content: functionsetPerformanceTreasuryFee(uint256_performanceTreasuryFee)external{require(msg.sender==strategist,"!strategist");performanceTreasuryFee=_performanceTreasuryFee;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1295
column: 4
content: functionsetStrategist(address_strategist)external{require(msg.sender==strategist,"!strategist");strategist=_strategist;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1300
column: 4
content: functionsetController(address_controller)external{require(msg.sender==strategist,"!strategist");controller=_controller;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1305
column: 4
content: functionsetUniv2Router2(address_univ2Router2)external{require(msg.sender==strategist,"!strategist");univ2Router2=_univ2Router2;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1310
column: 4
content: functionsetSushiRouter(address_sushiRouter)external{require(msg.sender==strategist,"!strategist");sushiRouter=_sushiRouter;}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 1315
column: 4
content: functionsetWETH(address_weth)external{require(msg.sender==strategist,"!strategist");weth=_weth;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 426
column: 33
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 428
column: 54
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 430
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 432
column: 11
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 433
column: 11
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 434
column: 10
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 423
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 709
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 1187
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_NOT_BE_VIEW
patternId: 189abf
severity: 1
line: 280
column: 4
content: functionisContract(addressaccount)internalviewreturns(bool){uint256size;assembly{size:=extcodesize(account)}returnsize>0;}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 869
column: 16
content: (addressstakingRewards,uint256rewardAmount)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 918
column: 16
content: (addresslpToken,uint256allocPoint,uint256lastRewardBlock,uint256accPudPerShare)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 952
column: 16
content: (uint256amount,uint256rewardDebt)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 977
column: 16
content: (uint256amountA,uint256amountB,uint256liquidity)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 993
column: 16
content: (uint256amountToken,uint256amountETH,uint256liquidity)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1007
column: 23
content: (uint256amountA,uint256amountB)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1111
column: 16
content: (uint112reserve0,uint112reserve1,uint32blockTimestampLast)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 1127
column: 16
content: (uint256amount0,uint256amount1)

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 713
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.transfer.selector,to,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 717
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.transferFrom.selector,from,to,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 735
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,value))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 740
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,newAllowance))

ruleId: SOLIDITY_UNCHECKED_CALL
patternId: f39eed
severity: 3
line: 745
column: 8
content: _callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,newAllowance))

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 1379
column: 8
content: assembly{letsucceeded:=delegatecall(sub(gas(),5000),_target,add(_data,0x20),mload(_data),0,0)letsize:=returndatasize()response:=mload(0x40)mstore(0x40,add(response,and(add(add(size,0x20),0x1f),not(0x1f))))mstore(response,size)returndatacopy(add(response,0x20),0,size)switchiszero(succeeded)case1{revert(add(response,0x20),size)}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 307
column: 4
content: functionsendValue(addresspayable

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 958
column: 4
content: functionswapExactTokensForTokens(uint256amountIn,uint256amountOutMin,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1019
column: 4
content: functionswapETHForExactTokens(uint256amountOut,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 1026
column: 4
content: functionswapExactETHForTokens(uint256amountOutMin,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 307
column: 39
content: recipient,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 307
column: 50
content: uint256amount)internal{

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 308
column: 8
content: require

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 308
column: 15
content: (address<missing ';'>

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 308
column: 23
content: (this).balance>=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 308
column: 41
content: amount,"Address: insufficient balance");

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 311
column: 8
content: (bool<missing ')'>success,)=

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 311
column: 27
content: recipient.call{value:

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 311
column: 50
content: amount

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 961
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 962
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 963
column: 8
content: uint256deadline)externalreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 964
column: 23
content: (uint256[]memoryamounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1021
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1022
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1023
column: 8
content: uint256deadline)externalpayablereturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1024
column: 31
content: (uint256[]memoryamounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1028
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1029
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1030
column: 8
content: uint256deadline)externalpayablereturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 1031
column: 31
content: (uint256[]memoryamounts);

SOLIDITY_VISIBILITY :25
SOLIDITY_OVERPOWERED_ROLE :9
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :6
SOLIDITY_ADDRESS_HARDCODED :5
SOLIDITY_UNCHECKED_CALL :5
SOLIDITY_SHOULD_RETURN_STRUCT :8
SOLIDITY_ERC20_APPROVE :1
SOLIDITY_SAFEMATH :3
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_USING_INLINE_ASSEMBLY :1
SOLIDITY_SHOULD_NOT_BE_VIEW :1
