/sb/InterestTokenFactory.sol
line 159:0 extraneous input 'abstract' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 164:27 extraneous input 'symbol' expecting {';', '='}
line 166:26 extraneous input 'decimals' expecting {';', '='}
line 169:48 extraneous input 'balanceOf' expecting {';', '='}
line 171:68 extraneous input 'allowance' expecting {';', '='}
line 173:48 extraneous input 'nonces' expecting {';', '='}
line 177:28 extraneous input 'DOMAIN_SEPARATOR' expecting {';', '='}
line 198:44 no viable alternative at input '(uint256)'
line 198:44 no viable alternative at input 'uint256)'
line 199:47 no viable alternative at input '(uint256)'
line 199:47 no viable alternative at input 'uint256)'
line 255:39 no viable alternative at input '(uint256)'
line 255:39 no viable alternative at input 'uint256)'
line 565:30 extraneous input 'tranche' expecting {';', '='}
line 636:36 mismatched input 'override' expecting {';', '='}
line 637:38 extraneous input 'position' expecting {';', '='}
line 638:28 extraneous input 'underlying' expecting {';', '='}
line 639:29 extraneous input '_underlyingDecimals' expecting {';', '='}
line 646:28 extraneous input 'interestSupply' expecting {';', '='}
line 648:29 extraneous input 'unlockTimestamp' expecting {';', '='}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 198
column: 8
content: balanceOf[address(0)]

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 305
column: 4
content: functionapprove(addressaccount,uint256amount)publicvirtualoverridereturns(bool){allowance[msg.sender][account]=amount;emitApproval(msg.sender,account,amount);returntrue;}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 453
column: 8
content: for(uint256i=0;i<bytePrefix.length;i++){bytesOutput.push(bytePrefix[i]);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 453
column: 8
content: for(uint256i=0;i<bytePrefix.length;i++){bytesOutput.push(bytePrefix[i]);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_REVERT_REQUIRE
patternId: c56b12
severity: 1
line: 533
column: 15
content: if(month==12){output.push(bytes1("D"));output.push(bytes1("E"));output.push(bytes1("C"));}else{revert("date decoding error");}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 121
column: 16
content: (uint256,uint256,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 137
column: 16
content: (uint256,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 141
column: 16
content: (uint256,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 410
column: 16
content: (uint256year,uint256month,uint256day)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 626
column: 16
content: (address,uint256,InterestToken)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 701
column: 16
content: (uint256,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 719
column: 16
content: (uint256,uint256)

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 187
column: 4
content: constructor(stringmemoryname_,stringmemorysymbol_){name=name_;symbol=symbol_;decimals=18;balanceOf[address(0)]=type(uint256).max;balanceOf[address(this)]=type(uint256).max;DOMAIN_SEPARATOR=keccak256(abi.encode(keccak256("EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"),keccak256(bytes(name)),keccak256(bytes("1")),block.chainid,address(this)));}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 571
column: 4
content: constructor(address_tranche,stringmemory_strategySymbol,uint256_timestamp,uint8_decimals)ERC20Permit("Element Yield Token ","eY:"){tranche=ITranche(_tranche);_setupDecimals(_decimals);DateString.encodeAndWriteTimestamp(_strategySymbol,_timestamp,name);DateString.encodeAndWriteTimestamp(_strategySymbol,_timestamp,symbol);}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 653
column: 4
content: constructor()ERC20Permit("Element Principal Token","eP:"){ITrancheFactorytrancheFactory=ITrancheFactory(msg.sender);(addresswpAddress,uint256expiration,IInterestTokeninterestTokenTemp)=trancheFactory.getData();interestToken=interestTokenTemp;IWrappedPositionwpContract=IWrappedPosition(wpAddress);position=wpContract;stringmemorystrategySymbol=wpContract.symbol();unlockTimestamp=expiration;IERC20localUnderlying=wpContract.token();underlying=localUnderlying;uint8localUnderlyingDecimals=localUnderlying.decimals();_underlyingDecimals=localUnderlyingDecimals;_setupDecimals(localUnderlyingDecimals);DateString.encodeAndWriteTimestamp(strategySymbol,expiration,name);DateString.encodeAndWriteTimestamp(strategySymbol,expiration,symbol);}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 636
column: 36
content: overrideinterestToken;

SOLIDITY_VISIBILITY :4
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_REVERT_REQUIRE :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :1
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_GAS_LIMIT_IN_LOOPS :1
SOLIDITY_SHOULD_RETURN_STRUCT :7
SOLIDITY_ERC20_APPROVE :1
