/sb/ERC20Permit.sol
line 98:0 extraneous input 'abstract' expecting {<EOF>, 'pragma', 'import', 'contract', 'library', 'interface'}
line 103:27 extraneous input 'symbol' expecting {';', '='}
line 105:26 extraneous input 'decimals' expecting {';', '='}
line 108:48 extraneous input 'balanceOf' expecting {';', '='}
line 110:68 extraneous input 'allowance' expecting {';', '='}
line 112:48 extraneous input 'nonces' expecting {';', '='}
line 116:28 extraneous input 'DOMAIN_SEPARATOR' expecting {';', '='}
line 137:44 no viable alternative at input '(uint256)'
line 137:44 no viable alternative at input 'uint256)'
line 138:47 no viable alternative at input '(uint256)'
line 138:47 no viable alternative at input 'uint256)'
line 194:39 no viable alternative at input '(uint256)'
line 194:39 no viable alternative at input 'uint256)'
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 137
column: 8
content: balanceOf[address(0)]

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 244
column: 4
content: functionapprove(addressaccount,uint256amount)publicvirtualoverridereturns(bool){allowance[msg.sender][account]=amount;emitApproval(msg.sender,account,amount);returntrue;}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 126
column: 4
content: constructor(stringmemoryname_,stringmemorysymbol_){name=name_;symbol=symbol_;decimals=18;balanceOf[address(0)]=type(uint256).max;balanceOf[address(this)]=type(uint256).max;DOMAIN_SEPARATOR=keccak256(abi.encode(keccak256("EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"),keccak256(bytes(name)),keccak256(bytes("1")),block.chainid,address(this)));}

SOLIDITY_VISIBILITY :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_ERC20_APPROVE :1
