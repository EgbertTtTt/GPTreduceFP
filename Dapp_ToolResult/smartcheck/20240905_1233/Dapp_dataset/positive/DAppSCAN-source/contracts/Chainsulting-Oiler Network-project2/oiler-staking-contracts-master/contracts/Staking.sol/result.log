/sb/Staking.sol
line 137:22 mismatched input 'public' expecting {';', '='}
line 137:52 mismatched input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 139:22 mismatched input 'public' expecting {';', '='}
line 139:46 extraneous input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 142:11 mismatched input 'public' expecting {';', '='}
line 142:27 extraneous input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 144:11 mismatched input 'immutable' expecting {';', '='}
line 152:22 mismatched input 'public' expecting {';', '='}
line 152:44 mismatched input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
line 161:22 mismatched input 'public' expecting {';', '='}
line 161:34 mismatched input ';' expecting {'solidity', 'experimental', 'from', 'constructor', 'block', 'coinbase', 'difficulty', 'gaslimit', 'number', 'timestamp', 'blockhash', 'msg', 'data', 'gas', 'sender', 'sig', 'value', 'now', 'this', 'tx', 'origin', 'gasprice', 'public', 'internal', 'external', 'private', 'constant', 'length', 'balance', 'emit', '_', 'revert', Identifier}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 156
column: 46
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 180
column: 34
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 183
column: 39
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 188
column: 47
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 200
column: 46
content: 0x0

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: c67a09
severity: 1
line: 201
column: 38
content: 0x0

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 199
column: 4
content: functionsetPoolToken(addresspoolToken_)publiconlyOwner{require(address(poolToken)==address(0x0),"poolToken was already set");require(poolToken_!=address(0x0),"poolToken address cannot be zero");poolToken=IERC20(poolToken_);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 179
column: 4
content: constructor(addressoilerToken_,uint256stakingDurationInBlocks_,addressstakingFundAddress_,uint256stakingFundAmount_,uint256vestingDuration_,addressowner_){require(owner_!=address(0x0),"Owner address cannot be zero");owner=owner_;require(oilerToken_!=address(0x0),"oilerToken address cannot be zero");oilerToken=IERC20(oilerToken_);stakingProgramEndsBlock=block.number+stakingDurationInBlocks_;vestingDuration=vestingDuration_;require(stakingFundAddress_!=address(0x0),"StakingFund address cannot be zero");require(IERC20(oilerToken_).balanceOf(stakingFundAddress_)>=stakingFundAmount_,"StakingFund doesn't have enough OIL balance");require(IERC20(oilerToken_).allowance(stakingFundAddress_,address(this))>=stakingFundAmount_,"StakingFund doesn't have enough allowance");require(IERC20(oilerToken_).transferFrom(stakingFundAddress_,address(this),stakingFundAmount_),"TransferFrom of OIL from StakingFund failed");stakingFundAmount=stakingFundAmount_;}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 137
column: 4
content: uint256immutablepublic

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 137
column: 29
content: stakingProgramEndsBlock;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 139
column: 4
content: uint256immutablepublic

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 139
column: 29
content: stakingFundAmount;IERC20public

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 142
column: 18
content: poolToken;IERC20

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 152
column: 4
content: uint256immutablepublic

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 152
column: 29
content: vestingDuration;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 161
column: 4
content: addressimmutablepublic

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 161
column: 29
content: owner;

SOLIDITY_VISIBILITY :10
SOLIDITY_OVERPOWERED_ROLE :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_ADDRESS_HARDCODED :6
