/sb/InteractiveCrowdsaleLib.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 439
column: 2
content: functionapprove(addressspender,uintvalue)publicreturns(boolok){returntoken.approve(spender,value);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 570
column: 4
content: for(uint256i=0;i<_saleData.length;i+=3){require(_saleData[i]>_tempTime);require(_saleData[i+1]>0);require((_saleData[i+2]==0)||(_saleData[i+2]>=100));self.milestoneTimes.push(_saleData[i]);self.saleData[_saleData[i]][0]=_saleData[i+1];self.saleData[_saleData[i]][1]=_saleData[i+2];_tempTime=_saleData[i];}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: k4o1l4
severity: 1
line: 724
column: 4
content: while((index<self.milestoneTimes.length)&&(self.milestoneTimes[index]<timestamp)){index++;}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 47acc2
severity: 1
line: 1394
column: 2
content: functionfinalizeSale(InteractiveCrowdsaleStoragestorageself)publicreturns(bool){require(now>=self.base.endTime);require(!self.isFinalized);require(setCanceled(self));self.isFinalized=true;require(launchToken(self));uint256computedValue;if(!self.isCanceled){if(self.totalValuation==self.currentBucket){self.q=(100*(self.valueCommitted-self.totalValuation)/(self.valuationSums[self.totalValuation]))+1;computedValue=self.valueCommitted-self.valuationSums[self.totalValuation];computedValue+=(self.q*self.valuationSums[self.totalValuation])/100;}else{computedValue=self.totalValuation;}self.base.ownerBalance=computedValue;}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 38
column: 2
content: functiontimes(uint256a,uint256b)publicpurereturns(boolerr,uint256res){assembly{res:=mul(a,b)switchor(iszero(b),eq(div(res,b),a))case0{err:=1res:=0}}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 55
column: 2
content: functiondividedBy(uint256a,uint256b)publicpurereturns(boolerr,uint256i){uint256res;assembly{switchiszero(b)case0{res:=div(a,b)letloc:=mload(0x40)mstore(add(loc,0x20),res)i:=mload(add(loc,0x20))}default{err:=1i:=0}}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 78
column: 2
content: functionplus(uint256a,uint256b)publicpurereturns(boolerr,uint256res){assembly{res:=add(a,b)switchand(eq(sub(res,b),a),or(gt(res,b),eq(res,b)))case0{err:=1res:=0}}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 95
column: 2
content: functionminus(uint256a,uint256b)publicpurereturns(boolerr,uint256res){assembly{res:=sub(a,b)switcheq(and(eq(add(res,b),a),or(lt(res,a),eq(res,a))),1)case0{err:=1res:=0}}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 570
column: 4
content: for(uint256i=0;i<_saleData.length;i+=3){require(_saleData[i]>_tempTime);require(_saleData[i+1]>0);require((_saleData[i+2]==0)||(_saleData[i+2]>=100));self.milestoneTimes.push(_saleData[i]);self.saleData[_saleData[i]][0]=_saleData[i+1];self.saleData[_saleData[i]][1]=_saleData[i+2];_tempTime=_saleData[i];}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 724
column: 10
content: (index<self.milestoneTimes.length)&&(self.milestoneTimes[index]<timestamp)

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 821
column: 15
content: i!=HEAD

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 869
column: 16
content: (next!=0)&&(_value!=next)&&((_value<next)!=_direction)

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 1241
column: 14
content: _proposedCommit>=_currentBucket

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: 17f23a
severity: 1
line: 1366
column: 14
content: _proposedCommit<=_currentBucket

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 1
column: 16
content: ^

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 38
column: 2
content: functiontimes(uint256a,uint256b)publicpurereturns(boolerr,uint256res){assembly{res:=mul(a,b)switchor(iszero(b),eq(div(res,b),a))case0{err:=1res:=0}}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 55
column: 2
content: functiondividedBy(uint256a,uint256b)publicpurereturns(boolerr,uint256i){uint256res;assembly{switchiszero(b)case0{res:=div(a,b)letloc:=mload(0x40)mstore(add(loc,0x20),res)i:=mload(add(loc,0x20))}default{err:=1i:=0}}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 78
column: 2
content: functionplus(uint256a,uint256b)publicpurereturns(boolerr,uint256res){assembly{res:=add(a,b)switchand(eq(sub(res,b),a),or(gt(res,b),eq(res,b)))case0{err:=1res:=0}}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 95
column: 2
content: functionminus(uint256a,uint256b)publicpurereturns(boolerr,uint256res){assembly{res:=sub(a,b)switcheq(and(eq(add(res,b),a),or(lt(res,a),eq(res,a))),1)case0{err:=1res:=0}}}

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 832
column: 30
content: (bool,uint256,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 846
column: 30
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 7d54ca
severity: 1
line: 1124
column: 42
content: (uint256,uint256)

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 167
column: 16
content: string_name

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 168
column: 16
content: string_symbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 394
column: 26
content: stringname

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 395
column: 26
content: stringsymbol

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 403
column: 39
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 407
column: 41
content: string

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 550
column: 16
content: uint256[]_saleData

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1067
column: 16
content: uint256[]_saleData

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1073
column: 16
content: string_tokenName

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 1074
column: 16
content: string_tokenSymbol

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 39
column: 4
content: assembly{res:=mul(a,b)switchor(iszero(b),eq(div(res,b),a))case0{err:=1res:=0}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 57
column: 4
content: assembly{switchiszero(b)case0{res:=div(a,b)letloc:=mload(0x40)mstore(add(loc,0x20),res)i:=mload(add(loc,0x20))}default{err:=1i:=0}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 79
column: 4
content: assembly{res:=add(a,b)switchand(eq(sub(res,b),a),or(gt(res,b),eq(res,b)))case0{err:=1res:=0}}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 96
column: 4
content: assembly{res:=sub(a,b)switcheq(and(eq(add(res,b),a),or(lt(res,a),eq(res,a))),1)case0{err:=1res:=0}}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 774
column: 4
content: uint256constantNULL=0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 775
column: 4
content: uint256constantHEAD=0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 776
column: 4
content: boolconstantPREV=false;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 777
column: 4
content: boolconstantNEXT=true;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 964
column: 2
content: uint256constantNULL=0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 965
column: 2
content: uint256constantHEAD=0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 966
column: 2
content: boolconstantPREV=false;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 967
column: 2
content: boolconstantNEXT=true;

SOLIDITY_VISIBILITY :8
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :5
SOLIDITY_EXTRA_GAS_IN_LOOPS :2
SOLIDITY_UPGRADE_TO_050 :10
SOLIDITY_GAS_LIMIT_IN_LOOPS :6
SOLIDITY_USING_INLINE_ASSEMBLY :4
SOLIDITY_SHOULD_RETURN_STRUCT :3
SOLIDITY_SHOULD_NOT_BE_PURE :4
SOLIDITY_ERC20_APPROVE :1
