/sb/DistributionManager.sol
line 107:27 extraneous input 'EMISSION_MANAGER' expecting {';', '='}
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_EXACT_TIME
patternId: 1955d9
severity: 2
line: 192
column: 8
content: block.timestamp==lastUpdateTimestamp

ruleId: SOLIDITY_EXACT_TIME
patternId: 1955d9
severity: 2
line: 333
column: 6
content: lastUpdateTimestamp==block.timestamp

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 158
column: 4
content: for(uint256i=0;i<assetsConfigInput.length;i++){AssetDatastorageassetConfig=assets[assetsConfigInput[i].underlyingAsset];_updateAssetStateInternal(assetsConfigInput[i].underlyingAsset,assetConfig,assetsConfigInput[i].totalStaked);assetConfig.emissionPerSecond=assetsConfigInput[i].emissionPerSecond;emitAssetConfigUpdated(assetsConfigInput[i].underlyingAsset,assetsConfigInput[i].emissionPerSecond);}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 256
column: 4
content: for(uint256i=0;i<stakes.length;i++){accruedRewards=accruedRewards.add(_updateUserAssetInternal(user,stakes[i].underlyingAsset,stakes[i].stakedByUser,stakes[i].totalStaked));}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 283
column: 4
content: for(uint256i=0;i<stakes.length;i++){AssetDatastorageassetConfig=assets[stakes[i].underlyingAsset];uint256assetIndex=_getAssetIndex(assetConfig.index,assetConfig.emissionPerSecond,assetConfig.lastUpdateTimestamp,stakes[i].totalStaked);accruedRewards=accruedRewards.add(_getRewards(stakes[i].stakedByUser,assetIndex,assetConfig.users[user]));}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 158
column: 4
content: for(uint256i=0;i<assetsConfigInput.length;i++){AssetDatastorageassetConfig=assets[assetsConfigInput[i].underlyingAsset];_updateAssetStateInternal(assetsConfigInput[i].underlyingAsset,assetConfig,assetsConfigInput[i].totalStaked);assetConfig.emissionPerSecond=assetsConfigInput[i].emissionPerSecond;emitAssetConfigUpdated(assetsConfigInput[i].underlyingAsset,assetsConfigInput[i].emissionPerSecond);}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 256
column: 4
content: for(uint256i=0;i<stakes.length;i++){accruedRewards=accruedRewards.add(_updateUserAssetInternal(user,stakes[i].underlyingAsset,stakes[i].stakedByUser,stakes[i].totalStaked));}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 283
column: 4
content: for(uint256i=0;i<stakes.length;i++){AssetDatastorageassetConfig=assets[stakes[i].underlyingAsset];uint256assetIndex=_getAssetIndex(assetConfig.index,assetConfig.emissionPerSecond,assetConfig.lastUpdateTimestamp,stakes[i].totalStaked);accruedRewards=accruedRewards.add(_getRewards(stakes[i].stakedByUser,assetIndex,assetConfig.users[user]));}

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 98
column: 2
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 57
column: 62
content: (uint256,uint256,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 147
column: 68
content: (uint256,uint256,uint256)

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 121
column: 2
content: constructor(addressemissionManager){EMISSION_MANAGER=emissionManager;}

SOLIDITY_VISIBILITY :1
SOLIDITY_SAFEMATH :1
SOLIDITY_EXTRA_GAS_IN_LOOPS :3
SOLIDITY_GAS_LIMIT_IN_LOOPS :3
SOLIDITY_SHOULD_RETURN_STRUCT :2
SOLIDITY_EXACT_TIME :2
