ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
Analysing /sb/VirtualTrade.sol:Address...
Analysing /sb/VirtualTrade.sol:AddressArray...
Analysing /sb/VirtualTrade.sol:ApproveAndCallFallBack...
Nothing to analyse
Analysing /sb/VirtualTrade.sol:ERC20Base...
Vulnerability: Integer Overflow. Maybe in function: 0x6aaa6a86. PC: 0xea1. Line number: 157.
If a = 62514009886607029107290561805838585334079798074568712924583230797734656856475
and b = 57896065325371515598246195214477293372163323291273882022447052045454785121894
Vulnerability: Reentrancy. Maybe in function: approve(address,uint256). PC: 0x12b8. Line number: 348.
Vulnerability: Integer Overflow. Maybe in function: balanceOf(address). PC: 0x15e3. Line number: 479.
If a = 89717814153306320011181716697424560163256864414616650038987186496166826726056
and b = 115679011025170378826477653968640361068257025696240524426137801211030401974268
Analysing /sb/VirtualTrade.sol:IERC20...
Nothing to analyse
Analysing /sb/VirtualTrade.sol:OracleInterface...
Nothing to analyse
Analysing /sb/VirtualTrade.sol:Ownable...
Nothing to analyse
Analysing /sb/VirtualTrade.sol:SafeERC20...
Analysing /sb/VirtualTrade.sol:SafeMath...
Analysing /sb/VirtualTrade.sol:TokenClaimer...
Analysing /sb/VirtualTrade.sol:TokenInterface...
Nothing to analyse
Analysing /sb/VirtualTrade.sol:TransferEventCallBack...
Nothing to analyse
Analysing /sb/VirtualTrade.sol:TransferableToken...
Nothing to analyse
Analysing /sb/VirtualTrade.sol:VirtualTrade...
Analysing /sb/VirtualTrade.sol:VirtualTradeFactory...
Non-hexadecimal digit found
Traceback (most recent call last):
  File "conkas.py", line 111, in main
    ssa = Recover(bytecode, edges=[], optimize=True)
  File "/conkas/rattle/recover.py", line 768, in __init__
    self.internal = InternalRecover(filedata, edges, optimize, split_functions)
  File "/conkas/rattle/recover.py", line 32, in __init__
    self.recover(dispatch)
  File "/conkas/rattle/recover.py", line 95, in recover
    self.identify_blocks(function)
  File "/conkas/rattle/recover.py", line 167, in identify_blocks
    insns = list(EVMAsm.disassemble_all(binascii.unhexlify(self.filedata), 0))
binascii.Error: Non-hexadecimal digit found
Non-hexadecimal digit found
Traceback (most recent call last):
  File "conkas.py", line 111, in main
    ssa = Recover(bytecode, edges=[], optimize=True)
  File "/conkas/rattle/recover.py", line 768, in __init__
    self.internal = InternalRecover(filedata, edges, optimize, split_functions)
  File "/conkas/rattle/recover.py", line 32, in __init__
    self.recover(dispatch)
  File "/conkas/rattle/recover.py", line 95, in recover
    self.identify_blocks(function)
  File "/conkas/rattle/recover.py", line 167, in identify_blocks
    insns = list(EVMAsm.disassemble_all(binascii.unhexlify(self.filedata), 0))
binascii.Error: Non-hexadecimal digit found
