{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "High",
            "contract": "BPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-MatrixETF Smart Contract/MatrixETF-Pool-V2-2d5c5252e17f91680645fc6fb0d2108ff681037b/contracts/balancer-core/BPool.sol",
            "function": "_getTotalWeight",
            "impact": "High",
            "line": 1413,
            "message": "BPool._totalWeight (BPool.sol#1413) is never initialized. It is used in:\n\t- BPool._getTotalWeight() (BPool.sol#2575-2580)\n",
            "name": "uninitialized-state",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-MatrixETF Smart Contract/MatrixETF-Pool-V2-2d5c5252e17f91680645fc6fb0d2108ff681037b/contracts/balancer-core/BPool.sol",
            "function": "joinPool",
            "impact": "Medium",
            "line": 1951,
            "line_end": 1985,
            "message": "Reentrancy in BPool.joinPool(uint256,uint256[]) (BPool.sol#1951-1985):\n\tExternal calls:\n\t- _pullUnderlying(t,msg.sender,tokenAmountIn) (BPool.sol#1972)\n\t\t- xfer = IERC20(erc20).transferFrom(from,address(this),amount) (BPool.sol#2457)\n\tState variables written after the call(s):\n\t- _records[t].balance = badd(_records[t].balance,tokenAmountIn) (BPool.sol#1970)\n\tBPool._records (BPool.sol#1411) can be used in cross function reentrancies:\n\t- BPool._getDenormWeight(address) (BPool.sol#2568-2573)\n\t- BPool._requireTokenIsBound(address) (BPool.sol#2505-2509)\n\t- BPool.bind(address,uint256,uint256) (BPool.sol#1786-1805)\n\t- BPool.calcTokensForAmount(uint256) (BPool.sol#1928-1941)\n\t- BPool.exitPool(uint256,uint256[]) (BPool.sol#1998-2033)\n\t- BPool.exitswapExternAmountOut(address,uint256,uint256) (BPool.sol#2402-2447)\n\t- BPool.exitswapPoolAmountIn(address,uint256,uint256) (BPool.sol#2343-2388)\n\t- BPool.getBalance(address) (BPool.sol#1527-1535)\n\t- BPool.getSpotPrice(address,address) (BPool.sol#1899-1908)\n\t- BPool.getSpotPriceSansFee(address,address) (BPool.sol#1916-1926)\n\t- BPool.isBound(address) (BPool.sol#1437-1442)\n\t- BPool.joinPool(uint256,uint256[]) (BPool.sol#1951-1985)\n\t- BPool.joinswapExternAmountIn(address,uint256,uint256) (BPool.sol#2225-2270)\n\t- BPool.joinswapPoolAmountOut(address,uint256,uint256) (BPool.sol#2283-2329)\n\t- BPool.rebind(address,uint256,uint256) (BPool.sol#1813-1844)\n\t- BPool.swapExactAmountIn(address,uint256,address,uint256,uint256) (BPool.sol#2047-2121)\n\t- BPool.swapExactAmountOut(address,uint256,address,uint256,uint256) (BPool.sol#2137-2211)\n\t- BPool.unbind(address) (BPool.sol#1851-1879)\n\t- _mintPoolShare(poolAmountOut) (BPool.sol#1981)\n\t\t- _totalSupply = badd(_totalSupply,amt) (BPool.sol#302)\n\tBTokenBase._totalSupply (BPool.sol#295) can be used in cross function reentrancies:\n\t- BTokenBase._burn(uint256) (BPool.sol#306-311)\n\t- BTokenBase._mint(uint256) (BPool.sol#300-304)\n\t- BPool._mintPoolShare(uint256) (BPool.sol#2487-2495)\n\t- BPool.exitswapExternAmountOut(address,uint256,uint256) (BPool.sol#2402-2447)\n\t- BPool.exitswapPoolAmountIn(address,uint256,uint256) (BPool.sol#2343-2388)\n\t- BPool.joinswapExternAmountIn(address,uint256,uint256) (BPool.sol#2225-2270)\n\t- BPool.joinswapPoolAmountOut(address,uint256,uint256) (BPool.sol#2283-2329)\n\t- BToken.totalSupply() (BPool.sol#361-363)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-MatrixETF Smart Contract/MatrixETF-Pool-V2-2d5c5252e17f91680645fc6fb0d2108ff681037b/contracts/balancer-core/BPool.sol",
            "function": "exitPool",
            "impact": "Medium",
            "line": 1998,
            "line_end": 2033,
            "message": "Reentrancy in BPool.exitPool(uint256,uint256[]) (BPool.sol#1998-2033):\n\tExternal calls:\n\t- _pushUnderlying(t,msg.sender,tokenAmountOut) (BPool.sol#2029)\n\t\t- xfer = IERC20(erc20).transfer(to,amount) (BPool.sol#2464)\n\tState variables written after the call(s):\n\t- _records[t].balance = bsub(_records[t].balance,tokenAmountOut) (BPool.sol#2027)\n\tBPool._records (BPool.sol#1411) can be used in cross function reentrancies:\n\t- BPool._getDenormWeight(address) (BPool.sol#2568-2573)\n\t- BPool._requireTokenIsBound(address) (BPool.sol#2505-2509)\n\t- BPool.bind(address,uint256,uint256) (BPool.sol#1786-1805)\n\t- BPool.calcTokensForAmount(uint256) (BPool.sol#1928-1941)\n\t- BPool.exitPool(uint256,uint256[]) (BPool.sol#1998-2033)\n\t- BPool.exitswapExternAmountOut(address,uint256,uint256) (BPool.sol#2402-2447)\n\t- BPool.exitswapPoolAmountIn(address,uint256,uint256) (BPool.sol#2343-2388)\n\t- BPool.getBalance(address) (BPool.sol#1527-1535)\n\t- BPool.getSpotPrice(address,address) (BPool.sol#1899-1908)\n\t- BPool.getSpotPriceSansFee(address,address) (BPool.sol#1916-1926)\n\t- BPool.isBound(address) (BPool.sol#1437-1442)\n\t- BPool.joinPool(uint256,uint256[]) (BPool.sol#1951-1985)\n\t- BPool.joinswapExternAmountIn(address,uint256,uint256) (BPool.sol#2225-2270)\n\t- BPool.joinswapPoolAmountOut(address,uint256,uint256) (BPool.sol#2283-2329)\n\t- BPool.rebind(address,uint256,uint256) (BPool.sol#1813-1844)\n\t- BPool.swapExactAmountIn(address,uint256,address,uint256,uint256) (BPool.sol#2047-2121)\n\t- BPool.swapExactAmountOut(address,uint256,address,uint256,uint256) (BPool.sol#2137-2211)\n\t- BPool.unbind(address) (BPool.sol#1851-1879)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-MatrixETF Smart Contract/MatrixETF-Pool-V2-2d5c5252e17f91680645fc6fb0d2108ff681037b/contracts/balancer-core/BPool.sol",
            "function": "_preventSameTxOrigin",
            "impact": "Medium",
            "line": 2553,
            "line_end": 2558,
            "message": "BPool._preventSameTxOrigin() (BPool.sol#2553-2558) uses tx.origin for authorization: require(bool,string)(block.number > _lastSwapBlock[tx.origin],SAME_TX_ORIGIN) (BPool.sol#2556)\n",
            "name": "tx-origin",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "BToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-MatrixETF Smart Contract/MatrixETF-Pool-V2-2d5c5252e17f91680645fc6fb0d2108ff681037b/contracts/balancer-core/BPool.sol",
            "function": "symbol",
            "impact": "Low",
            "line": 1418,
            "message": "BPool.constructor(string,string).symbol (BPool.sol#1418) shadows:\n\t- BToken.symbol() (BPool.sol#345-347) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-MatrixETF Smart Contract/MatrixETF-Pool-V2-2d5c5252e17f91680645fc6fb0d2108ff681037b/contracts/balancer-core/BPool.sol",
            "impact": "Low",
            "line": 677,
            "message": "BMath.calcPoolInGivenSingleOut(uint256,uint256,uint256,uint256,uint256,uint256).poolAmountIn_scope_0 (BPool.sol#677) shadows:\n\t- BMath.calcPoolInGivenSingleOut(uint256,uint256,uint256,uint256,uint256,uint256).poolAmountIn (BPool.sol#661) (return variable)\n\t- BMath.calcPoolInGivenSingleOut(uint256,uint256,uint256,uint256,uint256,uint256).poolAmountIn (BPool.sol#661) (return variable)\n\t- BMath.calcPoolInGivenSingleOut(uint256,uint256,uint256,uint256,uint256,uint256).poolAmountIn (BPool.sol#661) (return variable)\n\t- BMath.calcPoolInGivenSingleOut(uint256,uint256,uint256,uint256,uint256,uint256).poolAmountIn (BPool.sol#661) (return variable)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "BToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-MatrixETF Smart Contract/MatrixETF-Pool-V2-2d5c5252e17f91680645fc6fb0d2108ff681037b/contracts/balancer-core/BPool.sol",
            "function": "name",
            "impact": "Low",
            "line": 1418,
            "message": "BPool.constructor(string,string).name (BPool.sol#1418) shadows:\n\t- BToken.name() (BPool.sol#341-343) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-MatrixETF Smart Contract/MatrixETF-Pool-V2-2d5c5252e17f91680645fc6fb0d2108ff681037b/contracts/balancer-core/BPool.sol",
            "function": "setSwapFee",
            "impact": "Low",
            "line": 1643,
            "line_end": 1651,
            "message": "BPool.setSwapFee(uint256) (BPool.sol#1643-1651) should emit an event for: \n\t- _swapFee = swapFee (BPool.sol#1650) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-MatrixETF Smart Contract/MatrixETF-Pool-V2-2d5c5252e17f91680645fc6fb0d2108ff681037b/contracts/balancer-core/BPool.sol",
            "function": "setCommunityFeeAndReceiver",
            "impact": "Low",
            "line": 1661,
            "line_end": 1679,
            "message": "BPool.setCommunityFeeAndReceiver(uint256,uint256,uint256,address) (BPool.sol#1661-1679) should emit an event for: \n\t- _communitySwapFee = communitySwapFee (BPool.sol#1675) \n\t- _communityJoinFee = communityJoinFee (BPool.sol#1676) \n\t- _communityExitFee = communityExitFee (BPool.sol#1677) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-MatrixETF Smart Contract/MatrixETF-Pool-V2-2d5c5252e17f91680645fc6fb0d2108ff681037b/contracts/balancer-core/BPool.sol",
            "function": "_pullUnderlying",
            "impact": "Low",
            "line": 2454,
            "line_end": 2459,
            "message": "BPool._pullUnderlying(address,address,uint256) (BPool.sol#2454-2459) has external calls inside a loop: xfer = IERC20(erc20).transferFrom(from,address(this),amount) (BPool.sol#2457)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-MatrixETF Smart Contract/MatrixETF-Pool-V2-2d5c5252e17f91680645fc6fb0d2108ff681037b/contracts/balancer-core/BPool.sol",
            "function": "_pushUnderlying",
            "impact": "Low",
            "line": 2461,
            "line_end": 2466,
            "message": "BPool._pushUnderlying(address,address,uint256) (BPool.sol#2461-2466) has external calls inside a loop: xfer = IERC20(erc20).transfer(to,amount) (BPool.sol#2464)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-MatrixETF Smart Contract/MatrixETF-Pool-V2-2d5c5252e17f91680645fc6fb0d2108ff681037b/contracts/balancer-core/BPool.sol",
            "function": "joinPool",
            "impact": "Low",
            "line": 1951,
            "line_end": 1985,
            "message": "Reentrancy in BPool.joinPool(uint256,uint256[]) (BPool.sol#1951-1985):\n\tExternal calls:\n\t- _pullUnderlying(t,msg.sender,tokenAmountIn) (BPool.sol#1972)\n\t\t- xfer = IERC20(erc20).transferFrom(from,address(this),amount) (BPool.sol#2457)\n\tState variables written after the call(s):\n\t- _mintPoolShare(poolAmountOut) (BPool.sol#1981)\n\t\t- _balance[address(this)] = badd(_balance[address(this)],amt) (BPool.sol#301)\n\t- _pushPoolShare(msg.sender,poolAmountOut) (BPool.sol#1982)\n\t\t- _balance[src] = bsub(_balance[src],amt) (BPool.sol#317)\n\t\t- _balance[dst] = badd(_balance[dst],amt) (BPool.sol#318)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-MatrixETF Smart Contract/MatrixETF-Pool-V2-2d5c5252e17f91680645fc6fb0d2108ff681037b/contracts/balancer-core/BPool.sol",
            "function": "exitPool",
            "impact": "Low",
            "line": 1998,
            "line_end": 2033,
            "message": "Reentrancy in BPool.exitPool(uint256,uint256[]) (BPool.sol#1998-2033):\n\tExternal calls:\n\t- _pushUnderlying(t,msg.sender,tokenAmountOut) (BPool.sol#2029)\n\t\t- xfer = IERC20(erc20).transfer(to,amount) (BPool.sol#2464)\n\tEvent emitted after the call(s):\n\t- LOG_COMMUNITY_FEE(msg.sender,_communityFeeReceiver,address(this),poolAmountInFee) (BPool.sol#2032)\n\t- LOG_EXIT(msg.sender,t,tokenAmountOut) (BPool.sol#2028)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-MatrixETF Smart Contract/MatrixETF-Pool-V2-2d5c5252e17f91680645fc6fb0d2108ff681037b/contracts/balancer-core/BPool.sol",
            "function": "callVoting",
            "impact": "Low",
            "line": 1765,
            "line_end": 1776,
            "message": "Reentrancy in BPool.callVoting(address,bytes4,bytes,uint256) (BPool.sol#1765-1776):\n\tExternal calls:\n\t- (success,data) = voting.call{value: value}(abi.encodePacked(signature,args)) (BPool.sol#1773)\n\tEvent emitted after the call(s):\n\t- LOG_CALL_VOTING(voting,success,signature,args,data) (BPool.sol#1775)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-MatrixETF Smart Contract/MatrixETF-Pool-V2-2d5c5252e17f91680645fc6fb0d2108ff681037b/contracts/balancer-core/BPool.sol",
            "function": "swapExactAmountIn",
            "impact": "Low",
            "line": 2047,
            "line_end": 2121,
            "message": "Reentrancy in BPool.swapExactAmountIn(address,uint256,address,uint256,uint256) (BPool.sol#2047-2121):\n\tExternal calls:\n\t- _pullCommunityFeeUnderlying(tokenIn,msg.sender,tokenAmountInFee) (BPool.sol#2114)\n\t\t- xfer = IERC20(erc20).transferFrom(from,_communityFeeReceiver,amount) (BPool.sol#2471)\n\t- _pullUnderlying(tokenIn,msg.sender,tokenAmountInAfterFee) (BPool.sol#2115)\n\t\t- xfer = IERC20(erc20).transferFrom(from,address(this),amount) (BPool.sol#2457)\n\t- _pushUnderlying(tokenOut,msg.sender,tokenAmountOut) (BPool.sol#2116)\n\t\t- xfer = IERC20(erc20).transfer(to,amount) (BPool.sol#2464)\n\tEvent emitted after the call(s):\n\t- LOG_COMMUNITY_FEE(msg.sender,_communityFeeReceiver,tokenIn,tokenAmountInFee) (BPool.sol#2118)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-MatrixETF Smart Contract/MatrixETF-Pool-V2-2d5c5252e17f91680645fc6fb0d2108ff681037b/contracts/balancer-core/BPool.sol",
            "function": "joinswapPoolAmountOut",
            "impact": "Low",
            "line": 2283,
            "line_end": 2329,
            "message": "Reentrancy in BPool.joinswapPoolAmountOut(address,uint256,uint256) (BPool.sol#2283-2329):\n\tExternal calls:\n\t- _pullUnderlying(tokenIn,msg.sender,tokenAmountIn) (BPool.sol#2324)\n\t\t- xfer = IERC20(erc20).transferFrom(from,address(this),amount) (BPool.sol#2457)\n\tEvent emitted after the call(s):\n\t- LOG_COMMUNITY_FEE(msg.sender,_communityFeeReceiver,address(this),poolAmountOutFee) (BPool.sol#2326)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-MatrixETF Smart Contract/MatrixETF-Pool-V2-2d5c5252e17f91680645fc6fb0d2108ff681037b/contracts/balancer-core/BPool.sol",
            "function": "swapExactAmountOut",
            "impact": "Low",
            "line": 2137,
            "line_end": 2211,
            "message": "Reentrancy in BPool.swapExactAmountOut(address,uint256,address,uint256,uint256) (BPool.sol#2137-2211):\n\tExternal calls:\n\t- _pullUnderlying(tokenIn,msg.sender,tokenAmountIn) (BPool.sol#2204)\n\t\t- xfer = IERC20(erc20).transferFrom(from,address(this),amount) (BPool.sol#2457)\n\t- _pushUnderlying(tokenOut,msg.sender,tokenAmountOutAfterFee) (BPool.sol#2205)\n\t\t- xfer = IERC20(erc20).transfer(to,amount) (BPool.sol#2464)\n\t- _pushUnderlying(tokenOut,_communityFeeReceiver,tokenAmountOutFee) (BPool.sol#2206)\n\t\t- xfer = IERC20(erc20).transfer(to,amount) (BPool.sol#2464)\n\tEvent emitted after the call(s):\n\t- LOG_COMMUNITY_FEE(msg.sender,_communityFeeReceiver,tokenOut,tokenAmountOutFee) (BPool.sol#2208)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-MatrixETF Smart Contract/MatrixETF-Pool-V2-2d5c5252e17f91680645fc6fb0d2108ff681037b/contracts/balancer-core/BPool.sol",
            "function": "exitswapExternAmountOut",
            "impact": "Low",
            "line": 2402,
            "line_end": 2447,
            "message": "Reentrancy in BPool.exitswapExternAmountOut(address,uint256,uint256) (BPool.sol#2402-2447):\n\tExternal calls:\n\t- _pushUnderlying(tokenOut,msg.sender,tokenAmountOutAfterFee) (BPool.sol#2441)\n\t\t- xfer = IERC20(erc20).transfer(to,amount) (BPool.sol#2464)\n\t- _pushUnderlying(tokenOut,_communityFeeReceiver,tokenAmountOutFee) (BPool.sol#2442)\n\t\t- xfer = IERC20(erc20).transfer(to,amount) (BPool.sol#2464)\n\tEvent emitted after the call(s):\n\t- LOG_COMMUNITY_FEE(msg.sender,_communityFeeReceiver,tokenOut,tokenAmountOutFee) (BPool.sol#2444)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-MatrixETF Smart Contract/MatrixETF-Pool-V2-2d5c5252e17f91680645fc6fb0d2108ff681037b/contracts/balancer-core/BPool.sol",
            "function": "joinswapExternAmountIn",
            "impact": "Low",
            "line": 2225,
            "line_end": 2270,
            "message": "Reentrancy in BPool.joinswapExternAmountIn(address,uint256,uint256) (BPool.sol#2225-2270):\n\tExternal calls:\n\t- _pullCommunityFeeUnderlying(tokenIn,msg.sender,tokenAmountInFee) (BPool.sol#2264)\n\t\t- xfer = IERC20(erc20).transferFrom(from,_communityFeeReceiver,amount) (BPool.sol#2471)\n\t- _pullUnderlying(tokenIn,msg.sender,tokenAmountInAfterFee) (BPool.sol#2265)\n\t\t- xfer = IERC20(erc20).transferFrom(from,address(this),amount) (BPool.sol#2457)\n\tEvent emitted after the call(s):\n\t- LOG_COMMUNITY_FEE(msg.sender,_communityFeeReceiver,tokenIn,tokenAmountInFee) (BPool.sol#2267)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-MatrixETF Smart Contract/MatrixETF-Pool-V2-2d5c5252e17f91680645fc6fb0d2108ff681037b/contracts/balancer-core/BPool.sol",
            "function": "joinPool",
            "impact": "Low",
            "line": 1951,
            "line_end": 1985,
            "message": "Reentrancy in BPool.joinPool(uint256,uint256[]) (BPool.sol#1951-1985):\n\tExternal calls:\n\t- _pullUnderlying(t,msg.sender,tokenAmountIn) (BPool.sol#1972)\n\t\t- xfer = IERC20(erc20).transferFrom(from,address(this),amount) (BPool.sol#2457)\n\tEvent emitted after the call(s):\n\t- LOG_JOIN(msg.sender,t,tokenAmountIn) (BPool.sol#1971)\n\t- Transfer(address(0),address(this),amt) (BPool.sol#303)\n\t\t- _mintPoolShare(poolAmountOut) (BPool.sol#1981)\n\t- Transfer(src,dst,amt) (BPool.sol#319)\n\t\t- _pushPoolShare(msg.sender,poolAmountOut) (BPool.sol#1982)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-MatrixETF Smart Contract/MatrixETF-Pool-V2-2d5c5252e17f91680645fc6fb0d2108ff681037b/contracts/balancer-core/BPool.sol",
            "function": "exitswapPoolAmountIn",
            "impact": "Low",
            "line": 2343,
            "line_end": 2388,
            "message": "Reentrancy in BPool.exitswapPoolAmountIn(address,uint256,uint256) (BPool.sol#2343-2388):\n\tExternal calls:\n\t- _pushUnderlying(tokenOut,msg.sender,tokenAmountOutAfterFee) (BPool.sol#2382)\n\t\t- xfer = IERC20(erc20).transfer(to,amount) (BPool.sol#2464)\n\t- _pushUnderlying(tokenOut,_communityFeeReceiver,tokenAmountOutFee) (BPool.sol#2383)\n\t\t- xfer = IERC20(erc20).transfer(to,amount) (BPool.sol#2464)\n\tEvent emitted after the call(s):\n\t- LOG_COMMUNITY_FEE(msg.sender,_communityFeeReceiver,tokenOut,tokenAmountOutFee) (BPool.sol#2385)\n",
            "name": "reentrancy-events",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}