'solc --version' running
'solc /sb/LCToken.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running

LCToken._writeCheckpoint(address,uint32,uint256,uint256) (../../sb/LCToken.sol#1428-1446) uses a dangerous strict equality:
	- nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber (../../sb/LCToken.sol#1438)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

LCBEP20.constructor(string,string).name (../../sb/LCToken.sol#925) shadows:
	- LCBEP20.name() (../../sb/LCToken.sol#941-943) (function)
	- IBEP20.name() (../../sb/LCToken.sol#403) (function)
LCBEP20.constructor(string,string).symbol (../../sb/LCToken.sol#925) shadows:
	- LCBEP20.symbol() (../../sb/LCToken.sol#955-957) (function)
	- IBEP20.symbol() (../../sb/LCToken.sol#398) (function)
LCBEP20.allowance(address,address).owner (../../sb/LCToken.sol#993) shadows:
	- Ownable.owner() (../../sb/LCToken.sol#349-351) (function)
LCBEP20._approve(address,address,uint256).owner (../../sb/LCToken.sol#1155) shadows:
	- Ownable.owner() (../../sb/LCToken.sol#349-351) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

LCToken.delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32) (../../sb/LCToken.sol#1294-1335) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(now <= expiry,LC::delegateBySig: signature expired) (../../sb/LCToken.sol#1333)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Address.isContract(address) (../../sb/LCToken.sol#711-720) uses assembly
	- INLINE ASM (../../sb/LCToken.sol#718)
Address._verifyCallResult(bool,bytes,string) (../../sb/LCToken.sol#856-873) uses assembly
	- INLINE ASM (../../sb/LCToken.sol#865-868)
LCToken.getChainId() (../../sb/LCToken.sol#1453-1457) uses assembly
	- INLINE ASM (../../sb/LCToken.sol#1455)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

Address._verifyCallResult(bool,bytes,string) (../../sb/LCToken.sol#856-873) is never used and should be removed
Address.functionCall(address,bytes) (../../sb/LCToken.sol#764-766) is never used and should be removed
Address.functionCall(address,bytes,string) (../../sb/LCToken.sol#774-776) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sb/LCToken.sol#789-791) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (../../sb/LCToken.sol#799-806) is never used and should be removed
Address.functionDelegateCall(address,bytes) (../../sb/LCToken.sol#838-840) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (../../sb/LCToken.sol#848-854) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sb/LCToken.sol#814-816) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sb/LCToken.sol#824-830) is never used and should be removed
Address.isContract(address) (../../sb/LCToken.sol#711-720) is never used and should be removed
Address.sendValue(address,uint256) (../../sb/LCToken.sol#738-744) is never used and should be removed
Context._msgData() (../../sb/LCToken.sol#314-317) is never used and should be removed
EnumerableSet.add(EnumerableSet.Bytes32Set,bytes32) (../../sb/LCToken.sol#147-149) is never used and should be removed
EnumerableSet.add(EnumerableSet.UintSet,uint256) (../../sb/LCToken.sol#256-258) is never used and should be removed
EnumerableSet.at(EnumerableSet.Bytes32Set,uint256) (../../sb/LCToken.sol#185-187) is never used and should be removed
EnumerableSet.at(EnumerableSet.UintSet,uint256) (../../sb/LCToken.sol#294-296) is never used and should be removed
EnumerableSet.contains(EnumerableSet.Bytes32Set,bytes32) (../../sb/LCToken.sol#164-166) is never used and should be removed
EnumerableSet.contains(EnumerableSet.UintSet,uint256) (../../sb/LCToken.sol#273-275) is never used and should be removed
EnumerableSet.length(EnumerableSet.Bytes32Set) (../../sb/LCToken.sol#171-173) is never used and should be removed
EnumerableSet.length(EnumerableSet.UintSet) (../../sb/LCToken.sol#280-282) is never used and should be removed
EnumerableSet.remove(EnumerableSet.Bytes32Set,bytes32) (../../sb/LCToken.sol#157-159) is never used and should be removed
EnumerableSet.remove(EnumerableSet.UintSet,uint256) (../../sb/LCToken.sol#266-268) is never used and should be removed
LCBEP20._burnFrom(address,uint256) (../../sb/LCToken.sol#1172-1179) is never used and should be removed
SafeMath.div(uint256,uint256) (../../sb/LCToken.sol#609-612) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sb/LCToken.sol#664-667) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sb/LCToken.sol#626-629) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sb/LCToken.sol#684-687) is never used and should be removed
SafeMath.mul(uint256,uint256) (../../sb/LCToken.sol#590-595) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sb/LCToken.sol#498-502) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sb/LCToken.sol#534-537) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sb/LCToken.sol#544-547) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sb/LCToken.sol#519-527) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sb/LCToken.sol#509-512) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Pragma version0.6.12 (../../sb/LCToken.sol#1) allows old versions
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Address.sendValue(address,uint256) (../../sb/LCToken.sol#738-744):
	- (success) = recipient.call{value: amount}() (../../sb/LCToken.sol#742)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sb/LCToken.sol#799-806):
	- (success,returndata) = target.call{value: value}(data) (../../sb/LCToken.sol#804)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sb/LCToken.sol#824-830):
	- (success,returndata) = target.staticcall(data) (../../sb/LCToken.sol#828)
Low level call in Address.functionDelegateCall(address,bytes,string) (../../sb/LCToken.sol#848-854):
	- (success,returndata) = target.delegatecall(data) (../../sb/LCToken.sol#852)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Constant LCBEP20._maxSupply (../../sb/LCToken.sol#901) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter LCToken.addMinter(address)._addMinter (../../sb/LCToken.sol#1188) is not in mixedCase
Parameter LCToken.delMinter(address)._delMinter (../../sb/LCToken.sol#1193) is not in mixedCase
Parameter LCToken.getMinter(uint256)._index (../../sb/LCToken.sol#1206) is not in mixedCase
Parameter LCToken.mint(address,uint256)._to (../../sb/LCToken.sol#1218) is not in mixedCase
Parameter LCToken.mint(address,uint256)._amount (../../sb/LCToken.sol#1218) is not in mixedCase
Parameter LCToken.burn(address,uint256)._from (../../sb/LCToken.sol#1224) is not in mixedCase
Parameter LCToken.burn(address,uint256)._amount (../../sb/LCToken.sol#1224) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Redundant expression "this (../../sb/LCToken.sol#315)" inContext (../../sb/LCToken.sol#309-318)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
/sb/LCToken.sol analyzed (8 contracts with 93 detectors), 57 result(s) found
