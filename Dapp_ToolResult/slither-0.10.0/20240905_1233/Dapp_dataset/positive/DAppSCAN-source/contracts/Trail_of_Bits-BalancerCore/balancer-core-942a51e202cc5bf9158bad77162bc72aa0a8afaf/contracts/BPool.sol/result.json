{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "BPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-BalancerCore/balancer-core-942a51e202cc5bf9158bad77162bc72aa0a8afaf/contracts/BPool.sol",
            "function": "joinPool",
            "impact": "Medium",
            "line": 979,
            "line_end": 1002,
            "message": "Reentrancy in BPool.joinPool(uint256,uint256[]) (BPool.sol#979-1002):\n\tExternal calls:\n\t- _pullUnderlying(t,msg.sender,tokenAmountIn) (BPool.sol#998)\n\t\t- xfer = IERC20(erc20).transferFrom(from,address(this),amount) (BPool.sol#1310)\n\tState variables written after the call(s):\n\t- _records[t].balance = badd(_records[t].balance,tokenAmountIn) (BPool.sol#996)\n\tBPool._records (BPool.sol#694) can be used in cross function reentrancies:\n\t- BPool.bind(address,uint256,uint256) (BPool.sol#852-871)\n\t- BPool.exitPool(uint256,uint256[]) (BPool.sol#1004-1032)\n\t- BPool.exitswapExternAmountOut(address,uint256,uint256) (BPool.sol#1265-1300)\n\t- BPool.exitswapPoolAmountIn(uint256,address,uint256) (BPool.sol#1228-1263)\n\t- BPool.getBalance(address) (BPool.sol#778-786)\n\t- BPool.getDenormalizedWeight(address) (BPool.sol#749-757)\n\t- BPool.getNormalizedWeight(address) (BPool.sol#767-776)\n\t- BPool.getSpotPrice(address,address) (BPool.sol#955-965)\n\t- BPool.getSpotPriceSansFee(address,address) (BPool.sol#967-977)\n\t- BPool.gulp(address) (BPool.sol#946-953)\n\t- BPool.isBound(address) (BPool.sol#719-724)\n\t- BPool.joinPool(uint256,uint256[]) (BPool.sol#979-1002)\n\t- BPool.joinswapExternAmountIn(address,uint256,uint256) (BPool.sol#1161-1193)\n\t- BPool.joinswapPoolAmountOut(uint256,address,uint256) (BPool.sol#1195-1226)\n\t- BPool.rebind(address,uint256,uint256) (BPool.sol#873-910)\n\t- BPool.swapExactAmountIn(address,uint256,address,uint256,uint256) (BPool.sol#1035-1096)\n\t- BPool.swapExactAmountOut(address,uint256,address,uint256,uint256) (BPool.sol#1098-1158)\n\t- BPool.unbind(address) (BPool.sol#912-943)\n\t- _mintPoolShare(poolAmountOut) (BPool.sol#1000)\n\t\t- _totalSupply = badd(_totalSupply,amt) (BPool.sol#258)\n\tBTokenBase._totalSupply (BPool.sol#251) can be used in cross function reentrancies:\n\t- BTokenBase._burn(uint256) (BPool.sol#262-267)\n\t- BTokenBase._mint(uint256) (BPool.sol#256-260)\n\t- BPool.exitswapExternAmountOut(address,uint256,uint256) (BPool.sol#1265-1300)\n\t- BPool.exitswapPoolAmountIn(uint256,address,uint256) (BPool.sol#1228-1263)\n\t- BPool.joinswapExternAmountIn(address,uint256,uint256) (BPool.sol#1161-1193)\n\t- BPool.joinswapPoolAmountOut(uint256,address,uint256) (BPool.sol#1195-1226)\n\t- BToken.totalSupply() (BPool.sol#311-313)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-BalancerCore/balancer-core-942a51e202cc5bf9158bad77162bc72aa0a8afaf/contracts/BPool.sol",
            "function": "exitPool",
            "impact": "Medium",
            "line": 1004,
            "line_end": 1032,
            "message": "Reentrancy in BPool.exitPool(uint256,uint256[]) (BPool.sol#1004-1032):\n\tExternal calls:\n\t- _pushUnderlying(t,msg.sender,tokenAmountOut) (BPool.sol#1029)\n\t\t- xfer = IERC20(erc20).transfer(to,amount) (BPool.sol#1317)\n\tState variables written after the call(s):\n\t- _records[t].balance = bsub(_records[t].balance,tokenAmountOut) (BPool.sol#1027)\n\tBPool._records (BPool.sol#694) can be used in cross function reentrancies:\n\t- BPool.bind(address,uint256,uint256) (BPool.sol#852-871)\n\t- BPool.exitPool(uint256,uint256[]) (BPool.sol#1004-1032)\n\t- BPool.exitswapExternAmountOut(address,uint256,uint256) (BPool.sol#1265-1300)\n\t- BPool.exitswapPoolAmountIn(uint256,address,uint256) (BPool.sol#1228-1263)\n\t- BPool.getBalance(address) (BPool.sol#778-786)\n\t- BPool.getDenormalizedWeight(address) (BPool.sol#749-757)\n\t- BPool.getNormalizedWeight(address) (BPool.sol#767-776)\n\t- BPool.getSpotPrice(address,address) (BPool.sol#955-965)\n\t- BPool.getSpotPriceSansFee(address,address) (BPool.sol#967-977)\n\t- BPool.gulp(address) (BPool.sol#946-953)\n\t- BPool.isBound(address) (BPool.sol#719-724)\n\t- BPool.joinPool(uint256,uint256[]) (BPool.sol#979-1002)\n\t- BPool.joinswapExternAmountIn(address,uint256,uint256) (BPool.sol#1161-1193)\n\t- BPool.joinswapPoolAmountOut(uint256,address,uint256) (BPool.sol#1195-1226)\n\t- BPool.rebind(address,uint256,uint256) (BPool.sol#873-910)\n\t- BPool.swapExactAmountIn(address,uint256,address,uint256,uint256) (BPool.sol#1035-1096)\n\t- BPool.swapExactAmountOut(address,uint256,address,uint256,uint256) (BPool.sol#1098-1158)\n\t- BPool.unbind(address) (BPool.sol#912-943)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-BalancerCore/balancer-core-942a51e202cc5bf9158bad77162bc72aa0a8afaf/contracts/BPool.sol",
            "function": "setSwapFee",
            "impact": "Low",
            "line": 804,
            "line_end": 814,
            "message": "BPool.setSwapFee(uint256) (BPool.sol#804-814) should emit an event for: \n\t- _swapFee = swapFee (BPool.sol#813) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-BalancerCore/balancer-core-942a51e202cc5bf9158bad77162bc72aa0a8afaf/contracts/BPool.sol",
            "function": "_pullUnderlying",
            "impact": "Low",
            "line": 1307,
            "line_end": 1312,
            "message": "BPool._pullUnderlying(address,address,uint256) (BPool.sol#1307-1312) has external calls inside a loop: xfer = IERC20(erc20).transferFrom(from,address(this),amount) (BPool.sol#1310)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-BalancerCore/balancer-core-942a51e202cc5bf9158bad77162bc72aa0a8afaf/contracts/BPool.sol",
            "function": "_pushUnderlying",
            "impact": "Low",
            "line": 1314,
            "line_end": 1319,
            "message": "BPool._pushUnderlying(address,address,uint256) (BPool.sol#1314-1319) has external calls inside a loop: xfer = IERC20(erc20).transfer(to,amount) (BPool.sol#1317)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-BalancerCore/balancer-core-942a51e202cc5bf9158bad77162bc72aa0a8afaf/contracts/BPool.sol",
            "function": "joinPool",
            "impact": "Low",
            "line": 979,
            "line_end": 1002,
            "message": "Reentrancy in BPool.joinPool(uint256,uint256[]) (BPool.sol#979-1002):\n\tExternal calls:\n\t- _pullUnderlying(t,msg.sender,tokenAmountIn) (BPool.sol#998)\n\t\t- xfer = IERC20(erc20).transferFrom(from,address(this),amount) (BPool.sol#1310)\n\tState variables written after the call(s):\n\t- _mintPoolShare(poolAmountOut) (BPool.sol#1000)\n\t\t- _balance[address(this)] = badd(_balance[address(this)],amt) (BPool.sol#257)\n\t- _pushPoolShare(msg.sender,poolAmountOut) (BPool.sol#1001)\n\t\t- _balance[src] = bsub(_balance[src],amt) (BPool.sol#271)\n\t\t- _balance[dst] = badd(_balance[dst],amt) (BPool.sol#272)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-BalancerCore/balancer-core-942a51e202cc5bf9158bad77162bc72aa0a8afaf/contracts/BPool.sol",
            "function": "exitPool",
            "impact": "Low",
            "line": 1004,
            "line_end": 1032,
            "message": "Reentrancy in BPool.exitPool(uint256,uint256[]) (BPool.sol#1004-1032):\n\tExternal calls:\n\t- _pushUnderlying(t,msg.sender,tokenAmountOut) (BPool.sol#1029)\n\t\t- xfer = IERC20(erc20).transfer(to,amount) (BPool.sol#1317)\n\tEvent emitted after the call(s):\n\t- LOG_EXIT(msg.sender,t,tokenAmountOut) (BPool.sol#1028)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-BalancerCore/balancer-core-942a51e202cc5bf9158bad77162bc72aa0a8afaf/contracts/BPool.sol",
            "function": "joinPool",
            "impact": "Low",
            "line": 979,
            "line_end": 1002,
            "message": "Reentrancy in BPool.joinPool(uint256,uint256[]) (BPool.sol#979-1002):\n\tExternal calls:\n\t- _pullUnderlying(t,msg.sender,tokenAmountIn) (BPool.sol#998)\n\t\t- xfer = IERC20(erc20).transferFrom(from,address(this),amount) (BPool.sol#1310)\n\tEvent emitted after the call(s):\n\t- LOG_JOIN(msg.sender,t,tokenAmountIn) (BPool.sol#997)\n\t- Transfer(address(0),address(this),amt) (BPool.sol#259)\n\t\t- _mintPoolShare(poolAmountOut) (BPool.sol#1000)\n\t- Transfer(src,dst,amt) (BPool.sol#273)\n\t\t- _pushPoolShare(msg.sender,poolAmountOut) (BPool.sol#1001)\n",
            "name": "reentrancy-events",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}