{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "Amp",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Amp/amp-token-contracts-6871b6c64c712835b332e515cc553308dcbbc539/contracts/Amp.sol",
            "function": "swap",
            "impact": "High",
            "line": 1280,
            "line_end": 1289,
            "message": "Amp.swap(address) (Amp.sol#1280-1289) ignores return value by swapToken.transferFrom(_from,swapTokenGraveyard,amount) (Amp.sol#1284)\n",
            "name": "unchecked-transfer",
            "check": "TP"
        },
        {
            "confidence": "Medium",
            "contract": "Amp",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Amp/amp-token-contracts-6871b6c64c712835b332e515cc553308dcbbc539/contracts/Amp.sol",
            "function": "setPartitionStrategy",
            "impact": "Medium",
            "line": 1743,
            "line_end": 1757,
            "message": "Reentrancy in Amp.setPartitionStrategy(bytes4,address) (Amp.sol#1743-1757):\n\tExternal calls:\n\t- ERC1820Client.setInterfaceImplementation(iname,_implementation) (Amp.sol#1752)\n\t\t- ERC1820REGISTRY.setInterfaceImplementer(address(this),interfaceHash,_implementation) (Amp.sol#404-408)\n\tState variables written after the call(s):\n\t- _isPartitionStrategy[_prefix] = true (Amp.sol#1754)\n\tAmp._isPartitionStrategy (Amp.sol#918) can be used in cross function reentrancies:\n\t- Amp._callPartitionStrategyOperatorHook(bytes32,address,address) (Amp.sol#2213-2237)\n\t- Amp._callPostTransferHooks(bytes32,address,address,address,uint256,bytes,bytes) (Amp.sol#2064-2112)\n\t- Amp._callPreTransferHooks(bytes32,address,address,address,uint256,bytes,bytes) (Amp.sol#2004-2051)\n\t- Amp.isPartitionStrategy(bytes4) (Amp.sol#1765-1767)\n\t- Amp.setPartitionStrategy(bytes4,address) (Amp.sol#1743-1757)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Amp",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Amp/amp-token-contracts-6871b6c64c712835b332e515cc553308dcbbc539/contracts/Amp.sol",
            "function": "_transferByPartition",
            "impact": "Medium",
            "line": 1808,
            "line_end": 1866,
            "message": "Reentrancy in Amp._transferByPartition(bytes32,address,address,address,uint256,bytes,bytes) (Amp.sol#1808-1866):\n\tExternal calls:\n\t- _callPreTransferHooks(_fromPartition,_operator,_from,_to,_value,_data,_operatorData) (Amp.sol#1827-1835)\n\t\t- IAmpTokensSender(senderImplementation).tokensToTransfer(msg.sig,_fromPartition,_operator,_from,_to,_value,_data,_operatorData) (Amp.sol#2016-2025)\n\t\t- IAmpPartitionStrategyValidator(fromPartitionValidatorImplementation).tokensFromPartitionToValidate(msg.sig,_fromPartition,_operator,_from,_to,_value,_data,_operatorData) (Amp.sol#2038-2048)\n\tState variables written after the call(s):\n\t- _removeTokenFromPartition(_from,_fromPartition,_value) (Amp.sol#1837)\n\t\t- _balanceOfByPartition[_from][_partition] = _balanceOfByPartition[_from][_partition].sub(_value) (Amp.sol#1900-1901)\n\tAmp._balanceOfByPartition (Amp.sol#858) can be used in cross function reentrancies:\n\t- Amp._addTokenToPartition(address,bytes32,uint256) (Amp.sol#1937-1957)\n\t- Amp._removeTokenFromPartition(address,bytes32,uint256) (Amp.sol#1895-1929)\n\t- Amp._transferByPartition(bytes32,address,address,address,uint256,bytes,bytes) (Amp.sol#1808-1866)\n\t- Amp.balanceOf(address) (Amp.sol#1150-1152)\n\t- Amp.balanceOfByPartition(bytes32,address) (Amp.sol#1310-1316)\n\t- _addTokenToPartition(_to,toPartition,_value) (Amp.sol#1839)\n\t\t- _balanceOfByPartition[_to][_partition] = _balanceOfByPartition[_to][_partition].add(_value) (Amp.sol#1947-1948)\n\tAmp._balanceOfByPartition (Amp.sol#858) can be used in cross function reentrancies:\n\t- Amp._addTokenToPartition(address,bytes32,uint256) (Amp.sol#1937-1957)\n\t- Amp._removeTokenFromPartition(address,bytes32,uint256) (Amp.sol#1895-1929)\n\t- Amp._transferByPartition(bytes32,address,address,address,uint256,bytes,bytes) (Amp.sol#1808-1866)\n\t- Amp.balanceOf(address) (Amp.sol#1150-1152)\n\t- Amp.balanceOfByPartition(bytes32,address) (Amp.sol#1310-1316)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Amp/amp-token-contracts-6871b6c64c712835b332e515cc553308dcbbc539/contracts/Amp.sol",
            "impact": "Low",
            "line": 1172,
            "message": "Amp.allowance(address,address)._owner (Amp.sol#1172) shadows:\n\t- Ownable._owner (Amp.sol#250) (state variable)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Amp/amp-token-contracts-6871b6c64c712835b332e515cc553308dcbbc539/contracts/Amp.sol",
            "impact": "Low",
            "line": 1622,
            "message": "Amp.allowanceByPartition(bytes32,address,address)._owner (Amp.sol#1622) shadows:\n\t- Ownable._owner (Amp.sol#250) (state variable)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Amp",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Amp/amp-token-contracts-6871b6c64c712835b332e515cc553308dcbbc539/contracts/Amp.sol",
            "function": "_transferByPartition",
            "impact": "Low",
            "line": 1808,
            "line_end": 1866,
            "message": "Reentrancy in Amp._transferByPartition(bytes32,address,address,address,uint256,bytes,bytes) (Amp.sol#1808-1866):\n\tExternal calls:\n\t- _callPreTransferHooks(_fromPartition,_operator,_from,_to,_value,_data,_operatorData) (Amp.sol#1827-1835)\n\t\t- IAmpTokensSender(senderImplementation).tokensToTransfer(msg.sig,_fromPartition,_operator,_from,_to,_value,_data,_operatorData) (Amp.sol#2016-2025)\n\t\t- IAmpPartitionStrategyValidator(fromPartitionValidatorImplementation).tokensFromPartitionToValidate(msg.sig,_fromPartition,_operator,_from,_to,_value,_data,_operatorData) (Amp.sol#2038-2048)\n\tState variables written after the call(s):\n\t- _transfer(_from,_to,_value) (Amp.sol#1838)\n\t\t- _balances[_from] = _balances[_from].sub(_value) (Amp.sol#1789)\n\t\t- _balances[_to] = _balances[_to].add(_value) (Amp.sol#1790)\n\t- _removeTokenFromPartition(_from,_fromPartition,_value) (Amp.sol#1837)\n\t\t- _indexOfPartitionsOf[_from][lastValue] = index (Amp.sol#1924)\n\t\t- _indexOfPartitionsOf[_from][_partition] = 0 (Amp.sol#1927)\n\t- _addTokenToPartition(_to,toPartition,_value) (Amp.sol#1839)\n\t\t- _indexOfPartitionsOf[_to][_partition] = _partitionsOf[_to].length (Amp.sol#1945)\n\t- _removeTokenFromPartition(_from,_fromPartition,_value) (Amp.sol#1837)\n\t\t- _indexOfTotalPartitions[lastValue] = index (Amp.sol#1982)\n\t\t- _indexOfTotalPartitions[_partition] = 0 (Amp.sol#1985)\n\t- _addTokenToPartition(_to,toPartition,_value) (Amp.sol#1839)\n\t\t- _indexOfTotalPartitions[_partition] = _totalPartitions.length (Amp.sol#1965)\n\t- _removeTokenFromPartition(_from,_fromPartition,_value) (Amp.sol#1837)\n\t\t- _partitionsOf[_from][index - 1] = lastValue (Amp.sol#1923)\n\t\t- _partitionsOf[_from].pop() (Amp.sol#1926)\n\t- _addTokenToPartition(_to,toPartition,_value) (Amp.sol#1839)\n\t\t- _partitionsOf[_to].push(_partition) (Amp.sol#1944)\n\t- _removeTokenFromPartition(_from,_fromPartition,_value) (Amp.sol#1837)\n\t\t- _totalPartitions[index - 1] = lastValue (Amp.sol#1981)\n\t\t- _totalPartitions.pop() (Amp.sol#1984)\n\t- _addTokenToPartition(_to,toPartition,_value) (Amp.sol#1839)\n\t\t- _totalPartitions.push(_partition) (Amp.sol#1964)\n\t- _removeTokenFromPartition(_from,_fromPartition,_value) (Amp.sol#1837)\n\t\t- totalSupplyByPartition[_partition] = totalSupplyByPartition[_partition].sub(_value) (Amp.sol#1902-1904)\n\t- _addTokenToPartition(_to,toPartition,_value) (Amp.sol#1839)\n\t\t- totalSupplyByPartition[_partition] = totalSupplyByPartition[_partition].add(_value) (Amp.sol#1953-1955)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Amp",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Amp/amp-token-contracts-6871b6c64c712835b332e515cc553308dcbbc539/contracts/Amp.sol",
            "function": "setPartitionStrategy",
            "impact": "Low",
            "line": 1743,
            "line_end": 1757,
            "message": "Reentrancy in Amp.setPartitionStrategy(bytes4,address) (Amp.sol#1743-1757):\n\tExternal calls:\n\t- ERC1820Client.setInterfaceImplementation(iname,_implementation) (Amp.sol#1752)\n\t\t- ERC1820REGISTRY.setInterfaceImplementer(address(this),interfaceHash,_implementation) (Amp.sol#404-408)\n\tState variables written after the call(s):\n\t- partitionStrategies.push(_prefix) (Amp.sol#1753)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Amp",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Amp/amp-token-contracts-6871b6c64c712835b332e515cc553308dcbbc539/contracts/Amp.sol",
            "function": "setPartitionStrategy",
            "impact": "Low",
            "line": 1743,
            "line_end": 1757,
            "message": "Reentrancy in Amp.setPartitionStrategy(bytes4,address) (Amp.sol#1743-1757):\n\tExternal calls:\n\t- ERC1820Client.setInterfaceImplementation(iname,_implementation) (Amp.sol#1752)\n\t\t- ERC1820REGISTRY.setInterfaceImplementer(address(this),interfaceHash,_implementation) (Amp.sol#404-408)\n\tEvent emitted after the call(s):\n\t- PartitionStrategySet(_prefix,iname,_implementation) (Amp.sol#1756)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Amp",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Amp/amp-token-contracts-6871b6c64c712835b332e515cc553308dcbbc539/contracts/Amp.sol",
            "function": "swap",
            "impact": "Low",
            "line": 1280,
            "line_end": 1289,
            "message": "Reentrancy in Amp.swap(address) (Amp.sol#1280-1289):\n\tExternal calls:\n\t- swapToken.transferFrom(_from,swapTokenGraveyard,amount) (Amp.sol#1284)\n\t- _mint(msg.sender,_from,amount,) (Amp.sol#1286)\n\t\t- IAmpPartitionStrategyValidator(partitionManagerImplementation).tokensToPartitionToValidate(msg.sig,_toPartition,_operator,_from,_to,_value,_data,_operatorData) (Amp.sol#2081-2091)\n\t\t- IAmpTokensRecipient(recipientImplementation).tokensReceived(msg.sig,_toPartition,_operator,_from,_to,_value,_data,_operatorData) (Amp.sol#2101-2110)\n\tEvent emitted after the call(s):\n\t- Minted(_operator,_to,_value,_data) (Amp.sol#2273)\n\t\t- _mint(msg.sender,_from,amount,) (Amp.sol#1286)\n\t- Swap(msg.sender,_from,amount) (Amp.sol#1288)\n\t- Transfer(address(0),_to,_value) (Amp.sol#2274)\n\t\t- _mint(msg.sender,_from,amount,) (Amp.sol#1286)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Amp",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Amp/amp-token-contracts-6871b6c64c712835b332e515cc553308dcbbc539/contracts/Amp.sol",
            "function": "_transferByPartition",
            "impact": "Low",
            "line": 1808,
            "line_end": 1866,
            "message": "Reentrancy in Amp._transferByPartition(bytes32,address,address,address,uint256,bytes,bytes) (Amp.sol#1808-1866):\n\tExternal calls:\n\t- _callPreTransferHooks(_fromPartition,_operator,_from,_to,_value,_data,_operatorData) (Amp.sol#1827-1835)\n\t\t- IAmpTokensSender(senderImplementation).tokensToTransfer(msg.sig,_fromPartition,_operator,_from,_to,_value,_data,_operatorData) (Amp.sol#2016-2025)\n\t\t- IAmpPartitionStrategyValidator(fromPartitionValidatorImplementation).tokensFromPartitionToValidate(msg.sig,_fromPartition,_operator,_from,_to,_value,_data,_operatorData) (Amp.sol#2038-2048)\n\t- _callPostTransferHooks(toPartition,_operator,_from,_to,_value,_data,_operatorData) (Amp.sol#1841-1849)\n\t\t- IAmpPartitionStrategyValidator(partitionManagerImplementation).tokensToPartitionToValidate(msg.sig,_toPartition,_operator,_from,_to,_value,_data,_operatorData) (Amp.sol#2081-2091)\n\t\t- IAmpTokensRecipient(recipientImplementation).tokensReceived(msg.sig,_toPartition,_operator,_from,_to,_value,_data,_operatorData) (Amp.sol#2101-2110)\n\tEvent emitted after the call(s):\n\t- ChangedPartition(_fromPartition,toPartition,_value) (Amp.sol#1862)\n\t- TransferByPartition(_fromPartition,_operator,_from,_to,_value,_data,_operatorData) (Amp.sol#1851-1859)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Amp",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Amp/amp-token-contracts-6871b6c64c712835b332e515cc553308dcbbc539/contracts/Amp.sol",
            "function": "_transferByPartition",
            "impact": "Low",
            "line": 1808,
            "line_end": 1866,
            "message": "Reentrancy in Amp._transferByPartition(bytes32,address,address,address,uint256,bytes,bytes) (Amp.sol#1808-1866):\n\tExternal calls:\n\t- _callPreTransferHooks(_fromPartition,_operator,_from,_to,_value,_data,_operatorData) (Amp.sol#1827-1835)\n\t\t- IAmpTokensSender(senderImplementation).tokensToTransfer(msg.sig,_fromPartition,_operator,_from,_to,_value,_data,_operatorData) (Amp.sol#2016-2025)\n\t\t- IAmpPartitionStrategyValidator(fromPartitionValidatorImplementation).tokensFromPartitionToValidate(msg.sig,_fromPartition,_operator,_from,_to,_value,_data,_operatorData) (Amp.sol#2038-2048)\n\tEvent emitted after the call(s):\n\t- Transfer(_from,_to,_value) (Amp.sol#1792)\n\t\t- _transfer(_from,_to,_value) (Amp.sol#1838)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Amp",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Amp/amp-token-contracts-6871b6c64c712835b332e515cc553308dcbbc539/contracts/Amp.sol",
            "function": "_mint",
            "impact": "Low",
            "line": 2251,
            "line_end": 2275,
            "message": "Reentrancy in Amp._mint(address,address,uint256,bytes) (Amp.sol#2251-2275):\n\tExternal calls:\n\t- _callPostTransferHooks(defaultPartition,_operator,address(0),_to,_value,_data,) (Amp.sol#2263-2271)\n\t\t- IAmpPartitionStrategyValidator(partitionManagerImplementation).tokensToPartitionToValidate(msg.sig,_toPartition,_operator,_from,_to,_value,_data,_operatorData) (Amp.sol#2081-2091)\n\t\t- IAmpTokensRecipient(recipientImplementation).tokensReceived(msg.sig,_toPartition,_operator,_from,_to,_value,_data,_operatorData) (Amp.sol#2101-2110)\n\tEvent emitted after the call(s):\n\t- Minted(_operator,_to,_value,_data) (Amp.sol#2273)\n\t- Transfer(address(0),_to,_value) (Amp.sol#2274)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Amp/amp-token-contracts-6871b6c64c712835b332e515cc553308dcbbc539/contracts/Amp.sol",
            "impact": "Informational",
            "line": 668,
            "message": "ErrorCodes.EC_50_TRANSFER_FAILURE (Amp.sol#668) is never used in Amp (Amp.sol#746-2276)\n",
            "name": "unused-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Amp/amp-token-contracts-6871b6c64c712835b332e515cc553308dcbbc539/contracts/Amp.sol",
            "impact": "Informational",
            "line": 677,
            "message": "ErrorCodes.EC_59_INSUFFICIENT_RIGHTS (Amp.sol#677) is never used in Amp (Amp.sol#746-2276)\n",
            "name": "unused-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Amp/amp-token-contracts-6871b6c64c712835b332e515cc553308dcbbc539/contracts/Amp.sol",
            "impact": "Informational",
            "line": 786,
            "message": "Amp.AMP_TOKENS_CHECKER (Amp.sol#786) is never used in Amp (Amp.sol#746-2276)\n",
            "name": "unused-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Amp/amp-token-contracts-6871b6c64c712835b332e515cc553308dcbbc539/contracts/Amp.sol",
            "impact": "Informational",
            "line": 771,
            "message": "Amp.ERC777_INTERFACE_NAME (Amp.sol#771) is never used in Amp (Amp.sol#746-2276)\n",
            "name": "unused-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Amp/amp-token-contracts-6871b6c64c712835b332e515cc553308dcbbc539/contracts/Amp.sol",
            "impact": "Informational",
            "line": 680,
            "message": "ErrorCodes.EC_5B_INVALID_VALUE_0 (Amp.sol#680) is never used in Amp (Amp.sol#746-2276)\n",
            "name": "unused-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Amp/amp-token-contracts-6871b6c64c712835b332e515cc553308dcbbc539/contracts/Amp.sol",
            "impact": "Informational",
            "line": 669,
            "message": "ErrorCodes.EC_51_TRANSFER_SUCCESS (Amp.sol#669) is never used in Amp (Amp.sol#746-2276)\n",
            "name": "unused-state",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}