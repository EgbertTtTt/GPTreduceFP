'solc --version' running
'solc /sb/Brokerage.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running
Compilation warnings/errors on /sb/Brokerage.sol:
/sb/Brokerage.sol:2:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.
pragma experimental ABIEncoderV2;
^-------------------------------^


LibMathUnsigned.ceil(uint256,uint256) (../../sb/Brokerage.sol#80-83) performs a multiplication on the result of a division:
	- (sub(add(x,m),1) / m) * m (../../sb/Brokerage.sol#82)
LibMathSigned.wln(int256) (../../sb/Brokerage.sol#311-371) performs a multiplication on the result of a division:
	- m = (longer_fixed_1 * (x - a1_5)) / (x + a1_5) (../../sb/Brokerage.sol#358)
	- r = r + 2 * m (../../sb/Brokerage.sol#359)
LibMathSigned.wln(int256) (../../sb/Brokerage.sol#311-371) performs a multiplication on the result of a division:
	- m = (longer_fixed_1 * (x - a1_5)) / (x + a1_5) (../../sb/Brokerage.sol#358)
	- m2 = (m * m) / longer_fixed_1 (../../sb/Brokerage.sol#360)
LibMathSigned.wln(int256) (../../sb/Brokerage.sol#311-371) performs a multiplication on the result of a division:
	- m = (longer_fixed_1 * (x - a1_5)) / (x + a1_5) (../../sb/Brokerage.sol#358)
	- m2 = (m * m) / longer_fixed_1 (../../sb/Brokerage.sol#360)
	- m = (m * m2) / longer_fixed_1 (../../sb/Brokerage.sol#363)
LibMathSigned.wln(int256) (../../sb/Brokerage.sol#311-371) performs a multiplication on the result of a division:
	- m = (m * m2) / longer_fixed_1 (../../sb/Brokerage.sol#363)
	- r = r + (2 * m) / int256(i) (../../sb/Brokerage.sol#364)
LibMathSigned.wln(int256) (../../sb/Brokerage.sol#311-371) performs a multiplication on the result of a division:
	- x = x * 10 (../../sb/Brokerage.sol#319)
	- x = x / 10 (../../sb/Brokerage.sol#323)
LibMathSigned.ceil(int256,int256) (../../sb/Brokerage.sol#378-382) performs a multiplication on the result of a division:
	- (sub(add(x,m),1) / m) * m (../../sb/Brokerage.sol#381)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply

LibSignature.isValidSignature(LibSignature.OrderSignature,bytes32,address).recovered (../../sb/Brokerage.sol#142) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables

LibOrder.hashOrder(LibOrder.Order) (../../sb/Brokerage.sol#541-552) uses assembly
	- INLINE ASM (../../sb/Brokerage.sol#544-550)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

Brokerage.setBroker(address,address,uint256) (../../sb/Brokerage.sol#618-645) is never used and should be removed
LibEIP712.hashEIP712Message(bytes32) (../../sb/Brokerage.sol#110-112) is never used and should be removed
LibMathSigned.WAD() (../../sb/Brokerage.sol#166-168) is never used and should be removed
LibMathSigned.add(int256,int256) (../../sb/Brokerage.sol#218-223) is never used and should be removed
LibMathSigned.ceil(int256,int256) (../../sb/Brokerage.sol#378-382) is never used and should be removed
LibMathSigned.div(int256,int256) (../../sb/Brokerage.sol#196-203) is never used and should be removed
LibMathSigned.logBase(int256,int256) (../../sb/Brokerage.sol#374-376) is never used and should be removed
LibMathSigned.max(int256,int256) (../../sb/Brokerage.sol#252-254) is never used and should be removed
LibMathSigned.min(int256,int256) (../../sb/Brokerage.sol#248-250) is never used and should be removed
LibMathSigned.mul(int256,int256) (../../sb/Brokerage.sol#178-191) is never used and should be removed
LibMathSigned.neg(int256) (../../sb/Brokerage.sol#171-173) is never used and should be removed
LibMathSigned.roundHalfUp(int256,int256) (../../sb/Brokerage.sol#285-291) is never used and should be removed
LibMathSigned.sub(int256,int256) (../../sb/Brokerage.sol#208-213) is never used and should be removed
LibMathSigned.toUint256(int256) (../../sb/Brokerage.sol#256-259) is never used and should be removed
LibMathSigned.wdiv(int256,int256) (../../sb/Brokerage.sol#230-236) is never used and should be removed
LibMathSigned.wfrac(int256,int256,int256) (../../sb/Brokerage.sol#239-246) is never used and should be removed
LibMathSigned.wln(int256) (../../sb/Brokerage.sol#311-371) is never used and should be removed
LibMathSigned.wmul(int256,int256) (../../sb/Brokerage.sol#225-227) is never used and should be removed
LibMathSigned.wpowi(int256,int256) (../../sb/Brokerage.sol#264-274) is never used and should be removed
LibMathUnsigned.WAD() (../../sb/Brokerage.sol#9-11) is never used and should be removed
LibMathUnsigned.add(uint256,uint256) (../../sb/Brokerage.sol#13-18) is never used and should be removed
LibMathUnsigned.ceil(uint256,uint256) (../../sb/Brokerage.sol#80-83) is never used and should be removed
LibMathUnsigned.div(uint256,uint256) (../../sb/Brokerage.sol#41-48) is never used and should be removed
LibMathUnsigned.max(uint256,uint256) (../../sb/Brokerage.sol#66-68) is never used and should be removed
LibMathUnsigned.min(uint256,uint256) (../../sb/Brokerage.sol#62-64) is never used and should be removed
LibMathUnsigned.mod(uint256,uint256) (../../sb/Brokerage.sol#75-78) is never used and should be removed
LibMathUnsigned.mul(uint256,uint256) (../../sb/Brokerage.sol#27-39) is never used and should be removed
LibMathUnsigned.sub(uint256,uint256) (../../sb/Brokerage.sol#20-25) is never used and should be removed
LibMathUnsigned.toInt256(uint256) (../../sb/Brokerage.sol#70-73) is never used and should be removed
LibMathUnsigned.wdiv(uint256,uint256) (../../sb/Brokerage.sol#54-56) is never used and should be removed
LibMathUnsigned.wfrac(uint256,uint256,uint256) (../../sb/Brokerage.sol#58-60) is never used and should be removed
LibMathUnsigned.wmul(uint256,uint256) (../../sb/Brokerage.sol#50-52) is never used and should be removed
LibOrder.getExpiredAt(LibOrder.OrderParam) (../../sb/Brokerage.sol#558-560) is never used and should be removed
LibOrder.getOrder(LibOrder.OrderParam,address,address) (../../sb/Brokerage.sol#528-539) is never used and should be removed
LibOrder.getOrderHash(LibOrder.Order) (../../sb/Brokerage.sol#523-526) is never used and should be removed
LibOrder.getOrderHash(LibOrder.OrderParam,address,address) (../../sb/Brokerage.sol#513-521) is never used and should be removed
LibOrder.getOrderVersion(LibOrder.OrderParam) (../../sb/Brokerage.sol#554-556) is never used and should be removed
LibOrder.getPrice(LibOrder.OrderParam) (../../sb/Brokerage.sol#567-569) is never used and should be removed
LibOrder.hashOrder(LibOrder.Order) (../../sb/Brokerage.sol#541-552) is never used and should be removed
LibOrder.isInversed(LibOrder.OrderParam) (../../sb/Brokerage.sol#583-585) is never used and should be removed
LibOrder.isMakerOnly(LibOrder.OrderParam) (../../sb/Brokerage.sol#579-581) is never used and should be removed
LibOrder.isMarketBuy(LibOrder.OrderParam) (../../sb/Brokerage.sol#575-577) is never used and should be removed
LibOrder.isMarketOrder(LibOrder.OrderParam) (../../sb/Brokerage.sol#571-573) is never used and should be removed
LibOrder.isSell(LibOrder.OrderParam) (../../sb/Brokerage.sol#562-565) is never used and should be removed
LibOrder.makerFeeRate(LibOrder.OrderParam) (../../sb/Brokerage.sol#591-593) is never used and should be removed
LibOrder.side(LibOrder.OrderParam) (../../sb/Brokerage.sol#587-589) is never used and should be removed
LibOrder.takerFeeRate(LibOrder.OrderParam) (../../sb/Brokerage.sol#595-597) is never used and should be removed
LibSignature.isValidSignature(LibSignature.OrderSignature,bytes32,address) (../../sb/Brokerage.sol#136-159) is never used and should be removed
LibTypes.counterSide(LibTypes.Side) (../../sb/Brokerage.sol#391-398) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Pragma version^0.5.2 (../../sb/Brokerage.sol#1) allows old versions
solc-0.5.17 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Function LibMathUnsigned.WAD() (../../sb/Brokerage.sol#9-11) is not in mixedCase
Function LibMathSigned.WAD() (../../sb/Brokerage.sol#166-168) is not in mixedCase
Constant LibMathSigned.fixed_digits (../../sb/Brokerage.sol#276) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LibMathSigned.fixed_1 (../../sb/Brokerage.sol#277) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LibMathSigned.fixed_e (../../sb/Brokerage.sol#278) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LibMathSigned.longer_digits (../../sb/Brokerage.sol#279) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LibMathSigned.longer_fixed_log_e_1_5 (../../sb/Brokerage.sol#280) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LibMathSigned.longer_fixed_1 (../../sb/Brokerage.sol#281) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LibMathSigned.longer_fixed_log_e_10 (../../sb/Brokerage.sol#282) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

LibMathSigned.wln(int256) (../../sb/Brokerage.sol#311-371) uses literals with too many digits:
	- require(bool,string)(x <= 10000000000000000000000000000000000000000,logE only accepts v <= 1e22 * 1e18) (../../sb/Brokerage.sol#313)
LibMathSigned.slitherConstructorConstantVariables() (../../sb/Brokerage.sol#162-383) uses literals with too many digits:
	- fixed_1 = 1000000000000000000 (../../sb/Brokerage.sol#277)
LibMathSigned.slitherConstructorConstantVariables() (../../sb/Brokerage.sol#162-383) uses literals with too many digits:
	- longer_fixed_1 = 1000000000000000000000000000000000000 (../../sb/Brokerage.sol#281)
LibOrder.slitherConstructorConstantVariables() (../../sb/Brokerage.sol#465-598) uses literals with too many digits:
	- FEE_RATE_BASE = 100000 (../../sb/Brokerage.sol#475)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
/sb/Brokerage.sol analyzed (7 contracts with 93 detectors), 73 result(s) found
