{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "ThorusMaster",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusMaster.sol",
            "function": "safeThorusTransfer",
            "impact": "High",
            "line": 708,
            "line_end": 715,
            "message": "ThorusMaster.safeThorusTransfer(address,uint256) (ThorusMaster.sol#708-715) ignores return value by thorus.transfer(_to,_amount) (ThorusMaster.sol#713)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusMaster",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusMaster.sol",
            "function": "safeThorusTransfer",
            "impact": "High",
            "line": 708,
            "line_end": 715,
            "message": "ThorusMaster.safeThorusTransfer(address,uint256) (ThorusMaster.sol#708-715) ignores return value by thorus.transfer(_to,thorusBal) (ThorusMaster.sol#711)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusMaster",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusMaster.sol",
            "function": "add",
            "impact": "Medium",
            "line": 574,
            "line_end": 590,
            "message": "Reentrancy in ThorusMaster.add(uint256,IERC20) (ThorusMaster.sol#574-590):\n\tExternal calls:\n\t- massUpdatePools() (ThorusMaster.sol#575)\n\t\t- thorus.mint(address(this),thorusReward) (ThorusMaster.sol#629)\n\tState variables written after the call(s):\n\t- poolInfo.push(PoolInfo({lpToken:_lpToken,allocPoint:_allocPoint,lastRewardSecond:lastRewardSecond,accThorusPerShare:0,lpSupply:0})) (ThorusMaster.sol#580-588)\n\tThorusMaster.poolInfo (ThorusMaster.sol#543) can be used in cross function reentrancies:\n\t- ThorusMaster.add(uint256,IERC20) (ThorusMaster.sol#574-590)\n\t- ThorusMaster.massUpdatePools() (ThorusMaster.sol#611-616)\n\t- ThorusMaster.pendingThorus(uint256,address) (ThorusMaster.sol#599-609)\n\t- ThorusMaster.poolInfo (ThorusMaster.sol#543)\n\t- ThorusMaster.poolLength() (ThorusMaster.sol#566-568)\n\t- ThorusMaster.set(uint256,uint256) (ThorusMaster.sol#592-597)\n\t- ThorusMaster.updatePool(uint256) (ThorusMaster.sol#618-632)\n\t- totalAllocPoint = totalAllocPoint + _allocPoint (ThorusMaster.sol#579)\n\tThorusMaster.totalAllocPoint (ThorusMaster.sol#545) can be used in cross function reentrancies:\n\t- ThorusMaster.add(uint256,IERC20) (ThorusMaster.sol#574-590)\n\t- ThorusMaster.pendingThorus(uint256,address) (ThorusMaster.sol#599-609)\n\t- ThorusMaster.set(uint256,uint256) (ThorusMaster.sol#592-597)\n\t- ThorusMaster.totalAllocPoint (ThorusMaster.sol#545)\n\t- ThorusMaster.updatePool(uint256) (ThorusMaster.sol#618-632)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusMaster",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusMaster.sol",
            "function": "set",
            "impact": "Medium",
            "line": 592,
            "line_end": 597,
            "message": "Reentrancy in ThorusMaster.set(uint256,uint256) (ThorusMaster.sol#592-597):\n\tExternal calls:\n\t- massUpdatePools() (ThorusMaster.sol#594)\n\t\t- thorus.mint(address(this),thorusReward) (ThorusMaster.sol#629)\n\tState variables written after the call(s):\n\t- poolInfo[_pid].allocPoint = _allocPoint (ThorusMaster.sol#596)\n\tThorusMaster.poolInfo (ThorusMaster.sol#543) can be used in cross function reentrancies:\n\t- ThorusMaster.add(uint256,IERC20) (ThorusMaster.sol#574-590)\n\t- ThorusMaster.massUpdatePools() (ThorusMaster.sol#611-616)\n\t- ThorusMaster.pendingThorus(uint256,address) (ThorusMaster.sol#599-609)\n\t- ThorusMaster.poolInfo (ThorusMaster.sol#543)\n\t- ThorusMaster.poolLength() (ThorusMaster.sol#566-568)\n\t- ThorusMaster.set(uint256,uint256) (ThorusMaster.sol#592-597)\n\t- ThorusMaster.updatePool(uint256) (ThorusMaster.sol#618-632)\n\t- totalAllocPoint = totalAllocPoint - poolInfo[_pid].allocPoint + _allocPoint (ThorusMaster.sol#595)\n\tThorusMaster.totalAllocPoint (ThorusMaster.sol#545) can be used in cross function reentrancies:\n\t- ThorusMaster.add(uint256,IERC20) (ThorusMaster.sol#574-590)\n\t- ThorusMaster.pendingThorus(uint256,address) (ThorusMaster.sol#599-609)\n\t- ThorusMaster.set(uint256,uint256) (ThorusMaster.sol#592-597)\n\t- ThorusMaster.totalAllocPoint (ThorusMaster.sol#545)\n\t- ThorusMaster.updatePool(uint256) (ThorusMaster.sol#618-632)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusMaster",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusMaster.sol",
            "function": "withdraw",
            "impact": "Medium",
            "line": 660,
            "line_end": 681,
            "message": "Reentrancy in ThorusMaster.withdraw(uint256,uint256,bool) (ThorusMaster.sol#660-681):\n\tExternal calls:\n\t- updatePool(_pid) (ThorusMaster.sol#664)\n\t\t- thorus.mint(address(this),thorusReward) (ThorusMaster.sol#629)\n\t- safeThorusTransfer(msg.sender,totalPending) (ThorusMaster.sol#669)\n\t\t- thorus.transfer(_to,thorusBal) (ThorusMaster.sol#711)\n\t\t- thorus.transfer(_to,_amount) (ThorusMaster.sol#713)\n\tState variables written after the call(s):\n\t- pool.lpSupply = pool.lpSupply - _amount (ThorusMaster.sol#676)\n\tThorusMaster.poolInfo (ThorusMaster.sol#543) can be used in cross function reentrancies:\n\t- ThorusMaster.add(uint256,IERC20) (ThorusMaster.sol#574-590)\n\t- ThorusMaster.massUpdatePools() (ThorusMaster.sol#611-616)\n\t- ThorusMaster.pendingThorus(uint256,address) (ThorusMaster.sol#599-609)\n\t- ThorusMaster.poolInfo (ThorusMaster.sol#543)\n\t- ThorusMaster.poolLength() (ThorusMaster.sol#566-568)\n\t- ThorusMaster.set(uint256,uint256) (ThorusMaster.sol#592-597)\n\t- ThorusMaster.updatePool(uint256) (ThorusMaster.sol#618-632)\n\t- user.amount = user.amount - _amount (ThorusMaster.sol#675)\n\tThorusMaster.userInfo (ThorusMaster.sol#544) can be used in cross function reentrancies:\n\t- ThorusMaster.pendingThorus(uint256,address) (ThorusMaster.sol#599-609)\n\t- ThorusMaster.userInfo (ThorusMaster.sol#544)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusMaster",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusMaster.sol",
            "function": "deposit",
            "impact": "Medium",
            "line": 634,
            "line_end": 658,
            "message": "Reentrancy in ThorusMaster.deposit(uint256,uint256,bool) (ThorusMaster.sol#634-658):\n\tExternal calls:\n\t- updatePool(_pid) (ThorusMaster.sol#637)\n\t\t- thorus.mint(address(this),thorusReward) (ThorusMaster.sol#629)\n\t- safeThorusTransfer(msg.sender,totalPending) (ThorusMaster.sol#643)\n\t\t- thorus.transfer(_to,thorusBal) (ThorusMaster.sol#711)\n\t\t- thorus.transfer(_to,_amount) (ThorusMaster.sol#713)\n\t- pool.lpToken.safeTransferFrom(msg.sender,address(this),_amount) (ThorusMaster.sol#651)\n\tState variables written after the call(s):\n\t- pool.lpSupply = pool.lpSupply + _amount (ThorusMaster.sol#654)\n\tThorusMaster.poolInfo (ThorusMaster.sol#543) can be used in cross function reentrancies:\n\t- ThorusMaster.add(uint256,IERC20) (ThorusMaster.sol#574-590)\n\t- ThorusMaster.massUpdatePools() (ThorusMaster.sol#611-616)\n\t- ThorusMaster.pendingThorus(uint256,address) (ThorusMaster.sol#599-609)\n\t- ThorusMaster.poolInfo (ThorusMaster.sol#543)\n\t- ThorusMaster.poolLength() (ThorusMaster.sol#566-568)\n\t- ThorusMaster.set(uint256,uint256) (ThorusMaster.sol#592-597)\n\t- ThorusMaster.updatePool(uint256) (ThorusMaster.sol#618-632)\n\t- user.amount = user.amount + _amount (ThorusMaster.sol#653)\n\tThorusMaster.userInfo (ThorusMaster.sol#544) can be used in cross function reentrancies:\n\t- ThorusMaster.pendingThorus(uint256,address) (ThorusMaster.sol#599-609)\n\t- ThorusMaster.userInfo (ThorusMaster.sol#544)\n\t- user.rewardDebt = user.amount * pool.accThorusPerShare / 1e18 (ThorusMaster.sol#656)\n\tThorusMaster.userInfo (ThorusMaster.sol#544) can be used in cross function reentrancies:\n\t- ThorusMaster.pendingThorus(uint256,address) (ThorusMaster.sol#599-609)\n\t- ThorusMaster.userInfo (ThorusMaster.sol#544)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusMaster",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusMaster.sol",
            "function": "withdraw",
            "impact": "Medium",
            "line": 660,
            "line_end": 681,
            "message": "Reentrancy in ThorusMaster.withdraw(uint256,uint256,bool) (ThorusMaster.sol#660-681):\n\tExternal calls:\n\t- updatePool(_pid) (ThorusMaster.sol#664)\n\t\t- thorus.mint(address(this),thorusReward) (ThorusMaster.sol#629)\n\t- safeThorusTransfer(msg.sender,totalPending) (ThorusMaster.sol#669)\n\t\t- thorus.transfer(_to,thorusBal) (ThorusMaster.sol#711)\n\t\t- thorus.transfer(_to,_amount) (ThorusMaster.sol#713)\n\t- pool.lpToken.safeTransfer(msg.sender,_amount) (ThorusMaster.sol#677)\n\tState variables written after the call(s):\n\t- user.rewardDebt = user.amount * pool.accThorusPerShare / 1e18 (ThorusMaster.sol#679)\n\tThorusMaster.userInfo (ThorusMaster.sol#544) can be used in cross function reentrancies:\n\t- ThorusMaster.pendingThorus(uint256,address) (ThorusMaster.sol#599-609)\n\t- ThorusMaster.userInfo (ThorusMaster.sol#544)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusMaster",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusMaster.sol",
            "function": "withdraw",
            "impact": "Medium",
            "line": 660,
            "line_end": 681,
            "message": "Reentrancy in ThorusMaster.withdraw(uint256,uint256,bool) (ThorusMaster.sol#660-681):\n\tExternal calls:\n\t- updatePool(_pid) (ThorusMaster.sol#664)\n\t\t- thorus.mint(address(this),thorusReward) (ThorusMaster.sol#629)\n\tState variables written after the call(s):\n\t- user.pendingRewards = 0 (ThorusMaster.sol#668)\n\tThorusMaster.userInfo (ThorusMaster.sol#544) can be used in cross function reentrancies:\n\t- ThorusMaster.pendingThorus(uint256,address) (ThorusMaster.sol#599-609)\n\t- ThorusMaster.userInfo (ThorusMaster.sol#544)\n\t- user.pendingRewards = totalPending (ThorusMaster.sol#672)\n\tThorusMaster.userInfo (ThorusMaster.sol#544) can be used in cross function reentrancies:\n\t- ThorusMaster.pendingThorus(uint256,address) (ThorusMaster.sol#599-609)\n\t- ThorusMaster.userInfo (ThorusMaster.sol#544)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusMaster",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusMaster.sol",
            "function": "claim",
            "impact": "Medium",
            "line": 694,
            "line_end": 706,
            "message": "Reentrancy in ThorusMaster.claim(uint256) (ThorusMaster.sol#694-706):\n\tExternal calls:\n\t- updatePool(_pid) (ThorusMaster.sol#697)\n\t\t- thorus.mint(address(this),thorusReward) (ThorusMaster.sol#629)\n\tState variables written after the call(s):\n\t- user.pendingRewards = user.pendingRewards + pending (ThorusMaster.sol#700)\n\tThorusMaster.userInfo (ThorusMaster.sol#544) can be used in cross function reentrancies:\n\t- ThorusMaster.pendingThorus(uint256,address) (ThorusMaster.sol#599-609)\n\t- ThorusMaster.userInfo (ThorusMaster.sol#544)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusMaster",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusMaster.sol",
            "function": "deposit",
            "impact": "Medium",
            "line": 634,
            "line_end": 658,
            "message": "Reentrancy in ThorusMaster.deposit(uint256,uint256,bool) (ThorusMaster.sol#634-658):\n\tExternal calls:\n\t- updatePool(_pid) (ThorusMaster.sol#637)\n\t\t- thorus.mint(address(this),thorusReward) (ThorusMaster.sol#629)\n\tState variables written after the call(s):\n\t- user.pendingRewards = 0 (ThorusMaster.sol#642)\n\tThorusMaster.userInfo (ThorusMaster.sol#544) can be used in cross function reentrancies:\n\t- ThorusMaster.pendingThorus(uint256,address) (ThorusMaster.sol#599-609)\n\t- ThorusMaster.userInfo (ThorusMaster.sol#544)\n\t- user.pendingRewards = totalPending (ThorusMaster.sol#646)\n\tThorusMaster.userInfo (ThorusMaster.sol#544) can be used in cross function reentrancies:\n\t- ThorusMaster.pendingThorus(uint256,address) (ThorusMaster.sol#599-609)\n\t- ThorusMaster.userInfo (ThorusMaster.sol#544)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusMaster",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusMaster.sol",
            "function": "updatePool",
            "impact": "Medium",
            "line": 618,
            "line_end": 632,
            "message": "Reentrancy in ThorusMaster.updatePool(uint256) (ThorusMaster.sol#618-632):\n\tExternal calls:\n\t- thorus.mint(address(this),thorusReward) (ThorusMaster.sol#629)\n\tState variables written after the call(s):\n\t- pool.accThorusPerShare = pool.accThorusPerShare + (thorusReward * 1e18 / pool.lpSupply) (ThorusMaster.sol#630)\n\tThorusMaster.poolInfo (ThorusMaster.sol#543) can be used in cross function reentrancies:\n\t- ThorusMaster.add(uint256,IERC20) (ThorusMaster.sol#574-590)\n\t- ThorusMaster.massUpdatePools() (ThorusMaster.sol#611-616)\n\t- ThorusMaster.pendingThorus(uint256,address) (ThorusMaster.sol#599-609)\n\t- ThorusMaster.poolInfo (ThorusMaster.sol#543)\n\t- ThorusMaster.poolLength() (ThorusMaster.sol#566-568)\n\t- ThorusMaster.set(uint256,uint256) (ThorusMaster.sol#592-597)\n\t- ThorusMaster.updatePool(uint256) (ThorusMaster.sol#618-632)\n\t- pool.lastRewardSecond = block.timestamp (ThorusMaster.sol#631)\n\tThorusMaster.poolInfo (ThorusMaster.sol#543) can be used in cross function reentrancies:\n\t- ThorusMaster.add(uint256,IERC20) (ThorusMaster.sol#574-590)\n\t- ThorusMaster.massUpdatePools() (ThorusMaster.sol#611-616)\n\t- ThorusMaster.pendingThorus(uint256,address) (ThorusMaster.sol#599-609)\n\t- ThorusMaster.poolInfo (ThorusMaster.sol#543)\n\t- ThorusMaster.poolLength() (ThorusMaster.sol#566-568)\n\t- ThorusMaster.set(uint256,uint256) (ThorusMaster.sol#592-597)\n\t- ThorusMaster.updatePool(uint256) (ThorusMaster.sol#618-632)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusMaster",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusMaster.sol",
            "function": "emergencyWithdraw",
            "impact": "Medium",
            "line": 683,
            "line_end": 692,
            "message": "Reentrancy in ThorusMaster.emergencyWithdraw(uint256) (ThorusMaster.sol#683-692):\n\tExternal calls:\n\t- pool.lpToken.safeTransfer(msg.sender,user.amount) (ThorusMaster.sol#686)\n\tState variables written after the call(s):\n\t- pool.lpSupply = pool.lpSupply - user.amount (ThorusMaster.sol#687)\n\tThorusMaster.poolInfo (ThorusMaster.sol#543) can be used in cross function reentrancies:\n\t- ThorusMaster.add(uint256,IERC20) (ThorusMaster.sol#574-590)\n\t- ThorusMaster.massUpdatePools() (ThorusMaster.sol#611-616)\n\t- ThorusMaster.pendingThorus(uint256,address) (ThorusMaster.sol#599-609)\n\t- ThorusMaster.poolInfo (ThorusMaster.sol#543)\n\t- ThorusMaster.poolLength() (ThorusMaster.sol#566-568)\n\t- ThorusMaster.set(uint256,uint256) (ThorusMaster.sol#592-597)\n\t- ThorusMaster.updatePool(uint256) (ThorusMaster.sol#618-632)\n\t- user.amount = 0 (ThorusMaster.sol#689)\n\tThorusMaster.userInfo (ThorusMaster.sol#544) can be used in cross function reentrancies:\n\t- ThorusMaster.pendingThorus(uint256,address) (ThorusMaster.sol#599-609)\n\t- ThorusMaster.userInfo (ThorusMaster.sol#544)\n\t- user.rewardDebt = 0 (ThorusMaster.sol#690)\n\tThorusMaster.userInfo (ThorusMaster.sol#544) can be used in cross function reentrancies:\n\t- ThorusMaster.pendingThorus(uint256,address) (ThorusMaster.sol#599-609)\n\t- ThorusMaster.userInfo (ThorusMaster.sol#544)\n\t- user.pendingRewards = 0 (ThorusMaster.sol#691)\n\tThorusMaster.userInfo (ThorusMaster.sol#544) can be used in cross function reentrancies:\n\t- ThorusMaster.pendingThorus(uint256,address) (ThorusMaster.sol#599-609)\n\t- ThorusMaster.userInfo (ThorusMaster.sol#544)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusMaster",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusMaster.sol",
            "function": "claim",
            "impact": "Medium",
            "line": 694,
            "line_end": 706,
            "message": "Reentrancy in ThorusMaster.claim(uint256) (ThorusMaster.sol#694-706):\n\tExternal calls:\n\t- updatePool(_pid) (ThorusMaster.sol#697)\n\t\t- thorus.mint(address(this),thorusReward) (ThorusMaster.sol#629)\n\t- safeThorusTransfer(msg.sender,user.pendingRewards) (ThorusMaster.sol#701)\n\t\t- thorus.transfer(_to,thorusBal) (ThorusMaster.sol#711)\n\t\t- thorus.transfer(_to,_amount) (ThorusMaster.sol#713)\n\tState variables written after the call(s):\n\t- user.pendingRewards = 0 (ThorusMaster.sol#703)\n\tThorusMaster.userInfo (ThorusMaster.sol#544) can be used in cross function reentrancies:\n\t- ThorusMaster.pendingThorus(uint256,address) (ThorusMaster.sol#599-609)\n\t- ThorusMaster.userInfo (ThorusMaster.sol#544)\n\t- user.rewardDebt = user.amount * pool.accThorusPerShare / 1e18 (ThorusMaster.sol#705)\n\tThorusMaster.userInfo (ThorusMaster.sol#544) can be used in cross function reentrancies:\n\t- ThorusMaster.pendingThorus(uint256,address) (ThorusMaster.sol#599-609)\n\t- ThorusMaster.userInfo (ThorusMaster.sol#544)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusMaster",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusMaster.sol",
            "function": "setThorusPerSecond",
            "impact": "Medium",
            "line": 717,
            "line_end": 723,
            "message": "Reentrancy in ThorusMaster.setThorusPerSecond(uint256) (ThorusMaster.sol#717-723):\n\tExternal calls:\n\t- massUpdatePools() (ThorusMaster.sol#720)\n\t\t- thorus.mint(address(this),thorusReward) (ThorusMaster.sol#629)\n\tState variables written after the call(s):\n\t- thorusPerSecond = _thorusPerSecond (ThorusMaster.sol#722)\n\tThorusMaster.thorusPerSecond (ThorusMaster.sol#540) can be used in cross function reentrancies:\n\t- ThorusMaster.constructor(IThorusToken,uint256,uint256) (ThorusMaster.sol#556-564)\n\t- ThorusMaster.pendingThorus(uint256,address) (ThorusMaster.sol#599-609)\n\t- ThorusMaster.setThorusPerSecond(uint256) (ThorusMaster.sol#717-723)\n\t- ThorusMaster.thorusPerSecond (ThorusMaster.sol#540)\n\t- ThorusMaster.updatePool(uint256) (ThorusMaster.sol#618-632)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusMaster",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusMaster.sol",
            "function": "updatePool",
            "impact": "Low",
            "line": 618,
            "line_end": 632,
            "message": "ThorusMaster.updatePool(uint256) (ThorusMaster.sol#618-632) has external calls inside a loop: thorus.mint(address(this),thorusReward) (ThorusMaster.sol#629)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusMaster",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusMaster.sol",
            "function": "setThorusPerSecond",
            "impact": "Low",
            "line": 717,
            "line_end": 723,
            "message": "Reentrancy in ThorusMaster.setThorusPerSecond(uint256) (ThorusMaster.sol#717-723):\n\tExternal calls:\n\t- massUpdatePools() (ThorusMaster.sol#720)\n\t\t- thorus.mint(address(this),thorusReward) (ThorusMaster.sol#629)\n\tEvent emitted after the call(s):\n\t- SetThorusPerSecond(thorusPerSecond,_thorusPerSecond) (ThorusMaster.sol#721)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusMaster",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusMaster.sol",
            "function": "add",
            "impact": "Low",
            "line": 574,
            "line_end": 590,
            "message": "Reentrancy in ThorusMaster.add(uint256,IERC20) (ThorusMaster.sol#574-590):\n\tExternal calls:\n\t- massUpdatePools() (ThorusMaster.sol#575)\n\t\t- thorus.mint(address(this),thorusReward) (ThorusMaster.sol#629)\n\tEvent emitted after the call(s):\n\t- Add(_allocPoint,_lpToken) (ThorusMaster.sol#589)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusMaster",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusMaster.sol",
            "function": "pendingThorus",
            "impact": "Low",
            "line": 599,
            "line_end": 609,
            "message": "ThorusMaster.pendingThorus(uint256,address) (ThorusMaster.sol#599-609) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp > pool.lastRewardSecond && pool.lpSupply != 0 && totalAllocPoint > 0 (ThorusMaster.sol#603)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusMaster",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusMaster.sol",
            "function": "updatePool",
            "impact": "Low",
            "line": 618,
            "line_end": 632,
            "message": "ThorusMaster.updatePool(uint256) (ThorusMaster.sol#618-632) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp <= pool.lastRewardSecond (ThorusMaster.sol#620)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusMaster",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusMaster.sol",
            "function": "massUpdatePools",
            "impact": "Low",
            "line": 611,
            "line_end": 616,
            "message": "ThorusMaster.massUpdatePools() (ThorusMaster.sol#611-616) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- pid < length (ThorusMaster.sol#613)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusMaster",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusMaster.sol",
            "function": "add",
            "impact": "Low",
            "line": 574,
            "line_end": 590,
            "message": "ThorusMaster.add(uint256,IERC20) (ThorusMaster.sol#574-590) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp > startSecond (ThorusMaster.sol#576-578)\n",
            "name": "timestamp",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}