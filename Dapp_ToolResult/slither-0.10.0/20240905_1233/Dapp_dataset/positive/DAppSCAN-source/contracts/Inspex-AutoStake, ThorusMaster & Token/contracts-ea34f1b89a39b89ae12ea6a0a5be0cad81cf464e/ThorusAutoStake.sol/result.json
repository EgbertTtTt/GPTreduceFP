{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "ThorusAutoStake",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusAutoStake.sol",
            "function": "withdraw",
            "impact": "Medium",
            "line": 1165,
            "line_end": 1201,
            "message": "Reentrancy in ThorusAutoStake.withdraw(uint256) (ThorusAutoStake.sol#1165-1201):\n\tExternal calls:\n\t- IThorusMaster(thorusMaster).withdraw(stakingPid,balWithdraw,true) (ThorusAutoStake.sol#1176)\n\t- thorus.safeTransfer(treasury,currentWithdrawFee) (ThorusAutoStake.sol#1186)\n\tState variables written after the call(s):\n\t- user.thorusAtLastUserAction = balanceOf(msg.sender) * thorusBalanceOf() / totalSupply() (ThorusAutoStake.sol#1191)\n\tThorusAutoStake.userInfo (ThorusAutoStake.sol#993) can be used in cross function reentrancies:\n\t- ThorusAutoStake.userInfo (ThorusAutoStake.sol#993)\n\t- ThorusAutoStake.withdraw(uint256) (ThorusAutoStake.sol#1165-1201)\n\t- user.thorusAtLastUserAction = 0 (ThorusAutoStake.sol#1193)\n\tThorusAutoStake.userInfo (ThorusAutoStake.sol#993) can be used in cross function reentrancies:\n\t- ThorusAutoStake.userInfo (ThorusAutoStake.sol#993)\n\t- ThorusAutoStake.withdraw(uint256) (ThorusAutoStake.sol#1165-1201)\n\t- user.lastUserActionTime = block.timestamp (ThorusAutoStake.sol#1196)\n\tThorusAutoStake.userInfo (ThorusAutoStake.sol#993) can be used in cross function reentrancies:\n\t- ThorusAutoStake.userInfo (ThorusAutoStake.sol#993)\n\t- ThorusAutoStake.withdraw(uint256) (ThorusAutoStake.sol#1165-1201)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusAutoStake",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusAutoStake.sol",
            "function": "constructor",
            "impact": "Medium",
            "line": 1023,
            "line_end": 1035,
            "message": "ThorusAutoStake.constructor(IERC20,IThorusMaster,uint256,address) (ThorusAutoStake.sol#1023-1035) ignores return value by IERC20(_thorus).approve(address(_thorusMaster),type()(uint256).max) (ThorusAutoStake.sol#1034)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusAutoStake",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusAutoStake.sol",
            "function": "thorusBalanceOf",
            "impact": "Medium",
            "line": 1207,
            "line_end": 1210,
            "message": "ThorusAutoStake.thorusBalanceOf() (ThorusAutoStake.sol#1207-1210) ignores return value by (amount) = IThorusMaster(thorusMaster).userInfo(stakingPid,address(this)) (ThorusAutoStake.sol#1208)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusAutoStake",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusAutoStake.sol",
            "function": "deposit",
            "impact": "Low",
            "line": 1051,
            "line_end": 1074,
            "message": "Reentrancy in ThorusAutoStake.deposit(address,uint256) (ThorusAutoStake.sol#1051-1074):\n\tExternal calls:\n\t- thorus.safeTransferFrom(msg.sender,address(this),_amount) (ThorusAutoStake.sol#1056)\n\tState variables written after the call(s):\n\t- _mint(_user,mintSupply) (ThorusAutoStake.sol#1065)\n\t\t- _balances[account] += amount (ThorusAutoStake.sol#430)\n\t- _mint(_user,mintSupply) (ThorusAutoStake.sol#1065)\n\t\t- _totalSupply += amount (ThorusAutoStake.sol#429)\n\t- user.lastDepositedTime = block.timestamp (ThorusAutoStake.sol#1066)\n\t- user.thorusAtLastUserAction = balanceOf(_user) * thorusBalanceOf() / totalSupply() (ThorusAutoStake.sol#1068)\n\t- user.lastUserActionTime = block.timestamp (ThorusAutoStake.sol#1069)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusAutoStake",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusAutoStake.sol",
            "function": "harvest",
            "impact": "Low",
            "line": 1080,
            "line_end": 1095,
            "message": "Reentrancy in ThorusAutoStake.harvest() (ThorusAutoStake.sol#1080-1095):\n\tExternal calls:\n\t- IThorusMaster(thorusMaster).claim(stakingPid) (ThorusAutoStake.sol#1081)\n\t- thorus.safeTransfer(treasury,currentPerformanceFee) (ThorusAutoStake.sol#1085)\n\t- thorus.safeTransfer(msg.sender,currentCallFee) (ThorusAutoStake.sol#1088)\n\t- _earn() (ThorusAutoStake.sol#1090)\n\t\t- IThorusMaster(thorusMaster).deposit(stakingPid,bal,true) (ThorusAutoStake.sol#1215)\n\tState variables written after the call(s):\n\t- lastHarvestedTime = block.timestamp (ThorusAutoStake.sol#1092)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusAutoStake",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusAutoStake.sol",
            "function": "emergencyWithdraw",
            "impact": "Low",
            "line": 1130,
            "line_end": 1135,
            "message": "Reentrancy in ThorusAutoStake.emergencyWithdraw() (ThorusAutoStake.sol#1130-1135):\n\tExternal calls:\n\t- IThorusMaster(thorusMaster).emergencyWithdraw(stakingPid) (ThorusAutoStake.sol#1131)\n\tState variables written after the call(s):\n\t- _pause() (ThorusAutoStake.sol#1133)\n\t\t- _paused = true (ThorusAutoStake.sol#890)\n\t- hadEmergencyWithdrawn = true (ThorusAutoStake.sol#1132)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusAutoStake",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusAutoStake.sol",
            "function": "emergencyWithdraw",
            "impact": "Low",
            "line": 1130,
            "line_end": 1135,
            "message": "Reentrancy in ThorusAutoStake.emergencyWithdraw() (ThorusAutoStake.sol#1130-1135):\n\tExternal calls:\n\t- IThorusMaster(thorusMaster).emergencyWithdraw(stakingPid) (ThorusAutoStake.sol#1131)\n\tEvent emitted after the call(s):\n\t- EmergencyWithdraw() (ThorusAutoStake.sol#1134)\n\t- Paused(_msgSender()) (ThorusAutoStake.sol#891)\n\t\t- _pause() (ThorusAutoStake.sol#1133)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ThorusAutoStake",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-AutoStake, ThorusMaster & Token/contracts-ea34f1b89a39b89ae12ea6a0a5be0cad81cf464e/ThorusAutoStake.sol",
            "function": "withdraw",
            "impact": "Low",
            "line": 1165,
            "line_end": 1201,
            "message": "ThorusAutoStake.withdraw(uint256) (ThorusAutoStake.sol#1165-1201) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp < user.lastDepositedTime + withdrawFeePeriod (ThorusAutoStake.sol#1184)\n",
            "name": "timestamp",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}