{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "High",
            "contract": "Vault",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_stnd_v1.7_signed/standard-evm-d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol",
            "function": "liquidate",
            "impact": "High",
            "line": 241,
            "line_end": 269,
            "message": "Vault.liquidate() (Vault.sol#241-269) allows anyone to destruct the contract\n",
            "name": "suicidal",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Vault",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_stnd_v1.7_signed/standard-evm-d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol",
            "function": "payDebt",
            "impact": "Medium",
            "line": 366,
            "line_end": 376,
            "message": "Reentrancy in Vault.payDebt(uint256) (Vault.sol#366-376):\n\tExternal calls:\n\t- fee = _calculateFee() (Vault.sol#368)\n\t\t- assetValue = IVaultManager(manager).getAssetValue(debt,borrow) (Vault.sol#404)\n\t- TransferHelper.safeTransferFrom(debt,msg.sender,address(this),amount_) (Vault.sol#371)\n\t- left = _sendFee(debt,amount_,fee) (Vault.sol#372)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value)) (Vault.sol#21)\n\t\t- TransferHelper.safeTransfer(asset_,dividend,half) (Vault.sol#433)\n\t\t- TransferHelper.safeTransfer(asset_,feeTo,half) (Vault.sol#434)\n\t\t- TransferHelper.safeTransfer(asset_,dividend,third) (Vault.sol#437)\n\t\t- TransferHelper.safeTransfer(asset_,feeTo,third) (Vault.sol#438)\n\t\t- TransferHelper.safeTransfer(asset_,treasury,third) (Vault.sol#439)\n\t\t- TransferHelper.safeTransfer(asset_,feeTo,fee_) (Vault.sol#441)\n\t- _burnMTRFromVault(left) (Vault.sol#373)\n\t\t- IStablecoin(debt).burn(amount_) (Vault.sol#400)\n\tState variables written after the call(s):\n\t- borrow -= left (Vault.sol#374)\n\tVault.borrow (Vault.sol#181) can be used in cross function reentrancies:\n\t- Vault._calculateFee() (Vault.sol#403-412)\n\t- Vault.borrow (Vault.sol#181)\n\t- Vault.closeVault(uint256) (Vault.sol#378-393)\n\t- Vault.getDebt() (Vault.sol#414-416)\n\t- Vault.initialize(address,uint256,address,address,address,uint256,address,address) (Vault.sol#201-220)\n\t- Vault.payDebt(uint256) (Vault.sol#366-376)\n\t- Vault.withdrawCollateral(uint256) (Vault.sol#314-333)\n\t- Vault.withdrawCollateralNative(uint256) (Vault.sol#289-312)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "IVault",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_stnd_v1.7_signed/standard-evm-d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol",
            "function": "collateral",
            "impact": "Low",
            "line": 227,
            "message": "Vault.getStatus().collateral (Vault.sol#227) shadows:\n\t- Vault.collateral (Vault.sol#177) (state variable)\n\t- IVault.collateral() (Vault.sol#54) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "IVault",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_stnd_v1.7_signed/standard-evm-d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol",
            "function": "debt",
            "impact": "Low",
            "line": 68,
            "message": "IVault.getStatus().debt (Vault.sol#68) shadows:\n\t- IVault.debt() (Vault.sol#50) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "IVault",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_stnd_v1.7_signed/standard-evm-d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol",
            "function": "debt",
            "impact": "Low",
            "line": 229,
            "message": "Vault.getStatus().debt (Vault.sol#229) shadows:\n\t- Vault.debt (Vault.sol#173) (state variable)\n\t- IVault.debt() (Vault.sol#50) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "IVault",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_stnd_v1.7_signed/standard-evm-d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol",
            "function": "collateral",
            "impact": "Low",
            "line": 68,
            "message": "IVault.getStatus().collateral (Vault.sol#68) shadows:\n\t- IVault.collateral() (Vault.sol#54) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Vault",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_stnd_v1.7_signed/standard-evm-d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol",
            "function": "initialize",
            "impact": "Low",
            "line": 201,
            "line_end": 220,
            "message": "Vault.initialize(address,uint256,address,address,address,uint256,address,address) (Vault.sol#201-220) should emit an event for: \n\t- vaultId = vaultId_ (Vault.sol#212) \n\t- borrow = amount_ (Vault.sol#216) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Vault",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_stnd_v1.7_signed/standard-evm-d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol",
            "function": "withdrawCollateral",
            "impact": "Low",
            "line": 314,
            "line_end": 333,
            "message": "Reentrancy in Vault.withdrawCollateral(uint256) (Vault.sol#314-333):\n\tExternal calls:\n\t- require(bool,string)(IVaultManager(manager).isValidCDP(collateral,debt,test,borrow) == true,Vault: below MCR) (Vault.sol#325-328)\n\t- TransferHelper.safeTransfer(collateral,msg.sender,amount_) (Vault.sol#331)\n\tEvent emitted after the call(s):\n\t- WithdrawCollateral(vaultId,amount_) (Vault.sol#332)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Vault",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_stnd_v1.7_signed/standard-evm-d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol",
            "function": "withdrawCollateralNative",
            "impact": "Low",
            "line": 289,
            "line_end": 312,
            "message": "Reentrancy in Vault.withdrawCollateralNative(uint256) (Vault.sol#289-312):\n\tExternal calls:\n\t- require(bool,string)(IVaultManager(manager).isValidCDP(collateral,debt,IERC20Minimal(collateral).balanceOf(address(this)) - amount_,borrow),Vault: below MCR) (Vault.sol#297-305)\n\t- IWETH(WETH).withdraw(amount_) (Vault.sol#308)\n\t- TransferHelper.safeTransferETH(msg.sender,address(this).balance) (Vault.sol#310)\n\tEvent emitted after the call(s):\n\t- WithdrawCollateral(vaultId,amount_) (Vault.sol#311)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Vault",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_stnd_v1.7_signed/standard-evm-d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol",
            "function": "depositCollateralNative",
            "impact": "Low",
            "line": 271,
            "line_end": 276,
            "message": "Reentrancy in Vault.depositCollateralNative() (Vault.sol#271-276):\n\tExternal calls:\n\t- IWETH(WETH).deposit{value: msg.value}() (Vault.sol#274)\n\tEvent emitted after the call(s):\n\t- DepositCollateral(vaultId,msg.value) (Vault.sol#275)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Vault",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_stnd_v1.7_signed/standard-evm-d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol",
            "function": "closeVault",
            "impact": "Low",
            "line": 378,
            "line_end": 393,
            "message": "Reentrancy in Vault.closeVault(uint256) (Vault.sol#378-393):\n\tExternal calls:\n\t- fee = _calculateFee() (Vault.sol#380)\n\t\t- assetValue = IVaultManager(manager).getAssetValue(debt,borrow) (Vault.sol#404)\n\t- TransferHelper.safeTransferFrom(debt,msg.sender,address(this),amount_) (Vault.sol#383)\n\t- left = _sendFee(debt,amount_,fee) (Vault.sol#385)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value)) (Vault.sol#21)\n\t\t- TransferHelper.safeTransfer(asset_,dividend,half) (Vault.sol#433)\n\t\t- TransferHelper.safeTransfer(asset_,feeTo,half) (Vault.sol#434)\n\t\t- TransferHelper.safeTransfer(asset_,dividend,third) (Vault.sol#437)\n\t\t- TransferHelper.safeTransfer(asset_,feeTo,third) (Vault.sol#438)\n\t\t- TransferHelper.safeTransfer(asset_,treasury,third) (Vault.sol#439)\n\t\t- TransferHelper.safeTransfer(asset_,feeTo,fee_) (Vault.sol#441)\n\t- _burnMTRFromVault(left) (Vault.sol#387)\n\t\t- IStablecoin(debt).burn(amount_) (Vault.sol#400)\n\t- _burnV1FromVault() (Vault.sol#389)\n\t\t- IV1(v1).burnFromVault(vaultId) (Vault.sol#396)\n\tEvent emitted after the call(s):\n\t- CloseVault(vaultId,amount_,fee) (Vault.sol#390)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Vault",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_stnd_v1.7_signed/standard-evm-d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol",
            "function": "payDebt",
            "impact": "Low",
            "line": 366,
            "line_end": 376,
            "message": "Reentrancy in Vault.payDebt(uint256) (Vault.sol#366-376):\n\tExternal calls:\n\t- fee = _calculateFee() (Vault.sol#368)\n\t\t- assetValue = IVaultManager(manager).getAssetValue(debt,borrow) (Vault.sol#404)\n\t- TransferHelper.safeTransferFrom(debt,msg.sender,address(this),amount_) (Vault.sol#371)\n\t- left = _sendFee(debt,amount_,fee) (Vault.sol#372)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value)) (Vault.sol#21)\n\t\t- TransferHelper.safeTransfer(asset_,dividend,half) (Vault.sol#433)\n\t\t- TransferHelper.safeTransfer(asset_,feeTo,half) (Vault.sol#434)\n\t\t- TransferHelper.safeTransfer(asset_,dividend,third) (Vault.sol#437)\n\t\t- TransferHelper.safeTransfer(asset_,feeTo,third) (Vault.sol#438)\n\t\t- TransferHelper.safeTransfer(asset_,treasury,third) (Vault.sol#439)\n\t\t- TransferHelper.safeTransfer(asset_,feeTo,fee_) (Vault.sol#441)\n\t- _burnMTRFromVault(left) (Vault.sol#373)\n\t\t- IStablecoin(debt).burn(amount_) (Vault.sol#400)\n\tEvent emitted after the call(s):\n\t- PayBack(vaultId,borrow,fee,amount_) (Vault.sol#375)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Vault",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_stnd_v1.7_signed/standard-evm-d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol",
            "function": "liquidate",
            "impact": "Low",
            "line": 241,
            "line_end": 269,
            "message": "Reentrancy in Vault.liquidate() (Vault.sol#241-269):\n\tExternal calls:\n\t- require(bool,string)(! IVaultManager(manager).isValidCDP(collateral,debt,IERC20Minimal(collateral).balanceOf(address(this)),IERC20Minimal(debt).balanceOf(address(this))),Vault: Position is still safe) (Vault.sol#242-250)\n\t- left = _sendFee(collateral,balance,liquidationFee) (Vault.sol#260)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value)) (Vault.sol#21)\n\t\t- TransferHelper.safeTransfer(asset_,dividend,half) (Vault.sol#433)\n\t\t- TransferHelper.safeTransfer(asset_,feeTo,half) (Vault.sol#434)\n\t\t- TransferHelper.safeTransfer(asset_,dividend,third) (Vault.sol#437)\n\t\t- TransferHelper.safeTransfer(asset_,feeTo,third) (Vault.sol#438)\n\t\t- TransferHelper.safeTransfer(asset_,treasury,third) (Vault.sol#439)\n\t\t- TransferHelper.safeTransfer(asset_,feeTo,fee_) (Vault.sol#441)\n\t- TransferHelper.safeTransfer(collateral,liquidator,left) (Vault.sol#263)\n\t- _burnV1FromVault() (Vault.sol#265)\n\t\t- IV1(v1).burnFromVault(vaultId) (Vault.sol#396)\n\tEvent emitted after the call(s):\n\t- Liquidated(vaultId,collateral,balance) (Vault.sol#266)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Vault",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_stnd_v1.7_signed/standard-evm-d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol",
            "function": "depositCollateral",
            "impact": "Low",
            "line": 278,
            "line_end": 286,
            "message": "Reentrancy in Vault.depositCollateral(uint256) (Vault.sol#278-286):\n\tExternal calls:\n\t- TransferHelper.safeTransferFrom(collateral,msg.sender,address(this),amount_) (Vault.sol#279-284)\n\tEvent emitted after the call(s):\n\t- DepositCollateral(vaultId,amount_) (Vault.sol#285)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Vault",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_stnd_v1.7_signed/standard-evm-d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol",
            "function": "withdrawCollateral",
            "impact": "Low",
            "line": 314,
            "line_end": 333,
            "message": "Vault.withdrawCollateral(uint256) (Vault.sol#314-333) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- borrow != 0 (Vault.sol#323)\n\t- require(bool,string)(IVaultManager(manager).isValidCDP(collateral,debt,test,borrow) == true,Vault: below MCR) (Vault.sol#325-328)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Vault",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_stnd_v1.7_signed/standard-evm-d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol",
            "function": "closeVault",
            "impact": "Low",
            "line": 378,
            "line_end": 393,
            "message": "Vault.closeVault(uint256) (Vault.sol#378-393) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(fee + borrow == amount_,Vault: not enough balance to payback) (Vault.sol#381)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Vault",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_stnd_v1.7_signed/standard-evm-d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol",
            "function": "_calculateFee",
            "impact": "Low",
            "line": 403,
            "line_end": 412,
            "message": "Vault._calculateFee() (Vault.sol#403-412) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool)(sfrTimesV >= assetValue) (Vault.sol#410)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Vault",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_stnd_v1.7_signed/standard-evm-d7c016ca098a4e5a554583c499fc0cead4db7088/contracts/vaults/meter/Vault.sol",
            "function": "withdrawCollateralNative",
            "impact": "Low",
            "line": 289,
            "line_end": 312,
            "message": "Vault.withdrawCollateralNative(uint256) (Vault.sol#289-312) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- borrow != 0 (Vault.sol#296)\n\t- require(bool,string)(IVaultManager(manager).isValidCDP(collateral,debt,IERC20Minimal(collateral).balanceOf(address(this)) - amount_,borrow),Vault: below MCR) (Vault.sol#297-305)\n",
            "name": "timestamp",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}