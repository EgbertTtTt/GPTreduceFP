{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "UniswapV2OracleLibrary",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol",
            "function": "currentBlockTimestamp",
            "impact": "High",
            "line": 139,
            "line_end": 141,
            "message": "UniswapV2OracleLibrary.currentBlockTimestamp() (Keep3rV1Oracle.sol#139-141) uses a weak PRNG: \"uint32(block.timestamp % 2 ** 32) (Keep3rV1Oracle.sol#140)\" \n",
            "name": "weak-prng",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Keep3rV1Oracle",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol",
            "function": "_swap",
            "impact": "Medium",
            "line": 847,
            "line_end": 858,
            "message": "Keep3rV1Oracle._swap(uint256) (Keep3rV1Oracle.sol#847-858) ignores return value by KP3R.approve(address(UNI),_amount) (Keep3rV1Oracle.sol#849)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Keep3rV1Oracle",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol",
            "function": "sample",
            "impact": "Medium",
            "line": 704,
            "line_end": 742,
            "message": "Keep3rV1Oracle.sample(address,uint256,address,uint256,uint256) (Keep3rV1Oracle.sol#704-742) ignores return value by (token0) = UniswapV2Library.sortTokens(tokenIn,tokenOut) (Keep3rV1Oracle.sol#706)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Keep3rV1Oracle",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol",
            "function": "add",
            "impact": "Medium",
            "line": 557,
            "line_end": 566,
            "message": "Keep3rV1Oracle.add(address,address) (Keep3rV1Oracle.sol#557-566) ignores return value by (price0Cumulative,price1Cumulative) = UniswapV2OracleLibrary.currentCumulativePrices(pair) (Keep3rV1Oracle.sol#564)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "UniswapV2Library",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol",
            "function": "getReserves",
            "impact": "Medium",
            "line": 372,
            "line_end": 376,
            "message": "UniswapV2Library.getReserves(address,address,address) (Keep3rV1Oracle.sol#372-376) ignores return value by (reserve0,reserve1) = IUniswapV2Pair(pairFor(factory,tokenA,tokenB)).getReserves() (Keep3rV1Oracle.sol#374)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Keep3rV1Oracle",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol",
            "function": "current",
            "impact": "Medium",
            "line": 641,
            "line_end": 660,
            "message": "Keep3rV1Oracle.current(address,uint256,address) (Keep3rV1Oracle.sol#641-660) ignores return value by (price0Cumulative,price1Cumulative) = UniswapV2OracleLibrary.currentCumulativePrices(pair) (Keep3rV1Oracle.sol#647)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Keep3rV1Oracle",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol",
            "function": "quote",
            "impact": "Medium",
            "line": 662,
            "line_end": 698,
            "message": "Keep3rV1Oracle.quote(address,uint256,address,uint256) (Keep3rV1Oracle.sol#662-698) ignores return value by (token0) = UniswapV2Library.sortTokens(tokenIn,tokenOut) (Keep3rV1Oracle.sol#665)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Keep3rV1Oracle",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol",
            "function": "current",
            "impact": "Medium",
            "line": 641,
            "line_end": 660,
            "message": "Keep3rV1Oracle.current(address,uint256,address) (Keep3rV1Oracle.sol#641-660) ignores return value by (token0) = UniswapV2Library.sortTokens(tokenIn,tokenOut) (Keep3rV1Oracle.sol#644)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Keep3rV1Oracle",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol",
            "function": "_update",
            "impact": "Medium",
            "line": 613,
            "line_end": 623,
            "message": "Keep3rV1Oracle._update(address) (Keep3rV1Oracle.sol#613-623) ignores return value by (price0Cumulative,price1Cumulative) = UniswapV2OracleLibrary.currentCumulativePrices(pair) (Keep3rV1Oracle.sol#618)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "UniswapV2OracleLibrary",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol",
            "function": "currentCumulativePrices",
            "impact": "Low",
            "line": 144,
            "line_end": 164,
            "message": "UniswapV2OracleLibrary.currentCumulativePrices(address) (Keep3rV1Oracle.sol#144-164) has external calls inside a loop: price0Cumulative = IUniswapV2Pair(pair).price0CumulativeLast() (Keep3rV1Oracle.sol#148)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "UniswapV2OracleLibrary",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol",
            "function": "currentCumulativePrices",
            "impact": "Low",
            "line": 144,
            "line_end": 164,
            "message": "UniswapV2OracleLibrary.currentCumulativePrices(address) (Keep3rV1Oracle.sol#144-164) has external calls inside a loop: (reserve0,reserve1,blockTimestampLast) = IUniswapV2Pair(pair).getReserves() (Keep3rV1Oracle.sol#152)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "UniswapV2OracleLibrary",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol",
            "function": "currentCumulativePrices",
            "impact": "Low",
            "line": 144,
            "line_end": 164,
            "message": "UniswapV2OracleLibrary.currentCumulativePrices(address) (Keep3rV1Oracle.sol#144-164) has external calls inside a loop: price1Cumulative = IUniswapV2Pair(pair).price1CumulativeLast() (Keep3rV1Oracle.sol#149)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Keep3rV1Oracle",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol",
            "function": "updateFor",
            "impact": "Low",
            "line": 591,
            "line_end": 597,
            "message": "Reentrancy in Keep3rV1Oracle.updateFor(uint256,uint256) (Keep3rV1Oracle.sol#591-597):\n\tExternal calls:\n\t- keeper() (Keep3rV1Oracle.sol#591)\n\t\t- require(bool,string)(KP3R.isMinKeeper(msg.sender,minKeep,0,0),::isKeeper: keeper is not registered) (Keep3rV1Oracle.sol#476)\n\tState variables written after the call(s):\n\t- _update(_pairs[i]) (Keep3rV1Oracle.sol#593)\n\t\t- observations[pair].push(Observation(block.timestamp,price0Cumulative,price1Cumulative)) (Keep3rV1Oracle.sol#619)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Keep3rV1Oracle",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol",
            "function": "update",
            "impact": "Low",
            "line": 552,
            "line_end": 555,
            "message": "Reentrancy in Keep3rV1Oracle.update(address,address) (Keep3rV1Oracle.sol#552-555):\n\tExternal calls:\n\t- keeper() (Keep3rV1Oracle.sol#552)\n\t\t- require(bool,string)(KP3R.isMinKeeper(msg.sender,minKeep,0,0),::isKeeper: keeper is not registered) (Keep3rV1Oracle.sol#476)\n\tState variables written after the call(s):\n\t- _update(pair) (Keep3rV1Oracle.sol#554)\n\t\t- observations[pair].push(Observation(block.timestamp,price0Cumulative,price1Cumulative)) (Keep3rV1Oracle.sol#619)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Keep3rV1Oracle",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol",
            "function": "workForFree",
            "impact": "Low",
            "line": 573,
            "line_end": 576,
            "message": "Reentrancy in Keep3rV1Oracle.workForFree() (Keep3rV1Oracle.sol#573-576):\n\tExternal calls:\n\t- keeper() (Keep3rV1Oracle.sol#573)\n\t\t- require(bool,string)(KP3R.isMinKeeper(msg.sender,minKeep,0,0),::isKeeper: keeper is not registered) (Keep3rV1Oracle.sol#476)\n\tState variables written after the call(s):\n\t- worked = _updateAll() (Keep3rV1Oracle.sol#574)\n\t\t- observations[pair].push(Observation(block.timestamp,price0Cumulative,price1Cumulative)) (Keep3rV1Oracle.sol#619)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Keep3rV1Oracle",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol",
            "function": "work",
            "impact": "Low",
            "line": 568,
            "line_end": 571,
            "message": "Reentrancy in Keep3rV1Oracle.work() (Keep3rV1Oracle.sol#568-571):\n\tExternal calls:\n\t- upkeep() (Keep3rV1Oracle.sol#568)\n\t\t- KP3R.approve(address(UNI),_amount) (Keep3rV1Oracle.sol#849)\n\t\t- require(bool,string)(KP3R.isMinKeeper(msg.sender,minKeep,0,0),::isKeeper: keeper is not registered) (Keep3rV1Oracle.sol#482)\n\t\t- KP3R.receipt(address(KP3R),address(this),_received) (Keep3rV1Oracle.sol#485)\n\t\t- amounts = UNI.swapExactTokensForTokens(_amount,uint256(0),path,address(this),now.add(1800)) (Keep3rV1Oracle.sol#855)\n\t\t- WETH.withdraw(amounts[1]) (Keep3rV1Oracle.sol#856)\n\tExternal calls sending eth:\n\t- upkeep() (Keep3rV1Oracle.sol#568)\n\t\t- msg.sender.transfer(_received) (Keep3rV1Oracle.sol#487)\n\tState variables written after the call(s):\n\t- worked = _updateAll() (Keep3rV1Oracle.sol#569)\n\t\t- observations[pair].push(Observation(block.timestamp,price0Cumulative,price1Cumulative)) (Keep3rV1Oracle.sol#619)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Keep3rV1Oracle",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol",
            "function": "updatePair",
            "impact": "Low",
            "line": 548,
            "line_end": 550,
            "message": "Reentrancy in Keep3rV1Oracle.updatePair(address) (Keep3rV1Oracle.sol#548-550):\n\tExternal calls:\n\t- keeper() (Keep3rV1Oracle.sol#548)\n\t\t- require(bool,string)(KP3R.isMinKeeper(msg.sender,minKeep,0,0),::isKeeper: keeper is not registered) (Keep3rV1Oracle.sol#476)\n\tState variables written after the call(s):\n\t- _update(pair) (Keep3rV1Oracle.sol#549)\n\t\t- observations[pair].push(Observation(block.timestamp,price0Cumulative,price1Cumulative)) (Keep3rV1Oracle.sol#619)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Keep3rV1Oracle",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol",
            "function": "_valid",
            "impact": "Low",
            "line": 637,
            "line_end": 639,
            "message": "Keep3rV1Oracle._valid(address,uint256) (Keep3rV1Oracle.sol#637-639) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- (block.timestamp - lastObservation(pair).timestamp) <= age (Keep3rV1Oracle.sol#638)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Keep3rV1Oracle",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol",
            "function": "_update",
            "impact": "Low",
            "line": 613,
            "line_end": 623,
            "message": "Keep3rV1Oracle._update(address) (Keep3rV1Oracle.sol#613-623) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- timeElapsed > periodSize (Keep3rV1Oracle.sol#617)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Keep3rV1Oracle",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol",
            "function": "current",
            "impact": "Low",
            "line": 641,
            "line_end": 660,
            "message": "Keep3rV1Oracle.current(address,uint256,address) (Keep3rV1Oracle.sol#641-660) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp == _observation.timestamp (Keep3rV1Oracle.sol#648)\n\t- timeElapsed == 0 (Keep3rV1Oracle.sol#654)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Keep3rV1Oracle",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol",
            "function": "workable",
            "impact": "Low",
            "line": 599,
            "line_end": 601,
            "message": "Keep3rV1Oracle.workable(address) (Keep3rV1Oracle.sol#599-601) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- (block.timestamp - lastObservation(pair).timestamp) > periodSize (Keep3rV1Oracle.sol#600)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "UniswapV2OracleLibrary",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol",
            "function": "currentCumulativePrices",
            "impact": "Low",
            "line": 144,
            "line_end": 164,
            "message": "UniswapV2OracleLibrary.currentCumulativePrices(address) (Keep3rV1Oracle.sol#144-164) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- blockTimestampLast != blockTimestamp (Keep3rV1Oracle.sol#153)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Keep3rV1Oracle",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Yearn Finance-Yoracle.Link/yoracle.link-faf1309cbe7a05f70b338351315039eb8e5b9c09/contracts/Keep3rV1Oracle.sol",
            "function": "work",
            "impact": "Informational",
            "line": 568,
            "line_end": 571,
            "message": "Reentrancy in Keep3rV1Oracle.work() (Keep3rV1Oracle.sol#568-571):\n\tExternal calls:\n\t- upkeep() (Keep3rV1Oracle.sol#568)\n\t\t- msg.sender.transfer(_received) (Keep3rV1Oracle.sol#487)\n\tState variables written after the call(s):\n\t- worked = _updateAll() (Keep3rV1Oracle.sol#569)\n\t\t- observations[pair].push(Observation(block.timestamp,price0Cumulative,price1Cumulative)) (Keep3rV1Oracle.sol#619)\n",
            "name": "reentrancy-unlimited-gas",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}