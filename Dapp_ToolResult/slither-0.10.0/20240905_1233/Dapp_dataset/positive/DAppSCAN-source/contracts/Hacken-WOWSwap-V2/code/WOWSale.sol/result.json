{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "WOWSale",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-WOWSwap-V2/code/WOWSale.sol",
            "function": "buyTokens",
            "impact": "High",
            "line": 246,
            "line_end": 267,
            "message": "WOWSale.buyTokens() (WOWSale.sol#246-267) ignores return value by token.transfer(msg.sender,buyAmount) (WOWSale.sol#264)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WOWSale",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-WOWSwap-V2/code/WOWSale.sol",
            "function": "close",
            "impact": "High",
            "line": 269,
            "line_end": 286,
            "message": "WOWSale.close() (WOWSale.sol#269-286) ignores return value by token.transfer(msg.sender,tokensLeft) (WOWSale.sol#275)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WOWSale",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-WOWSwap-V2/code/WOWSale.sol",
            "function": "changeEndSale",
            "impact": "Low",
            "line": 238,
            "line_end": 241,
            "message": "WOWSale.changeEndSale(uint256) (WOWSale.sol#238-241) should emit an event for: \n\t- endSale = newEndSale (WOWSale.sol#239) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WOWSale",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-WOWSwap-V2/code/WOWSale.sol",
            "function": "close",
            "impact": "Low",
            "line": 269,
            "line_end": 286,
            "message": "Reentrancy in WOWSale.close() (WOWSale.sol#269-286):\n\tExternal calls:\n\t- token.transfer(msg.sender,tokensLeft) (WOWSale.sol#275)\n\tExternal calls sending eth:\n\t- address(msg.sender).transfer(collectedBNB) (WOWSale.sol#281)\n\tEvent emitted after the call(s):\n\t- CloseSale() (WOWSale.sol#284)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WOWSale",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-WOWSwap-V2/code/WOWSale.sol",
            "function": "buyTokens",
            "impact": "Low",
            "line": 246,
            "line_end": 267,
            "message": "Reentrancy in WOWSale.buyTokens() (WOWSale.sol#246-267):\n\tExternal calls:\n\t- token.transfer(msg.sender,buyAmount) (WOWSale.sol#264)\n\tExternal calls sending eth:\n\t- address(msg.sender).transfer(payBack) (WOWSale.sol#259)\n\tEvent emitted after the call(s):\n\t- Sold(msg.sender,buyAmount) (WOWSale.sol#265)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WOWSale",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-WOWSwap-V2/code/WOWSale.sol",
            "function": "buyTokens",
            "impact": "Low",
            "line": 246,
            "line_end": 267,
            "message": "WOWSale.buyTokens() (WOWSale.sol#246-267) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)((block.timestamp >= startSale && block.timestamp < endSale),Crowdsale is over) (WOWSale.sol#247)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WOWSale",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-WOWSwap-V2/code/WOWSale.sol",
            "function": "close",
            "impact": "Low",
            "line": 269,
            "line_end": 286,
            "message": "WOWSale.close() (WOWSale.sol#269-286) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(block.timestamp >= endSale || tokensLeft == 0,Close requirements are not met) (WOWSale.sol#271)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-WOWSwap-V2/code/WOWSale.sol",
            "impact": "Informational",
            "line": 301,
            "message": "WOWToken._totalSupply (WOWSale.sol#301) is set pre-construction with a non-constant function or state variable:\n\t- 1000000 * DEC\n",
            "name": "function-init-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-WOWSwap-V2/code/WOWSale.sol",
            "impact": "Informational",
            "line": 300,
            "message": "WOWToken.DEC (WOWSale.sol#300) is set pre-construction with a non-constant function or state variable:\n\t- 10 ** uint256(decimals)\n",
            "name": "function-init-state",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WOWSale",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-WOWSwap-V2/code/WOWSale.sol",
            "function": "buyTokens",
            "impact": "Informational",
            "line": 246,
            "line_end": 267,
            "message": "Reentrancy in WOWSale.buyTokens() (WOWSale.sol#246-267):\n\tExternal calls:\n\t- address(msg.sender).transfer(payBack) (WOWSale.sol#259)\n\tEvent emitted after the call(s):\n\t- Sold(msg.sender,buyAmount) (WOWSale.sol#265)\n",
            "name": "reentrancy-unlimited-gas",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WOWSale",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-WOWSwap-V2/code/WOWSale.sol",
            "function": "close",
            "impact": "Informational",
            "line": 269,
            "line_end": 286,
            "message": "Reentrancy in WOWSale.close() (WOWSale.sol#269-286):\n\tExternal calls:\n\t- address(msg.sender).transfer(collectedBNB) (WOWSale.sol#281)\n\tEvent emitted after the call(s):\n\t- CloseSale() (WOWSale.sol#284)\n",
            "name": "reentrancy-unlimited-gas",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}