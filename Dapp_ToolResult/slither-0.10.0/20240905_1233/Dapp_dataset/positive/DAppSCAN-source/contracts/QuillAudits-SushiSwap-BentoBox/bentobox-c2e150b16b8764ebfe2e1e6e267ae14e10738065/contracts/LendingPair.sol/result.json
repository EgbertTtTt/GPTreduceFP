{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "LendingPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol",
            "function": "batch",
            "impact": "High",
            "line": 728,
            "line_end": 738,
            "message": "LendingPair.batch(bytes[],bool) (LendingPair.sol#728-738) has delegatecall inside a loop in a payable function: (success,result) = address(this).delegatecall(calls[i]) (LendingPair.sol#732)\n",
            "name": "delegatecall-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LendingPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol",
            "function": "unwind",
            "impact": "Medium",
            "line": 635,
            "line_end": 650,
            "message": "Reentrancy in LendingPair.unwind(ISwapper,uint256,uint256) (LendingPair.sol#635-650):\n\tExternal calls:\n\t- bentoBox.transferFrom(collateral,address(this),address(swapper),maxAmountCollateral) (LendingPair.sol#638)\n\tState variables written after the call(s):\n\t- borrowAmount = _removeBorrowFraction(msg.sender,borrowFraction) (LendingPair.sol#640)\n\t\t- totalBorrow = _totalBorrow (LendingPair.sol#517)\n\tLendingPair.totalBorrow (LendingPair.sol#264) can be used in cross function reentrancies:\n\t- LendingPair._addBorrowAmount(address,uint256) (LendingPair.sol#468-480)\n\t- LendingPair._removeBorrowFraction(address,uint256) (LendingPair.sol#507-519)\n\t- LendingPair.accrue() (LendingPair.sol#360-412)\n\t- LendingPair.isSolvent(address,bool) (LendingPair.sol#416-425)\n\t- LendingPair.liquidate(address[],uint256[],address,ISwapper,bool) (LendingPair.sol#653-726)\n\t- LendingPair.totalBorrow (LendingPair.sol#264)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LendingPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol",
            "function": "liquidate",
            "impact": "Medium",
            "line": 653,
            "line_end": 726,
            "message": "Reentrancy in LendingPair.liquidate(address[],uint256[],address,ISwapper,bool) (LendingPair.sol#653-726):\n\tExternal calls:\n\t- updateExchangeRate() (LendingPair.sol#655)\n\t\t- (success,rate) = oracle.get(oracleData) (LendingPair.sol#433)\n\t- bentoBox.transferFrom(collateral,address(this),address(swapper),allCollateralAmount) (LendingPair.sol#695)\n\t- swapper.swap(collateral,asset,allCollateralAmount,allBorrowAmount) (LendingPair.sol#697)\n\t- returnedAssetAmount = bentoBox.skim(asset) (LendingPair.sol#698)\n\tState variables written after the call(s):\n\t- accrueInfo.feesPendingAmount = accrueInfo.feesPendingAmount.add(feeAmount.to128()) (LendingPair.sol#703)\n\tLendingPair.accrueInfo (LendingPair.sol#279) can be used in cross function reentrancies:\n\t- LendingPair.accrue() (LendingPair.sol#360-412)\n\t- LendingPair.accrueInfo (LendingPair.sol#279)\n\t- LendingPair.init(bytes) (LendingPair.sol#347-353)\n\t- LendingPair.liquidate(address[],uint256[],address,ISwapper,bool) (LendingPair.sol#653-726)\n\t- LendingPair.withdrawFees() (LendingPair.sol#741-753)\n\t- totalAsset.amount = totalAsset.amount.add(extraAssetAmount.sub(feeAmount).to128()) (LendingPair.sol#704)\n\tLendingPair.totalAsset (LendingPair.sol#263) can be used in cross function reentrancies:\n\t- LendingPair._addAssetAmount(address,uint256) (LendingPair.sol#453-465)\n\t- LendingPair._removeAssetFraction(address,uint256) (LendingPair.sol#492-504)\n\t- LendingPair.accrue() (LendingPair.sol#360-412)\n\t- LendingPair.borrow(uint256,address) (LendingPair.sol#584-591)\n\t- LendingPair.borrowToBento(uint256,address) (LendingPair.sol#593-600)\n\t- LendingPair.liquidate(address[],uint256[],address,ISwapper,bool) (LendingPair.sol#653-726)\n\t- LendingPair.swipe(IERC20) (LendingPair.sol#774-793)\n\t- LendingPair.totalAsset (LendingPair.sol#263)\n\t- LendingPair.totalSupply() (LendingPair.sol#267-269)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LendingPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol",
            "function": "liquidate",
            "impact": "Medium",
            "line": 653,
            "line_end": 726,
            "message": "Reentrancy in LendingPair.liquidate(address[],uint256[],address,ISwapper,bool) (LendingPair.sol#653-726):\n\tExternal calls:\n\t- updateExchangeRate() (LendingPair.sol#655)\n\t\t- (success,rate) = oracle.get(oracleData) (LendingPair.sol#433)\n\t- bentoBox.transferFrom(collateral,address(this),address(swapper),allCollateralAmount) (LendingPair.sol#717)\n\t- swapper.swap(collateral,asset,allCollateralAmount,allBorrowAmount) (LendingPair.sol#719)\n\t- returnedAssetAmount_scope_0 = bentoBox.skim(asset) (LendingPair.sol#720)\n\tState variables written after the call(s):\n\t- totalAsset.amount = totalAsset.amount.add(extraAssetAmount_scope_1.to128()) (LendingPair.sol#723)\n\tLendingPair.totalAsset (LendingPair.sol#263) can be used in cross function reentrancies:\n\t- LendingPair._addAssetAmount(address,uint256) (LendingPair.sol#453-465)\n\t- LendingPair._removeAssetFraction(address,uint256) (LendingPair.sol#492-504)\n\t- LendingPair.accrue() (LendingPair.sol#360-412)\n\t- LendingPair.borrow(uint256,address) (LendingPair.sol#584-591)\n\t- LendingPair.borrowToBento(uint256,address) (LendingPair.sol#593-600)\n\t- LendingPair.liquidate(address[],uint256[],address,ISwapper,bool) (LendingPair.sol#653-726)\n\t- LendingPair.swipe(IERC20) (LendingPair.sol#774-793)\n\t- LendingPair.totalAsset (LendingPair.sol#263)\n\t- LendingPair.totalSupply() (LendingPair.sol#267-269)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LendingPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol",
            "function": "liquidate",
            "impact": "Medium",
            "line": 653,
            "line_end": 726,
            "message": "Reentrancy in LendingPair.liquidate(address[],uint256[],address,ISwapper,bool) (LendingPair.sol#653-726):\n\tExternal calls:\n\t- updateExchangeRate() (LendingPair.sol#655)\n\t\t- (success,rate) = oracle.get(oracleData) (LendingPair.sol#433)\n\tState variables written after the call(s):\n\t- totalBorrow = _totalBorrow (LendingPair.sol#687)\n\tLendingPair.totalBorrow (LendingPair.sol#264) can be used in cross function reentrancies:\n\t- LendingPair._addBorrowAmount(address,uint256) (LendingPair.sol#468-480)\n\t- LendingPair._removeBorrowFraction(address,uint256) (LendingPair.sol#507-519)\n\t- LendingPair.accrue() (LendingPair.sol#360-412)\n\t- LendingPair.isSolvent(address,bool) (LendingPair.sol#416-425)\n\t- LendingPair.liquidate(address[],uint256[],address,ISwapper,bool) (LendingPair.sol#653-726)\n\t- LendingPair.totalBorrow (LendingPair.sol#264)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LendingPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol",
            "function": "liquidate",
            "impact": "Medium",
            "line": 653,
            "line_end": 726,
            "message": "LendingPair.liquidate(address[],uint256[],address,ISwapper,bool) (LendingPair.sol#653-726) ignores return value by swapper.swap(collateral,asset,allCollateralAmount,allBorrowAmount) (LendingPair.sol#719)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LendingPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol",
            "function": "peekExchangeRate",
            "impact": "Medium",
            "line": 427,
            "line_end": 429,
            "message": "LendingPair.peekExchangeRate() (LendingPair.sol#427-429) ignores return value by oracle.peek(oracleData) (LendingPair.sol#428)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LendingPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol",
            "function": "short",
            "impact": "Medium",
            "line": 618,
            "line_end": 632,
            "message": "LendingPair.short(ISwapper,uint256,uint256) (LendingPair.sol#618-632) ignores return value by swapper.swap(asset,collateral,assetAmount,minCollateralAmount) (LendingPair.sol#626)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LendingPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol",
            "function": "liquidate",
            "impact": "Medium",
            "line": 653,
            "line_end": 726,
            "message": "LendingPair.liquidate(address[],uint256[],address,ISwapper,bool) (LendingPair.sol#653-726) ignores return value by swapper.swap(collateral,asset,allCollateralAmount,allBorrowAmount) (LendingPair.sol#697)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LendingPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol",
            "function": "batch",
            "impact": "Low",
            "line": 728,
            "line_end": 738,
            "message": "LendingPair.batch(bytes[],bool) (LendingPair.sol#728-738) has external calls inside a loop: (success,result) = address(this).delegatecall(calls[i]) (LendingPair.sol#732)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LendingPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol",
            "function": "updateExchangeRate",
            "impact": "Low",
            "line": 432,
            "line_end": 441,
            "message": "Reentrancy in LendingPair.updateExchangeRate() (LendingPair.sol#432-441):\n\tExternal calls:\n\t- (success,rate) = oracle.get(oracleData) (LendingPair.sol#433)\n\tState variables written after the call(s):\n\t- exchangeRate = rate (LendingPair.sol#437)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LendingPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol",
            "function": "liquidate",
            "impact": "Low",
            "line": 653,
            "line_end": 726,
            "message": "Reentrancy in LendingPair.liquidate(address[],uint256[],address,ISwapper,bool) (LendingPair.sol#653-726):\n\tExternal calls:\n\t- updateExchangeRate() (LendingPair.sol#655)\n\t\t- (success,rate) = oracle.get(oracleData) (LendingPair.sol#433)\n\tState variables written after the call(s):\n\t- totalCollateralAmount = totalCollateralAmount.sub(allCollateralAmount) (LendingPair.sol#688)\n\t- userBorrowFraction[user] = userBorrowFraction[user].sub(borrowFraction) (LendingPair.sol#674)\n\t- userCollateralAmount[user] = userCollateralAmount[user].sub(collateralAmount) (LendingPair.sol#672)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LendingPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol",
            "function": "unwind",
            "impact": "Low",
            "line": 635,
            "line_end": 650,
            "message": "Reentrancy in LendingPair.unwind(ISwapper,uint256,uint256) (LendingPair.sol#635-650):\n\tExternal calls:\n\t- bentoBox.transferFrom(collateral,address(this),address(swapper),maxAmountCollateral) (LendingPair.sol#638)\n\t- usedAmount = swapper.swapExact(collateral,asset,maxAmountCollateral,borrowAmount,address(this)) (LendingPair.sol#643)\n\t- returnedAssetAmount = bentoBox.skim(asset) (LendingPair.sol#644)\n\tState variables written after the call(s):\n\t- _removeCollateralAmount(msg.sender,maxAmountCollateral.sub(usedAmount)) (LendingPair.sol#647)\n\t\t- totalCollateralAmount = totalCollateralAmount.sub(amount) (LendingPair.sol#487)\n\t- _removeCollateralAmount(msg.sender,maxAmountCollateral.sub(usedAmount)) (LendingPair.sol#647)\n\t\t- userCollateralAmount[user] = userCollateralAmount[user].sub(amount) (LendingPair.sol#485)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LendingPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol",
            "function": "short",
            "impact": "Low",
            "line": 618,
            "line_end": 632,
            "message": "Reentrancy in LendingPair.short(ISwapper,uint256,uint256) (LendingPair.sol#618-632):\n\tExternal calls:\n\t- bentoBox.transferFrom(asset,address(this),address(swapper),assetAmount) (LendingPair.sol#622)\n\t- swapper.swap(asset,collateral,assetAmount,minCollateralAmount) (LendingPair.sol#626)\n\t- returnedCollateralAmount = bentoBox.skim(collateral) (LendingPair.sol#627)\n\tState variables written after the call(s):\n\t- _addCollateralAmount(msg.sender,returnedCollateralAmount) (LendingPair.sol#629)\n\t\t- totalCollateralAmount = totalCollateralAmount.add(amount) (LendingPair.sol#448)\n\t- _addCollateralAmount(msg.sender,returnedCollateralAmount) (LendingPair.sol#629)\n\t\t- userCollateralAmount[user] = userCollateralAmount[user].add(amount) (LendingPair.sol#446)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LendingPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol",
            "function": "unwind",
            "impact": "Low",
            "line": 635,
            "line_end": 650,
            "message": "Reentrancy in LendingPair.unwind(ISwapper,uint256,uint256) (LendingPair.sol#635-650):\n\tExternal calls:\n\t- bentoBox.transferFrom(collateral,address(this),address(swapper),maxAmountCollateral) (LendingPair.sol#638)\n\tState variables written after the call(s):\n\t- borrowAmount = _removeBorrowFraction(msg.sender,borrowFraction) (LendingPair.sol#640)\n\t\t- userBorrowFraction[user] = userBorrowFraction[user].sub(fraction) (LendingPair.sol#510)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LendingPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol",
            "function": "liquidate",
            "impact": "Low",
            "line": 653,
            "line_end": 726,
            "message": "Reentrancy in LendingPair.liquidate(address[],uint256[],address,ISwapper,bool) (LendingPair.sol#653-726):\n\tExternal calls:\n\t- updateExchangeRate() (LendingPair.sol#655)\n\t\t- (success,rate) = oracle.get(oracleData) (LendingPair.sol#433)\n\tEvent emitted after the call(s):\n\t- LogRemoveBorrow(user,borrowAmount,borrowFraction) (LendingPair.sol#676)\n\t- LogRemoveCollateral(user,collateralAmount) (LendingPair.sol#675)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LendingPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol",
            "function": "unwind",
            "impact": "Low",
            "line": 635,
            "line_end": 650,
            "message": "Reentrancy in LendingPair.unwind(ISwapper,uint256,uint256) (LendingPair.sol#635-650):\n\tExternal calls:\n\t- bentoBox.transferFrom(collateral,address(this),address(swapper),maxAmountCollateral) (LendingPair.sol#638)\n\tEvent emitted after the call(s):\n\t- LogRemoveBorrow(msg.sender,amount,fraction) (LendingPair.sol#518)\n\t\t- borrowAmount = _removeBorrowFraction(msg.sender,borrowFraction) (LendingPair.sol#640)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LendingPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol",
            "function": "liquidate",
            "impact": "Low",
            "line": 653,
            "line_end": 726,
            "message": "Reentrancy in LendingPair.liquidate(address[],uint256[],address,ISwapper,bool) (LendingPair.sol#653-726):\n\tExternal calls:\n\t- updateExchangeRate() (LendingPair.sol#655)\n\t\t- (success,rate) = oracle.get(oracleData) (LendingPair.sol#433)\n\t- bentoBox.transferFrom(collateral,address(this),address(swapper),allCollateralAmount) (LendingPair.sol#695)\n\t- swapper.swap(collateral,asset,allCollateralAmount,allBorrowAmount) (LendingPair.sol#697)\n\t- returnedAssetAmount = bentoBox.skim(asset) (LendingPair.sol#698)\n\tEvent emitted after the call(s):\n\t- LogAddAsset(address(0),extraAssetAmount,0) (LendingPair.sol#705)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LendingPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol",
            "function": "updateExchangeRate",
            "impact": "Low",
            "line": 432,
            "line_end": 441,
            "message": "Reentrancy in LendingPair.updateExchangeRate() (LendingPair.sol#432-441):\n\tExternal calls:\n\t- (success,rate) = oracle.get(oracleData) (LendingPair.sol#433)\n\tEvent emitted after the call(s):\n\t- LogExchangeRate(rate) (LendingPair.sol#438)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LendingPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol",
            "function": "unwind",
            "impact": "Low",
            "line": 635,
            "line_end": 650,
            "message": "Reentrancy in LendingPair.unwind(ISwapper,uint256,uint256) (LendingPair.sol#635-650):\n\tExternal calls:\n\t- bentoBox.transferFrom(collateral,address(this),address(swapper),maxAmountCollateral) (LendingPair.sol#638)\n\t- usedAmount = swapper.swapExact(collateral,asset,maxAmountCollateral,borrowAmount,address(this)) (LendingPair.sol#643)\n\t- returnedAssetAmount = bentoBox.skim(asset) (LendingPair.sol#644)\n\tEvent emitted after the call(s):\n\t- LogRemoveCollateral(msg.sender,amount) (LendingPair.sol#488)\n\t\t- _removeCollateralAmount(msg.sender,maxAmountCollateral.sub(usedAmount)) (LendingPair.sol#647)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LendingPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol",
            "function": "short",
            "impact": "Low",
            "line": 618,
            "line_end": 632,
            "message": "Reentrancy in LendingPair.short(ISwapper,uint256,uint256) (LendingPair.sol#618-632):\n\tExternal calls:\n\t- bentoBox.transferFrom(asset,address(this),address(swapper),assetAmount) (LendingPair.sol#622)\n\t- swapper.swap(asset,collateral,assetAmount,minCollateralAmount) (LendingPair.sol#626)\n\t- returnedCollateralAmount = bentoBox.skim(collateral) (LendingPair.sol#627)\n\tEvent emitted after the call(s):\n\t- LogAddCollateral(msg.sender,amount) (LendingPair.sol#449)\n\t\t- _addCollateralAmount(msg.sender,returnedCollateralAmount) (LendingPair.sol#629)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LendingPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol",
            "function": "liquidate",
            "impact": "Low",
            "line": 653,
            "line_end": 726,
            "message": "Reentrancy in LendingPair.liquidate(address[],uint256[],address,ISwapper,bool) (LendingPair.sol#653-726):\n\tExternal calls:\n\t- updateExchangeRate() (LendingPair.sol#655)\n\t\t- (success,rate) = oracle.get(oracleData) (LendingPair.sol#433)\n\t- bentoBox.transferFrom(collateral,address(this),address(swapper),allCollateralAmount) (LendingPair.sol#717)\n\t- swapper.swap(collateral,asset,allCollateralAmount,allBorrowAmount) (LendingPair.sol#719)\n\t- returnedAssetAmount_scope_0 = bentoBox.skim(asset) (LendingPair.sol#720)\n\tEvent emitted after the call(s):\n\t- LogAddAsset(address(0),extraAssetAmount_scope_1,0) (LendingPair.sol#724)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LendingPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol",
            "function": "withdrawFees",
            "impact": "Low",
            "line": 741,
            "line_end": 753,
            "message": "Reentrancy in LendingPair.withdrawFees() (LendingPair.sol#741-753):\n\tExternal calls:\n\t- bentoBox.withdraw(asset,_feeTo,feeAmount.sub(devFeeAmount)) (LendingPair.sol#748)\n\t- bentoBox.withdraw(asset,_dev,devFeeAmount) (LendingPair.sol#750)\n\tEvent emitted after the call(s):\n\t- LogWithdrawFees() (LendingPair.sol#752)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ERC20",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-SushiSwap-BentoBox/bentobox-c2e150b16b8764ebfe2e1e6e267ae14e10738065/contracts/LendingPair.sol",
            "function": "permit",
            "impact": "Low",
            "line": 119,
            "line_end": 133,
            "message": "ERC20.permit(address,address,uint256,uint256,uint8,bytes32,bytes32) (LendingPair.sol#119-133) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(block.timestamp < deadline,ERC20: Expired) (LendingPair.sol#121)\n",
            "name": "timestamp",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}