{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "ValidationLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "validateSetUseReserveAsCollateral",
            "impact": "Medium",
            "line": 4073,
            "line_end": 4082,
            "message": "ValidationLogic.validateSetUseReserveAsCollateral(DataTypes.ReserveCache,uint256) (FlashLoanLogic.sol#4073-4082) ignores return value by (isActive,isPaused) = reserveCache.reserveConfiguration.getFlags() (FlashLoanLogic.sol#4077)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BorrowLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "rebalanceStableBorrowRate",
            "impact": "Medium",
            "line": 4536,
            "line_end": 4567,
            "message": "BorrowLogic.rebalanceStableBorrowRate(DataTypes.ReserveData,address,address) (FlashLoanLogic.sol#4536-4567) ignores return value by IStableDebtToken(address(stableDebtToken)).burn(user,stableDebt) (FlashLoanLogic.sol#4558)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ValidationLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "validateLiquidationCall",
            "impact": "Medium",
            "line": 4125,
            "line_end": 4169,
            "message": "ValidationLogic.validateLiquidationCall(DataTypes.UserConfigurationMap,DataTypes.ReserveData,DataTypes.ValidateLiquidationCallParams) (FlashLoanLogic.sol#4125-4169) ignores return value by (vars.collateralReserveActive,None,None,None,vars.collateralReservePaused) = collateralReserve.configuration.getFlags() (FlashLoanLogic.sol#4132-4134)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BorrowLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "swapBorrowRateMode",
            "impact": "Medium",
            "line": 4569,
            "line_end": 4613,
            "message": "BorrowLogic.swapBorrowRateMode(DataTypes.ReserveData,DataTypes.UserConfigurationMap,address,uint256) (FlashLoanLogic.sol#4569-4613) ignores return value by (None,reserveCache.nextScaledVariableDebt) = IVariableDebtToken(reserveCache.variableDebtTokenAddress).mint(msg.sender,msg.sender,stableDebt,reserveCache.nextVariableBorrowIndex) (FlashLoanLogic.sol#4597-4599)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ValidationLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "validateRebalanceStableBorrowRate",
            "impact": "Medium",
            "line": 4033,
            "line_end": 4066,
            "message": "ValidationLogic.validateRebalanceStableBorrowRate(DataTypes.ReserveData,DataTypes.ReserveCache,address,IERC20,IERC20,address) (FlashLoanLogic.sol#4033-4066) ignores return value by (isActive,isPaused) = reserveCache.reserveConfiguration.getFlags() (FlashLoanLogic.sol#4041)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BorrowLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "swapBorrowRateMode",
            "impact": "Medium",
            "line": 4569,
            "line_end": 4613,
            "message": "BorrowLogic.swapBorrowRateMode(DataTypes.ReserveData,DataTypes.UserConfigurationMap,address,uint256) (FlashLoanLogic.sol#4569-4613) ignores return value by (None,reserveCache.nextTotalStableDebt,reserveCache.nextAvgStableBorrowRate) = IStableDebtToken(reserveCache.stableDebtTokenAddress).mint(msg.sender,msg.sender,variableDebt,reserve.currentStableBorrowRate) (FlashLoanLogic.sol#4605-4607)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ValidationLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "validateLiquidationCall",
            "impact": "Medium",
            "line": 4125,
            "line_end": 4169,
            "message": "ValidationLogic.validateLiquidationCall(DataTypes.UserConfigurationMap,DataTypes.ReserveData,DataTypes.ValidateLiquidationCallParams) (FlashLoanLogic.sol#4125-4169) ignores return value by (vars.principalReserveActive,None,None,None,vars.principalReservePaused) = params.debtReserveCache.reserveConfiguration.getFlags() (FlashLoanLogic.sol#4136-4139)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BorrowLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "rebalanceStableBorrowRate",
            "impact": "Medium",
            "line": 4536,
            "line_end": 4567,
            "message": "BorrowLogic.rebalanceStableBorrowRate(DataTypes.ReserveData,address,address) (FlashLoanLogic.sol#4536-4567) ignores return value by (None,reserveCache.nextTotalStableDebt,reserveCache.nextAvgStableBorrowRate) = IStableDebtToken(address(stableDebtToken)).mint(user,user,stableDebt,reserve.currentStableBorrowRate) (FlashLoanLogic.sol#4560-4562)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ValidationLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "validateSupply",
            "impact": "Medium",
            "line": 3684,
            "line_end": 3708,
            "message": "ValidationLogic.validateSupply(DataTypes.ReserveCache,uint256) (FlashLoanLogic.sol#3684-3708) ignores return value by (isActive,isFrozen,isPaused) = reserveCache.reserveConfiguration.getFlags() (FlashLoanLogic.sol#3688-3690)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ValidationLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "validateBorrow",
            "impact": "Medium",
            "line": 3757,
            "line_end": 3922,
            "message": "ValidationLogic.validateBorrow(mapping(address => DataTypes.ReserveData),mapping(uint256 => address),mapping(uint8 => DataTypes.EModeCategory),DataTypes.ValidateBorrowParams) (FlashLoanLogic.sol#3757-3922) ignores return value by (vars.userCollateralInBaseCurrency,vars.userDebtInBaseCurrency,vars.currentLtv,vars.currentLiquidationThreshold,vars.healthFactor,None) = GenericLogic.calculateUserAccountData(reservesData,reserves,eModeCategories,DataTypes.CalculateUserAccountDataParams(params.userConfig,params.reservesCount,params.userAddress,params.oracle,params.userEModeCategory)) (FlashLoanLogic.sol#3846-3864)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BorrowLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "executeRepay",
            "impact": "Medium",
            "line": 4446,
            "line_end": 4534,
            "message": "BorrowLogic.executeRepay(mapping(address => DataTypes.ReserveData),mapping(uint256 => address),DataTypes.ReserveData,DataTypes.UserConfigurationMap,DataTypes.ExecuteRepayParams) (FlashLoanLogic.sol#4446-4534) ignores return value by (isolationModeActive,isolationModeCollateralAddress) = userConfig.getIsolationModeState(reserves,reservesList) (FlashLoanLogic.sol#4495-4496)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ValidationLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "validateWithdraw",
            "impact": "Medium",
            "line": 3716,
            "line_end": 3727,
            "message": "ValidationLogic.validateWithdraw(DataTypes.ReserveCache,uint256,uint256) (FlashLoanLogic.sol#3716-3727) ignores return value by (isActive,isPaused) = reserveCache.reserveConfiguration.getFlags() (FlashLoanLogic.sol#3724)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ValidationLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "validateRepay",
            "impact": "Medium",
            "line": 3933,
            "line_end": 3973,
            "message": "ValidationLogic.validateRepay(DataTypes.ReserveCache,uint256,DataTypes.InterestRateMode,address,uint256,uint256) (FlashLoanLogic.sol#3933-3973) ignores return value by (isActive,isPaused) = reserveCache.reserveConfiguration.getFlags() (FlashLoanLogic.sol#3941)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "GenericLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "calculateUserAccountData",
            "impact": "Medium",
            "line": 3483,
            "line_end": 3634,
            "message": "GenericLogic.calculateUserAccountData(mapping(address => DataTypes.ReserveData),mapping(uint256 => address),mapping(uint8 => DataTypes.EModeCategory),DataTypes.CalculateUserAccountDataParams) (FlashLoanLogic.sol#3483-3634) ignores return value by (vars.ltv,vars.liquidationThreshold,None,vars.decimals,None,vars.eModeAssetCategory) = currentReserve.configuration.getParams() (FlashLoanLogic.sol#3537-3544)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ValidationLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "validateSwapRateMode",
            "impact": "Medium",
            "line": 3984,
            "line_end": 4022,
            "message": "ValidationLogic.validateSwapRateMode(DataTypes.ReserveData,DataTypes.ReserveCache,DataTypes.UserConfigurationMap,uint256,uint256,DataTypes.InterestRateMode) (FlashLoanLogic.sol#3984-4022) ignores return value by (isActive,isFrozen,stableRateEnabled,isPaused) = reserveCache.reserveConfiguration.getFlags() (FlashLoanLogic.sol#3992-3994)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ValidationLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "validateHealthFactor",
            "impact": "Medium",
            "line": 4171,
            "line_end": 4201,
            "message": "ValidationLogic.validateHealthFactor(mapping(address => DataTypes.ReserveData),mapping(uint256 => address),mapping(uint8 => DataTypes.EModeCategory),DataTypes.UserConfigurationMap,address,uint8,uint256,address) (FlashLoanLogic.sol#4171-4201) ignores return value by (healthFactor,hasZeroLtvCollateral) = GenericLogic.calculateUserAccountData(reservesData,reserves,eModeCategories,DataTypes.CalculateUserAccountDataParams(userConfig,reservesCount,user,oracle,userEModeCategory)) (FlashLoanLogic.sol#4181-4193)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "FlashLoanLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "executeFlashLoan",
            "impact": "Low",
            "line": 4658,
            "line_end": 4769,
            "message": "FlashLoanLogic.executeFlashLoan(mapping(address => DataTypes.ReserveData),mapping(uint256 => address),mapping(uint8 => DataTypes.EModeCategory),DataTypes.UserConfigurationMap,DataTypes.FlashloanParams) (FlashLoanLogic.sol#4658-4769) has external calls inside a loop: vars.oracle = IPoolAddressesProvider(params.addressesProvider).getPriceOracle() (FlashLoanLogic.sol#4736)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "FlashLoanLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "executeFlashLoan",
            "impact": "Low",
            "line": 4658,
            "line_end": 4769,
            "message": "FlashLoanLogic.executeFlashLoan(mapping(address => DataTypes.ReserveData),mapping(uint256 => address),mapping(uint8 => DataTypes.EModeCategory),DataTypes.UserConfigurationMap,DataTypes.FlashloanParams) (FlashLoanLogic.sol#4658-4769) has external calls inside a loop: vars.oracleSentinel = IPoolAddressesProvider(params.addressesProvider).getPriceOracleSentinel() (FlashLoanLogic.sol#4737-4738)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "FlashLoanLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "executeFlashLoan",
            "impact": "Low",
            "line": 4658,
            "line_end": 4769,
            "message": "FlashLoanLogic.executeFlashLoan(mapping(address => DataTypes.ReserveData),mapping(uint256 => address),mapping(uint8 => DataTypes.EModeCategory),DataTypes.UserConfigurationMap,DataTypes.FlashloanParams) (FlashLoanLogic.sol#4658-4769) has external calls inside a loop: reserve.cumulateToLiquidityIndex(IERC20(vars.currentATokenAddress).totalSupply(),vars.currentPremiumToLP) (FlashLoanLogic.sol#4712-4715)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "FlashLoanLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "executeFlashLoan",
            "impact": "Low",
            "line": 4658,
            "line_end": 4769,
            "message": "FlashLoanLogic.executeFlashLoan(mapping(address => DataTypes.ReserveData),mapping(uint256 => address),mapping(uint8 => DataTypes.EModeCategory),DataTypes.UserConfigurationMap,DataTypes.FlashloanParams) (FlashLoanLogic.sol#4658-4769) has external calls inside a loop: IAToken(vars.aTokenAddresses[vars.i]).transferUnderlyingTo(params.receiverAddress,params.amounts[vars.i]) (FlashLoanLogic.sol#4680-4683)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BorrowLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "swapBorrowRateMode",
            "impact": "Low",
            "line": 4569,
            "line_end": 4613,
            "message": "Reentrancy in BorrowLogic.swapBorrowRateMode(DataTypes.ReserveData,DataTypes.UserConfigurationMap,address,uint256) (FlashLoanLogic.sol#4569-4613):\n\tExternal calls:\n\t- (reserveCache.nextTotalStableDebt,reserveCache.nextAvgStableBorrowRate) = IStableDebtToken(reserveCache.stableDebtTokenAddress).burn(msg.sender,stableDebt) (FlashLoanLogic.sol#4593-4595)\n\t- (None,reserveCache.nextScaledVariableDebt) = IVariableDebtToken(reserveCache.variableDebtTokenAddress).mint(msg.sender,msg.sender,stableDebt,reserveCache.nextVariableBorrowIndex) (FlashLoanLogic.sol#4597-4599)\n\t- reserveCache.nextScaledVariableDebt = IVariableDebtToken(reserveCache.variableDebtTokenAddress).burn(msg.sender,variableDebt,reserveCache.nextVariableBorrowIndex) (FlashLoanLogic.sol#4601-4603)\n\t- (None,reserveCache.nextTotalStableDebt,reserveCache.nextAvgStableBorrowRate) = IStableDebtToken(reserveCache.stableDebtTokenAddress).mint(msg.sender,msg.sender,variableDebt,reserve.currentStableBorrowRate) (FlashLoanLogic.sol#4605-4607)\n\tEvent emitted after the call(s):\n\t- Swap(asset,msg.sender,rateMode) (FlashLoanLogic.sol#4612)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BorrowLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "rebalanceStableBorrowRate",
            "impact": "Low",
            "line": 4536,
            "line_end": 4567,
            "message": "Reentrancy in BorrowLogic.rebalanceStableBorrowRate(DataTypes.ReserveData,address,address) (FlashLoanLogic.sol#4536-4567):\n\tExternal calls:\n\t- IStableDebtToken(address(stableDebtToken)).burn(user,stableDebt) (FlashLoanLogic.sol#4558)\n\t- (None,reserveCache.nextTotalStableDebt,reserveCache.nextAvgStableBorrowRate) = IStableDebtToken(address(stableDebtToken)).mint(user,user,stableDebt,reserve.currentStableBorrowRate) (FlashLoanLogic.sol#4560-4562)\n\tEvent emitted after the call(s):\n\t- RebalanceStableBorrowRate(asset,user) (FlashLoanLogic.sol#4566)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "FlashLoanLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "executeFlashLoanSimple",
            "impact": "Low",
            "line": 4779,
            "line_end": 4835,
            "message": "Reentrancy in FlashLoanLogic.executeFlashLoanSimple(DataTypes.ReserveData,DataTypes.FlashloanSimpleParams) (FlashLoanLogic.sol#4779-4835):\n\tExternal calls:\n\t- IAToken(reserveCache.aTokenAddress).transferUnderlyingTo(params.receiverAddress,params.amount) (FlashLoanLogic.sol#4794)\n\t- require(bool,string)(vars.receiver.executeOperation(params.asset,params.amount,vars.totalPremium,msg.sender,params.params),Errors.P_INVALID_FLASH_LOAN_EXECUTOR_RETURN) (FlashLoanLogic.sol#4796-4805)\n\t- IERC20(params.asset).safeTransferFrom(params.receiverAddress,reserveCache.aTokenAddress,vars.amountPlusPremium) (FlashLoanLogic.sol#4821-4825)\n\tEvent emitted after the call(s):\n\t- FlashLoan(params.receiverAddress,msg.sender,params.asset,params.amount,vars.totalPremium,0) (FlashLoanLogic.sol#4827-4834)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BorrowLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "executeRepay",
            "impact": "Low",
            "line": 4446,
            "line_end": 4534,
            "message": "Reentrancy in BorrowLogic.executeRepay(mapping(address => DataTypes.ReserveData),mapping(uint256 => address),DataTypes.ReserveData,DataTypes.UserConfigurationMap,DataTypes.ExecuteRepayParams) (FlashLoanLogic.sol#4446-4534):\n\tExternal calls:\n\t- (reserveCache.nextTotalStableDebt,reserveCache.nextAvgStableBorrowRate) = IStableDebtToken(reserveCache.stableDebtTokenAddress).burn(params.onBehalfOf,paybackAmount) (FlashLoanLogic.sol#4480-4482)\n\t- reserveCache.nextScaledVariableDebt = IVariableDebtToken(reserveCache.variableDebtTokenAddress).burn(params.onBehalfOf,paybackAmount,reserveCache.nextVariableBorrowIndex) (FlashLoanLogic.sol#4484-4486)\n\t- IAToken(reserveCache.aTokenAddress).burn(msg.sender,reserveCache.aTokenAddress,paybackAmount,reserveCache.nextLiquidityIndex) (FlashLoanLogic.sol#4520-4525)\n\t- IERC20(params.asset).safeTransferFrom(msg.sender,reserveCache.aTokenAddress,paybackAmount) (FlashLoanLogic.sol#4527)\n\t- IAToken(reserveCache.aTokenAddress).handleRepayment(msg.sender,paybackAmount) (FlashLoanLogic.sol#4528)\n\tEvent emitted after the call(s):\n\t- Repay(params.asset,params.onBehalfOf,msg.sender,paybackAmount) (FlashLoanLogic.sol#4531)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "FlashLoanLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "executeFlashLoan",
            "impact": "Low",
            "line": 4658,
            "line_end": 4769,
            "message": "Reentrancy in FlashLoanLogic.executeFlashLoan(mapping(address => DataTypes.ReserveData),mapping(uint256 => address),mapping(uint8 => DataTypes.EModeCategory),DataTypes.UserConfigurationMap,DataTypes.FlashloanParams) (FlashLoanLogic.sol#4658-4769):\n\tExternal calls:\n\t- IAToken(vars.aTokenAddresses[vars.i]).transferUnderlyingTo(params.receiverAddress,params.amounts[vars.i]) (FlashLoanLogic.sol#4680-4683)\n\t- require(bool,string)(vars.receiver.executeOperation(params.assets,params.amounts,vars.totalPremiums,msg.sender,params.params),Errors.P_INVALID_FLASH_LOAN_EXECUTOR_RETURN) (FlashLoanLogic.sol#4686-4695)\n\t- IERC20(vars.currentAsset).safeTransferFrom(params.receiverAddress,vars.currentATokenAddress,vars.currentAmountPlusPremium) (FlashLoanLogic.sol#4728-4732)\n\t- BorrowLogic.executeBorrow(reserves,reservesList,eModeCategories,userConfig,DataTypes.ExecuteBorrowParams(vars.currentAsset,msg.sender,params.onBehalfOf,vars.currentAmount,params.modes[vars.i],params.referralCode,false,params.maxStableRateBorrowSizePercent,params.reservesCount,vars.oracle,params.userEModeCategory,vars.oracleSentinel)) (FlashLoanLogic.sol#4739-4758)\n\tEvent emitted after the call(s):\n\t- FlashLoan(params.receiverAddress,msg.sender,vars.currentAsset,vars.currentAmount,vars.totalPremiums[vars.i],params.referralCode) (FlashLoanLogic.sol#4760-4767)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BorrowLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "executeBorrow",
            "impact": "Low",
            "line": 4347,
            "line_end": 4444,
            "message": "Reentrancy in BorrowLogic.executeBorrow(mapping(address => DataTypes.ReserveData),mapping(uint256 => address),mapping(uint8 => DataTypes.EModeCategory),DataTypes.UserConfigurationMap,DataTypes.ExecuteBorrowParams) (FlashLoanLogic.sol#4347-4444):\n\tExternal calls:\n\t- (isFirstBorrowing,reserveCache.nextTotalStableDebt,reserveCache.nextAvgStableBorrowRate) = IStableDebtToken(reserveCache.stableDebtTokenAddress).mint(params.user,params.onBehalfOf,params.amount,currentStableRate) (FlashLoanLogic.sol#4393-4402)\n\t- (isFirstBorrowing,reserveCache.nextScaledVariableDebt) = IVariableDebtToken(reserveCache.variableDebtTokenAddress).mint(params.user,params.onBehalfOf,params.amount,reserveCache.nextVariableBorrowIndex) (FlashLoanLogic.sol#4404-4406)\n\t- IAToken(reserveCache.aTokenAddress).transferUnderlyingTo(params.user,params.amount) (FlashLoanLogic.sol#4430)\n\tEvent emitted after the call(s):\n\t- Borrow(params.asset,params.user,params.onBehalfOf,params.amount,params.interestRateMode,currentStableRate,params.referralCode) (FlashLoanLogic.sol#4433-4443)\n\t- Borrow(params.asset,params.user,params.onBehalfOf,params.amount,params.interestRateMode,reserve.currentVariableBorrowRate,params.referralCode) (FlashLoanLogic.sol#4433-4443)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ValidationLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "validateRepay",
            "impact": "Low",
            "line": 3933,
            "line_end": 3973,
            "message": "ValidationLogic.validateRepay(DataTypes.ReserveCache,uint256,DataTypes.InterestRateMode,address,uint256,uint256) (FlashLoanLogic.sol#3933-3973) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)((stableRatePreviousTimestamp < uint40(block.timestamp) && DataTypes.InterestRateMode(rateMode) == DataTypes.InterestRateMode.STABLE) || (variableDebtPreviousIndex < reserveCache.nextVariableBorrowIndex && DataTypes.InterestRateMode(rateMode) == DataTypes.InterestRateMode.VARIABLE),Errors.VL_SAME_BLOCK_BORROW_REPAY) (FlashLoanLogic.sol#3953-3959)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MathUtils",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "calculateCompoundedInterest",
            "impact": "Low",
            "line": 3042,
            "line_end": 3077,
            "message": "MathUtils.calculateCompoundedInterest(uint256,uint40,uint256) (FlashLoanLogic.sol#3042-3077) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- exp == 0 (FlashLoanLogic.sol#3050)\n\t- exp > 2 (FlashLoanLogic.sol#3061)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ReserveLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "getNormalizedIncome",
            "impact": "Low",
            "line": 3118,
            "line_end": 3136,
            "message": "ReserveLogic.getNormalizedIncome(DataTypes.ReserveData) (FlashLoanLogic.sol#3118-3136) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- timestamp == uint40(block.timestamp) (FlashLoanLogic.sol#3126)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ReserveLogic",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "function": "getNormalizedDebt",
            "impact": "Low",
            "line": 3145,
            "line_end": 3163,
            "message": "ReserveLogic.getNormalizedDebt(DataTypes.ReserveData) (FlashLoanLogic.sol#3145-3163) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- timestamp == uint40(block.timestamp) (FlashLoanLogic.sol#3153)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-AaveV3/code/aave-v3-core-14f6148e21b477d78347db6a1603039c9559e275/contracts/protocol/libraries/logic/FlashLoanLogic.sol",
            "impact": "Informational",
            "line": 1790,
            "message": "ReserveConfiguration.DEBT_CEILING_DECIMALS (FlashLoanLogic.sol#1790) is never used in ReserveConfiguration (FlashLoanLogic.sol#1743-2293)\n",
            "name": "unused-state",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}