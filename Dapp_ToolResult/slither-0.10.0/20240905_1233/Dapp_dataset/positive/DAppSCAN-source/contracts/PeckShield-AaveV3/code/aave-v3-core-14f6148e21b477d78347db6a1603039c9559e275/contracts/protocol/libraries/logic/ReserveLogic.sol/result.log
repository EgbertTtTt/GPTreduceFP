'solc --version' running
'solc /sb/ReserveLogic.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running

MathUtils.calculateCompoundedInterest(uint256,uint40,uint256) (../../sb/ReserveLogic.sol#2664-2699) performs a multiplication on the result of a division:
	- basePowerTwo = rate.rayMul(rate) / (SECONDS_PER_YEAR * SECONDS_PER_YEAR) (../../sb/ReserveLogic.sol#2685)
	- secondTerm = exp * expMinusOne * basePowerTwo (../../sb/ReserveLogic.sol#2689)
MathUtils.calculateCompoundedInterest(uint256,uint40,uint256) (../../sb/ReserveLogic.sol#2664-2699) performs a multiplication on the result of a division:
	- basePowerThree = basePowerTwo.rayMul(rate) / SECONDS_PER_YEAR (../../sb/ReserveLogic.sol#2686)
	- thirdTerm = exp * expMinusOne * expMinusTwo * basePowerThree (../../sb/ReserveLogic.sol#2693)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply

MathUtils.calculateCompoundedInterest(uint256,uint40,uint256) (../../sb/ReserveLogic.sol#2664-2699) uses a dangerous strict equality:
	- exp == 0 (../../sb/ReserveLogic.sol#2672)
ReserveLogic.getNormalizedDebt(DataTypes.ReserveData) (../../sb/ReserveLogic.sol#2861-2879) uses a dangerous strict equality:
	- timestamp == uint40(block.timestamp) (../../sb/ReserveLogic.sol#2869)
ReserveLogic.getNormalizedIncome(DataTypes.ReserveData) (../../sb/ReserveLogic.sol#2834-2852) uses a dangerous strict equality:
	- timestamp == uint40(block.timestamp) (../../sb/ReserveLogic.sol#2842)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

ReserveLogic.updateInterestRates(DataTypes.ReserveData,DataTypes.ReserveCache,address,uint256,uint256).vars (../../sb/ReserveLogic.sol#2962) is a local variable never initialized
ReserveLogic.cache(DataTypes.ReserveData).reserveCache (../../sb/ReserveLogic.sol#3115) is a local variable never initialized
ReserveLogic._accrueToTreasury(DataTypes.ReserveData,DataTypes.ReserveCache).vars (../../sb/ReserveLogic.sol#3021) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables

MathUtils.calculateCompoundedInterest(uint256,uint40,uint256) (../../sb/ReserveLogic.sol#2664-2699) uses timestamp for comparisons
	Dangerous comparisons:
	- exp == 0 (../../sb/ReserveLogic.sol#2672)
	- exp > 2 (../../sb/ReserveLogic.sol#2683)
ReserveLogic.getNormalizedIncome(DataTypes.ReserveData) (../../sb/ReserveLogic.sol#2834-2852) uses timestamp for comparisons
	Dangerous comparisons:
	- timestamp == uint40(block.timestamp) (../../sb/ReserveLogic.sol#2842)
ReserveLogic.getNormalizedDebt(DataTypes.ReserveData) (../../sb/ReserveLogic.sol#2861-2879) uses timestamp for comparisons
	Dangerous comparisons:
	- timestamp == uint40(block.timestamp) (../../sb/ReserveLogic.sol#2869)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Address.isContract(address) (../../sb/ReserveLogic.sol#97-108) uses assembly
	- INLINE ASM (../../sb/ReserveLogic.sol#104-106)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

Address.isContract(address) (../../sb/ReserveLogic.sol#97-108) is never used and should be removed
Address.sendValue(address,uint256) (../../sb/ReserveLogic.sol#126-132) is never used and should be removed
Helpers.castUint128(uint256) (../../sb/ReserveLogic.sol#2798-2801) is never used and should be removed
Helpers.getUserCurrentDebt(address,DataTypes.ReserveData) (../../sb/ReserveLogic.sol#2769-2778) is never used and should be removed
Helpers.getUserCurrentDebtMemory(address,DataTypes.ReserveData) (../../sb/ReserveLogic.sol#2787-2796) is never used and should be removed
MathUtils.calculateCompoundedInterest(uint256,uint40) (../../sb/ReserveLogic.sol#2707-2713) is never used and should be removed
MathUtils.calculateCompoundedInterest(uint256,uint40,uint256) (../../sb/ReserveLogic.sol#2664-2699) is never used and should be removed
MathUtils.calculateLinearInterest(uint256,uint40) (../../sb/ReserveLogic.sol#2637-2649) is never used and should be removed
PercentageMath.percentDiv(uint256,uint256) (../../sb/ReserveLogic.sol#2747-2758) is never used and should be removed
PercentageMath.percentMul(uint256,uint256) (../../sb/ReserveLogic.sol#2726-2739) is never used and should be removed
ReserveConfiguration.getActive(DataTypes.ReserveConfigurationMap) (../../sb/ReserveLogic.sol#2114-2116) is never used and should be removed
ReserveConfiguration.getBorrowCap(DataTypes.ReserveConfigurationMap) (../../sb/ReserveLogic.sol#2260-2266) is never used and should be removed
ReserveConfiguration.getBorrowingEnabled(DataTypes.ReserveConfigurationMap) (../../sb/ReserveLogic.sol#2177-2183) is never used and should be removed
ReserveConfiguration.getCaps(DataTypes.ReserveConfigurationMap) (../../sb/ReserveLogic.sol#2482-2493) is never used and should be removed
ReserveConfiguration.getDebtCeiling(DataTypes.ReserveConfigurationMap) (../../sb/ReserveLogic.sol#2314-2320) is never used and should be removed
ReserveConfiguration.getDecimals(DataTypes.ReserveConfigurationMap) (../../sb/ReserveLogic.sol#2090-2096) is never used and should be removed
ReserveConfiguration.getEModeCategory(DataTypes.ReserveConfigurationMap) (../../sb/ReserveLogic.sol#2403-2409) is never used and should be removed
ReserveConfiguration.getFlags(DataTypes.ReserveConfigurationMap) (../../sb/ReserveLogic.sol#2420-2440) is never used and should be removed
ReserveConfiguration.getFrozen(DataTypes.ReserveConfigurationMap) (../../sb/ReserveLogic.sol#2134-2136) is never used and should be removed
ReserveConfiguration.getLiquidationBonus(DataTypes.ReserveConfigurationMap) (../../sb/ReserveLogic.sol#2063-2069) is never used and should be removed
ReserveConfiguration.getLiquidationProtocolFee(DataTypes.ReserveConfigurationMap) (../../sb/ReserveLogic.sol#2346-2353) is never used and should be removed
ReserveConfiguration.getLiquidationThreshold(DataTypes.ReserveConfigurationMap) (../../sb/ReserveLogic.sol#2034-2040) is never used and should be removed
ReserveConfiguration.getLtv(DataTypes.ReserveConfigurationMap) (../../sb/ReserveLogic.sol#2009-2011) is never used and should be removed
ReserveConfiguration.getParams(DataTypes.ReserveConfigurationMap) (../../sb/ReserveLogic.sol#2452-2474) is never used and should be removed
ReserveConfiguration.getPaused(DataTypes.ReserveConfigurationMap) (../../sb/ReserveLogic.sol#2154-2156) is never used and should be removed
ReserveConfiguration.getReserveFactor(DataTypes.ReserveConfigurationMap) (../../sb/ReserveLogic.sol#2233-2239) is never used and should be removed
ReserveConfiguration.getStableRateBorrowingEnabled(DataTypes.ReserveConfigurationMap) (../../sb/ReserveLogic.sol#2204-2210) is never used and should be removed
ReserveConfiguration.getSupplyCap(DataTypes.ReserveConfigurationMap) (../../sb/ReserveLogic.sol#2287-2293) is never used and should be removed
ReserveConfiguration.getUnbackedMintCap(DataTypes.ReserveConfigurationMap) (../../sb/ReserveLogic.sol#2376-2382) is never used and should be removed
ReserveConfiguration.setActive(DataTypes.ReserveConfigurationMap,bool) (../../sb/ReserveLogic.sol#2103-2107) is never used and should be removed
ReserveConfiguration.setBorrowCap(DataTypes.ReserveConfigurationMap,uint256) (../../sb/ReserveLogic.sol#2246-2253) is never used and should be removed
ReserveConfiguration.setBorrowingEnabled(DataTypes.ReserveConfigurationMap,bool) (../../sb/ReserveLogic.sol#2163-2170) is never used and should be removed
ReserveConfiguration.setDebtCeiling(DataTypes.ReserveConfigurationMap,uint256) (../../sb/ReserveLogic.sol#2300-2307) is never used and should be removed
ReserveConfiguration.setDecimals(DataTypes.ReserveConfigurationMap,uint256) (../../sb/ReserveLogic.sol#2076-2083) is never used and should be removed
ReserveConfiguration.setEModeCategory(DataTypes.ReserveConfigurationMap,uint256) (../../sb/ReserveLogic.sol#2389-2396) is never used and should be removed
ReserveConfiguration.setFrozen(DataTypes.ReserveConfigurationMap,bool) (../../sb/ReserveLogic.sol#2123-2127) is never used and should be removed
ReserveConfiguration.setLiquidationBonus(DataTypes.ReserveConfigurationMap,uint256) (../../sb/ReserveLogic.sol#2047-2056) is never used and should be removed
ReserveConfiguration.setLiquidationProtocolFee(DataTypes.ReserveConfigurationMap,uint256) (../../sb/ReserveLogic.sol#2327-2339) is never used and should be removed
ReserveConfiguration.setLiquidationThreshold(DataTypes.ReserveConfigurationMap,uint256) (../../sb/ReserveLogic.sol#2018-2027) is never used and should be removed
ReserveConfiguration.setLtv(DataTypes.ReserveConfigurationMap,uint256) (../../sb/ReserveLogic.sol#1998-2002) is never used and should be removed
ReserveConfiguration.setPaused(DataTypes.ReserveConfigurationMap,bool) (../../sb/ReserveLogic.sol#2143-2147) is never used and should be removed
ReserveConfiguration.setReserveFactor(DataTypes.ReserveConfigurationMap,uint256) (../../sb/ReserveLogic.sol#2217-2226) is never used and should be removed
ReserveConfiguration.setStableRateBorrowingEnabled(DataTypes.ReserveConfigurationMap,bool) (../../sb/ReserveLogic.sol#2190-2197) is never used and should be removed
ReserveConfiguration.setSupplyCap(DataTypes.ReserveConfigurationMap,uint256) (../../sb/ReserveLogic.sol#2273-2280) is never used and should be removed
ReserveConfiguration.setUnbackedMintCap(DataTypes.ReserveConfigurationMap,uint256) (../../sb/ReserveLogic.sol#2360-2369) is never used and should be removed
ReserveLogic._accrueToTreasury(DataTypes.ReserveData,DataTypes.ReserveCache) (../../sb/ReserveLogic.sol#3017-3062) is never used and should be removed
ReserveLogic._updateIndexes(DataTypes.ReserveData,DataTypes.ReserveCache) (../../sb/ReserveLogic.sol#3069-3103) is never used and should be removed
ReserveLogic.cache(DataTypes.ReserveData) (../../sb/ReserveLogic.sol#3110-3147) is never used and should be removed
ReserveLogic.cumulateToLiquidityIndex(DataTypes.ReserveData,uint256,uint256) (../../sb/ReserveLogic.sol#2901-2912) is never used and should be removed
ReserveLogic.getNormalizedDebt(DataTypes.ReserveData) (../../sb/ReserveLogic.sol#2861-2879) is never used and should be removed
ReserveLogic.getNormalizedIncome(DataTypes.ReserveData) (../../sb/ReserveLogic.sol#2834-2852) is never used and should be removed
ReserveLogic.init(DataTypes.ReserveData,address,address,address,address) (../../sb/ReserveLogic.sol#2922-2937) is never used and should be removed
ReserveLogic.updateInterestRates(DataTypes.ReserveData,DataTypes.ReserveCache,address,uint256,uint256) (../../sb/ReserveLogic.sol#2955-2998) is never used and should be removed
ReserveLogic.updateState(DataTypes.ReserveData,DataTypes.ReserveCache) (../../sb/ReserveLogic.sol#2886-2892) is never used and should be removed
SafeERC20.callOptionalReturn(IERC20,bytes) (../../sb/ReserveLogic.sol#167-179) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sb/ReserveLogic.sol#155-165) is never used and should be removed
SafeERC20.safeTransfer(IERC20,address,uint256) (../../sb/ReserveLogic.sol#138-144) is never used and should be removed
SafeERC20.safeTransferFrom(IERC20,address,address,uint256) (../../sb/ReserveLogic.sol#146-153) is never used and should be removed
WadRayMath.halfRay() (../../sb/ReserveLogic.sol#2516-2518) is never used and should be removed
WadRayMath.halfWad() (../../sb/ReserveLogic.sol#2523-2525) is never used and should be removed
WadRayMath.rayDiv(uint256,uint256) (../../sb/ReserveLogic.sol#2585-2593) is never used and should be removed
WadRayMath.rayMul(uint256,uint256) (../../sb/ReserveLogic.sol#2567-2577) is never used and should be removed
WadRayMath.rayToWad(uint256) (../../sb/ReserveLogic.sol#2600-2608) is never used and should be removed
WadRayMath.wad() (../../sb/ReserveLogic.sol#2509-2511) is never used and should be removed
WadRayMath.wadDiv(uint256,uint256) (../../sb/ReserveLogic.sol#2551-2559) is never used and should be removed
WadRayMath.wadMul(uint256,uint256) (../../sb/ReserveLogic.sol#2533-2543) is never used and should be removed
WadRayMath.wadToRay(uint256) (../../sb/ReserveLogic.sol#2615-2622) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Pragma version0.8.7 (../../sb/ReserveLogic.sol#1) allows old versions
solc-0.8.7 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Address.sendValue(address,uint256) (../../sb/ReserveLogic.sol#126-132):
	- (success) = recipient.call{value: amount}() (../../sb/ReserveLogic.sol#130)
Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (../../sb/ReserveLogic.sol#167-179):
	- (success,returndata) = address(token).call(data) (../../sb/ReserveLogic.sol#171)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function IPool.MAX_STABLE_RATE_BORROW_SIZE_PERCENT() (../../sb/ReserveLogic.sol#1223) is not in mixedCase
Function IPool.FLASHLOAN_PREMIUM_TOTAL() (../../sb/ReserveLogic.sol#1229) is not in mixedCase
Function IPool.BRIDGE_PROTOCOL_FEE() (../../sb/ReserveLogic.sol#1235) is not in mixedCase
Function IPool.FLASHLOAN_PREMIUM_TO_PROTOCOL() (../../sb/ReserveLogic.sol#1241) is not in mixedCase
Function IPool.MAX_NUMBER_RESERVES() (../../sb/ReserveLogic.sol#1247) is not in mixedCase
Function IAaveIncentivesController.REWARD_TOKEN() (../../sb/ReserveLogic.sol#1415) is not in mixedCase
Function IAaveIncentivesController.PRECISION() (../../sb/ReserveLogic.sol#1421) is not in mixedCase
Function IAToken.UNDERLYING_ASSET_ADDRESS() (../../sb/ReserveLogic.sol#1582) is not in mixedCase
Function IAToken.RESERVE_TREASURY_ADDRESS() (../../sb/ReserveLogic.sol#1587) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

ReserveConfiguration.slitherConstructorConstantVariables() (../../sb/ReserveLogic.sol#1944-2494) uses literals with too many digits:
	- BORROW_CAP_MASK = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000FFFFFFFFFFFFFFFFFFFF (../../sb/ReserveLogic.sol#1955)
ReserveConfiguration.slitherConstructorConstantVariables() (../../sb/ReserveLogic.sol#1944-2494) uses literals with too many digits:
	- SUPPLY_CAP_MASK = 0xFFFFFFFFFFFFFFFFFFFFFFFFFF000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFF (../../sb/ReserveLogic.sol#1956)
ReserveConfiguration.slitherConstructorConstantVariables() (../../sb/ReserveLogic.sol#1944-2494) uses literals with too many digits:
	- UNBACKED_MINT_CAP_MASK = 0xFFFFFFFFFFF000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF (../../sb/ReserveLogic.sol#1959)
ReserveConfiguration.slitherConstructorConstantVariables() (../../sb/ReserveLogic.sol#1944-2494) uses literals with too many digits:
	- DEBT_CEILING_MASK = 0xF0000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF (../../sb/ReserveLogic.sol#1960)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

ReserveConfiguration.DEBT_CEILING_DECIMALS (../../sb/ReserveLogic.sol#1991) is never used in ReserveConfiguration (../../sb/ReserveLogic.sol#1944-2494)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
/sb/ReserveLogic.sol analyzed (21 contracts with 93 detectors), 97 result(s) found
