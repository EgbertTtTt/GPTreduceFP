'solc --version' running
'solc /sb/GTKT_GoldTickets.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running
Compilation warnings/errors on /sb/GTKT_GoldTickets.sol:
/sb/GTKT_GoldTickets.sol:12:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/GTKT_GoldTickets.sol:17:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw; // functions with onlyOwner will throw and exception if not the contract owner
                                 ^---^
/sb/GTKT_GoldTickets.sol:60:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function StandardMintableToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/GTKT_GoldTickets.sol:78:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/sb/GTKT_GoldTickets.sol:79:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[msg.sender]) throw;                // Check if sender frozen
                                       ^---^
/sb/GTKT_GoldTickets.sol:80:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_to]) throw;                       // Check if recipient frozen                 
                                ^---^
/sb/GTKT_GoldTickets.sol:107:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_from]) throw;                        // Check if sender frozen       
                                  ^---^
/sb/GTKT_GoldTickets.sol:108:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_to]) throw;                          // Check if recipient frozen                 
                                ^---^
/sb/GTKT_GoldTickets.sol:110:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;    // Check for overflows
                                                      ^---^
/sb/GTKT_GoldTickets.sol:111:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;       // Check allowance
                                                   ^---^
/sb/GTKT_GoldTickets.sol:130:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[msg.sender]) throw;                 // Check if sender frozen       
                                       ^---^
/sb/GTKT_GoldTickets.sol:140:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[msg.sender]) throw;                // Check if sender frozen       
                                       ^---^
/sb/GTKT_GoldTickets.sol:141:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_from]) throw;                     // Check if recipient frozen 
                                  ^---^
/sb/GTKT_GoldTickets.sol:144:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;    // Check allowance
                                                   ^---^
/sb/GTKT_GoldTickets.sol:155:67: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[target] + mintedAmount < balanceOf[target]) throw; // Check for overflows
                                                                  ^---^
/sb/GTKT_GoldTickets.sol:83:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/sb/GTKT_GoldTickets.sol:91:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);              // Notify of new Approval
        ^------------------------------------^
/sb/GTKT_GoldTickets.sol:115:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);                           // Perform the transfer
        ^--------------------------^
/sb/GTKT_GoldTickets.sol:123:9: Warning: Invoking events without "emit" prefix is deprecated.
        FrozenFunds(target, freeze);                          // notify event
        ^-------------------------^
/sb/GTKT_GoldTickets.sol:135:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender,0, _value);	                      // Burn _value tokens
        ^----------------------------^
/sb/GTKT_GoldTickets.sol:148:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, 0, _value);                          // Burn tokens by Transfer to incinerator
        ^------------------------^
/sb/GTKT_GoldTickets.sol:158:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, target, mintedAmount);
        ^-------------------------------^
/sb/GTKT_GoldTickets.sol:12:5: Warning: No visibility specified. Defaulting to "public". 
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/GTKT_GoldTickets.sol:21:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership(address newOwner) onlyOwner { // transfer contract owner to new owner
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/GTKT_GoldTickets.sol:26:27: Warning: No visibility specified. Defaulting to "public". 
contract tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }
                          ^----------------------------------------------------------------------------------------^
/sb/GTKT_GoldTickets.sol:60:5: Warning: No visibility specified. Defaulting to "public". 
    function StandardMintableToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/GTKT_GoldTickets.sol:75:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success){
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/GTKT_GoldTickets.sol:88:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/GTKT_GoldTickets.sol:96:5: Warning: No visibility specified. Defaulting to "public". 
    function approveAndCall(address _spender, uint256 _value, bytes _extraData)
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/GTKT_GoldTickets.sol:106:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/GTKT_GoldTickets.sol:121:5: Warning: No visibility specified. Defaulting to "public". 
    function freezeAccount(address target, bool freeze ) onlyOwner {    
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/GTKT_GoldTickets.sol:129:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/GTKT_GoldTickets.sol:139:5: Warning: No visibility specified. Defaulting to "public". 
    function burnFrom(address _from, uint256 _value) onlyOwner returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/GTKT_GoldTickets.sol:154:5: Warning: No visibility specified. Defaulting to "public". 
    function mintToken(address target, uint256 mintedAmount) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).


owned.transferOwnership(address) (../../sb/GTKT_GoldTickets.sol#21-23) should emit an event for: 
	- owner = newOwner (../../sb/GTKT_GoldTickets.sol#22) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

owned.transferOwnership(address).newOwner (../../sb/GTKT_GoldTickets.sol#21) lacks a zero-check on :
		- owner = newOwner (../../sb/GTKT_GoldTickets.sol#22)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Deprecated standard detected THROW (../../sb/GTKT_GoldTickets.sol#17):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/GTKT_GoldTickets.sol#78):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/GTKT_GoldTickets.sol#79):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/GTKT_GoldTickets.sol#80):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/GTKT_GoldTickets.sol#107):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/GTKT_GoldTickets.sol#108):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/GTKT_GoldTickets.sol#110):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/GTKT_GoldTickets.sol#111):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/GTKT_GoldTickets.sol#130):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/GTKT_GoldTickets.sol#140):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/GTKT_GoldTickets.sol#141):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/GTKT_GoldTickets.sol#144):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/GTKT_GoldTickets.sol#155):
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.11 (../../sb/GTKT_GoldTickets.sol#1) allows old versions
solc-0.4.26 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Contract owned (../../sb/GTKT_GoldTickets.sol#9-24) is not in CapWords
Contract tokenRecipient (../../sb/GTKT_GoldTickets.sol#26) is not in CapWords
Parameter StandardMintableToken.transfer(address,uint256)._to (../../sb/GTKT_GoldTickets.sol#75) is not in mixedCase
Parameter StandardMintableToken.transfer(address,uint256)._value (../../sb/GTKT_GoldTickets.sol#75) is not in mixedCase
Parameter StandardMintableToken.approve(address,uint256)._spender (../../sb/GTKT_GoldTickets.sol#88) is not in mixedCase
Parameter StandardMintableToken.approve(address,uint256)._value (../../sb/GTKT_GoldTickets.sol#88) is not in mixedCase
Parameter StandardMintableToken.approveAndCall(address,uint256,bytes)._spender (../../sb/GTKT_GoldTickets.sol#96) is not in mixedCase
Parameter StandardMintableToken.approveAndCall(address,uint256,bytes)._value (../../sb/GTKT_GoldTickets.sol#96) is not in mixedCase
Parameter StandardMintableToken.approveAndCall(address,uint256,bytes)._extraData (../../sb/GTKT_GoldTickets.sol#96) is not in mixedCase
Parameter StandardMintableToken.transferFrom(address,address,uint256)._from (../../sb/GTKT_GoldTickets.sol#106) is not in mixedCase
Parameter StandardMintableToken.transferFrom(address,address,uint256)._to (../../sb/GTKT_GoldTickets.sol#106) is not in mixedCase
Parameter StandardMintableToken.transferFrom(address,address,uint256)._value (../../sb/GTKT_GoldTickets.sol#106) is not in mixedCase
Parameter StandardMintableToken.burn(uint256)._value (../../sb/GTKT_GoldTickets.sol#129) is not in mixedCase
Parameter StandardMintableToken.burnFrom(address,uint256)._from (../../sb/GTKT_GoldTickets.sol#139) is not in mixedCase
Parameter StandardMintableToken.burnFrom(address,uint256)._value (../../sb/GTKT_GoldTickets.sol#139) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

StandardMintableToken.standard (../../sb/GTKT_GoldTickets.sol#37) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

receiveApproval(address,uint256,address,bytes) should be declared external:
	- tokenRecipient.receiveApproval(address,uint256,address,bytes) (../../sb/GTKT_GoldTickets.sol#26)
approveAndCall(address,uint256,bytes) should be declared external:
	- StandardMintableToken.approveAndCall(address,uint256,bytes) (../../sb/GTKT_GoldTickets.sol#96-103)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
/sb/GTKT_GoldTickets.sol analyzed (3 contracts with 93 detectors), 35 result(s) found
