{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "repayBorrowInternal",
            "impact": "High",
            "line": 1808,
            "line_end": 1860,
            "message": "Reentrancy in Holdefi.repayBorrowInternal(address,address,address,uint256) (Holdefi.sol#1808-1860):\n\tExternal calls:\n\t- transferFromHoldefi(msg.sender,ethAddress,extra) (Holdefi.sol#1824)\n\t\t- (success,None) = receiver.call{value: amount}() (Holdefi.sol#1608)\n\t\t- success = token.transfer(receiver,amount) (Holdefi.sol#1612)\n\t- transferToHoldefi(address(this),market,transferAmount) (Holdefi.sol#1829)\n\t\t- success = token.transferFrom(msg.sender,receiver,amount) (Holdefi.sol#1619)\n\t- beforeChangeSupplyRate(market) (Holdefi.sol#1846)\n\t\t- holdefiSettings.resetPromotionRate(market) (Holdefi.sol#1600)\n\tExternal calls sending eth:\n\t- transferFromHoldefi(msg.sender,ethAddress,extra) (Holdefi.sol#1824)\n\t\t- (success,None) = receiver.call{value: amount}() (Holdefi.sol#1608)\n\tState variables written after the call(s):\n\t- beforeChangeSupplyRate(market) (Holdefi.sol#1846)\n\t\t- marketAssets[market].promotionReserveScaled = reserveScaled (Holdefi.sol#1582)\n\t\t- marketAssets[market].promotionDebtScaled = debtScaled (Holdefi.sol#1594)\n\t\t- marketAssets[market].promotionReserveLastUpdateTime = block.timestamp (Holdefi.sol#1583)\n\t\t- marketAssets[market].promotionDebtLastUpdateTime = block.timestamp (Holdefi.sol#1595)\n\t\t- marketAssets[market].supplyIndex = currentSupplyIndex (Holdefi.sol#1560)\n\t\t- marketAssets[market].supplyIndexUpdateTime = currentTime (Holdefi.sol#1561)\n\tHoldefi.marketAssets (Holdefi.sol#653) can be used in cross function reentrancies:\n\t- Holdefi.borrowInternal(address,address,address,uint256,uint16) (Holdefi.sol#1760-1804)\n\t- Holdefi.depositPromotionReserveInternal(address,uint256) (Holdefi.sol#1894-1907)\n\t- Holdefi.getCurrentBorrowIndex(address) (Holdefi.sol#1086-1102)\n\t- Holdefi.getCurrentSupplyIndex(address) (Holdefi.sol#1061-1078)\n\t- Holdefi.getPromotionDebt(address) (Holdefi.sol#1131-1147)\n\t- Holdefi.getPromotionReserve(address) (Holdefi.sol#1109-1124)\n\t- Holdefi.liquidateBorrowerCollateral(address,address,address) (Holdefi.sol#1398-1438)\n\t- Holdefi.marketAssets (Holdefi.sol#653)\n\t- Holdefi.repayBorrowInternal(address,address,address,uint256) (Holdefi.sol#1808-1860)\n\t- Holdefi.reserveSettlement(address) (Holdefi.sol#1536-1552)\n\t- Holdefi.supplyInternal(address,address,uint256,uint16) (Holdefi.sol#1624-1655)\n\t- Holdefi.updateBorrowIndex(address) (Holdefi.sol#1568-1575)\n\t- Holdefi.updatePromotionDebt(address) (Holdefi.sol#1591-1602)\n\t- Holdefi.updatePromotionReserve(address) (Holdefi.sol#1579-1586)\n\t- Holdefi.updateSupplyIndex(address) (Holdefi.sol#1556-1564)\n\t- Holdefi.withdrawPromotionReserve(address,uint256) (Holdefi.sol#1511-1524)\n\t- Holdefi.withdrawSupplyInternal(address,address,uint256) (Holdefi.sol#1658-1701)\n\t- marketAssets[market].totalBorrow = marketAssets[market].totalBorrow.sub(remaining) (Holdefi.sol#1848)\n\tHoldefi.marketAssets (Holdefi.sol#653) can be used in cross function reentrancies:\n\t- Holdefi.borrowInternal(address,address,address,uint256,uint16) (Holdefi.sol#1760-1804)\n\t- Holdefi.depositPromotionReserveInternal(address,uint256) (Holdefi.sol#1894-1907)\n\t- Holdefi.getCurrentBorrowIndex(address) (Holdefi.sol#1086-1102)\n\t- Holdefi.getCurrentSupplyIndex(address) (Holdefi.sol#1061-1078)\n\t- Holdefi.getPromotionDebt(address) (Holdefi.sol#1131-1147)\n\t- Holdefi.getPromotionReserve(address) (Holdefi.sol#1109-1124)\n\t- Holdefi.liquidateBorrowerCollateral(address,address,address) (Holdefi.sol#1398-1438)\n\t- Holdefi.marketAssets (Holdefi.sol#653)\n\t- Holdefi.repayBorrowInternal(address,address,address,uint256) (Holdefi.sol#1808-1860)\n\t- Holdefi.reserveSettlement(address) (Holdefi.sol#1536-1552)\n\t- Holdefi.supplyInternal(address,address,uint256,uint16) (Holdefi.sol#1624-1655)\n\t- Holdefi.updateBorrowIndex(address) (Holdefi.sol#1568-1575)\n\t- Holdefi.updatePromotionDebt(address) (Holdefi.sol#1591-1602)\n\t- Holdefi.updatePromotionReserve(address) (Holdefi.sol#1579-1586)\n\t- Holdefi.updateSupplyIndex(address) (Holdefi.sol#1556-1564)\n\t- Holdefi.withdrawPromotionReserve(address,uint256) (Holdefi.sol#1511-1524)\n\t- Holdefi.withdrawSupplyInternal(address,address,uint256) (Holdefi.sol#1658-1701)\n",
            "name": "reentrancy-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "repayBorrowInternal",
            "impact": "High",
            "line": 1808,
            "line_end": 1860,
            "message": "Reentrancy in Holdefi.repayBorrowInternal(address,address,address,uint256) (Holdefi.sol#1808-1860):\n\tExternal calls:\n\t- transferFromHoldefi(msg.sender,ethAddress,extra) (Holdefi.sol#1824)\n\t\t- (success,None) = receiver.call{value: amount}() (Holdefi.sol#1608)\n\t\t- success = token.transfer(receiver,amount) (Holdefi.sol#1612)\n\t- transferToHoldefi(address(this),market,transferAmount) (Holdefi.sol#1829)\n\t\t- success = token.transferFrom(msg.sender,receiver,amount) (Holdefi.sol#1619)\n\tExternal calls sending eth:\n\t- transferFromHoldefi(msg.sender,ethAddress,extra) (Holdefi.sol#1824)\n\t\t- (success,None) = receiver.call{value: amount}() (Holdefi.sol#1608)\n\tState variables written after the call(s):\n\t- borrows[account][collateral][market].balance = borrowData.balance (Holdefi.sol#1841)\n\tHoldefi.borrows (Holdefi.sol#665) can be used in cross function reentrancies:\n\t- Holdefi.approveBorrow(address,address,address,uint256) (Holdefi.sol#1316-1322)\n\t- Holdefi.borrowBehalf(address,address,address,uint256,uint16) (Holdefi.sol#1341-1351)\n\t- Holdefi.borrowInternal(address,address,address,uint256,uint16) (Holdefi.sol#1760-1804)\n\t- Holdefi.getAccountBorrow(address,address,address) (Holdefi.sol#860-879)\n\t- Holdefi.getAccountBorrowAllowance(address,address,address,address) (Holdefi.sol#969-980)\n\t- Holdefi.liquidateBorrowerCollateral(address,address,address) (Holdefi.sol#1398-1438)\n\t- Holdefi.repayBorrowInternal(address,address,address,uint256) (Holdefi.sol#1808-1860)\n\t- borrows[account][collateral][market].accumulatedInterest = borrowData.interest (Holdefi.sol#1842)\n\tHoldefi.borrows (Holdefi.sol#665) can be used in cross function reentrancies:\n\t- Holdefi.approveBorrow(address,address,address,uint256) (Holdefi.sol#1316-1322)\n\t- Holdefi.borrowBehalf(address,address,address,uint256,uint16) (Holdefi.sol#1341-1351)\n\t- Holdefi.borrowInternal(address,address,address,uint256,uint16) (Holdefi.sol#1760-1804)\n\t- Holdefi.getAccountBorrow(address,address,address) (Holdefi.sol#860-879)\n\t- Holdefi.getAccountBorrowAllowance(address,address,address,address) (Holdefi.sol#969-980)\n\t- Holdefi.liquidateBorrowerCollateral(address,address,address) (Holdefi.sol#1398-1438)\n\t- Holdefi.repayBorrowInternal(address,address,address,uint256) (Holdefi.sol#1808-1860)\n\t- borrows[account][collateral][market].lastInterestIndex = borrowData.currentIndex (Holdefi.sol#1843)\n\tHoldefi.borrows (Holdefi.sol#665) can be used in cross function reentrancies:\n\t- Holdefi.approveBorrow(address,address,address,uint256) (Holdefi.sol#1316-1322)\n\t- Holdefi.borrowBehalf(address,address,address,uint256,uint16) (Holdefi.sol#1341-1351)\n\t- Holdefi.borrowInternal(address,address,address,uint256,uint16) (Holdefi.sol#1760-1804)\n\t- Holdefi.getAccountBorrow(address,address,address) (Holdefi.sol#860-879)\n\t- Holdefi.getAccountBorrowAllowance(address,address,address,address) (Holdefi.sol#969-980)\n\t- Holdefi.liquidateBorrowerCollateral(address,address,address) (Holdefi.sol#1398-1438)\n\t- Holdefi.repayBorrowInternal(address,address,address,uint256) (Holdefi.sol#1808-1860)\n",
            "name": "reentrancy-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "withdrawSupplyInternal",
            "impact": "Medium",
            "line": 1658,
            "line_end": 1701,
            "message": "Reentrancy in Holdefi.withdrawSupplyInternal(address,address,uint256) (Holdefi.sol#1658-1701):\n\tExternal calls:\n\t- beforeChangeSupplyRate(market) (Holdefi.sol#1686)\n\t\t- holdefiSettings.resetPromotionRate(market) (Holdefi.sol#1600)\n\tState variables written after the call(s):\n\t- marketAssets[market].totalSupply = marketAssets[market].totalSupply.sub(remaining) (Holdefi.sol#1688)\n\tHoldefi.marketAssets (Holdefi.sol#653) can be used in cross function reentrancies:\n\t- Holdefi.borrowInternal(address,address,address,uint256,uint16) (Holdefi.sol#1760-1804)\n\t- Holdefi.depositPromotionReserveInternal(address,uint256) (Holdefi.sol#1894-1907)\n\t- Holdefi.getCurrentBorrowIndex(address) (Holdefi.sol#1086-1102)\n\t- Holdefi.getCurrentSupplyIndex(address) (Holdefi.sol#1061-1078)\n\t- Holdefi.getPromotionDebt(address) (Holdefi.sol#1131-1147)\n\t- Holdefi.getPromotionReserve(address) (Holdefi.sol#1109-1124)\n\t- Holdefi.liquidateBorrowerCollateral(address,address,address) (Holdefi.sol#1398-1438)\n\t- Holdefi.marketAssets (Holdefi.sol#653)\n\t- Holdefi.repayBorrowInternal(address,address,address,uint256) (Holdefi.sol#1808-1860)\n\t- Holdefi.reserveSettlement(address) (Holdefi.sol#1536-1552)\n\t- Holdefi.supplyInternal(address,address,uint256,uint16) (Holdefi.sol#1624-1655)\n\t- Holdefi.updateBorrowIndex(address) (Holdefi.sol#1568-1575)\n\t- Holdefi.updatePromotionDebt(address) (Holdefi.sol#1591-1602)\n\t- Holdefi.updatePromotionReserve(address) (Holdefi.sol#1579-1586)\n\t- Holdefi.updateSupplyIndex(address) (Holdefi.sol#1556-1564)\n\t- Holdefi.withdrawPromotionReserve(address,uint256) (Holdefi.sol#1511-1524)\n\t- Holdefi.withdrawSupplyInternal(address,address,uint256) (Holdefi.sol#1658-1701)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "buyLiquidatedCollateralInternal",
            "impact": "Medium",
            "line": 1863,
            "line_end": 1891,
            "message": "Reentrancy in Holdefi.buyLiquidatedCollateralInternal(address,address,uint256) (Holdefi.sol#1863-1891):\n\tExternal calls:\n\t- transferToHoldefi(address(this),market,marketAmount) (Holdefi.sol#1882)\n\t\t- success = token.transferFrom(msg.sender,receiver,amount) (Holdefi.sol#1619)\n\tState variables written after the call(s):\n\t- collateralAssets[collateral].totalLiquidatedCollateral = totalLiquidatedCollateral.sub(collateralAmountWithDiscount) (Holdefi.sol#1885)\n\tHoldefi.collateralAssets (Holdefi.sol#656) can be used in cross function reentrancies:\n\t- Holdefi.buyLiquidatedCollateralInternal(address,address,uint256) (Holdefi.sol#1863-1891)\n\t- Holdefi.collateralAssets (Holdefi.sol#656)\n\t- Holdefi.collateralizeInternal(address,address,uint256) (Holdefi.sol#1704-1723)\n\t- Holdefi.depositLiquidationReserveInternal(address,uint256) (Holdefi.sol#1910-1924)\n\t- Holdefi.getLiquidationReserve(address) (Holdefi.sol#1012-1036)\n\t- Holdefi.liquidateBorrowerCollateral(address,address,address) (Holdefi.sol#1398-1438)\n\t- Holdefi.withdrawCollateralInternal(address,address,uint256) (Holdefi.sol#1726-1757)\n\t- Holdefi.withdrawLiquidationReserve(address,uint256) (Holdefi.sol#1477-1490)\n\t- marketDebt[collateral][market] = debt.sub(marketAmount) (Holdefi.sol#1886)\n\tHoldefi.marketDebt (Holdefi.sol#659) can be used in cross function reentrancies:\n\t- Holdefi.buyLiquidatedCollateralInternal(address,address,uint256) (Holdefi.sol#1863-1891)\n\t- Holdefi.getLiquidationReserve(address) (Holdefi.sol#1012-1036)\n\t- Holdefi.liquidateBorrowerCollateral(address,address,address) (Holdefi.sol#1398-1438)\n\t- Holdefi.marketDebt (Holdefi.sol#659)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "borrowInternal",
            "impact": "Medium",
            "line": 1760,
            "line_end": 1804,
            "message": "Reentrancy in Holdefi.borrowInternal(address,address,address,uint256,uint16) (Holdefi.sol#1760-1804):\n\tExternal calls:\n\t- beforeChangeSupplyRate(market) (Holdefi.sol#1787)\n\t\t- holdefiSettings.resetPromotionRate(market) (Holdefi.sol#1600)\n\tState variables written after the call(s):\n\t- marketAssets[market].totalBorrow = marketAssets[market].totalBorrow.add(amount) (Holdefi.sol#1789)\n\tHoldefi.marketAssets (Holdefi.sol#653) can be used in cross function reentrancies:\n\t- Holdefi.borrowInternal(address,address,address,uint256,uint16) (Holdefi.sol#1760-1804)\n\t- Holdefi.depositPromotionReserveInternal(address,uint256) (Holdefi.sol#1894-1907)\n\t- Holdefi.getCurrentBorrowIndex(address) (Holdefi.sol#1086-1102)\n\t- Holdefi.getCurrentSupplyIndex(address) (Holdefi.sol#1061-1078)\n\t- Holdefi.getPromotionDebt(address) (Holdefi.sol#1131-1147)\n\t- Holdefi.getPromotionReserve(address) (Holdefi.sol#1109-1124)\n\t- Holdefi.liquidateBorrowerCollateral(address,address,address) (Holdefi.sol#1398-1438)\n\t- Holdefi.marketAssets (Holdefi.sol#653)\n\t- Holdefi.repayBorrowInternal(address,address,address,uint256) (Holdefi.sol#1808-1860)\n\t- Holdefi.reserveSettlement(address) (Holdefi.sol#1536-1552)\n\t- Holdefi.supplyInternal(address,address,uint256,uint16) (Holdefi.sol#1624-1655)\n\t- Holdefi.updateBorrowIndex(address) (Holdefi.sol#1568-1575)\n\t- Holdefi.updatePromotionDebt(address) (Holdefi.sol#1591-1602)\n\t- Holdefi.updatePromotionReserve(address) (Holdefi.sol#1579-1586)\n\t- Holdefi.updateSupplyIndex(address) (Holdefi.sol#1556-1564)\n\t- Holdefi.withdrawPromotionReserve(address,uint256) (Holdefi.sol#1511-1524)\n\t- Holdefi.withdrawSupplyInternal(address,address,uint256) (Holdefi.sol#1658-1701)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "supplyInternal",
            "impact": "Medium",
            "line": 1624,
            "line_end": 1655,
            "message": "Reentrancy in Holdefi.supplyInternal(address,address,uint256,uint16) (Holdefi.sol#1624-1655):\n\tExternal calls:\n\t- transferToHoldefi(address(this),market,amount) (Holdefi.sol#1630)\n\t\t- success = token.transferFrom(msg.sender,receiver,amount) (Holdefi.sol#1619)\n\t- beforeChangeSupplyRate(market) (Holdefi.sol#1641)\n\t\t- holdefiSettings.resetPromotionRate(market) (Holdefi.sol#1600)\n\tState variables written after the call(s):\n\t- marketAssets[market].totalSupply = marketAssets[market].totalSupply.add(amount) (Holdefi.sol#1643)\n\tHoldefi.marketAssets (Holdefi.sol#653) can be used in cross function reentrancies:\n\t- Holdefi.borrowInternal(address,address,address,uint256,uint16) (Holdefi.sol#1760-1804)\n\t- Holdefi.depositPromotionReserveInternal(address,uint256) (Holdefi.sol#1894-1907)\n\t- Holdefi.getCurrentBorrowIndex(address) (Holdefi.sol#1086-1102)\n\t- Holdefi.getCurrentSupplyIndex(address) (Holdefi.sol#1061-1078)\n\t- Holdefi.getPromotionDebt(address) (Holdefi.sol#1131-1147)\n\t- Holdefi.getPromotionReserve(address) (Holdefi.sol#1109-1124)\n\t- Holdefi.liquidateBorrowerCollateral(address,address,address) (Holdefi.sol#1398-1438)\n\t- Holdefi.marketAssets (Holdefi.sol#653)\n\t- Holdefi.repayBorrowInternal(address,address,address,uint256) (Holdefi.sol#1808-1860)\n\t- Holdefi.reserveSettlement(address) (Holdefi.sol#1536-1552)\n\t- Holdefi.supplyInternal(address,address,uint256,uint16) (Holdefi.sol#1624-1655)\n\t- Holdefi.updateBorrowIndex(address) (Holdefi.sol#1568-1575)\n\t- Holdefi.updatePromotionDebt(address) (Holdefi.sol#1591-1602)\n\t- Holdefi.updatePromotionReserve(address) (Holdefi.sol#1579-1586)\n\t- Holdefi.updateSupplyIndex(address) (Holdefi.sol#1556-1564)\n\t- Holdefi.withdrawPromotionReserve(address,uint256) (Holdefi.sol#1511-1524)\n\t- Holdefi.withdrawSupplyInternal(address,address,uint256) (Holdefi.sol#1658-1701)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "liquidateBorrowerCollateral",
            "impact": "Medium",
            "line": 1398,
            "line_end": 1438,
            "message": "Reentrancy in Holdefi.liquidateBorrowerCollateral(address,address,address) (Holdefi.sol#1398-1438):\n\tExternal calls:\n\t- beforeChangeSupplyRate(market) (Holdefi.sol#1433)\n\t\t- holdefiSettings.resetPromotionRate(market) (Holdefi.sol#1600)\n\tState variables written after the call(s):\n\t- marketAssets[market].totalBorrow = marketAssets[market].totalBorrow.sub(borrowData.balance) (Holdefi.sol#1434)\n\tHoldefi.marketAssets (Holdefi.sol#653) can be used in cross function reentrancies:\n\t- Holdefi.borrowInternal(address,address,address,uint256,uint16) (Holdefi.sol#1760-1804)\n\t- Holdefi.depositPromotionReserveInternal(address,uint256) (Holdefi.sol#1894-1907)\n\t- Holdefi.getCurrentBorrowIndex(address) (Holdefi.sol#1086-1102)\n\t- Holdefi.getCurrentSupplyIndex(address) (Holdefi.sol#1061-1078)\n\t- Holdefi.getPromotionDebt(address) (Holdefi.sol#1131-1147)\n\t- Holdefi.getPromotionReserve(address) (Holdefi.sol#1109-1124)\n\t- Holdefi.liquidateBorrowerCollateral(address,address,address) (Holdefi.sol#1398-1438)\n\t- Holdefi.marketAssets (Holdefi.sol#653)\n\t- Holdefi.repayBorrowInternal(address,address,address,uint256) (Holdefi.sol#1808-1860)\n\t- Holdefi.reserveSettlement(address) (Holdefi.sol#1536-1552)\n\t- Holdefi.supplyInternal(address,address,uint256,uint16) (Holdefi.sol#1624-1655)\n\t- Holdefi.updateBorrowIndex(address) (Holdefi.sol#1568-1575)\n\t- Holdefi.updatePromotionDebt(address) (Holdefi.sol#1591-1602)\n\t- Holdefi.updatePromotionReserve(address) (Holdefi.sol#1579-1586)\n\t- Holdefi.updateSupplyIndex(address) (Holdefi.sol#1556-1564)\n\t- Holdefi.withdrawPromotionReserve(address,uint256) (Holdefi.sol#1511-1524)\n\t- Holdefi.withdrawSupplyInternal(address,address,uint256) (Holdefi.sol#1658-1701)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "getPromotionReserve",
            "impact": "Medium",
            "line": 1109,
            "line_end": 1124,
            "message": "Holdefi.getPromotionReserve(address) (Holdefi.sol#1109-1124) ignores return value by (borrowRate,supplyRateBase) = holdefiSettings.getInterests(market) (Holdefi.sol#1114)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "getCurrentSupplyIndex",
            "impact": "Medium",
            "line": 1061,
            "line_end": 1078,
            "message": "Holdefi.getCurrentSupplyIndex(address) (Holdefi.sol#1061-1078) ignores return value by (supplyRateBase,promotionRate) = holdefiSettings.getInterests(market) (Holdefi.sol#1070)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "getCurrentBorrowIndex",
            "impact": "Low",
            "line": 1086,
            "line_end": 1102,
            "message": "Holdefi.getCurrentBorrowIndex(address) (Holdefi.sol#1086-1102) has external calls inside a loop: borrowRate = holdefiSettings.marketAssets(market).borrowRate (Holdefi.sol#1095)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "getAccountTotalBorrowValue",
            "impact": "Low",
            "line": 986,
            "line_end": 1007,
            "message": "Holdefi.getAccountTotalBorrowValue(address,address) (Holdefi.sol#986-1007) has external calls inside a loop: assetValue = holdefiPrices.getAssetValueFromAmount(market,totalDebt) (Holdefi.sol#1004)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "getLiquidationReserve",
            "impact": "Low",
            "line": 1012,
            "line_end": 1036,
            "message": "Holdefi.getLiquidationReserve(address) (Holdefi.sol#1012-1036) has external calls inside a loop: assetValue = holdefiPrices.getAssetValueFromAmount(market,marketDebt[collateral][market]) (Holdefi.sol#1020)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "repayBorrowInternal",
            "impact": "Low",
            "line": 1808,
            "line_end": 1860,
            "message": "Reentrancy in Holdefi.repayBorrowInternal(address,address,address,uint256) (Holdefi.sol#1808-1860):\n\tExternal calls:\n\t- transferFromHoldefi(msg.sender,ethAddress,extra) (Holdefi.sol#1824)\n\t\t- (success,None) = receiver.call{value: amount}() (Holdefi.sol#1608)\n\t\t- success = token.transfer(receiver,amount) (Holdefi.sol#1612)\n\t- transferToHoldefi(address(this),market,transferAmount) (Holdefi.sol#1829)\n\t\t- success = token.transferFrom(msg.sender,receiver,amount) (Holdefi.sol#1619)\n\tExternal calls sending eth:\n\t- transferFromHoldefi(msg.sender,ethAddress,extra) (Holdefi.sol#1824)\n\t\t- (success,None) = receiver.call{value: amount}() (Holdefi.sol#1608)\n\tState variables written after the call(s):\n\t- collaterals[account][collateral].lastUpdateTime = block.timestamp (Holdefi.sol#1844)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "supplyInternal",
            "impact": "Low",
            "line": 1624,
            "line_end": 1655,
            "message": "Reentrancy in Holdefi.supplyInternal(address,address,uint256,uint16) (Holdefi.sol#1624-1655):\n\tExternal calls:\n\t- transferToHoldefi(address(this),market,amount) (Holdefi.sol#1630)\n\t\t- success = token.transferFrom(msg.sender,receiver,amount) (Holdefi.sol#1619)\n\tState variables written after the call(s):\n\t- supplies[account][market].balance = supplyData.balance (Holdefi.sol#1637)\n\t- supplies[account][market].accumulatedInterest = supplyData.interest (Holdefi.sol#1638)\n\t- supplies[account][market].lastInterestIndex = supplyData.currentIndex (Holdefi.sol#1639)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "collateralizeInternal",
            "impact": "Low",
            "line": 1704,
            "line_end": 1723,
            "message": "Reentrancy in Holdefi.collateralizeInternal(address,address,uint256) (Holdefi.sol#1704-1723):\n\tExternal calls:\n\t- transferToHoldefi(address(holdefiCollaterals),collateral,amount) (Holdefi.sol#1710)\n\t\t- success = token.transferFrom(msg.sender,receiver,amount) (Holdefi.sol#1619)\n\t- transferFromHoldefi(address(holdefiCollaterals),collateral,amount) (Holdefi.sol#1713)\n\t\t- (success,None) = receiver.call{value: amount}() (Holdefi.sol#1608)\n\t\t- success = token.transfer(receiver,amount) (Holdefi.sol#1612)\n\tExternal calls sending eth:\n\t- transferFromHoldefi(address(holdefiCollaterals),collateral,amount) (Holdefi.sol#1713)\n\t\t- (success,None) = receiver.call{value: amount}() (Holdefi.sol#1608)\n\tState variables written after the call(s):\n\t- collateralAssets[collateral].totalCollateral = collateralAssets[collateral].totalCollateral.add(amount) (Holdefi.sol#1720)\n\t- collaterals[account][collateral].balance = balance (Holdefi.sol#1717)\n\t- collaterals[account][collateral].lastUpdateTime = block.timestamp (Holdefi.sol#1718)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "liquidateBorrowerCollateral",
            "impact": "Low",
            "line": 1398,
            "line_end": 1438,
            "message": "Reentrancy in Holdefi.liquidateBorrowerCollateral(address,address,address) (Holdefi.sol#1398-1438):\n\tExternal calls:\n\t- beforeChangeSupplyRate(market) (Holdefi.sol#1433)\n\t\t- holdefiSettings.resetPromotionRate(market) (Holdefi.sol#1600)\n\tState variables written after the call(s):\n\t- marketDebt[collateral][market] = marketDebt[collateral][market].add(totalBorrowedBalance) (Holdefi.sol#1435)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "depositLiquidationReserveInternal",
            "impact": "Low",
            "line": 1910,
            "line_end": 1924,
            "message": "Reentrancy in Holdefi.depositLiquidationReserveInternal(address,uint256) (Holdefi.sol#1910-1924):\n\tExternal calls:\n\t- transferToHoldefi(address(holdefiCollaterals),collateral,amount) (Holdefi.sol#1915)\n\t\t- success = token.transferFrom(msg.sender,receiver,amount) (Holdefi.sol#1619)\n\t- transferFromHoldefi(address(holdefiCollaterals),collateral,amount) (Holdefi.sol#1918)\n\t\t- (success,None) = receiver.call{value: amount}() (Holdefi.sol#1608)\n\t\t- success = token.transfer(receiver,amount) (Holdefi.sol#1612)\n\tExternal calls sending eth:\n\t- transferFromHoldefi(address(holdefiCollaterals),collateral,amount) (Holdefi.sol#1918)\n\t\t- (success,None) = receiver.call{value: amount}() (Holdefi.sol#1608)\n\tState variables written after the call(s):\n\t- collateralAssets[ethAddress].totalLiquidatedCollateral = collateralAssets[ethAddress].totalLiquidatedCollateral.add(msg.value) (Holdefi.sol#1920-1921)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "depositPromotionReserveInternal",
            "impact": "Low",
            "line": 1894,
            "line_end": 1907,
            "message": "Reentrancy in Holdefi.depositPromotionReserveInternal(address,uint256) (Holdefi.sol#1894-1907):\n\tExternal calls:\n\t- transferToHoldefi(address(this),market,amount) (Holdefi.sol#1899)\n\t\t- success = token.transferFrom(msg.sender,receiver,amount) (Holdefi.sol#1619)\n\tState variables written after the call(s):\n\t- marketAssets[market].promotionReserveScaled = marketAssets[market].promotionReserveScaled.add(amountScaled) (Holdefi.sol#1903-1904)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "withdrawCollateralInternal",
            "impact": "Low",
            "line": 1726,
            "line_end": 1757,
            "message": "Reentrancy in Holdefi.withdrawCollateralInternal(address,address,uint256) (Holdefi.sol#1726-1757):\n\tExternal calls:\n\t- holdefiCollaterals.withdraw(collateral,msg.sender,transferAmount) (Holdefi.sol#1754)\n\tEvent emitted after the call(s):\n\t- WithdrawCollateral(msg.sender,account,collateral,transferAmount,balance) (Holdefi.sol#1756)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "repayBorrowInternal",
            "impact": "Low",
            "line": 1808,
            "line_end": 1860,
            "message": "Reentrancy in Holdefi.repayBorrowInternal(address,address,address,uint256) (Holdefi.sol#1808-1860):\n\tExternal calls:\n\t- transferFromHoldefi(msg.sender,ethAddress,extra) (Holdefi.sol#1824)\n\t\t- (success,None) = receiver.call{value: amount}() (Holdefi.sol#1608)\n\t\t- success = token.transfer(receiver,amount) (Holdefi.sol#1612)\n\t- transferToHoldefi(address(this),market,transferAmount) (Holdefi.sol#1829)\n\t\t- success = token.transferFrom(msg.sender,receiver,amount) (Holdefi.sol#1619)\n\t- beforeChangeSupplyRate(market) (Holdefi.sol#1846)\n\t\t- holdefiSettings.resetPromotionRate(market) (Holdefi.sol#1600)\n\tExternal calls sending eth:\n\t- transferFromHoldefi(msg.sender,ethAddress,extra) (Holdefi.sol#1824)\n\t\t- (success,None) = receiver.call{value: amount}() (Holdefi.sol#1608)\n\tEvent emitted after the call(s):\n\t- PromotionDebtUpdated(market,debtScaled) (Holdefi.sol#1597)\n\t\t- beforeChangeSupplyRate(market) (Holdefi.sol#1846)\n\t- PromotionReserveUpdated(market,reserveScaled) (Holdefi.sol#1585)\n\t\t- beforeChangeSupplyRate(market) (Holdefi.sol#1846)\n\t- RepayBorrow(msg.sender,account,market,collateral,transferAmount,borrowData.balance,borrowData.interest,borrowData.currentIndex) (Holdefi.sol#1850-1859)\n\t- UpdateSupplyIndex(market,currentSupplyIndex,supplyRate) (Holdefi.sol#1563)\n\t\t- beforeChangeSupplyRate(market) (Holdefi.sol#1846)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "depositPromotionReserveInternal",
            "impact": "Low",
            "line": 1894,
            "line_end": 1907,
            "message": "Reentrancy in Holdefi.depositPromotionReserveInternal(address,uint256) (Holdefi.sol#1894-1907):\n\tExternal calls:\n\t- transferToHoldefi(address(this),market,amount) (Holdefi.sol#1899)\n\t\t- success = token.transferFrom(msg.sender,receiver,amount) (Holdefi.sol#1619)\n\tEvent emitted after the call(s):\n\t- PromotionReserveDeposited(market,amount) (Holdefi.sol#1906)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "withdrawSupplyInternal",
            "impact": "Low",
            "line": 1658,
            "line_end": 1701,
            "message": "Reentrancy in Holdefi.withdrawSupplyInternal(address,address,uint256) (Holdefi.sol#1658-1701):\n\tExternal calls:\n\t- beforeChangeSupplyRate(market) (Holdefi.sol#1686)\n\t\t- holdefiSettings.resetPromotionRate(market) (Holdefi.sol#1600)\n\t- transferFromHoldefi(msg.sender,market,transferAmount) (Holdefi.sol#1690)\n\t\t- (success,None) = receiver.call{value: amount}() (Holdefi.sol#1608)\n\t\t- success = token.transfer(receiver,amount) (Holdefi.sol#1612)\n\tExternal calls sending eth:\n\t- transferFromHoldefi(msg.sender,market,transferAmount) (Holdefi.sol#1690)\n\t\t- (success,None) = receiver.call{value: amount}() (Holdefi.sol#1608)\n\tEvent emitted after the call(s):\n\t- WithdrawSupply(msg.sender,account,market,transferAmount,supplyData.balance,supplyData.interest,supplyData.currentIndex) (Holdefi.sol#1692-1700)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "withdrawPromotionReserve",
            "impact": "Low",
            "line": 1511,
            "line_end": 1524,
            "message": "Reentrancy in Holdefi.withdrawPromotionReserve(address,uint256) (Holdefi.sol#1511-1524):\n\tExternal calls:\n\t- transferFromHoldefi(msg.sender,market,amount) (Holdefi.sol#1521)\n\t\t- (success,None) = receiver.call{value: amount}() (Holdefi.sol#1608)\n\t\t- success = token.transfer(receiver,amount) (Holdefi.sol#1612)\n\tExternal calls sending eth:\n\t- transferFromHoldefi(msg.sender,market,amount) (Holdefi.sol#1521)\n\t\t- (success,None) = receiver.call{value: amount}() (Holdefi.sol#1608)\n\tEvent emitted after the call(s):\n\t- PromotionReserveWithdrawn(market,amount) (Holdefi.sol#1523)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "liquidateBorrowerCollateral",
            "impact": "Low",
            "line": 1398,
            "line_end": 1438,
            "message": "Reentrancy in Holdefi.liquidateBorrowerCollateral(address,address,address) (Holdefi.sol#1398-1438):\n\tExternal calls:\n\t- beforeChangeSupplyRate(market) (Holdefi.sol#1433)\n\t\t- holdefiSettings.resetPromotionRate(market) (Holdefi.sol#1600)\n\tEvent emitted after the call(s):\n\t- CollateralLiquidated(borrower,market,collateral,totalBorrowedBalance,liquidatedCollateral) (Holdefi.sol#1437)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "withdrawLiquidationReserve",
            "impact": "Low",
            "line": 1477,
            "line_end": 1490,
            "message": "Reentrancy in Holdefi.withdrawLiquidationReserve(address,uint256) (Holdefi.sol#1477-1490):\n\tExternal calls:\n\t- holdefiCollaterals.withdraw(collateral,msg.sender,transferAmount) (Holdefi.sol#1487)\n\tEvent emitted after the call(s):\n\t- LiquidationReserveWithdrawn(collateral,amount) (Holdefi.sol#1489)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "borrowInternal",
            "impact": "Low",
            "line": 1760,
            "line_end": 1804,
            "message": "Reentrancy in Holdefi.borrowInternal(address,address,address,uint256,uint16) (Holdefi.sol#1760-1804):\n\tExternal calls:\n\t- beforeChangeSupplyRate(market) (Holdefi.sol#1787)\n\t\t- holdefiSettings.resetPromotionRate(market) (Holdefi.sol#1600)\n\t- transferFromHoldefi(msg.sender,market,amount) (Holdefi.sol#1791)\n\t\t- (success,None) = receiver.call{value: amount}() (Holdefi.sol#1608)\n\t\t- success = token.transfer(receiver,amount) (Holdefi.sol#1612)\n\tExternal calls sending eth:\n\t- transferFromHoldefi(msg.sender,market,amount) (Holdefi.sol#1791)\n\t\t- (success,None) = receiver.call{value: amount}() (Holdefi.sol#1608)\n\tEvent emitted after the call(s):\n\t- Borrow(msg.sender,account,market,collateral,amount,borrowData.balance,borrowData.interest,borrowData.currentIndex,referralCode) (Holdefi.sol#1793-1803)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "depositLiquidationReserveInternal",
            "impact": "Low",
            "line": 1910,
            "line_end": 1924,
            "message": "Reentrancy in Holdefi.depositLiquidationReserveInternal(address,uint256) (Holdefi.sol#1910-1924):\n\tExternal calls:\n\t- transferToHoldefi(address(holdefiCollaterals),collateral,amount) (Holdefi.sol#1915)\n\t\t- success = token.transferFrom(msg.sender,receiver,amount) (Holdefi.sol#1619)\n\t- transferFromHoldefi(address(holdefiCollaterals),collateral,amount) (Holdefi.sol#1918)\n\t\t- (success,None) = receiver.call{value: amount}() (Holdefi.sol#1608)\n\t\t- success = token.transfer(receiver,amount) (Holdefi.sol#1612)\n\tExternal calls sending eth:\n\t- transferFromHoldefi(address(holdefiCollaterals),collateral,amount) (Holdefi.sol#1918)\n\t\t- (success,None) = receiver.call{value: amount}() (Holdefi.sol#1608)\n\tEvent emitted after the call(s):\n\t- LiquidationReserveDeposited(ethAddress,msg.value) (Holdefi.sol#1923)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "buyLiquidatedCollateralInternal",
            "impact": "Low",
            "line": 1863,
            "line_end": 1891,
            "message": "Reentrancy in Holdefi.buyLiquidatedCollateralInternal(address,address,uint256) (Holdefi.sol#1863-1891):\n\tExternal calls:\n\t- transferToHoldefi(address(this),market,marketAmount) (Holdefi.sol#1882)\n\t\t- success = token.transferFrom(msg.sender,receiver,amount) (Holdefi.sol#1619)\n\t- holdefiCollaterals.withdraw(collateral,msg.sender,collateralAmountWithDiscount) (Holdefi.sol#1888)\n\tEvent emitted after the call(s):\n\t- BuyLiquidatedCollateral(market,collateral,marketAmount,collateralAmountWithDiscount) (Holdefi.sol#1890)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "collateralizeInternal",
            "impact": "Low",
            "line": 1704,
            "line_end": 1723,
            "message": "Reentrancy in Holdefi.collateralizeInternal(address,address,uint256) (Holdefi.sol#1704-1723):\n\tExternal calls:\n\t- transferToHoldefi(address(holdefiCollaterals),collateral,amount) (Holdefi.sol#1710)\n\t\t- success = token.transferFrom(msg.sender,receiver,amount) (Holdefi.sol#1619)\n\t- transferFromHoldefi(address(holdefiCollaterals),collateral,amount) (Holdefi.sol#1713)\n\t\t- (success,None) = receiver.call{value: amount}() (Holdefi.sol#1608)\n\t\t- success = token.transfer(receiver,amount) (Holdefi.sol#1612)\n\tExternal calls sending eth:\n\t- transferFromHoldefi(address(holdefiCollaterals),collateral,amount) (Holdefi.sol#1713)\n\t\t- (success,None) = receiver.call{value: amount}() (Holdefi.sol#1608)\n\tEvent emitted after the call(s):\n\t- Collateralize(msg.sender,account,collateral,amount,balance) (Holdefi.sol#1722)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Holdefi",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "supplyInternal",
            "impact": "Low",
            "line": 1624,
            "line_end": 1655,
            "message": "Reentrancy in Holdefi.supplyInternal(address,address,uint256,uint16) (Holdefi.sol#1624-1655):\n\tExternal calls:\n\t- transferToHoldefi(address(this),market,amount) (Holdefi.sol#1630)\n\t\t- success = token.transferFrom(msg.sender,receiver,amount) (Holdefi.sol#1619)\n\t- beforeChangeSupplyRate(market) (Holdefi.sol#1641)\n\t\t- holdefiSettings.resetPromotionRate(market) (Holdefi.sol#1600)\n\tEvent emitted after the call(s):\n\t- PromotionDebtUpdated(market,debtScaled) (Holdefi.sol#1597)\n\t\t- beforeChangeSupplyRate(market) (Holdefi.sol#1641)\n\t- PromotionReserveUpdated(market,reserveScaled) (Holdefi.sol#1585)\n\t\t- beforeChangeSupplyRate(market) (Holdefi.sol#1641)\n\t- Supply(msg.sender,account,market,amount,supplyData.balance,supplyData.interest,supplyData.currentIndex,referralCode) (Holdefi.sol#1645-1654)\n\t- UpdateSupplyIndex(market,currentSupplyIndex,supplyRate) (Holdefi.sol#1563)\n\t\t- beforeChangeSupplyRate(market) (Holdefi.sol#1641)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "HoldefiPausableOwnable",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Holdefi/Holdefi-5a1e6e0d582120142e8a531f6806eba6665ef2f4/contracts/Holdefi.sol",
            "function": "isPaused",
            "impact": "Low",
            "line": 343,
            "line_end": 350,
            "message": "HoldefiPausableOwnable.isPaused(string) (Holdefi.sol#343-350) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp > paused[operation].pauseEndTime (Holdefi.sol#344)\n",
            "name": "timestamp",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}