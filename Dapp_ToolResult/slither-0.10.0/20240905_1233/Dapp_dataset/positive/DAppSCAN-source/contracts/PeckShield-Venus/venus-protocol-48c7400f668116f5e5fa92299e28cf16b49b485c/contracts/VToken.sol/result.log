'solc --version' running
'solc /sb/VToken.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running

EIP20NonStandardInterface (../../sb/VToken.sol#1228-1289) has incorrect ERC20 function interface:EIP20NonStandardInterface.transfer(address,uint256) (../../sb/VToken.sol#1254)
EIP20NonStandardInterface (../../sb/VToken.sol#1228-1289) has incorrect ERC20 function interface:EIP20NonStandardInterface.transferFrom(address,address,uint256) (../../sb/VToken.sol#1268)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface

VToken.accrueInterest() (../../sb/VToken.sol#1664-1742) uses a dangerous strict equality:
	- accrualBlockNumberPrior == currentBlockNumber (../../sb/VToken.sol#1670)
VToken.accrueInterest() (../../sb/VToken.sol#1664-1742) uses a dangerous strict equality:
	- require(bool,string)(mathErr == MathError.NO_ERROR,could not calculate block delta) (../../sb/VToken.sol#1686)
VToken.balanceOfUnderlying(address) (../../sb/VToken.sol#1470-1475) uses a dangerous strict equality:
	- require(bool,string)(mErr == MathError.NO_ERROR,balance could not be calculated) (../../sb/VToken.sol#1473)
VToken.borrowBalanceStored(address) (../../sb/VToken.sol#1551-1555) uses a dangerous strict equality:
	- require(bool,string)(err == MathError.NO_ERROR,borrowBalanceStored: borrowBalanceStoredInternal failed) (../../sb/VToken.sol#1553)
CarefulMath.divUInt(uint256,uint256) (../../sb/VToken.sol#745-751) uses a dangerous strict equality:
	- b == 0 (../../sb/VToken.sol#746)
VToken.exchangeRateStored() (../../sb/VToken.sol#1608-1612) uses a dangerous strict equality:
	- require(bool,string)(err == MathError.NO_ERROR,exchangeRateStored: exchangeRateStoredInternal failed) (../../sb/VToken.sol#1610)
VToken.exchangeRateStoredInternal() (../../sb/VToken.sol#1619-1649) uses a dangerous strict equality:
	- _totalSupply == 0 (../../sb/VToken.sol#1621)
VToken.initialize(ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sb/VToken.sol#1306-1337) uses a dangerous strict equality:
	- require(bool,string)(accrualBlockNumber == 0 && borrowIndex == 0,market may only be initialized once) (../../sb/VToken.sol#1313)
VToken.initialize(ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sb/VToken.sol#1306-1337) uses a dangerous strict equality:
	- require(bool,string)(err == uint256(Error.NO_ERROR),setting comptroller failed) (../../sb/VToken.sol#1321)
VToken.initialize(ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sb/VToken.sol#1306-1337) uses a dangerous strict equality:
	- require(bool,string)(err == uint256(Error.NO_ERROR),setting interest rate model failed) (../../sb/VToken.sol#1329)
VToken.liquidateBorrowFresh(address,address,uint256,VTokenInterface) (../../sb/VToken.sol#2258-2326) uses a dangerous strict equality:
	- require(bool,string)(amountSeizeError == uint256(Error.NO_ERROR),LIQUIDATE_COMPTROLLER_CALCULATE_AMOUNT_SEIZE_FAILED) (../../sb/VToken.sol#2303)
VToken.liquidateBorrowFresh(address,address,uint256,VTokenInterface) (../../sb/VToken.sol#2258-2326) uses a dangerous strict equality:
	- require(bool,string)(seizeError == uint256(Error.NO_ERROR),token seizure failed) (../../sb/VToken.sol#2317)
VToken.mintFresh(address,uint256) (../../sb/VToken.sol#1777-1841) uses a dangerous strict equality:
	- require(bool,string)(vars.mathErr == MathError.NO_ERROR,MINT_EXCHANGE_CALCULATION_FAILED) (../../sb/VToken.sol#1816)
VToken.mintFresh(address,uint256) (../../sb/VToken.sol#1777-1841) uses a dangerous strict equality:
	- require(bool,string)(vars.mathErr == MathError.NO_ERROR,MINT_NEW_TOTAL_SUPPLY_CALCULATION_FAILED) (../../sb/VToken.sol#1824)
VToken.mintFresh(address,uint256) (../../sb/VToken.sol#1777-1841) uses a dangerous strict equality:
	- require(bool,string)(vars.mathErr == MathError.NO_ERROR,MINT_NEW_ACCOUNT_BALANCE_CALCULATION_FAILED) (../../sb/VToken.sol#1827)
Exponential.mulExp(ExponentialNoError.Exp,ExponentialNoError.Exp) (../../sb/VToken.sol#1113-1133) uses a dangerous strict equality:
	- assert(bool)(err2 == MathError.NO_ERROR) (../../sb/VToken.sol#1130)
CarefulMath.mulUInt(uint256,uint256) (../../sb/VToken.sol#728-740) uses a dangerous strict equality:
	- a == 0 (../../sb/VToken.sol#729)
VToken.repayBorrowFresh(address,address,uint256) (../../sb/VToken.sol#2156-2222) uses a dangerous strict equality:
	- require(bool,string)(vars.mathErr == MathError.NO_ERROR,REPAY_BORROW_NEW_ACCOUNT_BORROW_BALANCE_CALCULATION_FAILED) (../../sb/VToken.sol#2205)
VToken.repayBorrowFresh(address,address,uint256) (../../sb/VToken.sol#2156-2222) uses a dangerous strict equality:
	- require(bool,string)(vars.mathErr == MathError.NO_ERROR,REPAY_BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED) (../../sb/VToken.sol#2208)
VToken.transfer(address,uint256) (../../sb/VToken.sol#1415-1417) uses a dangerous strict equality:
	- transferTokens(msg.sender,msg.sender,dst,amount) == uint256(Error.NO_ERROR) (../../sb/VToken.sol#1416)
VToken.transferFrom(address,address,uint256) (../../sb/VToken.sol#1426-1428) uses a dangerous strict equality:
	- transferTokens(msg.sender,src,dst,amount) == uint256(Error.NO_ERROR) (../../sb/VToken.sol#1427)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

Reentrancy in VToken.liquidateBorrowInternal(address,uint256,VTokenInterface) (../../sb/VToken.sol#2232-2247):
	External calls:
	- error = vTokenCollateral.accrueInterest() (../../sb/VToken.sol#2239)
	- liquidateBorrowFresh(msg.sender,borrower,repayAmount,vTokenCollateral) (../../sb/VToken.sol#2246)
		- allowed = comptroller.liquidateBorrowAllowed(address(this),address(vTokenCollateral),liquidator,borrower,repayAmount) (../../sb/VToken.sol#2260)
		- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sb/VToken.sol#2353)
		- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sb/VToken.sol#2158)
		- comptroller.seizeVerify(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sb/VToken.sol#2394)
		- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.actualRepayAmount,vars.borrowerIndex) (../../sb/VToken.sol#2219)
		- seizeError = vTokenCollateral.seize(liquidator,borrower,seizeTokens) (../../sb/VToken.sol#2313)
		- comptroller.liquidateBorrowVerify(address(this),address(vTokenCollateral),liquidator,borrower,actualRepayAmount,seizeTokens) (../../sb/VToken.sol#2323)
	State variables written after the call(s):
	- liquidateBorrowFresh(msg.sender,borrower,repayAmount,vTokenCollateral) (../../sb/VToken.sol#2246)
		- totalBorrows = vars.totalBorrowsNew (../../sb/VToken.sol#2213)
	VTokenStorage.totalBorrows (../../sb/VToken.sol#198) can be used in cross function reentrancies:
	- VToken.accrueInterest() (../../sb/VToken.sol#1664-1742)
	- VToken.borrowRatePerBlock() (../../sb/VToken.sol#1515-1517)
	- VToken.exchangeRateStoredInternal() (../../sb/VToken.sol#1619-1649)
	- VToken.supplyRatePerBlock() (../../sb/VToken.sol#1523-1525)
	- VTokenStorage.totalBorrows (../../sb/VToken.sol#198)
Reentrancy in VToken.redeemFresh(address,uint256,uint256) (../../sb/VToken.sol#1893-2013):
	External calls:
	- allowed = comptroller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (../../sb/VToken.sol#1933)
	State variables written after the call(s):
	- totalSupply = vars.totalSupplyNew (../../sb/VToken.sol#2002)
	VTokenStorage.totalSupply (../../sb/VToken.sol#208) can be used in cross function reentrancies:
	- VToken.exchangeRateStoredInternal() (../../sb/VToken.sol#1619-1649)
	- VTokenStorage.totalSupply (../../sb/VToken.sol#208)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

VToken.repayBorrowFresh(address,address,uint256).vars (../../sb/VToken.sol#2168) is a local variable never initialized
VToken._addReservesFresh(uint256).actualAddAmount (../../sb/VToken.sol#2547) is a local variable never initialized
VToken.mintFresh(address,uint256).vars (../../sb/VToken.sol#1789) is a local variable never initialized
VToken.redeemFresh(address,uint256,uint256).vars (../../sb/VToken.sol#1896) is a local variable never initialized
VToken.borrowFresh(address,uint256).vars (../../sb/VToken.sol#2059) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables

Exponential.divScalarByExpTruncate(uint256,ExponentialNoError.Exp).fraction (../../sb/VToken.sol#1102) shadows:
	- ExponentialNoError.fraction(uint256,uint256) (../../sb/VToken.sol#980-982) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

VToken.initialize(ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sb/VToken.sol#1306-1337) should emit an event for: 
	- initialExchangeRateMantissa = initialExchangeRateMantissa_ (../../sb/VToken.sol#1316) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

VToken._setPendingAdmin(address).newPendingAdmin (../../sb/VToken.sol#2408) lacks a zero-check on :
		- pendingAdmin = newPendingAdmin (../../sb/VToken.sol#2418)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Reentrancy in VToken.borrowFresh(address,uint256) (../../sb/VToken.sol#2042-2105):
	External calls:
	- allowed = comptroller.borrowAllowed(address(this),borrower,borrowAmount) (../../sb/VToken.sol#2044)
	State variables written after the call(s):
	- accountBorrows[borrower].principal = vars.accountBorrowsNew (../../sb/VToken.sol#2094)
	- accountBorrows[borrower].interestIndex = borrowIndex (../../sb/VToken.sol#2095)
	- totalBorrows = vars.totalBorrowsNew (../../sb/VToken.sol#2096)
Reentrancy in VToken.mintFresh(address,uint256) (../../sb/VToken.sol#1777-1841):
	External calls:
	- allowed = comptroller.mintAllowed(address(this),minter,mintAmount) (../../sb/VToken.sol#1779)
	State variables written after the call(s):
	- accountTokens[minter] = vars.accountTokensNew (../../sb/VToken.sol#1831)
	- totalSupply = vars.totalSupplyNew (../../sb/VToken.sol#1830)
Reentrancy in VToken.redeemFresh(address,uint256,uint256) (../../sb/VToken.sol#1893-2013):
	External calls:
	- allowed = comptroller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (../../sb/VToken.sol#1933)
	State variables written after the call(s):
	- accountTokens[redeemer] = vars.accountTokensNew (../../sb/VToken.sol#2003)
Reentrancy in VToken.repayBorrowFresh(address,address,uint256) (../../sb/VToken.sol#2156-2222):
	External calls:
	- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sb/VToken.sol#2158)
	State variables written after the call(s):
	- accountBorrows[borrower].principal = vars.accountBorrowsNew (../../sb/VToken.sol#2211)
	- accountBorrows[borrower].interestIndex = borrowIndex (../../sb/VToken.sol#2212)
	- totalBorrows = vars.totalBorrowsNew (../../sb/VToken.sol#2213)
Reentrancy in VToken.seizeInternal(address,address,address,uint256) (../../sb/VToken.sol#2351-2397):
	External calls:
	- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sb/VToken.sol#2353)
	State variables written after the call(s):
	- accountTokens[borrower] = borrowerTokensNew (../../sb/VToken.sol#2387)
	- accountTokens[liquidator] = liquidatorTokensNew (../../sb/VToken.sol#2388)
Reentrancy in VToken.transferTokens(address,address,address,uint256) (../../sb/VToken.sol#1348-1407):
	External calls:
	- allowed = comptroller.transferAllowed(address(this),src,dst,tokens) (../../sb/VToken.sol#1350)
	State variables written after the call(s):
	- accountTokens[src] = srvTokensNew (../../sb/VToken.sol#1393)
	- accountTokens[dst] = dstTokensNew (../../sb/VToken.sol#1394)
	- transferAllowances[src][spender] = allowanceNew (../../sb/VToken.sol#1398)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in VToken.borrowFresh(address,uint256) (../../sb/VToken.sol#2042-2105):
	External calls:
	- allowed = comptroller.borrowAllowed(address(this),borrower,borrowAmount) (../../sb/VToken.sol#2044)
	Event emitted after the call(s):
	- Borrow(borrower,borrowAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (../../sb/VToken.sol#2099)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/VToken.sol#638)
		- failOpaque(Error.MATH_ERROR,FailureInfo.BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (../../sb/VToken.sol#2068)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/VToken.sol#638)
		- failOpaque(Error.MATH_ERROR,FailureInfo.BORROW_NEW_ACCOUNT_BORROW_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (../../sb/VToken.sol#2073)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/VToken.sol#638)
		- failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.BORROW_COMPTROLLER_REJECTION,allowed) (../../sb/VToken.sol#2046)
	- Failure(uint256(err),uint256(info),0) (../../sb/VToken.sol#629)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.BORROW_FRESHNESS_CHECK) (../../sb/VToken.sol#2051)
	- Failure(uint256(err),uint256(info),0) (../../sb/VToken.sol#629)
		- fail(Error.TOKEN_INSUFFICIENT_CASH,FailureInfo.BORROW_CASH_NOT_AVAILABLE) (../../sb/VToken.sol#2056)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/VToken.sol#638)
		- failOpaque(Error.MATH_ERROR,FailureInfo.BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (../../sb/VToken.sol#2078)
Reentrancy in VToken.liquidateBorrowFresh(address,address,uint256,VTokenInterface) (../../sb/VToken.sol#2258-2326):
	External calls:
	- allowed = comptroller.liquidateBorrowAllowed(address(this),address(vTokenCollateral),liquidator,borrower,repayAmount) (../../sb/VToken.sol#2260)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (../../sb/VToken.sol#629)
		- (fail(Error.INVALID_CLOSE_AMOUNT_REQUESTED,FailureInfo.LIQUIDATE_CLOSE_AMOUNT_IS_UINT_MAX),0) (../../sb/VToken.sol#2287)
	- Failure(uint256(err),uint256(info),0) (../../sb/VToken.sol#629)
		- (fail(Error.INVALID_ACCOUNT_PAIR,FailureInfo.LIQUIDATE_LIQUIDATOR_IS_BORROWER),0) (../../sb/VToken.sol#2277)
	- Failure(uint256(err),uint256(info),0) (../../sb/VToken.sol#629)
		- (fail(Error.INVALID_CLOSE_AMOUNT_REQUESTED,FailureInfo.LIQUIDATE_CLOSE_AMOUNT_IS_ZERO),0) (../../sb/VToken.sol#2282)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/VToken.sol#638)
		- (failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.LIQUIDATE_COMPTROLLER_REJECTION,allowed),0) (../../sb/VToken.sol#2262)
	- Failure(uint256(err),uint256(info),0) (../../sb/VToken.sol#629)
		- (fail(Error.MARKET_NOT_FRESH,FailureInfo.LIQUIDATE_FRESHNESS_CHECK),0) (../../sb/VToken.sol#2267)
	- Failure(uint256(err),uint256(info),0) (../../sb/VToken.sol#629)
		- (fail(Error.MARKET_NOT_FRESH,FailureInfo.LIQUIDATE_COLLATERAL_FRESHNESS_CHECK),0) (../../sb/VToken.sol#2272)
Reentrancy in VToken.liquidateBorrowFresh(address,address,uint256,VTokenInterface) (../../sb/VToken.sol#2258-2326):
	External calls:
	- allowed = comptroller.liquidateBorrowAllowed(address(this),address(vTokenCollateral),liquidator,borrower,repayAmount) (../../sb/VToken.sol#2260)
	- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (../../sb/VToken.sol#2292)
		- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sb/VToken.sol#2158)
		- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.actualRepayAmount,vars.borrowerIndex) (../../sb/VToken.sol#2219)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (../../sb/VToken.sol#629)
		- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (../../sb/VToken.sol#2292)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/VToken.sol#638)
		- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (../../sb/VToken.sol#2292)
	- Failure(uint256(err),uint256(info),0) (../../sb/VToken.sol#629)
		- (fail(TokenErrorReporter.Error(repayBorrowError),FailureInfo.LIQUIDATE_REPAY_BORROW_FRESH_FAILED),0) (../../sb/VToken.sol#2294)
	- RepayBorrow(payer,borrower,vars.actualRepayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (../../sb/VToken.sol#2216)
		- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (../../sb/VToken.sol#2292)
Reentrancy in VToken.liquidateBorrowFresh(address,address,uint256,VTokenInterface) (../../sb/VToken.sol#2258-2326):
	External calls:
	- allowed = comptroller.liquidateBorrowAllowed(address(this),address(vTokenCollateral),liquidator,borrower,repayAmount) (../../sb/VToken.sol#2260)
	- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (../../sb/VToken.sol#2292)
		- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sb/VToken.sol#2158)
		- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.actualRepayAmount,vars.borrowerIndex) (../../sb/VToken.sol#2219)
	- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (../../sb/VToken.sol#2311)
		- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sb/VToken.sol#2353)
		- comptroller.seizeVerify(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sb/VToken.sol#2394)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (../../sb/VToken.sol#629)
		- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (../../sb/VToken.sol#2311)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/VToken.sol#638)
		- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (../../sb/VToken.sol#2311)
	- Transfer(borrower,liquidator,seizeTokens) (../../sb/VToken.sol#2391)
		- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (../../sb/VToken.sol#2311)
Reentrancy in VToken.liquidateBorrowFresh(address,address,uint256,VTokenInterface) (../../sb/VToken.sol#2258-2326):
	External calls:
	- allowed = comptroller.liquidateBorrowAllowed(address(this),address(vTokenCollateral),liquidator,borrower,repayAmount) (../../sb/VToken.sol#2260)
	- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (../../sb/VToken.sol#2292)
		- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sb/VToken.sol#2158)
		- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.actualRepayAmount,vars.borrowerIndex) (../../sb/VToken.sol#2219)
	- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (../../sb/VToken.sol#2311)
		- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sb/VToken.sol#2353)
		- comptroller.seizeVerify(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sb/VToken.sol#2394)
	- seizeError = vTokenCollateral.seize(liquidator,borrower,seizeTokens) (../../sb/VToken.sol#2313)
	Event emitted after the call(s):
	- LiquidateBorrow(liquidator,borrower,actualRepayAmount,address(vTokenCollateral),seizeTokens) (../../sb/VToken.sol#2320)
Reentrancy in VToken.mintFresh(address,uint256) (../../sb/VToken.sol#1777-1841):
	External calls:
	- allowed = comptroller.mintAllowed(address(this),minter,mintAmount) (../../sb/VToken.sol#1779)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (../../sb/VToken.sol#629)
		- (fail(Error.MARKET_NOT_FRESH,FailureInfo.MINT_FRESHNESS_CHECK),0) (../../sb/VToken.sol#1786)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/VToken.sol#638)
		- (failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.MINT_COMPTROLLER_REJECTION,allowed),0) (../../sb/VToken.sol#1781)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/VToken.sol#638)
		- (failOpaque(Error.MATH_ERROR,FailureInfo.MINT_EXCHANGE_RATE_READ_FAILED,uint256(vars.mathErr)),0) (../../sb/VToken.sol#1793)
	- Mint(minter,vars.actualMintAmount,vars.mintTokens) (../../sb/VToken.sol#1834)
	- Transfer(address(this),minter,vars.mintTokens) (../../sb/VToken.sol#1835)
Reentrancy in VToken.redeemFresh(address,uint256,uint256) (../../sb/VToken.sol#1893-2013):
	External calls:
	- allowed = comptroller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (../../sb/VToken.sol#1933)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/VToken.sol#638)
		- failOpaque(Error.MATH_ERROR,FailureInfo.REDEEM_NEW_ACCOUNT_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (../../sb/VToken.sol#1955)
	- Failure(uint256(err),uint256(info),0) (../../sb/VToken.sol#629)
		- fail(Error.TOKEN_INSUFFICIENT_CASH,FailureInfo.REDEEM_TRANSFER_OUT_NOT_POSSIBLE) (../../sb/VToken.sol#1960)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/VToken.sol#638)
		- failOpaque(Error.MATH_ERROR,FailureInfo.REDEEM_FEE_CALCULATION_FAILED,uint256(vars.mathErr)) (../../sb/VToken.sol#1979)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/VToken.sol#638)
		- failOpaque(Error.MATH_ERROR,FailureInfo.REDEEM_FEE_CALCULATION_FAILED,uint256(vars.mathErr)) (../../sb/VToken.sol#1989)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/VToken.sol#638)
		- failOpaque(Error.MATH_ERROR,FailureInfo.REDEEM_FEE_CALCULATION_FAILED,uint256(vars.mathErr)) (../../sb/VToken.sol#1984)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/VToken.sol#638)
		- failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.REDEEM_COMPTROLLER_REJECTION,allowed) (../../sb/VToken.sol#1935)
	- Failure(uint256(err),uint256(info),0) (../../sb/VToken.sol#629)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.REDEEM_FRESHNESS_CHECK) (../../sb/VToken.sol#1940)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/VToken.sol#638)
		- failOpaque(Error.MATH_ERROR,FailureInfo.REDEEM_NEW_TOTAL_SUPPLY_CALCULATION_FAILED,uint256(vars.mathErr)) (../../sb/VToken.sol#1950)
	- Redeem(redeemer,remainedAmount,vars.redeemTokens) (../../sb/VToken.sol#2007)
	- RedeemFee(redeemer,feeAmount,vars.redeemTokens) (../../sb/VToken.sol#1994)
	- Transfer(redeemer,address(this),vars.redeemTokens) (../../sb/VToken.sol#2006)
Reentrancy in VToken.repayBorrowFresh(address,address,uint256) (../../sb/VToken.sol#2156-2222):
	External calls:
	- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sb/VToken.sol#2158)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/VToken.sol#638)
		- (failOpaque(Error.MATH_ERROR,FailureInfo.REPAY_BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)),0) (../../sb/VToken.sol#2176)
	- Failure(uint256(err),uint256(info),0) (../../sb/VToken.sol#629)
		- (fail(Error.MARKET_NOT_FRESH,FailureInfo.REPAY_BORROW_FRESHNESS_CHECK),0) (../../sb/VToken.sol#2165)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/VToken.sol#638)
		- (failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.REPAY_BORROW_COMPTROLLER_REJECTION,allowed),0) (../../sb/VToken.sol#2160)
	- RepayBorrow(payer,borrower,vars.actualRepayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (../../sb/VToken.sol#2216)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

ComptrollerErrorReporter.fail(ComptrollerErrorReporter.Error,ComptrollerErrorReporter.FailureInfo) (../../sb/VToken.sol#485-489) is never used and should be removed
ComptrollerErrorReporter.failOpaque(ComptrollerErrorReporter.Error,ComptrollerErrorReporter.FailureInfo,uint256) (../../sb/VToken.sol#494-498) is never used and should be removed
Exponential.addExp(ExponentialNoError.Exp,ExponentialNoError.Exp) (../../sb/VToken.sol#1015-1019) is never used and should be removed
Exponential.divExp(ExponentialNoError.Exp,ExponentialNoError.Exp) (../../sb/VToken.sol#1158-1160) is never used and should be removed
Exponential.divScalar(ExponentialNoError.Exp,uint256) (../../sb/VToken.sol#1069-1076) is never used and should be removed
Exponential.divScalarByExp(uint256,ExponentialNoError.Exp) (../../sb/VToken.sol#1081-1096) is never used and should be removed
Exponential.divScalarByExpTruncate(uint256,ExponentialNoError.Exp) (../../sb/VToken.sol#1101-1108) is never used and should be removed
Exponential.mulExp(ExponentialNoError.Exp,ExponentialNoError.Exp) (../../sb/VToken.sol#1113-1133) is never used and should be removed
Exponential.mulExp(uint256,uint256) (../../sb/VToken.sol#1138-1140) is never used and should be removed
Exponential.mulExp3(ExponentialNoError.Exp,ExponentialNoError.Exp,ExponentialNoError.Exp) (../../sb/VToken.sol#1145-1151) is never used and should be removed
Exponential.subExp(ExponentialNoError.Exp,ExponentialNoError.Exp) (../../sb/VToken.sol#1024-1028) is never used and should be removed
ExponentialNoError.add_(ExponentialNoError.Double,ExponentialNoError.Double) (../../sb/VToken.sol#879-881) is never used and should be removed
ExponentialNoError.add_(ExponentialNoError.Exp,ExponentialNoError.Exp) (../../sb/VToken.sol#875-877) is never used and should be removed
ExponentialNoError.add_(uint256,uint256) (../../sb/VToken.sol#883-885) is never used and should be removed
ExponentialNoError.add_(uint256,uint256,string) (../../sb/VToken.sol#887-891) is never used and should be removed
ExponentialNoError.div_(ExponentialNoError.Double,ExponentialNoError.Double) (../../sb/VToken.sol#959-961) is never used and should be removed
ExponentialNoError.div_(ExponentialNoError.Double,uint256) (../../sb/VToken.sol#963-965) is never used and should be removed
ExponentialNoError.div_(ExponentialNoError.Exp,ExponentialNoError.Exp) (../../sb/VToken.sol#947-949) is never used and should be removed
ExponentialNoError.div_(ExponentialNoError.Exp,uint256) (../../sb/VToken.sol#951-953) is never used and should be removed
ExponentialNoError.div_(uint256,ExponentialNoError.Double) (../../sb/VToken.sol#967-969) is never used and should be removed
ExponentialNoError.div_(uint256,ExponentialNoError.Exp) (../../sb/VToken.sol#955-957) is never used and should be removed
ExponentialNoError.div_(uint256,uint256) (../../sb/VToken.sol#971-973) is never used and should be removed
ExponentialNoError.div_(uint256,uint256,string) (../../sb/VToken.sol#975-978) is never used and should be removed
ExponentialNoError.fraction(uint256,uint256) (../../sb/VToken.sol#980-982) is never used and should be removed
ExponentialNoError.greaterThanExp(ExponentialNoError.Exp,ExponentialNoError.Exp) (../../sb/VToken.sol#854-856) is never used and should be removed
ExponentialNoError.isZeroExp(ExponentialNoError.Exp) (../../sb/VToken.sol#861-863) is never used and should be removed
ExponentialNoError.lessThanExp(ExponentialNoError.Exp,ExponentialNoError.Exp) (../../sb/VToken.sol#840-842) is never used and should be removed
ExponentialNoError.lessThanOrEqualExp(ExponentialNoError.Exp,ExponentialNoError.Exp) (../../sb/VToken.sol#847-849) is never used and should be removed
ExponentialNoError.mul_(ExponentialNoError.Double,ExponentialNoError.Double) (../../sb/VToken.sol#922-924) is never used and should be removed
ExponentialNoError.mul_(ExponentialNoError.Double,uint256) (../../sb/VToken.sol#926-928) is never used and should be removed
ExponentialNoError.mul_(ExponentialNoError.Exp,ExponentialNoError.Exp) (../../sb/VToken.sol#910-912) is never used and should be removed
ExponentialNoError.mul_(ExponentialNoError.Exp,uint256) (../../sb/VToken.sol#914-916) is never used and should be removed
ExponentialNoError.mul_(uint256,ExponentialNoError.Double) (../../sb/VToken.sol#930-932) is never used and should be removed
ExponentialNoError.mul_(uint256,ExponentialNoError.Exp) (../../sb/VToken.sol#918-920) is never used and should be removed
ExponentialNoError.mul_(uint256,uint256) (../../sb/VToken.sol#934-936) is never used and should be removed
ExponentialNoError.mul_(uint256,uint256,string) (../../sb/VToken.sol#938-945) is never used and should be removed
ExponentialNoError.mul_ScalarTruncate(ExponentialNoError.Exp,uint256) (../../sb/VToken.sol#824-827) is never used and should be removed
ExponentialNoError.mul_ScalarTruncateAddUInt(ExponentialNoError.Exp,uint256,uint256) (../../sb/VToken.sol#832-835) is never used and should be removed
ExponentialNoError.safe224(uint256,string) (../../sb/VToken.sol#865-868) is never used and should be removed
ExponentialNoError.safe32(uint256,string) (../../sb/VToken.sol#870-873) is never used and should be removed
ExponentialNoError.sub_(ExponentialNoError.Double,ExponentialNoError.Double) (../../sb/VToken.sol#897-899) is never used and should be removed
ExponentialNoError.sub_(ExponentialNoError.Exp,ExponentialNoError.Exp) (../../sb/VToken.sol#893-895) is never used and should be removed
ExponentialNoError.sub_(uint256,uint256) (../../sb/VToken.sol#901-903) is never used and should be removed
ExponentialNoError.sub_(uint256,uint256,string) (../../sb/VToken.sol#905-908) is never used and should be removed
VAIControllerErrorReporter.fail(VAIControllerErrorReporter.Error,VAIControllerErrorReporter.FailureInfo) (../../sb/VToken.sol#691-695) is never used and should be removed
VAIControllerErrorReporter.failOpaque(VAIControllerErrorReporter.Error,VAIControllerErrorReporter.FailureInfo,uint256) (../../sb/VToken.sol#700-704) is never used and should be removed
VToken._addReservesFresh(uint256) (../../sb/VToken.sol#2544-2581) is never used and should be removed
VToken._addReservesInternal(uint256) (../../sb/VToken.sol#2526-2536) is never used and should be removed
VToken.borrowFresh(address,uint256) (../../sb/VToken.sol#2042-2105) is never used and should be removed
VToken.borrowInternal(uint256) (../../sb/VToken.sol#2020-2028) is never used and should be removed
VToken.liquidateBorrowFresh(address,address,uint256,VTokenInterface) (../../sb/VToken.sol#2258-2326) is never used and should be removed
VToken.liquidateBorrowInternal(address,uint256,VTokenInterface) (../../sb/VToken.sol#2232-2247) is never used and should be removed
VToken.mintFresh(address,uint256) (../../sb/VToken.sol#1777-1841) is never used and should be removed
VToken.mintInternal(uint256) (../../sb/VToken.sol#1750-1758) is never used and should be removed
VToken.redeemFresh(address,uint256,uint256) (../../sb/VToken.sol#1893-2013) is never used and should be removed
VToken.redeemInternal(uint256) (../../sb/VToken.sol#1849-1857) is never used and should be removed
VToken.redeemUnderlyingInternal(uint256) (../../sb/VToken.sol#1865-1873) is never used and should be removed
VToken.repayBorrowBehalfInternal(address,uint256) (../../sb/VToken.sol#2128-2136) is never used and should be removed
VToken.repayBorrowFresh(address,address,uint256) (../../sb/VToken.sol#2156-2222) is never used and should be removed
VToken.repayBorrowInternal(uint256) (../../sb/VToken.sol#2112-2120) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Pragma version^0.5.16 (../../sb/VToken.sol#1) allows old versions
solc-0.5.17 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Constant VTokenStorage.borrowRateMaxMantissa (../../sb/VToken.sol#148) is not in UPPER_CASE_WITH_UNDERSCORES
Constant VTokenStorage.reserveFactorMaxMantissa (../../sb/VToken.sol#153) is not in UPPER_CASE_WITH_UNDERSCORES
Function VTokenInterface._setPendingAdmin(address) (../../sb/VToken.sol#357) is not in mixedCase
Function VTokenInterface._acceptAdmin() (../../sb/VToken.sol#358) is not in mixedCase
Function VTokenInterface._setComptroller(ComptrollerInterface) (../../sb/VToken.sol#359) is not in mixedCase
Function VTokenInterface._setReserveFactor(uint256) (../../sb/VToken.sol#360) is not in mixedCase
Function VTokenInterface._reduceReserves(uint256) (../../sb/VToken.sol#361) is not in mixedCase
Function VTokenInterface._setInterestRateModel(InterestRateModel) (../../sb/VToken.sol#362) is not in mixedCase
Function VBep20Interface._addReserves(uint256) (../../sb/VToken.sol#387) is not in mixedCase
Function VDelegatorInterface._setImplementation(address,bool,bytes) (../../sb/VToken.sol#409) is not in mixedCase
Function VDelegateInterface._becomeImplementation(bytes) (../../sb/VToken.sol#418) is not in mixedCase
Function VDelegateInterface._resignImplementation() (../../sb/VToken.sol#423) is not in mixedCase
Function ExponentialNoError.mul_ScalarTruncate(ExponentialNoError.Exp,uint256) (../../sb/VToken.sol#824-827) is not in mixedCase
Function ExponentialNoError.mul_ScalarTruncateAddUInt(ExponentialNoError.Exp,uint256,uint256) (../../sb/VToken.sol#832-835) is not in mixedCase
Constant ExponentialNoError.expScale (../../sb/VToken.sol#799) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ExponentialNoError.doubleScale (../../sb/VToken.sol#800) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ExponentialNoError.halfExpScale (../../sb/VToken.sol#801) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ExponentialNoError.mantissaOne (../../sb/VToken.sol#802) is not in UPPER_CASE_WITH_UNDERSCORES
Function VToken._setPendingAdmin(address) (../../sb/VToken.sol#2408-2424) is not in mixedCase
Function VToken._acceptAdmin() (../../sb/VToken.sol#2431-2451) is not in mixedCase
Function VToken._setComptroller(ComptrollerInterface) (../../sb/VToken.sol#2458-2475) is not in mixedCase
Function VToken._setReserveFactor(uint256) (../../sb/VToken.sol#2482-2490) is not in mixedCase
Function VToken._reduceReserves(uint256) (../../sb/VToken.sol#2589-2597) is not in mixedCase
Function VToken._setInterestRateModel(InterestRateModel) (../../sb/VToken.sol#2654-2662) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Variable VTokenInterface.seize(address,address,uint256).seizeTokens (../../sb/VToken.sol#352) is too similar to VToken.seizeInternal(address,address,address,uint256).seizerToken (../../sb/VToken.sol#2351)
Variable VToken.seize(address,address,uint256).seizeTokens (../../sb/VToken.sol#2337) is too similar to VToken.seizeInternal(address,address,address,uint256).seizerToken (../../sb/VToken.sol#2351)
Variable VToken.seizeInternal(address,address,address,uint256).seizeTokens (../../sb/VToken.sol#2351) is too similar to VToken.seizeInternal(address,address,address,uint256).seizerToken (../../sb/VToken.sol#2351)
Variable VToken.liquidateBorrowFresh(address,address,uint256,VTokenInterface).seizeTokens (../../sb/VToken.sol#2302) is too similar to VToken.seizeInternal(address,address,address,uint256).seizerToken (../../sb/VToken.sol#2351)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar

VToken (../../sb/VToken.sol#1296-2734) does not implement functions:
	- VToken.doTransferIn(address,uint256) (../../sb/VToken.sol#2713)
	- VToken.doTransferOut(address,uint256) (../../sb/VToken.sol#2720)
	- VToken.getCashPrior() (../../sb/VToken.sol#2707)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unimplemented-functions

_setImplementation(address,bool,bytes) should be declared external:
	- VDelegatorInterface._setImplementation(address,bool,bytes) (../../sb/VToken.sol#409)
Moreover, the following function parameters should change its data location:
becomeImplementationData location should be calldata
_becomeImplementation(bytes) should be declared external:
	- VDelegateInterface._becomeImplementation(bytes) (../../sb/VToken.sol#418)
Moreover, the following function parameters should change its data location:
data location should be calldata
initialize(ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) should be declared external:
	- VToken.initialize(ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sb/VToken.sol#1306-1337)
Moreover, the following function parameters should change its data location:
name_ location should be calldata
symbol_ location should be calldata
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
/sb/VToken.sol analyzed (22 contracts with 93 detectors), 141 result(s) found
