'solc --version' running
'solc /sb/SpiritRouter.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running
Compilation warnings/errors on /sb/SpiritRouter.sol:
Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
   --> /sb/SpiritRouter.sol:350:1:
    |
350 | contract SpiritRouter is IPancakeRouter02 {
    | ^ (Relevant source part starts here and spans across multiple lines).



SpiritRouter.swapETHForExactTokens(uint256,address[],address,uint256) (../../sb/SpiritRouter.sol#644-661) sends eth to arbitrary user
	Dangerous calls:
	- IWETH(WETH).deposit{value: amounts[0]}() (../../sb/SpiritRouter.sol#656)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

SpiritRouter.removeLiquidity(address,address,uint256,uint256,uint256,address,uint256) (../../sb/SpiritRouter.sol#441-457) ignores return value by IPancakePair(pair).transferFrom(msg.sender,pair,liquidity) (../../sb/SpiritRouter.sol#451)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer

PancakeLibrary.getReserves(address,address,address) (../../sb/SpiritRouter.sol#272-277) ignores return value by (reserve0,reserve1) = IPancakePair(pairFor(factory,tokenA,tokenB)).getReserves() (../../sb/SpiritRouter.sol#275)
SpiritRouter._addLiquidity(address,address,uint256,uint256,uint256,uint256) (../../sb/SpiritRouter.sol#371-398) ignores return value by IPancakeFactory(factory).createPair(tokenA,tokenB) (../../sb/SpiritRouter.sol#381)
SpiritRouter.removeLiquidity(address,address,uint256,uint256,uint256,address,uint256) (../../sb/SpiritRouter.sol#441-457) ignores return value by (token0) = PancakeLibrary.sortTokens(tokenA,tokenB) (../../sb/SpiritRouter.sol#453)
SpiritRouter._swap(uint256[],address[],address) (../../sb/SpiritRouter.sol#550-561) ignores return value by (token0) = PancakeLibrary.sortTokens(input,output) (../../sb/SpiritRouter.sol#553)
SpiritRouter._swapSupportingFeeOnTransferTokens(address[],address) (../../sb/SpiritRouter.sol#665-682) ignores return value by (token0) = PancakeLibrary.sortTokens(input,output) (../../sb/SpiritRouter.sol#668)
SpiritRouter._swapSupportingFeeOnTransferTokens(address[],address) (../../sb/SpiritRouter.sol#665-682) ignores return value by (reserve0,reserve1) = pair.getReserves() (../../sb/SpiritRouter.sol#673)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

SpiritRouter.constructor(address,address)._factory (../../sb/SpiritRouter.sol#361) lacks a zero-check on :
		- factory = _factory (../../sb/SpiritRouter.sol#362)
SpiritRouter.constructor(address,address)._WETH (../../sb/SpiritRouter.sol#361) lacks a zero-check on :
		- WETH = _WETH (../../sb/SpiritRouter.sol#363)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

TransferHelper.safeApprove(address,address,uint256) (../../sb/SpiritRouter.sol#25-29) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Pragma version=0.6.6 (../../sb/SpiritRouter.sol#1) allows old versions
solc-0.6.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in TransferHelper.safeApprove(address,address,uint256) (../../sb/SpiritRouter.sol#25-29):
	- (success,data) = token.call(abi.encodeWithSelector(0x095ea7b3,to,value)) (../../sb/SpiritRouter.sol#27)
Low level call in TransferHelper.safeTransfer(address,address,uint256) (../../sb/SpiritRouter.sol#31-35):
	- (success,data) = token.call(abi.encodeWithSelector(0xa9059cbb,to,value)) (../../sb/SpiritRouter.sol#33)
Low level call in TransferHelper.safeTransferFrom(address,address,address,uint256) (../../sb/SpiritRouter.sol#37-41):
	- (success,data) = token.call(abi.encodeWithSelector(0x23b872dd,from,to,value)) (../../sb/SpiritRouter.sol#39)
Low level call in TransferHelper.safeTransferETH(address,uint256) (../../sb/SpiritRouter.sol#43-46):
	- (success) = to.call{value: value}(new bytes(0)) (../../sb/SpiritRouter.sol#44)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function IPancakeRouter01.WETH() (../../sb/SpiritRouter.sol#51) is not in mixedCase
Function IPancakePair.DOMAIN_SEPARATOR() (../../sb/SpiritRouter.sol#199) is not in mixedCase
Function IPancakePair.PERMIT_TYPEHASH() (../../sb/SpiritRouter.sol#200) is not in mixedCase
Function IPancakePair.MINIMUM_LIQUIDITY() (../../sb/SpiritRouter.sol#217) is not in mixedCase
Variable SpiritRouter.WETH (../../sb/SpiritRouter.sol#354) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Variable IPancakeRouter01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (../../sb/SpiritRouter.sol#56) is too similar to IPancakeRouter01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (../../sb/SpiritRouter.sol#57)
Variable SpiritRouter.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (../../sb/SpiritRouter.sol#402) is too similar to IPancakeRouter01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (../../sb/SpiritRouter.sol#57)
Variable SpiritRouter._addLiquidity(address,address,uint256,uint256,uint256,uint256).amountADesired (../../sb/SpiritRouter.sol#374) is too similar to SpiritRouter.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (../../sb/SpiritRouter.sol#403)
Variable SpiritRouter._addLiquidity(address,address,uint256,uint256,uint256,uint256).amountADesired (../../sb/SpiritRouter.sol#374) is too similar to SpiritRouter._addLiquidity(address,address,uint256,uint256,uint256,uint256).amountBDesired (../../sb/SpiritRouter.sol#375)
Variable SpiritRouter.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (../../sb/SpiritRouter.sol#402) is too similar to SpiritRouter.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (../../sb/SpiritRouter.sol#403)
Variable SpiritRouter._addLiquidity(address,address,uint256,uint256,uint256,uint256).amountADesired (../../sb/SpiritRouter.sol#374) is too similar to IPancakeRouter01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (../../sb/SpiritRouter.sol#57)
Variable IPancakeRouter01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (../../sb/SpiritRouter.sol#56) is too similar to SpiritRouter._addLiquidity(address,address,uint256,uint256,uint256,uint256).amountBDesired (../../sb/SpiritRouter.sol#375)
Variable SpiritRouter.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (../../sb/SpiritRouter.sol#402) is too similar to SpiritRouter._addLiquidity(address,address,uint256,uint256,uint256,uint256).amountBDesired (../../sb/SpiritRouter.sol#375)
Variable IPancakeRouter01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (../../sb/SpiritRouter.sol#56) is too similar to SpiritRouter.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (../../sb/SpiritRouter.sol#403)
Variable SpiritRouter._addLiquidity(address,address,uint256,uint256,uint256,uint256).amountAOptimal (../../sb/SpiritRouter.sol#392) is too similar to SpiritRouter._addLiquidity(address,address,uint256,uint256,uint256,uint256).amountBOptimal (../../sb/SpiritRouter.sol#387)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar

getAmountsOut(uint256,address[]) should be declared external:
	- SpiritRouter.getAmountsOut(uint256,address[]) (../../sb/SpiritRouter.sol#774-782)
Moreover, the following function parameters should change its data location:
path location should be calldata
getAmountsIn(uint256,address[]) should be declared external:
	- SpiritRouter.getAmountsIn(uint256,address[]) (../../sb/SpiritRouter.sol#784-792)
Moreover, the following function parameters should change its data location:
path location should be calldata
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
/sb/SpiritRouter.sol analyzed (10 contracts with 93 detectors), 34 result(s) found
