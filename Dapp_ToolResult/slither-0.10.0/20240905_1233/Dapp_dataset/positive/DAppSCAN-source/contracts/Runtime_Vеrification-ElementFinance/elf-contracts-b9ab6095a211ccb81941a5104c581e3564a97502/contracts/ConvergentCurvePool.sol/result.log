'solc --version' running
'solc /sb/ConvergentCurvePool.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running
Compilation warnings/errors on /sb/ConvergentCurvePool.sol:
Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
    --> /sb/ConvergentCurvePool.sol:1229:111:
     |
1229 |     function _verifyCallResult(bool success, bytes memory returndata, uint256 errorCode) private pure returns(bytes memory) {
     |                                                                                                               ^^^^^^^^^^^^

Warning: Function state mutability can be restricted to pure
    --> /sb/ConvergentCurvePool.sol:2655:5:
     |
2655 |     function getRate() external override view returns (uint256) {
     |     ^ (Relevant source part starts here and spans across multiple lines).



LogExpMath.n_exp(int256) (../../sb/ConvergentCurvePool.sol#319-392) performs a multiplication on the result of a division:
	- t = ((t * x) / 2) / PRECISION (../../sb/ConvergentCurvePool.sol#369)
	- t = ((t * x) / 3) / PRECISION (../../sb/ConvergentCurvePool.sol#371)
LogExpMath.n_exp(int256) (../../sb/ConvergentCurvePool.sol#319-392) performs a multiplication on the result of a division:
	- t = ((t * x) / 3) / PRECISION (../../sb/ConvergentCurvePool.sol#371)
	- t = ((t * x) / 4) / PRECISION (../../sb/ConvergentCurvePool.sol#373)
LogExpMath.n_exp(int256) (../../sb/ConvergentCurvePool.sol#319-392) performs a multiplication on the result of a division:
	- t = ((t * x) / 4) / PRECISION (../../sb/ConvergentCurvePool.sol#373)
	- t = ((t * x) / 5) / PRECISION (../../sb/ConvergentCurvePool.sol#375)
LogExpMath.n_exp(int256) (../../sb/ConvergentCurvePool.sol#319-392) performs a multiplication on the result of a division:
	- t = ((t * x) / 5) / PRECISION (../../sb/ConvergentCurvePool.sol#375)
	- t = ((t * x) / 6) / PRECISION (../../sb/ConvergentCurvePool.sol#377)
LogExpMath.n_exp(int256) (../../sb/ConvergentCurvePool.sol#319-392) performs a multiplication on the result of a division:
	- t = ((t * x) / 6) / PRECISION (../../sb/ConvergentCurvePool.sol#377)
	- t = ((t * x) / 7) / PRECISION (../../sb/ConvergentCurvePool.sol#379)
LogExpMath.n_exp(int256) (../../sb/ConvergentCurvePool.sol#319-392) performs a multiplication on the result of a division:
	- t = ((t * x) / 7) / PRECISION (../../sb/ConvergentCurvePool.sol#379)
	- t = ((t * x) / 8) / PRECISION (../../sb/ConvergentCurvePool.sol#381)
LogExpMath.n_exp(int256) (../../sb/ConvergentCurvePool.sol#319-392) performs a multiplication on the result of a division:
	- t = ((t * x) / 8) / PRECISION (../../sb/ConvergentCurvePool.sol#381)
	- t = ((t * x) / 9) / PRECISION (../../sb/ConvergentCurvePool.sol#383)
LogExpMath.n_exp(int256) (../../sb/ConvergentCurvePool.sol#319-392) performs a multiplication on the result of a division:
	- t = ((t * x) / 9) / PRECISION (../../sb/ConvergentCurvePool.sol#383)
	- t = ((t * x) / 10) / PRECISION (../../sb/ConvergentCurvePool.sol#385)
LogExpMath.n_exp(int256) (../../sb/ConvergentCurvePool.sol#319-392) performs a multiplication on the result of a division:
	- t = ((t * x) / 10) / PRECISION (../../sb/ConvergentCurvePool.sol#385)
	- t = ((t * x) / 11) / PRECISION (../../sb/ConvergentCurvePool.sol#387)
LogExpMath.n_exp(int256) (../../sb/ConvergentCurvePool.sol#319-392) performs a multiplication on the result of a division:
	- t = ((t * x) / 11) / PRECISION (../../sb/ConvergentCurvePool.sol#387)
	- t = ((t * x) / 12) / PRECISION (../../sb/ConvergentCurvePool.sol#389)
LogExpMath.n_exp(int256) (../../sb/ConvergentCurvePool.sol#319-392) performs a multiplication on the result of a division:
	- (((ans * s) / PRECISION) * last) / 100 (../../sb/ConvergentCurvePool.sol#391)
LogExpMath.n_exp(int256) (../../sb/ConvergentCurvePool.sol#319-392) performs a multiplication on the result of a division:
	- ans = (ans * a8) / PRECISION (../../sb/ConvergentCurvePool.sol#359)
	- ans = (ans * a9) / PRECISION (../../sb/ConvergentCurvePool.sol#363)
LogExpMath.n_exp(int256) (../../sb/ConvergentCurvePool.sol#319-392) performs a multiplication on the result of a division:
	- ans = (ans * a7) / PRECISION (../../sb/ConvergentCurvePool.sol#355)
	- ans = (ans * a8) / PRECISION (../../sb/ConvergentCurvePool.sol#359)
LogExpMath.n_exp(int256) (../../sb/ConvergentCurvePool.sol#319-392) performs a multiplication on the result of a division:
	- ans = (ans * a6) / PRECISION (../../sb/ConvergentCurvePool.sol#351)
	- ans = (ans * a7) / PRECISION (../../sb/ConvergentCurvePool.sol#355)
LogExpMath.n_exp(int256) (../../sb/ConvergentCurvePool.sol#319-392) performs a multiplication on the result of a division:
	- ans = (ans * a5) / PRECISION (../../sb/ConvergentCurvePool.sol#347)
	- ans = (ans * a6) / PRECISION (../../sb/ConvergentCurvePool.sol#351)
LogExpMath.n_exp(int256) (../../sb/ConvergentCurvePool.sol#319-392) performs a multiplication on the result of a division:
	- ans = (ans * a4) / PRECISION (../../sb/ConvergentCurvePool.sol#343)
	- ans = (ans * a5) / PRECISION (../../sb/ConvergentCurvePool.sol#347)
LogExpMath.n_exp(int256) (../../sb/ConvergentCurvePool.sol#319-392) performs a multiplication on the result of a division:
	- ans = (ans * a3) / PRECISION (../../sb/ConvergentCurvePool.sol#339)
	- ans = (ans * a4) / PRECISION (../../sb/ConvergentCurvePool.sol#343)
LogExpMath.n_exp(int256) (../../sb/ConvergentCurvePool.sol#319-392) performs a multiplication on the result of a division:
	- ans = (ans * a2) / PRECISION (../../sb/ConvergentCurvePool.sol#335)
	- ans = (ans * a3) / PRECISION (../../sb/ConvergentCurvePool.sol#339)
LogExpMath.n_log(int256) (../../sb/ConvergentCurvePool.sol#399-467) performs a multiplication on the result of a division:
	- z = (PRECISION * (a - PRECISION)) / (a + PRECISION) (../../sb/ConvergentCurvePool.sol#453)
	- z_squared = (z * z) / PRECISION (../../sb/ConvergentCurvePool.sol#455)
LogExpMath.n_log(int256) (../../sb/ConvergentCurvePool.sol#399-467) performs a multiplication on the result of a division:
	- z = (PRECISION * (a - PRECISION)) / (a + PRECISION) (../../sb/ConvergentCurvePool.sol#453)
	- z_squared = (z * z) / PRECISION (../../sb/ConvergentCurvePool.sol#455)
	- t = (z * z_squared) / PRECISION (../../sb/ConvergentCurvePool.sol#456)
LogExpMath.n_log(int256) (../../sb/ConvergentCurvePool.sol#399-467) performs a multiplication on the result of a division:
	- z_squared = (z * z) / PRECISION (../../sb/ConvergentCurvePool.sol#455)
	- t = (z * z_squared) / PRECISION (../../sb/ConvergentCurvePool.sol#456)
	- t = (t * z_squared) / PRECISION (../../sb/ConvergentCurvePool.sol#458)
LogExpMath.n_log(int256) (../../sb/ConvergentCurvePool.sol#399-467) performs a multiplication on the result of a division:
	- z_squared = (z * z) / PRECISION (../../sb/ConvergentCurvePool.sol#455)
	- t = (t * z_squared) / PRECISION (../../sb/ConvergentCurvePool.sol#458)
	- t = (t * z_squared) / PRECISION (../../sb/ConvergentCurvePool.sol#460)
LogExpMath.n_log(int256) (../../sb/ConvergentCurvePool.sol#399-467) performs a multiplication on the result of a division:
	- z_squared = (z * z) / PRECISION (../../sb/ConvergentCurvePool.sol#455)
	- t = (t * z_squared) / PRECISION (../../sb/ConvergentCurvePool.sol#460)
	- t = (t * z_squared) / PRECISION (../../sb/ConvergentCurvePool.sol#462)
LogExpMath.n_log(int256) (../../sb/ConvergentCurvePool.sol#399-467) performs a multiplication on the result of a division:
	- z_squared = (z * z) / PRECISION (../../sb/ConvergentCurvePool.sol#455)
	- t = (t * z_squared) / PRECISION (../../sb/ConvergentCurvePool.sol#462)
	- t = (t * z_squared) / PRECISION (../../sb/ConvergentCurvePool.sol#464)
LogExpMath.n_log(int256) (../../sb/ConvergentCurvePool.sol#399-467) performs a multiplication on the result of a division:
	- z = (PRECISION * (a - PRECISION)) / (a + PRECISION) (../../sb/ConvergentCurvePool.sol#453)
	- s = z (../../sb/ConvergentCurvePool.sol#454)
	- (ans + 2 * s) / 100 (../../sb/ConvergentCurvePool.sol#466)
LogExpMath.n_log(int256) (../../sb/ConvergentCurvePool.sol#399-467) performs a multiplication on the result of a division:
	- a = (a * PRECISION) / a10 (../../sb/ConvergentCurvePool.sol#447)
	- a = (a * PRECISION) / a11 (../../sb/ConvergentCurvePool.sol#451)
LogExpMath.n_log(int256) (../../sb/ConvergentCurvePool.sol#399-467) performs a multiplication on the result of a division:
	- a = (a * PRECISION) / a9 (../../sb/ConvergentCurvePool.sol#443)
	- a = (a * PRECISION) / a10 (../../sb/ConvergentCurvePool.sol#447)
LogExpMath.n_log(int256) (../../sb/ConvergentCurvePool.sol#399-467) performs a multiplication on the result of a division:
	- a = (a * PRECISION) / a8 (../../sb/ConvergentCurvePool.sol#439)
	- a = (a * PRECISION) / a9 (../../sb/ConvergentCurvePool.sol#443)
LogExpMath.n_log(int256) (../../sb/ConvergentCurvePool.sol#399-467) performs a multiplication on the result of a division:
	- a = (a * PRECISION) / a7 (../../sb/ConvergentCurvePool.sol#435)
	- a = (a * PRECISION) / a8 (../../sb/ConvergentCurvePool.sol#439)
LogExpMath.n_log(int256) (../../sb/ConvergentCurvePool.sol#399-467) performs a multiplication on the result of a division:
	- a = (a * PRECISION) / a6 (../../sb/ConvergentCurvePool.sol#431)
	- a = (a * PRECISION) / a7 (../../sb/ConvergentCurvePool.sol#435)
LogExpMath.n_log(int256) (../../sb/ConvergentCurvePool.sol#399-467) performs a multiplication on the result of a division:
	- a = (a * PRECISION) / a5 (../../sb/ConvergentCurvePool.sol#427)
	- a = (a * PRECISION) / a6 (../../sb/ConvergentCurvePool.sol#431)
LogExpMath.n_log(int256) (../../sb/ConvergentCurvePool.sol#399-467) performs a multiplication on the result of a division:
	- a = (a * PRECISION) / a4 (../../sb/ConvergentCurvePool.sol#423)
	- a = (a * PRECISION) / a5 (../../sb/ConvergentCurvePool.sol#427)
LogExpMath.n_log(int256) (../../sb/ConvergentCurvePool.sol#399-467) performs a multiplication on the result of a division:
	- a = (a * PRECISION) / a3 (../../sb/ConvergentCurvePool.sol#419)
	- a = (a * PRECISION) / a4 (../../sb/ConvergentCurvePool.sol#423)
LogExpMath.n_log(int256) (../../sb/ConvergentCurvePool.sol#399-467) performs a multiplication on the result of a division:
	- a = (a * PRECISION) / a2 (../../sb/ConvergentCurvePool.sol#415)
	- a = (a * PRECISION) / a3 (../../sb/ConvergentCurvePool.sol#419)
LogExpMath.pow(uint256,uint256) (../../sb/ConvergentCurvePool.sol#476-502) performs a multiplication on the result of a division:
	- logx_times_y = ((logbase / DECIMALS) * y_int256 + ((logbase % DECIMALS) * y_int256) / DECIMALS) (../../sb/ConvergentCurvePool.sol#492)
LogExpMath.n_log_36(int256) (../../sb/ConvergentCurvePool.sol#532-552) performs a multiplication on the result of a division:
	- z = (DOUBLE_DECIMALS * (a - DOUBLE_DECIMALS)) / (a + DOUBLE_DECIMALS) (../../sb/ConvergentCurvePool.sol#534)
	- z_squared = (z * z) / DOUBLE_DECIMALS (../../sb/ConvergentCurvePool.sol#536)
LogExpMath.n_log_36(int256) (../../sb/ConvergentCurvePool.sol#532-552) performs a multiplication on the result of a division:
	- z = (DOUBLE_DECIMALS * (a - DOUBLE_DECIMALS)) / (a + DOUBLE_DECIMALS) (../../sb/ConvergentCurvePool.sol#534)
	- z_squared = (z * z) / DOUBLE_DECIMALS (../../sb/ConvergentCurvePool.sol#536)
	- t = (z * z_squared) / DOUBLE_DECIMALS (../../sb/ConvergentCurvePool.sol#537)
LogExpMath.n_log_36(int256) (../../sb/ConvergentCurvePool.sol#532-552) performs a multiplication on the result of a division:
	- z_squared = (z * z) / DOUBLE_DECIMALS (../../sb/ConvergentCurvePool.sol#536)
	- t = (z * z_squared) / DOUBLE_DECIMALS (../../sb/ConvergentCurvePool.sol#537)
	- t = (t * z_squared) / DOUBLE_DECIMALS (../../sb/ConvergentCurvePool.sol#539)
LogExpMath.n_log_36(int256) (../../sb/ConvergentCurvePool.sol#532-552) performs a multiplication on the result of a division:
	- z_squared = (z * z) / DOUBLE_DECIMALS (../../sb/ConvergentCurvePool.sol#536)
	- t = (t * z_squared) / DOUBLE_DECIMALS (../../sb/ConvergentCurvePool.sol#539)
	- t = (t * z_squared) / DOUBLE_DECIMALS (../../sb/ConvergentCurvePool.sol#541)
LogExpMath.n_log_36(int256) (../../sb/ConvergentCurvePool.sol#532-552) performs a multiplication on the result of a division:
	- z_squared = (z * z) / DOUBLE_DECIMALS (../../sb/ConvergentCurvePool.sol#536)
	- t = (t * z_squared) / DOUBLE_DECIMALS (../../sb/ConvergentCurvePool.sol#541)
	- t = (t * z_squared) / DOUBLE_DECIMALS (../../sb/ConvergentCurvePool.sol#543)
LogExpMath.n_log_36(int256) (../../sb/ConvergentCurvePool.sol#532-552) performs a multiplication on the result of a division:
	- z_squared = (z * z) / DOUBLE_DECIMALS (../../sb/ConvergentCurvePool.sol#536)
	- t = (t * z_squared) / DOUBLE_DECIMALS (../../sb/ConvergentCurvePool.sol#543)
	- t = (t * z_squared) / DOUBLE_DECIMALS (../../sb/ConvergentCurvePool.sol#545)
LogExpMath.n_log_36(int256) (../../sb/ConvergentCurvePool.sol#532-552) performs a multiplication on the result of a division:
	- z_squared = (z * z) / DOUBLE_DECIMALS (../../sb/ConvergentCurvePool.sol#536)
	- t = (t * z_squared) / DOUBLE_DECIMALS (../../sb/ConvergentCurvePool.sol#545)
	- t = (t * z_squared) / DOUBLE_DECIMALS (../../sb/ConvergentCurvePool.sol#547)
LogExpMath.n_log_36(int256) (../../sb/ConvergentCurvePool.sol#532-552) performs a multiplication on the result of a division:
	- z_squared = (z * z) / DOUBLE_DECIMALS (../../sb/ConvergentCurvePool.sol#536)
	- t = (t * z_squared) / DOUBLE_DECIMALS (../../sb/ConvergentCurvePool.sol#547)
	- t = (t * z_squared) / DOUBLE_DECIMALS (../../sb/ConvergentCurvePool.sol#549)
LogExpMath.n_log_36(int256) (../../sb/ConvergentCurvePool.sol#532-552) performs a multiplication on the result of a division:
	- z = (DOUBLE_DECIMALS * (a - DOUBLE_DECIMALS)) / (a + DOUBLE_DECIMALS) (../../sb/ConvergentCurvePool.sol#534)
	- s = z (../../sb/ConvergentCurvePool.sol#535)
	- 2 * s (../../sb/ConvergentCurvePool.sol#551)
ConvergentCurvePool._mintLP(uint256,uint256,uint256[],address) (../../sb/ConvergentCurvePool.sol#3011-3067) performs a multiplication on the result of a division:
	- underlyingPerBond = reserveUnderlying.div(reserveBond) (../../sb/ConvergentCurvePool.sol#3037)
	- neededUnderlying = underlyingPerBond.mul(inputBond) (../../sb/ConvergentCurvePool.sol#3039)
ConvergentCurvePool._burnLP(uint256,uint256,uint256[],address) (../../sb/ConvergentCurvePool.sol#3076-3120) performs a multiplication on the result of a division:
	- underlyingPerBond = reserveUnderlying.div(reserveBond) (../../sb/ConvergentCurvePool.sol#3092)
	- minOutputUnderlying > minOutputBond.mul(underlyingPerBond) (../../sb/ConvergentCurvePool.sol#3094)
ConvergentCurvePool._burnLP(uint256,uint256,uint256[],address) (../../sb/ConvergentCurvePool.sol#3076-3120) performs a multiplication on the result of a division:
	- underlyingPerBond = reserveUnderlying.div(reserveBond) (../../sb/ConvergentCurvePool.sol#3092)
	- amountsReleased[baseIndex] = minOutputBond.mul(underlyingPerBond) (../../sb/ConvergentCurvePool.sol#3117)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply

ConvergentCurvePool._mintLP(uint256,uint256,uint256[],address) (../../sb/ConvergentCurvePool.sol#3011-3067) uses a dangerous strict equality:
	- localTotalSupply == 0 (../../sb/ConvergentCurvePool.sol#3026)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

ConvergentCurvePool.constructor(IERC20,IERC20,uint256,uint256,IVault,uint256,uint256,address,string,string).name (../../sb/ConvergentCurvePool.sol#2603) shadows:
	- BalancerPoolToken.name() (../../sb/ConvergentCurvePool.sol#2466-2468) (function)
ConvergentCurvePool.constructor(IERC20,IERC20,uint256,uint256,IVault,uint256,uint256,address,string,string).symbol (../../sb/ConvergentCurvePool.sol#2604) shadows:
	- BalancerPoolToken.symbol() (../../sb/ConvergentCurvePool.sol#2470-2472) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

ConvergentCurvePool.constructor(IERC20,IERC20,uint256,uint256,IVault,uint256,uint256,address,string,string)._governance (../../sb/ConvergentCurvePool.sol#2602) lacks a zero-check on :
		- governance = _governance (../../sb/ConvergentCurvePool.sol#2639)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

ProtocolFeesCollector.getCollectedFees(IERC20[]) (../../sb/ConvergentCurvePool.sol#2112-2117) has external calls inside a loop: fees[i] = tokens[i].balanceOf(address(this)) (../../sb/ConvergentCurvePool.sol#2115)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop

ConvergentCurvePool.constructor(IERC20,IERC20,uint256,uint256,IVault,uint256,uint256,address,string,string) (../../sb/ConvergentCurvePool.sol#2594-2644) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(_expiration - block.timestamp < _unitSeconds) (../../sb/ConvergentCurvePool.sol#2607)
ConvergentCurvePool._mintLP(uint256,uint256,uint256[],address) (../../sb/ConvergentCurvePool.sol#3011-3067) uses timestamp for comparisons
	Dangerous comparisons:
	- localTotalSupply == 0 (../../sb/ConvergentCurvePool.sol#3026)
	- neededUnderlying > inputUnderlying (../../sb/ConvergentCurvePool.sol#3042)
ConvergentCurvePool._getYieldExponent() (../../sb/ConvergentCurvePool.sol#3184-3197) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(result != 0) (../../sb/ConvergentCurvePool.sol#3194)
	- block.timestamp < expiration (../../sb/ConvergentCurvePool.sol#3186-3188)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

InputHelpers.ensureArrayIsSorted(IAsset[]) (../../sb/ConvergentCurvePool.sol#799-806) uses assembly
	- INLINE ASM (../../sb/ConvergentCurvePool.sol#802-804)
InputHelpers.ensureArrayIsSorted(IERC20[]) (../../sb/ConvergentCurvePool.sol#808-815) uses assembly
	- INLINE ASM (../../sb/ConvergentCurvePool.sol#811-813)
Address.isContract(address) (../../sb/ConvergentCurvePool.sol#1108-1117) uses assembly
	- INLINE ASM (../../sb/ConvergentCurvePool.sol#1115)
Address._verifyCallResult(bool,bytes,uint256) (../../sb/ConvergentCurvePool.sol#1229-1246) uses assembly
	- INLINE ASM (../../sb/ConvergentCurvePool.sol#1238-1241)
SafeERC20._callOptionalReturn(address,bytes) (../../sb/ConvergentCurvePool.sol#1277-1292) uses assembly
	- INLINE ASM (../../sb/ConvergentCurvePool.sol#1283-1288)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

LogExpMath.n_log(int256) (../../sb/ConvergentCurvePool.sol#399-467) has a high cyclomatic complexity (13).
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cyclomatic-complexity

Address._verifyCallResult(bool,bytes,uint256) (../../sb/ConvergentCurvePool.sol#1229-1246) is never used and should be removed
Address.functionCall(address,bytes) (../../sb/ConvergentCurvePool.sol#1161-1163) is never used and should be removed
Address.functionCall(address,bytes,uint256) (../../sb/ConvergentCurvePool.sol#1171-1173) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sb/ConvergentCurvePool.sol#1186-1188) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,uint256) (../../sb/ConvergentCurvePool.sol#1196-1203) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sb/ConvergentCurvePool.sol#1211-1213) is never used and should be removed
Address.functionStaticCall(address,bytes,uint256) (../../sb/ConvergentCurvePool.sol#1221-1227) is never used and should be removed
Address.isContract(address) (../../sb/ConvergentCurvePool.sol#1108-1117) is never used and should be removed
Address.sendValue(address,uint256) (../../sb/ConvergentCurvePool.sol#1135-1141) is never used and should be removed
FixedPoint.add(uint256,uint256) (../../sb/ConvergentCurvePool.sol#573-579) is never used and should be removed
FixedPoint.complement(uint256) (../../sb/ConvergentCurvePool.sol#700-702) is never used and should be removed
FixedPoint.divDown(uint256,uint256) (../../sb/ConvergentCurvePool.sol#632-643) is never used and should be removed
FixedPoint.divUp(uint256,uint256) (../../sb/ConvergentCurvePool.sol#645-662) is never used and should be removed
FixedPoint.mul(uint256,uint256) (../../sb/ConvergentCurvePool.sol#589-596) is never used and should be removed
FixedPoint.mulDown(uint256,uint256) (../../sb/ConvergentCurvePool.sol#598-603) is never used and should be removed
FixedPoint.mulUp(uint256,uint256) (../../sb/ConvergentCurvePool.sol#605-620) is never used and should be removed
FixedPoint.pow(uint256,uint256) (../../sb/ConvergentCurvePool.sol#664-666) is never used and should be removed
FixedPoint.powDown(uint256,uint256) (../../sb/ConvergentCurvePool.sol#672-681) is never used and should be removed
FixedPoint.powUp(uint256,uint256) (../../sb/ConvergentCurvePool.sol#687-692) is never used and should be removed
FixedPoint.sub(uint256,uint256) (../../sb/ConvergentCurvePool.sol#581-587) is never used and should be removed
InputHelpers.ensureArrayIsSorted(IAsset[]) (../../sb/ConvergentCurvePool.sol#799-806) is never used and should be removed
InputHelpers.ensureArrayIsSorted(IERC20[]) (../../sb/ConvergentCurvePool.sol#808-815) is never used and should be removed
InputHelpers.ensureArrayIsSorted(address[]) (../../sb/ConvergentCurvePool.sol#817-828) is never used and should be removed
InputHelpers.ensureInputLengthMatch(uint256,uint256,uint256) (../../sb/ConvergentCurvePool.sol#791-797) is never used and should be removed
LogExpMath.log(int256,int256) (../../sb/ConvergentCurvePool.sol#511-525) is never used and should be removed
Math.add(int256,int256) (../../sb/ConvergentCurvePool.sol#2302-2306) is never used and should be removed
Math.divDown(uint256,uint256) (../../sb/ConvergentCurvePool.sol#2346-2349) is never used and should be removed
Math.divUp(uint256,uint256) (../../sb/ConvergentCurvePool.sol#2351-2359) is never used and should be removed
Math.max(uint256,uint256) (../../sb/ConvergentCurvePool.sol#2329-2331) is never used and should be removed
Math.min(uint256,uint256) (../../sb/ConvergentCurvePool.sol#2336-2338) is never used and should be removed
Math.sub(int256,int256) (../../sb/ConvergentCurvePool.sol#2320-2324) is never used and should be removed
SafeERC20.safeTransferFrom(IERC20,address,address,uint256) (../../sb/ConvergentCurvePool.sol#1266-1268) is never used and should be removed
SafeMath.add(uint256,uint256) (../../sb/ConvergentCurvePool.sol#955-960) is never used and should be removed
SafeMath.div(uint256,uint256) (../../sb/ConvergentCurvePool.sol#1029-1031) is never used and should be removed
SafeMath.div(uint256,uint256,uint256) (../../sb/ConvergentCurvePool.sol#1045-1051) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sb/ConvergentCurvePool.sol#1065-1067) is never used and should be removed
SafeMath.mod(uint256,uint256,uint256) (../../sb/ConvergentCurvePool.sol#1081-1084) is never used and should be removed
SafeMath.mul(uint256,uint256) (../../sb/ConvergentCurvePool.sol#1003-1015) is never used and should be removed
SafeMath.sub(uint256,uint256) (../../sb/ConvergentCurvePool.sol#972-974) is never used and should be removed
SafeMath.sub(uint256,uint256,uint256) (../../sb/ConvergentCurvePool.sol#986-991) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Pragma version^0.7.0 (../../sb/ConvergentCurvePool.sol#1) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Address.sendValue(address,uint256) (../../sb/ConvergentCurvePool.sol#1135-1141):
	- (success) = recipient.call{value: amount}() (../../sb/ConvergentCurvePool.sol#1139)
Low level call in Address.functionCallWithValue(address,bytes,uint256,uint256) (../../sb/ConvergentCurvePool.sol#1196-1203):
	- (success,returndata) = target.call{value: value}(data) (../../sb/ConvergentCurvePool.sol#1201)
Low level call in Address.functionStaticCall(address,bytes,uint256) (../../sb/ConvergentCurvePool.sol#1221-1227):
	- (success,returndata) = target.staticcall(data) (../../sb/ConvergentCurvePool.sol#1225)
Low level call in SafeERC20._callOptionalReturn(address,bytes) (../../sb/ConvergentCurvePool.sol#1277-1292):
	- (success,returndata) = token.call(data) (../../sb/ConvergentCurvePool.sol#1280)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function LogExpMath.n_exp(int256) (../../sb/ConvergentCurvePool.sol#319-392) is not in mixedCase
Function LogExpMath.n_log(int256) (../../sb/ConvergentCurvePool.sol#399-467) is not in mixedCase
Function LogExpMath.n_log_36(int256) (../../sb/ConvergentCurvePool.sol#532-552) is not in mixedCase
Constant LogExpMath.x0 (../../sb/ConvergentCurvePool.sol#287) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LogExpMath.a0 (../../sb/ConvergentCurvePool.sol#288) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LogExpMath.x1 (../../sb/ConvergentCurvePool.sol#289) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LogExpMath.a1 (../../sb/ConvergentCurvePool.sol#290) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LogExpMath.x2 (../../sb/ConvergentCurvePool.sol#291) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LogExpMath.a2 (../../sb/ConvergentCurvePool.sol#292) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LogExpMath.x3 (../../sb/ConvergentCurvePool.sol#293) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LogExpMath.a3 (../../sb/ConvergentCurvePool.sol#294) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LogExpMath.x4 (../../sb/ConvergentCurvePool.sol#295) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LogExpMath.a4 (../../sb/ConvergentCurvePool.sol#296) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LogExpMath.x5 (../../sb/ConvergentCurvePool.sol#297) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LogExpMath.a5 (../../sb/ConvergentCurvePool.sol#298) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LogExpMath.x6 (../../sb/ConvergentCurvePool.sol#299) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LogExpMath.a6 (../../sb/ConvergentCurvePool.sol#300) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LogExpMath.x7 (../../sb/ConvergentCurvePool.sol#301) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LogExpMath.a7 (../../sb/ConvergentCurvePool.sol#302) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LogExpMath.x8 (../../sb/ConvergentCurvePool.sol#303) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LogExpMath.a8 (../../sb/ConvergentCurvePool.sol#304) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LogExpMath.x9 (../../sb/ConvergentCurvePool.sol#305) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LogExpMath.a9 (../../sb/ConvergentCurvePool.sol#306) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LogExpMath.x10 (../../sb/ConvergentCurvePool.sol#307) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LogExpMath.a10 (../../sb/ConvergentCurvePool.sol#308) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LogExpMath.x11 (../../sb/ConvergentCurvePool.sol#309) is not in UPPER_CASE_WITH_UNDERSCORES
Constant LogExpMath.a11 (../../sb/ConvergentCurvePool.sol#310) is not in UPPER_CASE_WITH_UNDERSCORES
Function IVault.WETH() (../../sb/ConvergentCurvePool.sol#1344) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Variable Errors.SAFE_CAST_VALUE_CANT_FIT_16 (../../sb/ConvergentCurvePool.sol#186) is too similar to Errors.SAFE_CAST_VALUE_CANT_FIT_32 (../../sb/ConvergentCurvePool.sol#185)
Variable Errors.SAFE_CAST_VALUE_CANT_FIT_16 (../../sb/ConvergentCurvePool.sol#186) is too similar to Errors.SAFE_CAST_VALUE_CANT_FIT_64 (../../sb/ConvergentCurvePool.sol#184)
Variable Errors.SAFE_CAST_VALUE_CANT_FIT_32 (../../sb/ConvergentCurvePool.sol#185) is too similar to Errors.SAFE_CAST_VALUE_CANT_FIT_64 (../../sb/ConvergentCurvePool.sol#184)
Variable Errors.X_OUT_OF_BOUNDS (../../sb/ConvergentCurvePool.sol#113) is too similar to Errors.Y_OUT_OF_BOUNDS (../../sb/ConvergentCurvePool.sol#114)
Variable LogExpMath.EXPONENT_LB (../../sb/ConvergentCurvePool.sol#283) is too similar to LogExpMath.EXPONENT_UB (../../sb/ConvergentCurvePool.sol#284)
Variable LogExpMath.PRECISION_LOG_UNDER_BOUND (../../sb/ConvergentCurvePool.sol#281) is too similar to LogExpMath.PRECISION_LOG_UPPER_BOUND (../../sb/ConvergentCurvePool.sol#282)
Variable ConvergentCurvePool._assignTradeFee(uint256,uint256,IERC20,bool).impliedYieldFee_scope_0 (../../sb/ConvergentCurvePool.sol#2974-2976) is too similar to ConvergentCurvePool._assignTradeFee(uint256,uint256,IERC20,bool).impliedYieldFee_scope_1 (../../sb/ConvergentCurvePool.sol#2985-2987)
Variable ConvergentCurvePool._assignTradeFee(uint256,uint256,IERC20,bool).impliedYieldFee_scope_0 (../../sb/ConvergentCurvePool.sol#2974-2976) is too similar to ConvergentCurvePool._assignTradeFee(uint256,uint256,IERC20,bool).impliedYieldFee_scope_2 (../../sb/ConvergentCurvePool.sol#2994-2996)
Variable ConvergentCurvePool._assignTradeFee(uint256,uint256,IERC20,bool).impliedYieldFee_scope_1 (../../sb/ConvergentCurvePool.sol#2985-2987) is too similar to ConvergentCurvePool._assignTradeFee(uint256,uint256,IERC20,bool).impliedYieldFee_scope_2 (../../sb/ConvergentCurvePool.sol#2994-2996)
Variable ConvergentCurvePool.solveTradeInvariant(uint256,uint256,uint256,bool).xBeforePowA (../../sb/ConvergentCurvePool.sol#2927) is too similar to ConvergentCurvePool.solveTradeInvariant(uint256,uint256,uint256,bool).yBeforePowA (../../sb/ConvergentCurvePool.sol#2929)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar

LogExpMath.slitherConstructorConstantVariables() (../../sb/ConvergentCurvePool.sol#276-553) uses literals with too many digits:
	- x0 = 128000000000000000000 (../../sb/ConvergentCurvePool.sol#287)
LogExpMath.slitherConstructorConstantVariables() (../../sb/ConvergentCurvePool.sol#276-553) uses literals with too many digits:
	- a0 = 38877084059945950922200000000000000000000000000000000000 (../../sb/ConvergentCurvePool.sol#288)
LogExpMath.slitherConstructorConstantVariables() (../../sb/ConvergentCurvePool.sol#276-553) uses literals with too many digits:
	- x1 = 64000000000000000000 (../../sb/ConvergentCurvePool.sol#289)
LogExpMath.slitherConstructorConstantVariables() (../../sb/ConvergentCurvePool.sol#276-553) uses literals with too many digits:
	- a1 = 6235149080811616882910000000 (../../sb/ConvergentCurvePool.sol#290)
LogExpMath.slitherConstructorConstantVariables() (../../sb/ConvergentCurvePool.sol#276-553) uses literals with too many digits:
	- x2 = 3200000000000000000000 (../../sb/ConvergentCurvePool.sol#291)
LogExpMath.slitherConstructorConstantVariables() (../../sb/ConvergentCurvePool.sol#276-553) uses literals with too many digits:
	- a2 = 7896296018268069516100000000000000 (../../sb/ConvergentCurvePool.sol#292)
LogExpMath.slitherConstructorConstantVariables() (../../sb/ConvergentCurvePool.sol#276-553) uses literals with too many digits:
	- x3 = 1600000000000000000000 (../../sb/ConvergentCurvePool.sol#293)
LogExpMath.slitherConstructorConstantVariables() (../../sb/ConvergentCurvePool.sol#276-553) uses literals with too many digits:
	- a3 = 888611052050787263676000000 (../../sb/ConvergentCurvePool.sol#294)
LogExpMath.slitherConstructorConstantVariables() (../../sb/ConvergentCurvePool.sol#276-553) uses literals with too many digits:
	- x4 = 800000000000000000000 (../../sb/ConvergentCurvePool.sol#295)
LogExpMath.slitherConstructorConstantVariables() (../../sb/ConvergentCurvePool.sol#276-553) uses literals with too many digits:
	- x5 = 400000000000000000000 (../../sb/ConvergentCurvePool.sol#297)
LogExpMath.slitherConstructorConstantVariables() (../../sb/ConvergentCurvePool.sol#276-553) uses literals with too many digits:
	- x6 = 200000000000000000000 (../../sb/ConvergentCurvePool.sol#299)
LogExpMath.slitherConstructorConstantVariables() (../../sb/ConvergentCurvePool.sol#276-553) uses literals with too many digits:
	- x7 = 100000000000000000000 (../../sb/ConvergentCurvePool.sol#301)
LogExpMath.slitherConstructorConstantVariables() (../../sb/ConvergentCurvePool.sol#276-553) uses literals with too many digits:
	- x8 = 50000000000000000000 (../../sb/ConvergentCurvePool.sol#303)
LogExpMath.slitherConstructorConstantVariables() (../../sb/ConvergentCurvePool.sol#276-553) uses literals with too many digits:
	- x9 = 25000000000000000000 (../../sb/ConvergentCurvePool.sol#305)
LogExpMath.slitherConstructorConstantVariables() (../../sb/ConvergentCurvePool.sol#276-553) uses literals with too many digits:
	- x10 = 12500000000000000000 (../../sb/ConvergentCurvePool.sol#307)
LogExpMath.slitherConstructorConstantVariables() (../../sb/ConvergentCurvePool.sol#276-553) uses literals with too many digits:
	- x11 = 6250000000000000000 (../../sb/ConvergentCurvePool.sol#309)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

Errors.ADD_OVERFLOW (../../sb/ConvergentCurvePool.sol#106) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.SUB_OVERFLOW (../../sb/ConvergentCurvePool.sol#107) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.SUB_UNDERFLOW (../../sb/ConvergentCurvePool.sol#108) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.MUL_OVERFLOW (../../sb/ConvergentCurvePool.sol#109) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.ZERO_DIVISION (../../sb/ConvergentCurvePool.sol#110) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.ZERO_MOD (../../sb/ConvergentCurvePool.sol#111) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.DIV_INTERNAL (../../sb/ConvergentCurvePool.sol#112) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.X_OUT_OF_BOUNDS (../../sb/ConvergentCurvePool.sol#113) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.Y_OUT_OF_BOUNDS (../../sb/ConvergentCurvePool.sol#114) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.PRODUCT_OUT_OF_BOUNDS (../../sb/ConvergentCurvePool.sol#115) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.OUT_OF_BOUNDS (../../sb/ConvergentCurvePool.sol#118) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.UNSORTED_ARRAY (../../sb/ConvergentCurvePool.sol#119) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.UNSORTED_TOKENS (../../sb/ConvergentCurvePool.sol#120) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.INPUT_LENGTH_MISMATCH (../../sb/ConvergentCurvePool.sol#121) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.TOKEN_NOT_CONTRACT (../../sb/ConvergentCurvePool.sol#122) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.MIN_TOKENS (../../sb/ConvergentCurvePool.sol#125) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.MAX_TOKENS (../../sb/ConvergentCurvePool.sol#126) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.MAX_SWAP_FEE (../../sb/ConvergentCurvePool.sol#127) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.MINIMUM_BPT (../../sb/ConvergentCurvePool.sol#128) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.CALLER_NOT_VAULT (../../sb/ConvergentCurvePool.sol#129) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.UNINITIALIZED (../../sb/ConvergentCurvePool.sol#130) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.BPT_IN_MAX_AMOUNT (../../sb/ConvergentCurvePool.sol#131) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.BPT_OUT_MIN_AMOUNT (../../sb/ConvergentCurvePool.sol#132) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.ERR_AMOUNTS_IN_LENGTH (../../sb/ConvergentCurvePool.sol#133) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.UNHANDLED_JOIN_KIND (../../sb/ConvergentCurvePool.sol#134) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.UNHANDLED_EXIT_KIND (../../sb/ConvergentCurvePool.sol#135) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.MIN_AMP (../../sb/ConvergentCurvePool.sol#138) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.MAX_AMP (../../sb/ConvergentCurvePool.sol#139) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.MIN_WEIGHT (../../sb/ConvergentCurvePool.sol#140) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.MAX_STABLE_TOKENS (../../sb/ConvergentCurvePool.sol#141) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.MAX_IN_RATIO (../../sb/ConvergentCurvePool.sol#144) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.MAX_OUT_RATIO (../../sb/ConvergentCurvePool.sol#145) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.MIN_BPT_IN_FOR_TOKEN_OUT (../../sb/ConvergentCurvePool.sol#146) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.MAX_OUT_BPT_FOR_TOKEN_IN (../../sb/ConvergentCurvePool.sol#147) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.REENTRANCY (../../sb/ConvergentCurvePool.sol#150) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.SENDER_NOT_ALLOWED (../../sb/ConvergentCurvePool.sol#151) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.EMERGENCY_PERIOD_ON (../../sb/ConvergentCurvePool.sol#152) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.EMERGENCY_PERIOD_FINISHED (../../sb/ConvergentCurvePool.sol#153) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.MAX_EMERGENCY_PERIOD (../../sb/ConvergentCurvePool.sol#154) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.MAX_EMERGENCY_PERIOD_CHECK_EXT (../../sb/ConvergentCurvePool.sol#155) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.INSUFFICIENT_BALANCE (../../sb/ConvergentCurvePool.sol#156) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.INSUFFICIENT_ALLOWANCE (../../sb/ConvergentCurvePool.sol#157) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.ERC20_TRANSFER_FROM_ZERO_ADDRESS (../../sb/ConvergentCurvePool.sol#158) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.ERC20_TRANSFER_TO_ZERO_ADDRESS (../../sb/ConvergentCurvePool.sol#159) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.ERC20_MINT_TO_ZERO_ADDRESS (../../sb/ConvergentCurvePool.sol#160) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.ERC20_BURN_FROM_ZERO_ADDRESS (../../sb/ConvergentCurvePool.sol#161) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.ERC20_APPROVE_FROM_ZERO_ADDRESS (../../sb/ConvergentCurvePool.sol#162) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.ERC20_APPROVE_TO_ZERO_ADDRESS (../../sb/ConvergentCurvePool.sol#163) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.ERC20_TRANSFER_EXCEEDS_ALLOWANCE (../../sb/ConvergentCurvePool.sol#164) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.ERC20_DECREASED_ALLOWANCE_BELOW_ZERO (../../sb/ConvergentCurvePool.sol#165) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.ERC20_TRANSFER_EXCEEDS_BALANCE (../../sb/ConvergentCurvePool.sol#166) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.ERC20_BURN_EXCEEDS_ALLOWANCE (../../sb/ConvergentCurvePool.sol#167) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.SAFE_ERC20_OP_DIDNT_SUCCEED (../../sb/ConvergentCurvePool.sol#168) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.SAFE_ERC20_CALL_FAILED (../../sb/ConvergentCurvePool.sol#169) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.SAFE_ERC20_APPROVE_NON_ZERO_ALLOWANCE (../../sb/ConvergentCurvePool.sol#170) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.SAFE_ERC20_DECREASED_ALLOWANCE_BELOW_ZERO (../../sb/ConvergentCurvePool.sol#171) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.ADDRESS_INSUFFICIENT_BALANCE (../../sb/ConvergentCurvePool.sol#172) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.ADDRESS_CANNOT_SEND_VALUE (../../sb/ConvergentCurvePool.sol#173) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.ADDRESS_INSUFFICIENT_BALANCE_CALL (../../sb/ConvergentCurvePool.sol#174) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.ADDRESS_CALL_TO_NON_CONTRACT (../../sb/ConvergentCurvePool.sol#175) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.ADDRESS_STATIC_CALL_NOT_CONTRACT (../../sb/ConvergentCurvePool.sol#176) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.ADDRESS_CALL_FAILED (../../sb/ConvergentCurvePool.sol#177) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.ADDRESS_STATIC_CALL_FAILED (../../sb/ConvergentCurvePool.sol#178) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.ADDRESS_STATIC_CALL_VALUE_FAILED (../../sb/ConvergentCurvePool.sol#179) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.CREATE2_INSUFFICIENT_BALANCE (../../sb/ConvergentCurvePool.sol#180) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.CREATE2_BYTECODE_ZERO (../../sb/ConvergentCurvePool.sol#181) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.CREATE2_DEPLOY_FAILED (../../sb/ConvergentCurvePool.sol#182) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.SAFE_CAST_VALUE_CANT_FIT_128 (../../sb/ConvergentCurvePool.sol#183) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.SAFE_CAST_VALUE_CANT_FIT_64 (../../sb/ConvergentCurvePool.sol#184) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.SAFE_CAST_VALUE_CANT_FIT_32 (../../sb/ConvergentCurvePool.sol#185) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.SAFE_CAST_VALUE_CANT_FIT_16 (../../sb/ConvergentCurvePool.sol#186) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.SAFE_CAST_VALUE_CANT_FIT_8 (../../sb/ConvergentCurvePool.sol#187) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.SAFE_CAST_VALUE_CANT_FIT_INT256 (../../sb/ConvergentCurvePool.sol#188) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.SAFE_CAST_VALUE_NOT_POSITIVE (../../sb/ConvergentCurvePool.sol#189) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.GRANT_SENDER_NOT_ADMIN (../../sb/ConvergentCurvePool.sol#190) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.REVOKE_SENDER_NOT_ADMIN (../../sb/ConvergentCurvePool.sol#191) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.RENOUNCE_SENDER_NOT_ALLOWED (../../sb/ConvergentCurvePool.sol#192) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.ENUMERABLE_NON_EXISTENT_KEY (../../sb/ConvergentCurvePool.sol#193) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.INVALID_POOL_ID (../../sb/ConvergentCurvePool.sol#196) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.CALLER_NOT_POOL (../../sb/ConvergentCurvePool.sol#197) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.EXIT_BELOW_MIN (../../sb/ConvergentCurvePool.sol#198) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.SENDER_NOT_ASSET_MANAGER (../../sb/ConvergentCurvePool.sol#199) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.INVALID_POST_LOAN_BALANCE (../../sb/ConvergentCurvePool.sol#200) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.USER_DOESNT_ALLOW_RELAYER (../../sb/ConvergentCurvePool.sol#201) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.JOIN_ABOVE_MAX (../../sb/ConvergentCurvePool.sol#202) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.SWAP_LIMIT (../../sb/ConvergentCurvePool.sol#203) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.SWAP_DEADLINE (../../sb/ConvergentCurvePool.sol#204) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.CANNOT_SWAP_SAME_TOKEN (../../sb/ConvergentCurvePool.sol#205) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.UNKNOWN_AMOUNT_IN_FIRST_SWAP (../../sb/ConvergentCurvePool.sol#206) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.MALCONSTRUCTED_MULTIHOP_SWAP (../../sb/ConvergentCurvePool.sol#207) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.INTERNAL_BALANCE_OVERFLOW (../../sb/ConvergentCurvePool.sol#208) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.INSUFFICIENT_INTERNAL_BALANCE (../../sb/ConvergentCurvePool.sol#209) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.INVALID_ETH_INTERNAL_BALANCE (../../sb/ConvergentCurvePool.sol#210) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.INSUFFICIENT_ETH (../../sb/ConvergentCurvePool.sol#211) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.UNALLOCATED_ETH (../../sb/ConvergentCurvePool.sol#212) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.ETH_TRANSFER (../../sb/ConvergentCurvePool.sol#213) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.INVALID_TOKEN (../../sb/ConvergentCurvePool.sol#214) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.TOKENS_MISMATCH (../../sb/ConvergentCurvePool.sol#215) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.TOKEN_NOT_REGISTERED (../../sb/ConvergentCurvePool.sol#216) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.TOKEN_ALREADY_REGISTERED (../../sb/ConvergentCurvePool.sol#217) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.TOKENS_ALREADY_SET (../../sb/ConvergentCurvePool.sol#218) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.NONZERO_TOKEN_BALANCE (../../sb/ConvergentCurvePool.sol#219) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.BALANCE_TOTAL_OVERFLOW (../../sb/ConvergentCurvePool.sol#220) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.TOKENS_LENGTH_MUST_BE_2 (../../sb/ConvergentCurvePool.sol#221) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.SWAP_FEE_TOO_HIGH (../../sb/ConvergentCurvePool.sol#224) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.FLASH_LOAN_FEE_TOO_HIGH (../../sb/ConvergentCurvePool.sol#225) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
Errors.INSUFFICIENT_COLLECTED_FEES (../../sb/ConvergentCurvePool.sol#226) is never used in Errors (../../sb/ConvergentCurvePool.sol#104-255)
LogExpMath.DOUBLE_PRECISION (../../sb/ConvergentCurvePool.sol#280) is never used in LogExpMath (../../sb/ConvergentCurvePool.sol#276-553)
FixedPoint.MIN_POW_BASE_FREE_EXPONENT (../../sb/ConvergentCurvePool.sol#571) is never used in FixedPoint (../../sb/ConvergentCurvePool.sol#566-703)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
/sb/ConvergentCurvePool.sol analyzed (23 contracts with 93 detectors), 270 result(s) found
