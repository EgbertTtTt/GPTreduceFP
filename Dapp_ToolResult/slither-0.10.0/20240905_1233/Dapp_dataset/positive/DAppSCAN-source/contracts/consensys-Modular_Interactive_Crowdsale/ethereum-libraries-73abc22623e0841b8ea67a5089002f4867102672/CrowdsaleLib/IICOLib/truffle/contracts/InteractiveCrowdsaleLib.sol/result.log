'solc --version' running
'solc /sb/InteractiveCrowdsaleLib.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running
Compilation warnings/errors on /sb/InteractiveCrowdsaleLib.sol:
/sb/InteractiveCrowdsaleLib.sol:218:5: Warning: Use of the "var" keyword is deprecated.
    var _allowance = self.allowed[_from][msg.sender];
    ^------------^
/sb/InteractiveCrowdsaleLib.sol:393:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function CrowdsaleToken(address owner,
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/InteractiveCrowdsaleLib.sol:634:5: Warning: Use of the "var" keyword is deprecated.
    var total = self.withdrawTokensMap[msg.sender];
    ^-------^
/sb/InteractiveCrowdsaleLib.sol:651:5: Warning: Use of the "var" keyword is deprecated.
    var total = self.leftoverWei[msg.sender];
    ^-------^
/sb/InteractiveCrowdsaleLib.sol:201:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/sb/InteractiveCrowdsaleLib.sol:233:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/sb/InteractiveCrowdsaleLib.sol:255:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/sb/InteractiveCrowdsaleLib.sol:297:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _newAllowed);
    ^-----------------------------------------^
/sb/InteractiveCrowdsaleLib.sol:309:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnerChange(msg.sender, _newOwner);
    ^--------------------------------^
/sb/InteractiveCrowdsaleLib.sol:327:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(0x0, self.owner, _amount);
    ^--------------------------------^
/sb/InteractiveCrowdsaleLib.sol:338:5: Warning: Invoking events without "emit" prefix is deprecated.
    MintingClosed(true);
    ^-----------------^
/sb/InteractiveCrowdsaleLib.sol:355:7: Warning: Invoking events without "emit" prefix is deprecated.
      Burn(msg.sender, _amount);
      ^-----------------------^
/sb/InteractiveCrowdsaleLib.sol:356:7: Warning: Invoking events without "emit" prefix is deprecated.
      Transfer(msg.sender, 0x0, _amount);
      ^--------------------------------^
/sb/InteractiveCrowdsaleLib.sol:604:7: Warning: Invoking events without "emit" prefix is deprecated.
      LogErrorMsg(msg.value, "Invalid Purchase! Check start time and amount of ether.");
      ^-------------------------------------------------------------------------------^
/sb/InteractiveCrowdsaleLib.sol:616:7: Warning: Invoking events without "emit" prefix is deprecated.
      LogErrorMsg(0, "Sender has no tokens to withdraw!");
      ^-------------------------------------------------^
/sb/InteractiveCrowdsaleLib.sol:622:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogErrorMsg(0, "Owner cannot withdraw extra tokens until after the sale!");
        ^------------------------------------------------------------------------^
/sb/InteractiveCrowdsaleLib.sol:638:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogTokensWithdrawn(msg.sender, total);
    ^-----------------------------------^
/sb/InteractiveCrowdsaleLib.sol:647:7: Warning: Invoking events without "emit" prefix is deprecated.
      LogErrorMsg(0, "Sender has no extra wei to withdraw!");
      ^----------------------------------------------------^
/sb/InteractiveCrowdsaleLib.sol:654:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogWeiWithdrawn(msg.sender, total);
    ^--------------------------------^
/sb/InteractiveCrowdsaleLib.sol:663:7: Warning: Invoking events without "emit" prefix is deprecated.
      LogErrorMsg(0, "Cannot withdraw owner ether until after the sale!");
      ^-----------------------------------------------------------------^
/sb/InteractiveCrowdsaleLib.sol:673:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogOwnerEthWithdrawn(msg.sender,amount,"Crowdsale owner has withdrawn all funds!");
    ^--------------------------------------------------------------------------------^
/sb/InteractiveCrowdsaleLib.sol:1271:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogBidAccepted(msg.sender, _amount, _personalCap);
    ^-----------------------------------------------^
/sb/InteractiveCrowdsaleLib.sol:1272:5: Warning: Invoking events without "emit" prefix is deprecated.
    BucketAndValuationAndCommitted(self.currentBucket, self.totalValuation, self.valueCommitted);
    ^------------------------------------------------------------------------------------------^
/sb/InteractiveCrowdsaleLib.sol:1386:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogBidWithdrawn(msg.sender, refundWei, self.personalCaps[msg.sender]);
    ^-------------------------------------------------------------------^
/sb/InteractiveCrowdsaleLib.sol:1387:5: Warning: Invoking events without "emit" prefix is deprecated.
    BucketAndValuationAndCommitted(self.currentBucket, self.totalValuation, self.valueCommitted);
    ^------------------------------------------------------------------------------------------^
/sb/InteractiveCrowdsaleLib.sol:1492:7: Warning: Invoking events without "emit" prefix is deprecated.
      LogErrorMsg(self.totalValuation, "Sale is canceled, all bids have been refunded!");
      ^--------------------------------------------------------------------------------^
/sb/InteractiveCrowdsaleLib.sol:1518:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogErrorMsg(self.base.hasContributed[msg.sender],"contribution");
    ^--------------------------------------------------------------^
/sb/InteractiveCrowdsaleLib.sol:1519:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogErrorMsg(self.pricePurchasedAt[msg.sender],"price");
    ^----------------------------------------------------^
/sb/InteractiveCrowdsaleLib.sol:1520:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogErrorMsg(self.q,"percentage");
    ^------------------------------^


CrowdsaleLib (../../sb/InteractiveCrowdsaleLib.sol#493-742) contract sets array length with a user-controlled value:
	- self.milestoneTimes.push(_saleData[i]) (../../sb/InteractiveCrowdsaleLib.sol#574)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

InteractiveCrowdsaleLib.launchToken(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#1422-1456) ignores return value by self.base.token.transfer(self.base.owner,_ownerTokens) (../../sb/InteractiveCrowdsaleLib.sol#1446)
InteractiveCrowdsaleLib.launchToken(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#1422-1456) ignores return value by self.base.token.transfer(self.base.owner,_supply) (../../sb/InteractiveCrowdsaleLib.sol#1448)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer

BasicMathLib.times(uint256,uint256) (../../sb/InteractiveCrowdsaleLib.sol#38-47) is declared view but contains assembly code
BasicMathLib.dividedBy(uint256,uint256) (../../sb/InteractiveCrowdsaleLib.sol#55-70) is declared view but contains assembly code
BasicMathLib.plus(uint256,uint256) (../../sb/InteractiveCrowdsaleLib.sol#78-87) is declared view but contains assembly code
BasicMathLib.minus(uint256,uint256) (../../sb/InteractiveCrowdsaleLib.sol#95-104) is declared view but contains assembly code
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#constant-functions-using-assembly-code

InteractiveCrowdsaleLib.getCurrentBonus(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#1146-1159) performs a multiplication on the result of a division:
	- percentElapsed = (elapsed * 100) / bonusTime (../../sb/InteractiveCrowdsaleLib.sol#1151)
	- (err,currentBonus) = self.priceBonusPercent.minus(((percentElapsed * self.priceBonusPercent) / 100)) (../../sb/InteractiveCrowdsaleLib.sol#1155)
InteractiveCrowdsaleLib.withdrawBid(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#1281-1389) performs a multiplication on the result of a division:
	- multiplierPercent = (100 * (self.endWithdrawalTime - now)) / (self.endWithdrawalTime - self.base.startTime) (../../sb/InteractiveCrowdsaleLib.sol#1308-1309)
	- refundWei = (multiplierPercent * self.base.hasContributed[msg.sender]) / 100 (../../sb/InteractiveCrowdsaleLib.sol#1310)
InteractiveCrowdsaleLib.launchToken(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#1422-1456) performs a multiplication on the result of a division:
	- _fullValue = (self.totalValuation * 100) / uint256(self.percentBeingSold) (../../sb/InteractiveCrowdsaleLib.sol#1424)
	- _supply = (_fullValue * self.base.tokensPerEth) / 1000000000000000000 (../../sb/InteractiveCrowdsaleLib.sol#1428)
InteractiveCrowdsaleLib.launchToken(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#1422-1456) performs a multiplication on the result of a division:
	- _supply = (_fullValue * self.base.tokensPerEth) / 1000000000000000000 (../../sb/InteractiveCrowdsaleLib.sol#1428)
	- _ownerTokens = _supply - ((_supply * uint256(self.percentBeingSold)) / 100) (../../sb/InteractiveCrowdsaleLib.sol#1432)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply

InteractiveCrowdsaleLib.withdrawBid(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage)._proposedValue (../../sb/InteractiveCrowdsaleLib.sol#1330) is a local variable never initialized
TokenLib.approveChange(TokenLib.TokenStorage,address,uint256,bool)._newAllowed (../../sb/InteractiveCrowdsaleLib.sol#280) is a local variable never initialized
InteractiveCrowdsaleLib.withdrawBid(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage).loop (../../sb/InteractiveCrowdsaleLib.sol#1332) is a local variable never initialized
InteractiveCrowdsaleLib.submitBid(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage,uint256,uint256,uint256).loop (../../sb/InteractiveCrowdsaleLib.sol#1217) is a local variable never initialized
InteractiveCrowdsaleLib.submitBid(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage,uint256,uint256,uint256)._bonusPercent (../../sb/InteractiveCrowdsaleLib.sol#1177) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables

InteractiveCrowdsaleLib.submitBid(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage,uint256,uint256,uint256) (../../sb/InteractiveCrowdsaleLib.sol#1167-1274) ignores return value by self.valuationsList.insert(_listSpot,_personalCap,PREV) (../../sb/InteractiveCrowdsaleLib.sol#1201)
InteractiveCrowdsaleLib.launchToken(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#1422-1456) ignores return value by self.base.token.burnToken(_bonusTokens) (../../sb/InteractiveCrowdsaleLib.sol#1449)
InteractiveCrowdsaleLib.launchToken(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#1422-1456) ignores return value by self.base.token.changeOwner(self.base.owner) (../../sb/InteractiveCrowdsaleLib.sol#1452)
InteractiveCrowdsaleLib.retreiveFinalResult(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#1476-1544) ignores return value by self.base.token.burnToken(_leftoverBonus) (../../sb/InteractiveCrowdsaleLib.sol#1535)
InteractiveCrowdsaleLib.retreiveFinalResult(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#1476-1544) ignores return value by self.base.withdrawTokens() (../../sb/InteractiveCrowdsaleLib.sol#1540)
InteractiveCrowdsaleLib.retreiveFinalResult(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#1476-1544) ignores return value by self.base.withdrawLeftoverWei() (../../sb/InteractiveCrowdsaleLib.sol#1542)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

CrowdsaleToken.CrowdsaleToken(address,string,string,uint8,uint256,bool).name (../../sb/InteractiveCrowdsaleLib.sol#394) shadows:
	- CrowdsaleToken.name() (../../sb/InteractiveCrowdsaleLib.sol#403-405) (function)
CrowdsaleToken.CrowdsaleToken(address,string,string,uint8,uint256,bool).symbol (../../sb/InteractiveCrowdsaleLib.sol#395) shadows:
	- CrowdsaleToken.symbol() (../../sb/InteractiveCrowdsaleLib.sol#407-409) (function)
CrowdsaleToken.CrowdsaleToken(address,string,string,uint8,uint256,bool).decimals (../../sb/InteractiveCrowdsaleLib.sol#396) shadows:
	- CrowdsaleToken.decimals() (../../sb/InteractiveCrowdsaleLib.sol#411-413) (function)
CrowdsaleToken.CrowdsaleToken(address,string,string,uint8,uint256,bool).initialSupply (../../sb/InteractiveCrowdsaleLib.sol#397) shadows:
	- CrowdsaleToken.initialSupply() (../../sb/InteractiveCrowdsaleLib.sol#419-421) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

Reentrancy in CrowdsaleLib.withdrawOwnerEth(CrowdsaleLib.CrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#661-676):
	External calls:
	- (! crowdsaleEnded(self)) && (self.token.balanceOf(this) > 0) (../../sb/InteractiveCrowdsaleLib.sol#662)
	Event emitted after the call(s):
	- LogErrorMsg(0,Cannot withdraw owner ether until after the sale!) (../../sb/InteractiveCrowdsaleLib.sol#663)
Reentrancy in CrowdsaleLib.withdrawTokens(CrowdsaleLib.CrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#612-640):
	External calls:
	- ok = self.token.burnToken(_burnAmount) (../../sb/InteractiveCrowdsaleLib.sol#628)
	- ok = self.token.transfer(msg.sender,total) (../../sb/InteractiveCrowdsaleLib.sol#636)
	Event emitted after the call(s):
	- LogTokensWithdrawn(msg.sender,total) (../../sb/InteractiveCrowdsaleLib.sol#638)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

CrowdsaleLib.init(CrowdsaleLib.CrowdsaleStorage,address,uint256[],uint256,uint8,CrowdsaleToken) (../../sb/InteractiveCrowdsaleLib.sol#548-580) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(_saleData[0] > (now + 7200)) (../../sb/InteractiveCrowdsaleLib.sol#559)
CrowdsaleLib.crowdsaleActive(CrowdsaleLib.CrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#585-587) uses timestamp for comparisons
	Dangerous comparisons:
	- (now >= self.startTime && now <= self.endTime) (../../sb/InteractiveCrowdsaleLib.sol#586)
CrowdsaleLib.crowdsaleEnded(CrowdsaleLib.CrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#592-594) uses timestamp for comparisons
	Dangerous comparisons:
	- now > self.endTime (../../sb/InteractiveCrowdsaleLib.sol#593)
CrowdsaleLib.validPurchase(CrowdsaleLib.CrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#599-607) uses timestamp for comparisons
	Dangerous comparisons:
	- crowdsaleActive(self) && nonZeroPurchase (../../sb/InteractiveCrowdsaleLib.sol#601)
CrowdsaleLib.withdrawOwnerEth(CrowdsaleLib.CrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#661-676) uses timestamp for comparisons
	Dangerous comparisons:
	- (! crowdsaleEnded(self)) && (self.token.balanceOf(this) > 0) (../../sb/InteractiveCrowdsaleLib.sol#662)
CrowdsaleLib.setTokens(CrowdsaleLib.CrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#697-710) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(now < self.endTime) (../../sb/InteractiveCrowdsaleLib.sol#700)
InteractiveCrowdsaleLib.getCurrentBonus(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#1146-1159) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(! err) (../../sb/InteractiveCrowdsaleLib.sol#1156)
InteractiveCrowdsaleLib.submitBid(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage,uint256,uint256,uint256) (../../sb/InteractiveCrowdsaleLib.sol#1167-1274) uses timestamp for comparisons
	Dangerous comparisons:
	- now < self.endWithdrawalTime (../../sb/InteractiveCrowdsaleLib.sol#1179)
InteractiveCrowdsaleLib.withdrawBid(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#1281-1389) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(self.personalCaps[msg.sender] > 0) (../../sb/InteractiveCrowdsaleLib.sol#1283)
	- now >= self.endWithdrawalTime (../../sb/InteractiveCrowdsaleLib.sol#1288)
	- require(bool)(self.personalCaps[msg.sender] < self.totalValuation) (../../sb/InteractiveCrowdsaleLib.sol#1289)
	- require(bool)(! self.hasManuallyWithdrawn[msg.sender]) (../../sb/InteractiveCrowdsaleLib.sol#1295)
	- _proposedCommit <= self.currentBucket (../../sb/InteractiveCrowdsaleLib.sol#1343)
	- _proposedCommit >= self.currentBucket (../../sb/InteractiveCrowdsaleLib.sol#1349)
	- _proposedCommit <= _currentBucket (../../sb/InteractiveCrowdsaleLib.sol#1366)
	- _proposedCommit >= _currentBucket (../../sb/InteractiveCrowdsaleLib.sol#1370)
	- _proposedValue == 0 (../../sb/InteractiveCrowdsaleLib.sol#1377)
InteractiveCrowdsaleLib.finalizeSale(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#1394-1416) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(now >= self.base.endTime) (../../sb/InteractiveCrowdsaleLib.sol#1395)
InteractiveCrowdsaleLib.setCanceled(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#1463-1470) uses timestamp for comparisons
	Dangerous comparisons:
	- canceled = (self.totalValuation < self.minimumRaise) || ((now > (self.base.endTime + 2592000)) && ! self.isFinalized) (../../sb/InteractiveCrowdsaleLib.sol#1464-1465)
InteractiveCrowdsaleLib.retreiveFinalResult(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#1476-1544) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(now > self.base.endTime) (../../sb/InteractiveCrowdsaleLib.sol#1477)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

BasicMathLib.times(uint256,uint256) (../../sb/InteractiveCrowdsaleLib.sol#38-47) uses assembly
	- INLINE ASM (../../sb/InteractiveCrowdsaleLib.sol#39-47)
BasicMathLib.dividedBy(uint256,uint256) (../../sb/InteractiveCrowdsaleLib.sol#55-70) uses assembly
	- INLINE ASM (../../sb/InteractiveCrowdsaleLib.sol#57-70)
BasicMathLib.plus(uint256,uint256) (../../sb/InteractiveCrowdsaleLib.sol#78-87) uses assembly
	- INLINE ASM (../../sb/InteractiveCrowdsaleLib.sol#79-87)
BasicMathLib.minus(uint256,uint256) (../../sb/InteractiveCrowdsaleLib.sol#95-104) uses assembly
	- INLINE ASM (../../sb/InteractiveCrowdsaleLib.sol#96-104)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

InteractiveCrowdsaleLib.crowdsaleActive(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#1560-1562) is never used and should be removed
InteractiveCrowdsaleLib.crowdsaleEnded(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#1564-1566) is never used and should be removed
InteractiveCrowdsaleLib.getPersonalCap(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage,address) (../../sb/InteractiveCrowdsaleLib.sol#1568-1570) is never used and should be removed
InteractiveCrowdsaleLib.getTokensSold(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#1572-1574) is never used and should be removed
InteractiveCrowdsaleLib.withdrawLeftoverWei(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#1550-1553) is never used and should be removed
InteractiveCrowdsaleLib.withdrawOwnerEth(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#1555-1558) is never used and should be removed
LinkedListLib.getNode(LinkedListLib.LinkedList,uint256) (../../sb/InteractiveCrowdsaleLib.sol#831-839) is never used and should be removed
LinkedListLib.listExists(LinkedListLib.LinkedList) (../../sb/InteractiveCrowdsaleLib.sol#785-795) is never used and should be removed
LinkedListLib.pop(LinkedListLib.LinkedList,bool) (../../sb/InteractiveCrowdsaleLib.sol#920-927) is never used and should be removed
LinkedListLib.push(LinkedListLib.LinkedList,uint256,bool) (../../sb/InteractiveCrowdsaleLib.sol#913-915) is never used and should be removed
LinkedListLib.remove(LinkedListLib.LinkedList,uint256) (../../sb/InteractiveCrowdsaleLib.sol#901-907) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Pragma version^0.4.18 (../../sb/InteractiveCrowdsaleLib.sol#1) allows old versions
solc-0.4.26 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter TokenLib.init(TokenLib.TokenStorage,address,string,string,uint8,uint256,bool)._owner (../../sb/InteractiveCrowdsaleLib.sol#166) is not in mixedCase
Parameter TokenLib.init(TokenLib.TokenStorage,address,string,string,uint8,uint256,bool)._name (../../sb/InteractiveCrowdsaleLib.sol#167) is not in mixedCase
Parameter TokenLib.init(TokenLib.TokenStorage,address,string,string,uint8,uint256,bool)._symbol (../../sb/InteractiveCrowdsaleLib.sol#168) is not in mixedCase
Parameter TokenLib.init(TokenLib.TokenStorage,address,string,string,uint8,uint256,bool)._decimals (../../sb/InteractiveCrowdsaleLib.sol#169) is not in mixedCase
Parameter TokenLib.init(TokenLib.TokenStorage,address,string,string,uint8,uint256,bool)._initial_supply (../../sb/InteractiveCrowdsaleLib.sol#170) is not in mixedCase
Parameter TokenLib.init(TokenLib.TokenStorage,address,string,string,uint8,uint256,bool)._allowMinting (../../sb/InteractiveCrowdsaleLib.sol#171) is not in mixedCase
Parameter TokenLib.transfer(TokenLib.TokenStorage,address,uint256)._to (../../sb/InteractiveCrowdsaleLib.sol#191) is not in mixedCase
Parameter TokenLib.transfer(TokenLib.TokenStorage,address,uint256)._value (../../sb/InteractiveCrowdsaleLib.sol#191) is not in mixedCase
Parameter TokenLib.transferFrom(TokenLib.TokenStorage,address,address,uint256)._from (../../sb/InteractiveCrowdsaleLib.sol#212) is not in mixedCase
Parameter TokenLib.transferFrom(TokenLib.TokenStorage,address,address,uint256)._to (../../sb/InteractiveCrowdsaleLib.sol#213) is not in mixedCase
Parameter TokenLib.transferFrom(TokenLib.TokenStorage,address,address,uint256)._value (../../sb/InteractiveCrowdsaleLib.sol#214) is not in mixedCase
Parameter TokenLib.balanceOf(TokenLib.TokenStorage,address)._owner (../../sb/InteractiveCrowdsaleLib.sol#241) is not in mixedCase
Parameter TokenLib.approve(TokenLib.TokenStorage,address,uint256)._spender (../../sb/InteractiveCrowdsaleLib.sol#250) is not in mixedCase
Parameter TokenLib.approve(TokenLib.TokenStorage,address,uint256)._value (../../sb/InteractiveCrowdsaleLib.sol#250) is not in mixedCase
Parameter TokenLib.allowance(TokenLib.TokenStorage,address,address)._owner (../../sb/InteractiveCrowdsaleLib.sol#264) is not in mixedCase
Parameter TokenLib.allowance(TokenLib.TokenStorage,address,address)._spender (../../sb/InteractiveCrowdsaleLib.sol#264) is not in mixedCase
Parameter TokenLib.approveChange(TokenLib.TokenStorage,address,uint256,bool)._spender (../../sb/InteractiveCrowdsaleLib.sol#277) is not in mixedCase
Parameter TokenLib.approveChange(TokenLib.TokenStorage,address,uint256,bool)._valueChange (../../sb/InteractiveCrowdsaleLib.sol#277) is not in mixedCase
Parameter TokenLib.approveChange(TokenLib.TokenStorage,address,uint256,bool)._increase (../../sb/InteractiveCrowdsaleLib.sol#277) is not in mixedCase
Parameter TokenLib.changeOwner(TokenLib.TokenStorage,address)._newOwner (../../sb/InteractiveCrowdsaleLib.sol#305) is not in mixedCase
Parameter TokenLib.mintToken(TokenLib.TokenStorage,uint256)._amount (../../sb/InteractiveCrowdsaleLib.sol#317) is not in mixedCase
Parameter TokenLib.burnToken(TokenLib.TokenStorage,uint256)._amount (../../sb/InteractiveCrowdsaleLib.sol#346) is not in mixedCase
Parameter CrowdsaleLib.init(CrowdsaleLib.CrowdsaleStorage,address,uint256[],uint256,uint8,CrowdsaleToken)._owner (../../sb/InteractiveCrowdsaleLib.sol#549) is not in mixedCase
Parameter CrowdsaleLib.init(CrowdsaleLib.CrowdsaleStorage,address,uint256[],uint256,uint8,CrowdsaleToken)._saleData (../../sb/InteractiveCrowdsaleLib.sol#550) is not in mixedCase
Parameter CrowdsaleLib.init(CrowdsaleLib.CrowdsaleStorage,address,uint256[],uint256,uint8,CrowdsaleToken)._endTime (../../sb/InteractiveCrowdsaleLib.sol#551) is not in mixedCase
Parameter CrowdsaleLib.init(CrowdsaleLib.CrowdsaleStorage,address,uint256[],uint256,uint8,CrowdsaleToken)._percentBurn (../../sb/InteractiveCrowdsaleLib.sol#552) is not in mixedCase
Parameter CrowdsaleLib.init(CrowdsaleLib.CrowdsaleStorage,address,uint256[],uint256,uint8,CrowdsaleToken)._token (../../sb/InteractiveCrowdsaleLib.sol#553) is not in mixedCase
Parameter CrowdsaleLib.changeTokenPrice(CrowdsaleLib.CrowdsaleStorage,uint256)._tokensPerEth (../../sb/InteractiveCrowdsaleLib.sol#683) is not in mixedCase
Parameter LinkedListLib.nodeExists(LinkedListLib.LinkedList,uint256)._node (../../sb/InteractiveCrowdsaleLib.sol#800) is not in mixedCase
Parameter LinkedListLib.getNode(LinkedListLib.LinkedList,uint256)._node (../../sb/InteractiveCrowdsaleLib.sol#831) is not in mixedCase
Parameter LinkedListLib.getAdjacent(LinkedListLib.LinkedList,uint256,bool)._node (../../sb/InteractiveCrowdsaleLib.sol#845) is not in mixedCase
Parameter LinkedListLib.getAdjacent(LinkedListLib.LinkedList,uint256,bool)._direction (../../sb/InteractiveCrowdsaleLib.sol#845) is not in mixedCase
Parameter LinkedListLib.getSortedSpot(LinkedListLib.LinkedList,uint256,uint256,bool)._node (../../sb/InteractiveCrowdsaleLib.sol#861) is not in mixedCase
Parameter LinkedListLib.getSortedSpot(LinkedListLib.LinkedList,uint256,uint256,bool)._value (../../sb/InteractiveCrowdsaleLib.sol#861) is not in mixedCase
Parameter LinkedListLib.getSortedSpot(LinkedListLib.LinkedList,uint256,uint256,bool)._direction (../../sb/InteractiveCrowdsaleLib.sol#861) is not in mixedCase
Parameter LinkedListLib.createLink(LinkedListLib.LinkedList,uint256,uint256,bool)._node (../../sb/InteractiveCrowdsaleLib.sol#877) is not in mixedCase
Parameter LinkedListLib.createLink(LinkedListLib.LinkedList,uint256,uint256,bool)._link (../../sb/InteractiveCrowdsaleLib.sol#877) is not in mixedCase
Parameter LinkedListLib.createLink(LinkedListLib.LinkedList,uint256,uint256,bool)._direction (../../sb/InteractiveCrowdsaleLib.sol#877) is not in mixedCase
Parameter LinkedListLib.insert(LinkedListLib.LinkedList,uint256,uint256,bool)._node (../../sb/InteractiveCrowdsaleLib.sol#887) is not in mixedCase
Parameter LinkedListLib.insert(LinkedListLib.LinkedList,uint256,uint256,bool)._new (../../sb/InteractiveCrowdsaleLib.sol#887) is not in mixedCase
Parameter LinkedListLib.insert(LinkedListLib.LinkedList,uint256,uint256,bool)._direction (../../sb/InteractiveCrowdsaleLib.sol#887) is not in mixedCase
Parameter LinkedListLib.remove(LinkedListLib.LinkedList,uint256)._node (../../sb/InteractiveCrowdsaleLib.sol#901) is not in mixedCase
Parameter LinkedListLib.push(LinkedListLib.LinkedList,uint256,bool)._node (../../sb/InteractiveCrowdsaleLib.sol#913) is not in mixedCase
Parameter LinkedListLib.push(LinkedListLib.LinkedList,uint256,bool)._direction (../../sb/InteractiveCrowdsaleLib.sol#913) is not in mixedCase
Parameter LinkedListLib.pop(LinkedListLib.LinkedList,bool)._direction (../../sb/InteractiveCrowdsaleLib.sol#920) is not in mixedCase
Parameter InteractiveCrowdsaleLib.init(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage,address,uint256[],uint256,uint256,uint256,uint256,uint8,string,string,uint8,bool)._owner (../../sb/InteractiveCrowdsaleLib.sol#1066) is not in mixedCase
Parameter InteractiveCrowdsaleLib.init(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage,address,uint256[],uint256,uint256,uint256,uint256,uint8,string,string,uint8,bool)._saleData (../../sb/InteractiveCrowdsaleLib.sol#1067) is not in mixedCase
Parameter InteractiveCrowdsaleLib.init(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage,address,uint256[],uint256,uint256,uint256,uint256,uint8,string,string,uint8,bool)._priceBonusPercent (../../sb/InteractiveCrowdsaleLib.sol#1068) is not in mixedCase
Parameter InteractiveCrowdsaleLib.init(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage,address,uint256[],uint256,uint256,uint256,uint256,uint8,string,string,uint8,bool)._minimumRaise (../../sb/InteractiveCrowdsaleLib.sol#1069) is not in mixedCase
Parameter InteractiveCrowdsaleLib.init(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage,address,uint256[],uint256,uint256,uint256,uint256,uint8,string,string,uint8,bool)._endWithdrawalTime (../../sb/InteractiveCrowdsaleLib.sol#1070) is not in mixedCase
Parameter InteractiveCrowdsaleLib.init(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage,address,uint256[],uint256,uint256,uint256,uint256,uint8,string,string,uint8,bool)._endTime (../../sb/InteractiveCrowdsaleLib.sol#1071) is not in mixedCase
Parameter InteractiveCrowdsaleLib.init(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage,address,uint256[],uint256,uint256,uint256,uint256,uint8,string,string,uint8,bool)._percentBeingSold (../../sb/InteractiveCrowdsaleLib.sol#1072) is not in mixedCase
Parameter InteractiveCrowdsaleLib.init(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage,address,uint256[],uint256,uint256,uint256,uint256,uint8,string,string,uint8,bool)._tokenName (../../sb/InteractiveCrowdsaleLib.sol#1073) is not in mixedCase
Parameter InteractiveCrowdsaleLib.init(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage,address,uint256[],uint256,uint256,uint256,uint256,uint8,string,string,uint8,bool)._tokenSymbol (../../sb/InteractiveCrowdsaleLib.sol#1074) is not in mixedCase
Parameter InteractiveCrowdsaleLib.init(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage,address,uint256[],uint256,uint256,uint256,uint256,uint8,string,string,uint8,bool)._tokenDecimals (../../sb/InteractiveCrowdsaleLib.sol#1075) is not in mixedCase
Parameter InteractiveCrowdsaleLib.init(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage,address,uint256[],uint256,uint256,uint256,uint256,uint8,string,string,uint8,bool)._allowMinting (../../sb/InteractiveCrowdsaleLib.sol#1076) is not in mixedCase
Parameter InteractiveCrowdsaleLib.numDigits(uint256)._number (../../sb/InteractiveCrowdsaleLib.sol#1105) is not in mixedCase
Parameter InteractiveCrowdsaleLib.calculateTokenPurchase(uint256,uint256)._amount (../../sb/InteractiveCrowdsaleLib.sol#1120) is not in mixedCase
Parameter InteractiveCrowdsaleLib.calculateTokenPurchase(uint256,uint256)._price (../../sb/InteractiveCrowdsaleLib.sol#1121) is not in mixedCase
Parameter InteractiveCrowdsaleLib.submitBid(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage,uint256,uint256,uint256)._amount (../../sb/InteractiveCrowdsaleLib.sol#1168) is not in mixedCase
Parameter InteractiveCrowdsaleLib.submitBid(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage,uint256,uint256,uint256)._personalCap (../../sb/InteractiveCrowdsaleLib.sol#1169) is not in mixedCase
Parameter InteractiveCrowdsaleLib.submitBid(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage,uint256,uint256,uint256)._valuePredict (../../sb/InteractiveCrowdsaleLib.sol#1170) is not in mixedCase
Parameter InteractiveCrowdsaleLib.getPersonalCap(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage,address)._bidder (../../sb/InteractiveCrowdsaleLib.sol#1568) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in CrowdsaleLib.withdrawLeftoverWei(CrowdsaleLib.CrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#645-656):
	External calls:
	- msg.sender.transfer(total) (../../sb/InteractiveCrowdsaleLib.sol#653)
	Event emitted after the call(s):
	- LogWeiWithdrawn(msg.sender,total) (../../sb/InteractiveCrowdsaleLib.sol#654)
Reentrancy in CrowdsaleLib.withdrawOwnerEth(CrowdsaleLib.CrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#661-676):
	External calls:
	- self.owner.transfer(amount) (../../sb/InteractiveCrowdsaleLib.sol#672)
	Event emitted after the call(s):
	- LogOwnerEthWithdrawn(msg.sender,amount,Crowdsale owner has withdrawn all funds!) (../../sb/InteractiveCrowdsaleLib.sol#673)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

InteractiveCrowdsaleLib.calculateTokenPurchase(uint256,uint256) (../../sb/InteractiveCrowdsaleLib.sol#1120-1141) uses literals with too many digits:
	- numTokens = weiTokens / 1000000000000000000 (../../sb/InteractiveCrowdsaleLib.sol#1136)
InteractiveCrowdsaleLib.calculateTokenPurchase(uint256,uint256) (../../sb/InteractiveCrowdsaleLib.sol#1120-1141) uses literals with too many digits:
	- remainder = weiTokens % 1000000000000000000 (../../sb/InteractiveCrowdsaleLib.sol#1137)
InteractiveCrowdsaleLib.launchToken(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#1422-1456) uses literals with too many digits:
	- _supply = (_fullValue * self.base.tokensPerEth) / 1000000000000000000 (../../sb/InteractiveCrowdsaleLib.sol#1428)
InteractiveCrowdsaleLib.launchToken(InteractiveCrowdsaleLib.InteractiveCrowdsaleStorage) (../../sb/InteractiveCrowdsaleLib.sol#1422-1456) uses literals with too many digits:
	- _bonusTokens = (_bonusValue * self.base.tokensPerEth) / 1000000000000000000 (../../sb/InteractiveCrowdsaleLib.sol#1430)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

InteractiveCrowdsaleLib.NULL (../../sb/InteractiveCrowdsaleLib.sol#964) is never used in InteractiveCrowdsaleLib (../../sb/InteractiveCrowdsaleLib.sol#957-1576)
InteractiveCrowdsaleLib.HEAD (../../sb/InteractiveCrowdsaleLib.sol#965) is never used in InteractiveCrowdsaleLib (../../sb/InteractiveCrowdsaleLib.sol#957-1576)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
/sb/InteractiveCrowdsaleLib.sol analyzed (6 contracts with 93 detectors), 128 result(s) found
