{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "Reward",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol",
            "function": "getEpochTotalPower",
            "impact": "Low",
            "line": 385,
            "line_end": 394,
            "message": "Reward.getEpochTotalPower(uint256) (VEReward.sol#385-394) has external calls inside a loop: ve(_ve).totalSupplyAtT(epochInfo[epochId].startTime) (VEReward.sol#389)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Reward",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol",
            "function": "checkEpoch",
            "impact": "Low",
            "line": 250,
            "line_end": 257,
            "message": "Reward.checkEpoch(uint256) (VEReward.sol#250-257) has external calls inside a loop: epochInfo[epochId].totalPower = ve(_ve).totalSupplyAt(epochInfo[epochId].startBlock) (VEReward.sol#255)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Reward",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol",
            "function": "getEpochTotalPower",
            "impact": "Low",
            "line": 385,
            "line_end": 394,
            "message": "Reward.getEpochTotalPower(uint256) (VEReward.sol#385-394) has external calls inside a loop: ve(_ve).totalSupplyAt(blk) (VEReward.sol#391)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Reward",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol",
            "function": "claimReward",
            "impact": "Low",
            "line": 286,
            "line_end": 314,
            "message": "Reward.claimReward(uint256,uint256,uint256) (VEReward.sol#286-314) has external calls inside a loop: require(bool)(msg.sender == ve(_ve).ownerOf(tokenId)) (VEReward.sol#287)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SafeERC20",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol",
            "function": "callOptionalReturn",
            "impact": "Low",
            "line": 31,
            "line_end": 42,
            "message": "SafeERC20.callOptionalReturn(IERC20,bytes) (VEReward.sol#31-42) has external calls inside a loop: (success,returndata) = address(token).call(data) (VEReward.sol#35)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Reward",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol",
            "function": "claimReward",
            "impact": "Low",
            "line": 286,
            "line_end": 314,
            "message": "Reward.claimReward(uint256,uint256,uint256) (VEReward.sol#286-314) has external calls inside a loop: IERC20(rewardToken).safeTransfer(ve(_ve).ownerOf(tokenId),reward) (VEReward.sol#311)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Reward",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol",
            "function": "pendingRewardSingle",
            "impact": "Low",
            "line": 409,
            "line_end": 436,
            "message": "Reward.pendingRewardSingle(uint256,uint256) (VEReward.sol#409-436) has external calls inside a loop: power = ve(_ve).balanceOfAtNFT(tokenId,startBlock) (VEReward.sol#419)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Reward",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol",
            "function": "_pendingRewardSingle",
            "impact": "Low",
            "line": 220,
            "line_end": 240,
            "message": "Reward._pendingRewardSingle(uint256,uint256,Reward.EpochInfo) (VEReward.sol#220-240) has external calls inside a loop: power = ve(_ve).balanceOfAtNFT(tokenId,epoch.startBlock) (VEReward.sol#236)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Reward",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol",
            "function": "claimReward",
            "impact": "Low",
            "line": 286,
            "line_end": 314,
            "message": "Reentrancy in Reward.claimReward(uint256,uint256,uint256) (VEReward.sol#286-314):\n\tExternal calls:\n\t- IERC20(rewardToken).safeTransfer(ve(_ve).ownerOf(tokenId),reward) (VEReward.sol#311)\n\tEvent emitted after the call(s):\n\t- LogClaimReward(tokenId,reward) (VEReward.sol#312)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Reward",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol",
            "function": "addEpochBatch",
            "impact": "Low",
            "line": 175,
            "line_end": 197,
            "message": "Reward.addEpochBatch(uint256,uint256,uint256,uint256) (VEReward.sol#175-197) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- assert(bool)(block.timestamp < endTime && startTime < endTime) (VEReward.sol#176)\n\t- lastPointTime < block.timestamp (VEReward.sol#192)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Reward",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol",
            "function": "checkpointAndCheckEpoch",
            "impact": "Low",
            "line": 242,
            "line_end": 248,
            "message": "Reward.checkpointAndCheckEpoch(uint256) (VEReward.sol#242-248) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- lastPointTime < block.timestamp (VEReward.sol#244)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Reward",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol",
            "function": "updateEpochReward",
            "impact": "Low",
            "line": 211,
            "line_end": 214,
            "message": "Reward.updateEpochReward(uint256,uint256) (VEReward.sol#211-214) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool)(block.timestamp < epochInfo[epochId].startTime) (VEReward.sol#212)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Reward",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol",
            "function": "getEpochTotalPower",
            "impact": "Low",
            "line": 385,
            "line_end": 394,
            "message": "Reward.getEpochTotalPower(uint256) (VEReward.sol#385-394) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- blk > block.number (VEReward.sol#388)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Reward",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol",
            "function": "getBlockByTimeWithoutLastCheckpoint",
            "impact": "Low",
            "line": 367,
            "line_end": 376,
            "message": "Reward.getBlockByTimeWithoutLastCheckpoint(uint256) (VEReward.sol#367-376) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- point_history[point_history.length - 1].ts >= _time (VEReward.sol#368)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Reward",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol",
            "function": "getEpochIdByTime",
            "impact": "Low",
            "line": 317,
            "line_end": 338,
            "message": "Reward.getEpochIdByTime(uint256) (VEReward.sol#317-338) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- assert(bool)(epochInfo[0].startTime <= _time) (VEReward.sol#318)\n\t- _time > epochInfo[epochInfo.length - 1].startTime (VEReward.sol#319)\n\t- epochInfo[_mid].startTime <= _time (VEReward.sol#331)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Reward",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol",
            "function": "_pendingRewardSingle",
            "impact": "Low",
            "line": 220,
            "line_end": 240,
            "message": "Reward._pendingRewardSingle(uint256,uint256,Reward.EpochInfo) (VEReward.sol#220-240) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- end > epoch.endTime (VEReward.sol#231)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Reward",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol",
            "function": "pendingRewardSingle",
            "impact": "Low",
            "line": 409,
            "line_end": 436,
            "message": "Reward.pendingRewardSingle(uint256,uint256) (VEReward.sol#409-436) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- totalPower == 0 (VEReward.sol#416)\n\t- end > epoch.endTime (VEReward.sol#429)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Reward",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol",
            "function": "getBlockByTime",
            "impact": "Low",
            "line": 120,
            "line_end": 144,
            "message": "Reward.getBlockByTime(uint256) (VEReward.sol#120-144) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- _min >= _max (VEReward.sol#126)\n\t- point_history[_mid].ts <= _time (VEReward.sol#130)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Reward",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol",
            "function": "addEpoch",
            "impact": "Low",
            "line": 157,
            "line_end": 169,
            "message": "Reward.addEpoch(uint256,uint256,uint256) (VEReward.sol#157-169) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- assert(bool)(block.timestamp < endTime && startTime < endTime) (VEReward.sol#158)\n\t- lastPointTime < block.timestamp (VEReward.sol#164)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Reward",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol",
            "function": "getUserPower",
            "impact": "Low",
            "line": 397,
            "line_end": 404,
            "message": "Reward.getUserPower(uint256,uint256) (VEReward.sol#397-404) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- blk < block.number (VEReward.sol#400)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Reward",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol",
            "function": "pendingReward",
            "impact": "Low",
            "line": 439,
            "line_end": 481,
            "message": "Reward.pendingReward(uint256) (VEReward.sol#439-481) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp <= epochInfo[epochInfo.length - 1].endTime (VEReward.sol#441)\n\t- block.timestamp < epochInfo[i].startTime (VEReward.sol#447)\n\t- i_scope_0 < rewards.length (VEReward.sol#459)\n\t- rewards[i_scope_0].reward == 0 (VEReward.sol#460)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Reward",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/BlockSec-blocksec_multichain_vemult_v1.0_signed/veMULTI-bac804399d1ea280e5bd8cdc9488b6fa6a0a7fcc/contracts/VEReward.sol",
            "function": "claimReward",
            "impact": "Low",
            "line": 286,
            "line_end": 314,
            "message": "Reward.claimReward(uint256,uint256,uint256) (VEReward.sol#286-314) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp < epoch.startTime (VEReward.sol#293)\n\t- lastPointTime < epoch.startTime (VEReward.sol#296)\n\t- reward_i > 0 (VEReward.sol#303)\n",
            "name": "timestamp",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}