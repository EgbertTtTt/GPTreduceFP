{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "PolyDistribution",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-Polymath/polymath-token-672fabe081e8f90ea025252d92c2eb247d60010e/contracts/PolyDistribution.sol",
            "function": "transferTokens",
            "impact": "High",
            "line": 397,
            "line_end": 414,
            "message": "PolyDistribution.transferTokens(address) (PolyDistribution.sol#397-414) ignores return value by POLY.transfer(_recipient,tokensToTransfer) (PolyDistribution.sol#411)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "PolyDistribution",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-Polymath/polymath-token-672fabe081e8f90ea025252d92c2eb247d60010e/contracts/PolyDistribution.sol",
            "function": "refundTokens",
            "impact": "High",
            "line": 422,
            "line_end": 427,
            "message": "PolyDistribution.refundTokens(address,address) (PolyDistribution.sol#422-427) ignores return value by token.transfer(_recipient,balance) (PolyDistribution.sol#426)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "PolyDistribution",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-Polymath/polymath-token-672fabe081e8f90ea025252d92c2eb247d60010e/contracts/PolyDistribution.sol",
            "function": "airdropTokens",
            "impact": "Medium",
            "line": 376,
            "line_end": 391,
            "message": "Reentrancy in PolyDistribution.airdropTokens(address[]) (PolyDistribution.sol#376-391):\n\tExternal calls:\n\t- require(bool)(POLY.transfer(_recipient[i],250 * decimalFactor)) (PolyDistribution.sol#384)\n\tState variables written after the call(s):\n\t- airdrops[_recipient[i]] = true (PolyDistribution.sol#383)\n\tPolyDistribution.airdrops (PolyDistribution.sol#308) can be used in cross function reentrancies:\n\t- PolyDistribution.airdropTokens(address[]) (PolyDistribution.sol#376-391)\n\t- PolyDistribution.airdrops (PolyDistribution.sol#308)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "PolyDistribution",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-Polymath/polymath-token-672fabe081e8f90ea025252d92c2eb247d60010e/contracts/PolyDistribution.sol",
            "function": "airdropTokens",
            "impact": "Low",
            "line": 376,
            "line_end": 391,
            "message": "PolyDistribution.airdropTokens(address[]) (PolyDistribution.sol#376-391) has external calls inside a loop: require(bool)(POLY.transfer(_recipient[i],250 * decimalFactor)) (PolyDistribution.sol#384)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "PolyDistribution",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-Polymath/polymath-token-672fabe081e8f90ea025252d92c2eb247d60010e/contracts/PolyDistribution.sol",
            "function": "airdropTokens",
            "impact": "Low",
            "line": 376,
            "line_end": 391,
            "message": "Reentrancy in PolyDistribution.airdropTokens(address[]) (PolyDistribution.sol#376-391):\n\tExternal calls:\n\t- require(bool)(POLY.transfer(_recipient[i],250 * decimalFactor)) (PolyDistribution.sol#384)\n\tState variables written after the call(s):\n\t- AVAILABLE_AIRDROP_SUPPLY = AVAILABLE_AIRDROP_SUPPLY.sub(airdropped) (PolyDistribution.sol#388)\n\t- AVAILABLE_TOTAL_SUPPLY = AVAILABLE_TOTAL_SUPPLY.sub(airdropped) (PolyDistribution.sol#389)\n\t- grandTotalClaimed = grandTotalClaimed.add(airdropped) (PolyDistribution.sol#390)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "PolyDistribution",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-Polymath/polymath-token-672fabe081e8f90ea025252d92c2eb247d60010e/contracts/PolyDistribution.sol",
            "function": "transferTokens",
            "impact": "Low",
            "line": 397,
            "line_end": 414,
            "message": "Reentrancy in PolyDistribution.transferTokens(address) (PolyDistribution.sol#397-414):\n\tExternal calls:\n\t- POLY.transfer(_recipient,tokensToTransfer) (PolyDistribution.sol#411)\n\tState variables written after the call(s):\n\t- grandTotalClaimed = grandTotalClaimed.add(tokensToTransfer) (PolyDistribution.sol#412)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "PolyDistribution",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-Polymath/polymath-token-672fabe081e8f90ea025252d92c2eb247d60010e/contracts/PolyDistribution.sol",
            "function": "transferTokens",
            "impact": "Low",
            "line": 397,
            "line_end": 414,
            "message": "Reentrancy in PolyDistribution.transferTokens(address) (PolyDistribution.sol#397-414):\n\tExternal calls:\n\t- POLY.transfer(_recipient,tokensToTransfer) (PolyDistribution.sol#411)\n\tEvent emitted after the call(s):\n\t- LogPolyClaimed(_recipient,allocations[_recipient].AllocationSupply,tokensToTransfer,newAmountClaimed,grandTotalClaimed) (PolyDistribution.sol#413)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "PolyDistribution",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-Polymath/polymath-token-672fabe081e8f90ea025252d92c2eb247d60010e/contracts/PolyDistribution.sol",
            "function": "transferTokens",
            "impact": "Low",
            "line": 397,
            "line_end": 414,
            "message": "PolyDistribution.transferTokens(address) (PolyDistribution.sol#397-414) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool)(now >= allocations[_recipient].endCliff) (PolyDistribution.sol#399)\n\t- require(bool)(now >= startTime) (PolyDistribution.sol#400)\n\t- allocations[_recipient].endVesting > now (PolyDistribution.sol#402)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "PolyDistribution",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-Polymath/polymath-token-672fabe081e8f90ea025252d92c2eb247d60010e/contracts/PolyDistribution.sol",
            "function": "airdropTokens",
            "impact": "Low",
            "line": 376,
            "line_end": 391,
            "message": "PolyDistribution.airdropTokens(address[]) (PolyDistribution.sol#376-391) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool)(now >= startTime) (PolyDistribution.sol#377)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "PolyDistribution",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-Polymath/polymath-token-672fabe081e8f90ea025252d92c2eb247d60010e/contracts/PolyDistribution.sol",
            "function": "PolyDistribution",
            "impact": "Low",
            "line": 322,
            "line_end": 327,
            "message": "PolyDistribution.PolyDistribution(uint256) (PolyDistribution.sol#322-327) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool)(_startTime >= now) (PolyDistribution.sol#323)\n",
            "name": "timestamp",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}