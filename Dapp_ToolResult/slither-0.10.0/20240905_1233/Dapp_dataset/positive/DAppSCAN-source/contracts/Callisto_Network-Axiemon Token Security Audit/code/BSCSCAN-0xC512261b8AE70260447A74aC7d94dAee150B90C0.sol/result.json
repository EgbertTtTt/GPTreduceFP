{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "LiquidityGeneratorToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol",
            "function": "_transfer",
            "impact": "High",
            "line": 995,
            "line_end": 1039,
            "message": "Reentrancy in LiquidityGeneratorToken._transfer(address,address,uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#995-1039):\n\tExternal calls:\n\t- swapAndLiquify(contractTokenBalance) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1026)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,dead,block.timestamp) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1087-1094)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1073-1079)\n\tExternal calls sending eth:\n\t- swapAndLiquify(contractTokenBalance) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1026)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,dead,block.timestamp) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1087-1094)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount,takeFee) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1038)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)].add(rLiquidity) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#951)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1121)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1132)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1122)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1144)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#862)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1134)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1145)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#864)\n\tLiquidityGeneratorToken._rOwned (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#689) can be used in cross function reentrancies:\n\t- LiquidityGeneratorToken._getCurrentSupply() (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#935-945)\n\t- LiquidityGeneratorToken._takeLiquidity(uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#948-954)\n\t- LiquidityGeneratorToken._transferBothExcluded(address,address,uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#859-868)\n\t- LiquidityGeneratorToken._transferFromExcluded(address,address,uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1141-1149)\n\t- LiquidityGeneratorToken._transferStandard(address,address,uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1119-1126)\n\t- LiquidityGeneratorToken._transferToExcluded(address,address,uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1130-1138)\n\t- LiquidityGeneratorToken.balanceOf(address) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#785-789)\n\t- LiquidityGeneratorToken.constructor(address,string,string,uint8,uint256,uint8,uint8,uint256,uint256,uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#737-767)\n\t- LiquidityGeneratorToken.deliver(uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#831-838)\n\t- _tokenTransfer(from,to,amount,takeFee) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1038)\n\t\t- _rTotal = _rTotal.sub(rFee) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#904)\n\tLiquidityGeneratorToken._rTotal (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#700) can be used in cross function reentrancies:\n\t- LiquidityGeneratorToken._getCurrentSupply() (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#935-945)\n\t- LiquidityGeneratorToken._reflectFee(uint256,uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#903-906)\n\t- LiquidityGeneratorToken.constructor(address,string,string,uint8,uint256,uint8,uint8,uint256,uint256,uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#737-767)\n\t- LiquidityGeneratorToken.deliver(uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#831-838)\n\t- LiquidityGeneratorToken.tokenFromReflection(uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#851-855)\n\t- _tokenTransfer(from,to,amount,takeFee) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1038)\n\t\t- _tOwned[address(this)] = _tOwned[address(this)].add(tLiquidity) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#953)\n\t\t- _tOwned[sender] = _tOwned[sender].sub(tAmount) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#861)\n\t\t- _tOwned[sender] = _tOwned[sender].sub(tAmount) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1143)\n\t\t- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1133)\n\t\t- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#863)\n\tLiquidityGeneratorToken._tOwned (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#690) can be used in cross function reentrancies:\n\t- LiquidityGeneratorToken._getCurrentSupply() (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#935-945)\n\t- LiquidityGeneratorToken._takeLiquidity(uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#948-954)\n\t- LiquidityGeneratorToken._transferBothExcluded(address,address,uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#859-868)\n\t- LiquidityGeneratorToken._transferFromExcluded(address,address,uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1141-1149)\n\t- LiquidityGeneratorToken._transferToExcluded(address,address,uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1130-1138)\n\t- LiquidityGeneratorToken.balanceOf(address) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#785-789)\n",
            "name": "reentrancy-eth",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "LiquidityGeneratorToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol",
            "function": "balanceOf",
            "impact": "High",
            "line": 695,
            "message": "LiquidityGeneratorToken._isExcluded (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#695) is never initialized. It is used in:\n\t- LiquidityGeneratorToken.balanceOf(address) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#785-789)\n\t- LiquidityGeneratorToken.isExcludedFromReward(address) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#822-824)\n\t- LiquidityGeneratorToken.deliver(uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#831-838)\n\t- LiquidityGeneratorToken._takeLiquidity(uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#948-954)\n\t- LiquidityGeneratorToken._tokenTransfer(address,address,uint256,bool) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1099-1117)\n",
            "name": "uninitialized-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "LiquidityGeneratorToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol",
            "function": "_getCurrentSupply",
            "impact": "High",
            "line": 696,
            "message": "LiquidityGeneratorToken._excluded (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#696) is never initialized. It is used in:\n\t- LiquidityGeneratorToken._getCurrentSupply() (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#935-945)\n",
            "name": "uninitialized-state",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LiquidityGeneratorToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol",
            "function": "addLiquidity",
            "impact": "Medium",
            "line": 1082,
            "line_end": 1095,
            "message": "LiquidityGeneratorToken.addLiquidity(uint256,uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1082-1095) ignores return value by uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,dead,block.timestamp) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1087-1094)\n",
            "name": "unused-return",
            "check": "TP"
        },
        {
            "confidence": "High",
            "contract": "LiquidityGeneratorToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol",
            "function": "symbol",
            "impact": "Low",
            "line": 737,
            "message": "LiquidityGeneratorToken.constructor(address,string,string,uint8,uint256,uint8,uint8,uint256,uint256,uint256).symbol (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#737) shadows:\n\t- LiquidityGeneratorToken.symbol() (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#773-775) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "LiquidityGeneratorToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol",
            "function": "name",
            "impact": "Low",
            "line": 737,
            "message": "LiquidityGeneratorToken.constructor(address,string,string,uint8,uint256,uint8,uint8,uint256,uint256,uint256).name (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#737) shadows:\n\t- LiquidityGeneratorToken.name() (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#769-771) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "Ownable",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol",
            "function": "owner",
            "impact": "Low",
            "line": 987,
            "message": "LiquidityGeneratorToken._approve(address,address,uint256).owner (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#987) shadows:\n\t- Ownable.owner() (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#418-420) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "Ownable",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol",
            "function": "owner",
            "impact": "Low",
            "line": 796,
            "message": "LiquidityGeneratorToken.allowance(address,address).owner (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#796) shadows:\n\t- Ownable.owner() (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#418-420) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LiquidityGeneratorToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol",
            "function": "setMaxTxPercent",
            "impact": "Low",
            "line": 888,
            "line_end": 893,
            "message": "LiquidityGeneratorToken.setMaxTxPercent(uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#888-893) should emit an event for: \n\t- _maxTxAmount = _tTotal.mul(maxTxPercent).div(10 ** 2) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#890-892) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LiquidityGeneratorToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol",
            "function": "setTaxFeePercent",
            "impact": "Low",
            "line": 878,
            "line_end": 881,
            "message": "LiquidityGeneratorToken.setTaxFeePercent(uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#878-881) should emit an event for: \n\t- _taxFee = taxFee (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#880) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LiquidityGeneratorToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol",
            "function": "setLiquidityFeePercent",
            "impact": "Low",
            "line": 883,
            "line_end": 886,
            "message": "LiquidityGeneratorToken.setLiquidityFeePercent(uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#883-886) should emit an event for: \n\t- _liquidityFee = liquidityFee (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#885) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LiquidityGeneratorToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol",
            "function": "_transfer",
            "impact": "Low",
            "line": 995,
            "line_end": 1039,
            "message": "Reentrancy in LiquidityGeneratorToken._transfer(address,address,uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#995-1039):\n\tExternal calls:\n\t- swapAndLiquify(contractTokenBalance) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1026)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,dead,block.timestamp) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1087-1094)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1073-1079)\n\tExternal calls sending eth:\n\t- swapAndLiquify(contractTokenBalance) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1026)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,dead,block.timestamp) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1087-1094)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount,takeFee) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1038)\n\t\t- _liquidityFee = _previousLiquidityFee (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#980)\n\t\t- _liquidityFee = 0 (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#975)\n\t- _tokenTransfer(from,to,amount,takeFee) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1038)\n\t\t- _previousLiquidityFee = _liquidityFee (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#972)\n\t- _tokenTransfer(from,to,amount,takeFee) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1038)\n\t\t- _previousTaxFee = _taxFee (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#971)\n\t- _tokenTransfer(from,to,amount,takeFee) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1038)\n\t\t- _tFeeTotal = _tFeeTotal.add(tFee) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#905)\n\t- _tokenTransfer(from,to,amount,takeFee) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1038)\n\t\t- _taxFee = _previousTaxFee (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#979)\n\t\t- _taxFee = 0 (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#974)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LiquidityGeneratorToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol",
            "function": "swapAndLiquify",
            "impact": "Low",
            "line": 1041,
            "line_end": 1062,
            "message": "Reentrancy in LiquidityGeneratorToken.swapAndLiquify(uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1041-1062):\n\tExternal calls:\n\t- swapTokensForEth(half) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1053)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1073-1079)\n\t- addLiquidity(otherHalf,newBalance) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1059)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,dead,block.timestamp) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1087-1094)\n\tExternal calls sending eth:\n\t- addLiquidity(otherHalf,newBalance) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1059)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,dead,block.timestamp) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1087-1094)\n\tState variables written after the call(s):\n\t- addLiquidity(otherHalf,newBalance) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1059)\n\t\t- _allowances[owner][spender] = amount (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#991)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LiquidityGeneratorToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol",
            "function": "transferFrom",
            "impact": "Low",
            "line": 805,
            "line_end": 809,
            "message": "Reentrancy in LiquidityGeneratorToken.transferFrom(address,address,uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#805-809):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#806)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,dead,block.timestamp) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1087-1094)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1073-1079)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#806)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,dead,block.timestamp) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1087-1094)\n\tState variables written after the call(s):\n\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#807)\n\t\t- _allowances[owner][spender] = amount (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#991)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LiquidityGeneratorToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol",
            "function": "transferFrom",
            "impact": "Low",
            "line": 805,
            "line_end": 809,
            "message": "Reentrancy in LiquidityGeneratorToken.transferFrom(address,address,uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#805-809):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#806)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,dead,block.timestamp) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1087-1094)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1073-1079)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#806)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,dead,block.timestamp) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1087-1094)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#992)\n\t\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#807)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LiquidityGeneratorToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol",
            "function": "_transfer",
            "impact": "Low",
            "line": 995,
            "line_end": 1039,
            "message": "Reentrancy in LiquidityGeneratorToken._transfer(address,address,uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#995-1039):\n\tExternal calls:\n\t- swapAndLiquify(contractTokenBalance) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1026)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,dead,block.timestamp) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1087-1094)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1073-1079)\n\tExternal calls sending eth:\n\t- swapAndLiquify(contractTokenBalance) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1026)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,dead,block.timestamp) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1087-1094)\n\tEvent emitted after the call(s):\n\t- Transfer(sender,recipient,tTransferAmount) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1125)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1038)\n\t- Transfer(sender,recipient,tTransferAmount) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1137)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1038)\n\t- Transfer(sender,recipient,tTransferAmount) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1148)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1038)\n\t- Transfer(sender,recipient,tTransferAmount) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#867)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1038)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LiquidityGeneratorToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol",
            "function": "swapAndLiquify",
            "impact": "Low",
            "line": 1041,
            "line_end": 1062,
            "message": "Reentrancy in LiquidityGeneratorToken.swapAndLiquify(uint256) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1041-1062):\n\tExternal calls:\n\t- swapTokensForEth(half) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1053)\n\t\t- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1073-1079)\n\t- addLiquidity(otherHalf,newBalance) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1059)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,dead,block.timestamp) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1087-1094)\n\tExternal calls sending eth:\n\t- addLiquidity(otherHalf,newBalance) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1059)\n\t\t- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,dead,block.timestamp) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1087-1094)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#992)\n\t\t- addLiquidity(otherHalf,newBalance) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1059)\n\t- SwapAndLiquify(half,newBalance,otherHalf) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1061)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Ownable",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol",
            "function": "unlock",
            "impact": "Low",
            "line": 465,
            "line_end": 471,
            "message": "Ownable.unlock() (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#465-471) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(now > _lockTime,Contract is locked until 7 days) (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#468)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol",
            "impact": "Informational",
            "line": 3,
            "message": "Different versions of Solidity are used:\n\t- Version used: ['>=0.5.0', '>=0.6.2', '^0.6.12']\n\t- >=0.5.0 (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#3)\n\t- >=0.5.0 (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#4)\n\t- >=0.6.2 (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#5)\n\t- >=0.6.2 (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#6)\n\t- ABIEncoderV2 (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#2)\n\t- ^0.6.12 (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#1)\n",
            "name": "pragma",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol",
            "impact": "Informational",
            "line": 712,
            "message": "LiquidityGeneratorToken._previousLiquidityFee (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#712) is set pre-construction with a non-constant function or state variable:\n\t- _liquidityFee\n",
            "name": "function-init-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Callisto_Network-Axiemon Token Security Audit/code/BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol",
            "impact": "Informational",
            "line": 709,
            "message": "LiquidityGeneratorToken._previousTaxFee (BSCSCAN-0xC512261b8AE70260447A74aC7d94dAee150B90C0.sol#709) is set pre-construction with a non-constant function or state variable:\n\t- _taxFee\n",
            "name": "function-init-state",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}