{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "GovernorAlpha",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Gitcoin_Token_Distribution/governance-ee5e45a008d65021831de9f3e83053026f2a4dd2/contracts/GovernorAlpha.sol",
            "function": "execute",
            "impact": "High",
            "line": 196,
            "line_end": 204,
            "message": "GovernorAlpha.execute(uint256) (GovernorAlpha.sol#196-204) sends eth to arbitrary user\n\tDangerous calls:\n\t- timelock.executeTransaction.value(proposal.values[i])(proposal.targets[i],proposal.values[i],proposal.signatures[i],proposal.calldatas[i],proposal.eta) (GovernorAlpha.sol#201)\n",
            "name": "arbitrary-send-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "GovernorAlpha",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Gitcoin_Token_Distribution/governance-ee5e45a008d65021831de9f3e83053026f2a4dd2/contracts/GovernorAlpha.sol",
            "function": "queue",
            "impact": "Medium",
            "line": 180,
            "line_end": 189,
            "message": "Reentrancy in GovernorAlpha.queue(uint256) (GovernorAlpha.sol#180-189):\n\tExternal calls:\n\t- _queueOrRevert(proposal.targets[i],proposal.values[i],proposal.signatures[i],proposal.calldatas[i],eta) (GovernorAlpha.sol#185)\n\t\t- timelock.queueTransaction(target,value,signature,data,eta) (GovernorAlpha.sol#193)\n\tState variables written after the call(s):\n\t- proposal.eta = eta (GovernorAlpha.sol#187)\n\tGovernorAlpha.proposals (GovernorAlpha.sol#103) can be used in cross function reentrancies:\n\t- GovernorAlpha._castVote(address,uint256,bool) (GovernorAlpha.sol#265-283)\n\t- GovernorAlpha.cancel(uint256) (GovernorAlpha.sol#206-219)\n\t- GovernorAlpha.execute(uint256) (GovernorAlpha.sol#196-204)\n\t- GovernorAlpha.getActions(uint256) (GovernorAlpha.sol#221-224)\n\t- GovernorAlpha.getReceipt(uint256,address) (GovernorAlpha.sol#226-228)\n\t- GovernorAlpha.proposals (GovernorAlpha.sol#103)\n\t- GovernorAlpha.propose(address[],uint256[],string[],bytes[],string) (GovernorAlpha.sol#140-178)\n\t- GovernorAlpha.queue(uint256) (GovernorAlpha.sol#180-189)\n\t- GovernorAlpha.state(uint256) (GovernorAlpha.sol#230-250)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "GovernorAlpha",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Gitcoin_Token_Distribution/governance-ee5e45a008d65021831de9f3e83053026f2a4dd2/contracts/GovernorAlpha.sol",
            "function": "execute",
            "impact": "Medium",
            "line": 196,
            "line_end": 204,
            "message": "GovernorAlpha.execute(uint256) (GovernorAlpha.sol#196-204) ignores return value by timelock.executeTransaction.value(proposal.values[i])(proposal.targets[i],proposal.values[i],proposal.signatures[i],proposal.calldatas[i],proposal.eta) (GovernorAlpha.sol#201)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "GovernorAlpha",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Gitcoin_Token_Distribution/governance-ee5e45a008d65021831de9f3e83053026f2a4dd2/contracts/GovernorAlpha.sol",
            "function": "_queueOrRevert",
            "impact": "Medium",
            "line": 191,
            "line_end": 194,
            "message": "GovernorAlpha._queueOrRevert(address,uint256,string,bytes,uint256) (GovernorAlpha.sol#191-194) ignores return value by timelock.queueTransaction(target,value,signature,data,eta) (GovernorAlpha.sol#193)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "GovernorAlpha",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Gitcoin_Token_Distribution/governance-ee5e45a008d65021831de9f3e83053026f2a4dd2/contracts/GovernorAlpha.sol",
            "function": "state",
            "impact": "Low",
            "line": 207,
            "message": "GovernorAlpha.cancel(uint256).state (GovernorAlpha.sol#207) shadows:\n\t- GovernorAlpha.state(uint256) (GovernorAlpha.sol#230-250) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "GovernorAlpha",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Gitcoin_Token_Distribution/governance-ee5e45a008d65021831de9f3e83053026f2a4dd2/contracts/GovernorAlpha.sol",
            "function": "_queueOrRevert",
            "impact": "Low",
            "line": 191,
            "line_end": 194,
            "message": "GovernorAlpha._queueOrRevert(address,uint256,string,bytes,uint256) (GovernorAlpha.sol#191-194) has external calls inside a loop: timelock.queueTransaction(target,value,signature,data,eta) (GovernorAlpha.sol#193)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "GovernorAlpha",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Gitcoin_Token_Distribution/governance-ee5e45a008d65021831de9f3e83053026f2a4dd2/contracts/GovernorAlpha.sol",
            "function": "_queueOrRevert",
            "impact": "Low",
            "line": 191,
            "line_end": 194,
            "message": "GovernorAlpha._queueOrRevert(address,uint256,string,bytes,uint256) (GovernorAlpha.sol#191-194) has external calls inside a loop: require(bool,string)(! timelock.queuedTransactions(keccak256(bytes)(abi.encode(target,value,signature,data,eta))),GovernorAlpha::_queueOrRevert: proposal action already queued at eta) (GovernorAlpha.sol#192)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "GovernorAlpha",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Gitcoin_Token_Distribution/governance-ee5e45a008d65021831de9f3e83053026f2a4dd2/contracts/GovernorAlpha.sol",
            "function": "cancel",
            "impact": "Low",
            "line": 206,
            "line_end": 219,
            "message": "GovernorAlpha.cancel(uint256) (GovernorAlpha.sol#206-219) has external calls inside a loop: timelock.cancelTransaction(proposal.targets[i],proposal.values[i],proposal.signatures[i],proposal.calldatas[i],proposal.eta) (GovernorAlpha.sol#215)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "GovernorAlpha",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Gitcoin_Token_Distribution/governance-ee5e45a008d65021831de9f3e83053026f2a4dd2/contracts/GovernorAlpha.sol",
            "function": "execute",
            "impact": "Low",
            "line": 196,
            "line_end": 204,
            "message": "GovernorAlpha.execute(uint256) (GovernorAlpha.sol#196-204) has external calls inside a loop: timelock.executeTransaction.value(proposal.values[i])(proposal.targets[i],proposal.values[i],proposal.signatures[i],proposal.calldatas[i],proposal.eta) (GovernorAlpha.sol#201)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "GovernorAlpha",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Gitcoin_Token_Distribution/governance-ee5e45a008d65021831de9f3e83053026f2a4dd2/contracts/GovernorAlpha.sol",
            "function": "cancel",
            "impact": "Low",
            "line": 206,
            "line_end": 219,
            "message": "Reentrancy in GovernorAlpha.cancel(uint256) (GovernorAlpha.sol#206-219):\n\tExternal calls:\n\t- timelock.cancelTransaction(proposal.targets[i],proposal.values[i],proposal.signatures[i],proposal.calldatas[i],proposal.eta) (GovernorAlpha.sol#215)\n\tEvent emitted after the call(s):\n\t- ProposalCanceled(proposalId) (GovernorAlpha.sol#218)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "GovernorAlpha",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Gitcoin_Token_Distribution/governance-ee5e45a008d65021831de9f3e83053026f2a4dd2/contracts/GovernorAlpha.sol",
            "function": "execute",
            "impact": "Low",
            "line": 196,
            "line_end": 204,
            "message": "Reentrancy in GovernorAlpha.execute(uint256) (GovernorAlpha.sol#196-204):\n\tExternal calls:\n\t- timelock.executeTransaction.value(proposal.values[i])(proposal.targets[i],proposal.values[i],proposal.signatures[i],proposal.calldatas[i],proposal.eta) (GovernorAlpha.sol#201)\n\tEvent emitted after the call(s):\n\t- ProposalExecuted(proposalId) (GovernorAlpha.sol#203)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "GovernorAlpha",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Gitcoin_Token_Distribution/governance-ee5e45a008d65021831de9f3e83053026f2a4dd2/contracts/GovernorAlpha.sol",
            "function": "queue",
            "impact": "Low",
            "line": 180,
            "line_end": 189,
            "message": "Reentrancy in GovernorAlpha.queue(uint256) (GovernorAlpha.sol#180-189):\n\tExternal calls:\n\t- _queueOrRevert(proposal.targets[i],proposal.values[i],proposal.signatures[i],proposal.calldatas[i],eta) (GovernorAlpha.sol#185)\n\t\t- timelock.queueTransaction(target,value,signature,data,eta) (GovernorAlpha.sol#193)\n\tEvent emitted after the call(s):\n\t- ProposalQueued(proposalId,eta) (GovernorAlpha.sol#188)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "GovernorAlpha",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Gitcoin_Token_Distribution/governance-ee5e45a008d65021831de9f3e83053026f2a4dd2/contracts/GovernorAlpha.sol",
            "function": "add256",
            "impact": "Low",
            "line": 285,
            "line_end": 289,
            "message": "GovernorAlpha.add256(uint256,uint256) (GovernorAlpha.sol#285-289) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(c >= a,addition overflow) (GovernorAlpha.sol#287)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "GovernorAlpha",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Gitcoin_Token_Distribution/governance-ee5e45a008d65021831de9f3e83053026f2a4dd2/contracts/GovernorAlpha.sol",
            "function": "_queueOrRevert",
            "impact": "Low",
            "line": 191,
            "line_end": 194,
            "message": "GovernorAlpha._queueOrRevert(address,uint256,string,bytes,uint256) (GovernorAlpha.sol#191-194) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(! timelock.queuedTransactions(keccak256(bytes)(abi.encode(target,value,signature,data,eta))),GovernorAlpha::_queueOrRevert: proposal action already queued at eta) (GovernorAlpha.sol#192)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "GovernorAlpha",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Gitcoin_Token_Distribution/governance-ee5e45a008d65021831de9f3e83053026f2a4dd2/contracts/GovernorAlpha.sol",
            "function": "state",
            "impact": "Low",
            "line": 230,
            "line_end": 250,
            "message": "GovernorAlpha.state(uint256) (GovernorAlpha.sol#230-250) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp >= add256(proposal.eta,timelock.GRACE_PERIOD()) (GovernorAlpha.sol#245)\n",
            "name": "timestamp",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}