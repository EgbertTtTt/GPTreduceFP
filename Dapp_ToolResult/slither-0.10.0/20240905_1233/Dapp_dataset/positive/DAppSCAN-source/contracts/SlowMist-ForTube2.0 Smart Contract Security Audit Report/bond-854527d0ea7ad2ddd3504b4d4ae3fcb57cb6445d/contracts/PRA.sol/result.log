'solc --version' running
'solc /sb/PRA.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running
Compilation warnings/errors on /sb/PRA.sol:
Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> /sb/PRA.sol



PRA.setACL(address) (../../sb/PRA.sol#421-424) should emit an event for: 
	- ACL = _ACL (../../sb/PRA.sol#423) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

PRA.setACL(address)._ACL (../../sb/PRA.sol#421) lacks a zero-check on :
		- ACL = _ACL (../../sb/PRA.sol#423)
PRA.constructor(address,address,uint256)._ACL (../../sb/PRA.sol#426) lacks a zero-check on :
		- ACL = _ACL (../../sb/PRA.sol#427)
PRA.constructor(address,address,uint256)._gov (../../sb/PRA.sol#426) lacks a zero-check on :
		- gov = _gov (../../sb/PRA.sol#428)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Reentrancy in PRA.lock() (../../sb/PRA.sol#438-452):
	External calls:
	- IERC20(gov).safeTransferFrom(who,address(this),line) (../../sb/PRA.sol#450)
	Event emitted after the call(s):
	- MonitorEvent(who,address(0),lock,abi.encodePacked(line)) (../../sb/PRA.sol#451)
Reentrancy in PRA.unlock() (../../sb/PRA.sol#468-477):
	External calls:
	- IERC20(gov).safeTransfer(who,amount) (../../sb/PRA.sol#475)
	Event emitted after the call(s):
	- MonitorEvent(who,address(0),unlock,abi.encodePacked(amount)) (../../sb/PRA.sol#476)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

Address.isContract(address) (../../sb/PRA.sol#260-269) uses assembly
	- INLINE ASM (../../sb/PRA.sol#267)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

SafeERC20.safeApprove(IERC20,address,uint256) (../../sb/PRA.sol#331-340) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sb/PRA.sol#347-350) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sb/PRA.sol#342-345) is never used and should be removed
SafeMath.add(uint256,uint256) (../../sb/PRA.sol#105-110) is never used and should be removed
SafeMath.div(uint256,uint256) (../../sb/PRA.sol#177-179) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sb/PRA.sol#194-201) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sb/PRA.sol#214-216) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sb/PRA.sol#231-234) is never used and should be removed
SafeMath.mul(uint256,uint256) (../../sb/PRA.sol#152-164) is never used and should be removed
SafeMath.sub(uint256,uint256) (../../sb/PRA.sol#121-123) is never used and should be removed
SafeMath.sub(uint256,uint256,string) (../../sb/PRA.sol#136-141) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Pragma version>=0.6.0 (../../sb/PRA.sol#1) allows old versions
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in SafeERC20.callOptionalReturn(IERC20,bytes) (../../sb/PRA.sol#358-377):
	- (success,returndata) = address(token).call(data) (../../sb/PRA.sol#370)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Parameter PRA.setACL(address)._ACL (../../sb/PRA.sol#421) is not in mixedCase
Parameter PRA.reline(uint256)._line (../../sb/PRA.sol#432) is not in mixedCase
Variable PRA.ACL (../../sb/PRA.sol#400) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

PRA.gov (../../sb/PRA.sol#401) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
/sb/PRA.sol analyzed (6 contracts with 93 detectors), 25 result(s) found
