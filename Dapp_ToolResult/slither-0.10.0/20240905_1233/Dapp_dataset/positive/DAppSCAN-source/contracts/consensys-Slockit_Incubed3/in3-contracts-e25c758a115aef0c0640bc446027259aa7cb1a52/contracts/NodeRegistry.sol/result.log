'solc --version' running
'solc /sb/NodeRegistry.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running
Compilation warnings/errors on /sb/NodeRegistry.sol:
/sb/NodeRegistry.sol:2:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.
pragma experimental ABIEncoderV2;
^-------------------------------^


NodeRegistry.registerNodeInternal(string,uint64,uint64,address,address,uint256,uint64).ui (../../sb/NodeRegistry.sol#718) is a local variable never initialized
NodeRegistry.registerNodeInternal(string,uint64,uint64,address,address,uint256,uint64).m (../../sb/NodeRegistry.sol#704) is a local variable never initialized
NodeRegistry.updateNode(address,string,uint64,uint64,uint64).ui (../../sb/NodeRegistry.sol#590) is a local variable never initialized
NodeRegistry.convict(uint256,bytes32).ci (../../sb/NodeRegistry.sol#298) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables

NodeRegistry.removeNodeFromRegistry(address) (../../sb/NodeRegistry.sol#394-408) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp < (blockTimeStampDeployment + YEAR_DEFINITION),only in 1st year) (../../sb/NodeRegistry.sol#400)
NodeRegistry.returnDeposit(address) (../../sb/NodeRegistry.sol#416-429) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp > si.lockedTime,deposit still locked) (../../sb/NodeRegistry.sol#424)
NodeRegistry.revealConvict(address,bytes32,uint256,uint8,bytes32,bytes32) (../../sb/NodeRegistry.sol#443-515) uses timestamp for comparisons
	Dangerous comparisons:
	- assert(bool)(nodes[si.index].signer == _signer) (../../sb/NodeRegistry.sol#494)
NodeRegistry.checkNodeProperties(uint256,uint64) (../../sb/NodeRegistry.sol#653-660) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp < (blockTimeStampDeployment + YEAR_DEFINITION) (../../sb/NodeRegistry.sol#656)
NodeRegistry.registerNodeInternal(string,uint64,uint64,address,address,uint256,uint64) (../../sb/NodeRegistry.sol#674-729) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(! urlIndex[urlHash].used && signerIndex[_signer].stage == Stages.NotInUse,a node with the same url or signer is already registered) (../../sb/NodeRegistry.sol#695-696)
NodeRegistry.removeNode(uint256) (../../sb/NodeRegistry.sol#746-765) uses timestamp for comparisons
	Dangerous comparisons:
	- assert(bool)(length > 0) (../../sb/NodeRegistry.sol#753)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

BlockhashRegistry.getParentAndBlockhash(bytes) (../../sb/NodeRegistry.sol#97-126) uses assembly
	- INLINE ASM (../../sb/NodeRegistry.sol#110-124)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

Pragma version0.5.10 (../../sb/NodeRegistry.sol#1) allows old versions
solc-0.5.10 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter BlockhashRegistry.searchForAvailableBlock(uint256,uint256)._startNumber (../../sb/NodeRegistry.sol#42) is not in mixedCase
Parameter BlockhashRegistry.searchForAvailableBlock(uint256,uint256)._numBlocks (../../sb/NodeRegistry.sol#42) is not in mixedCase
Parameter BlockhashRegistry.recreateBlockheaders(uint256,bytes[])._blockNumber (../../sb/NodeRegistry.sol#60) is not in mixedCase
Parameter BlockhashRegistry.recreateBlockheaders(uint256,bytes[])._blockheaders (../../sb/NodeRegistry.sol#60) is not in mixedCase
Parameter BlockhashRegistry.saveBlockNumber(uint256)._blockNumber (../../sb/NodeRegistry.sol#78) is not in mixedCase
Parameter BlockhashRegistry.getParentAndBlockhash(bytes)._blockheader (../../sb/NodeRegistry.sol#97) is not in mixedCase
Parameter BlockhashRegistry.reCalculateBlockheaders(bytes[],bytes32)._blockheaders (../../sb/NodeRegistry.sol#133) is not in mixedCase
Parameter BlockhashRegistry.reCalculateBlockheaders(bytes[],bytes32)._bHash (../../sb/NodeRegistry.sol#133) is not in mixedCase
Parameter NodeRegistry.convict(uint256,bytes32)._blockNumber (../../sb/NodeRegistry.sol#296) is not in mixedCase
Parameter NodeRegistry.convict(uint256,bytes32)._hash (../../sb/NodeRegistry.sol#296) is not in mixedCase
Parameter NodeRegistry.registerNode(string,uint64,uint64,uint64)._url (../../sb/NodeRegistry.sol#312) is not in mixedCase
Parameter NodeRegistry.registerNode(string,uint64,uint64,uint64)._props (../../sb/NodeRegistry.sol#313) is not in mixedCase
Parameter NodeRegistry.registerNode(string,uint64,uint64,uint64)._timeout (../../sb/NodeRegistry.sol#314) is not in mixedCase
Parameter NodeRegistry.registerNode(string,uint64,uint64,uint64)._weight (../../sb/NodeRegistry.sol#315) is not in mixedCase
Parameter NodeRegistry.registerNodeFor(string,uint64,uint64,address,uint64,uint8,bytes32,bytes32)._url (../../sb/NodeRegistry.sol#345) is not in mixedCase
Parameter NodeRegistry.registerNodeFor(string,uint64,uint64,address,uint64,uint8,bytes32,bytes32)._props (../../sb/NodeRegistry.sol#346) is not in mixedCase
Parameter NodeRegistry.registerNodeFor(string,uint64,uint64,address,uint64,uint8,bytes32,bytes32)._timeout (../../sb/NodeRegistry.sol#347) is not in mixedCase
Parameter NodeRegistry.registerNodeFor(string,uint64,uint64,address,uint64,uint8,bytes32,bytes32)._signer (../../sb/NodeRegistry.sol#348) is not in mixedCase
Parameter NodeRegistry.registerNodeFor(string,uint64,uint64,address,uint64,uint8,bytes32,bytes32)._weight (../../sb/NodeRegistry.sol#349) is not in mixedCase
Parameter NodeRegistry.registerNodeFor(string,uint64,uint64,address,uint64,uint8,bytes32,bytes32)._v (../../sb/NodeRegistry.sol#350) is not in mixedCase
Parameter NodeRegistry.registerNodeFor(string,uint64,uint64,address,uint64,uint8,bytes32,bytes32)._r (../../sb/NodeRegistry.sol#351) is not in mixedCase
Parameter NodeRegistry.registerNodeFor(string,uint64,uint64,address,uint64,uint8,bytes32,bytes32)._s (../../sb/NodeRegistry.sol#352) is not in mixedCase
Parameter NodeRegistry.removeNodeFromRegistry(address)._signer (../../sb/NodeRegistry.sol#394) is not in mixedCase
Parameter NodeRegistry.returnDeposit(address)._signer (../../sb/NodeRegistry.sol#416) is not in mixedCase
Parameter NodeRegistry.revealConvict(address,bytes32,uint256,uint8,bytes32,bytes32)._signer (../../sb/NodeRegistry.sol#444) is not in mixedCase
Parameter NodeRegistry.revealConvict(address,bytes32,uint256,uint8,bytes32,bytes32)._blockhash (../../sb/NodeRegistry.sol#445) is not in mixedCase
Parameter NodeRegistry.revealConvict(address,bytes32,uint256,uint8,bytes32,bytes32)._blockNumber (../../sb/NodeRegistry.sol#446) is not in mixedCase
Parameter NodeRegistry.revealConvict(address,bytes32,uint256,uint8,bytes32,bytes32)._v (../../sb/NodeRegistry.sol#447) is not in mixedCase
Parameter NodeRegistry.revealConvict(address,bytes32,uint256,uint8,bytes32,bytes32)._r (../../sb/NodeRegistry.sol#448) is not in mixedCase
Parameter NodeRegistry.revealConvict(address,bytes32,uint256,uint8,bytes32,bytes32)._s (../../sb/NodeRegistry.sol#449) is not in mixedCase
Parameter NodeRegistry.transferOwnership(address,address)._signer (../../sb/NodeRegistry.sol#524) is not in mixedCase
Parameter NodeRegistry.transferOwnership(address,address)._newOwner (../../sb/NodeRegistry.sol#524) is not in mixedCase
Parameter NodeRegistry.unregisteringNode(address)._signer (../../sb/NodeRegistry.sol#541) is not in mixedCase
Parameter NodeRegistry.updateNode(address,string,uint64,uint64,uint64)._signer (../../sb/NodeRegistry.sol#564) is not in mixedCase
Parameter NodeRegistry.updateNode(address,string,uint64,uint64,uint64)._url (../../sb/NodeRegistry.sol#565) is not in mixedCase
Parameter NodeRegistry.updateNode(address,string,uint64,uint64,uint64)._props (../../sb/NodeRegistry.sol#566) is not in mixedCase
Parameter NodeRegistry.updateNode(address,string,uint64,uint64,uint64)._timeout (../../sb/NodeRegistry.sol#567) is not in mixedCase
Parameter NodeRegistry.updateNode(address,string,uint64,uint64,uint64)._weight (../../sb/NodeRegistry.sol#568) is not in mixedCase
Parameter NodeRegistry.calcProofHash(NodeRegistry.In3Node)._node (../../sb/NodeRegistry.sol#634) is not in mixedCase
Parameter NodeRegistry.checkNodeProperties(uint256,uint64)._deposit (../../sb/NodeRegistry.sol#653) is not in mixedCase
Parameter NodeRegistry.checkNodeProperties(uint256,uint64)._timeout (../../sb/NodeRegistry.sol#653) is not in mixedCase
Parameter NodeRegistry.registerNodeInternal(string,uint64,uint64,address,address,uint256,uint64)._url (../../sb/NodeRegistry.sol#675) is not in mixedCase
Parameter NodeRegistry.registerNodeInternal(string,uint64,uint64,address,address,uint256,uint64)._props (../../sb/NodeRegistry.sol#676) is not in mixedCase
Parameter NodeRegistry.registerNodeInternal(string,uint64,uint64,address,address,uint256,uint64)._timeout (../../sb/NodeRegistry.sol#677) is not in mixedCase
Parameter NodeRegistry.registerNodeInternal(string,uint64,uint64,address,address,uint256,uint64)._signer (../../sb/NodeRegistry.sol#678) is not in mixedCase
Parameter NodeRegistry.registerNodeInternal(string,uint64,uint64,address,address,uint256,uint64)._owner (../../sb/NodeRegistry.sol#679) is not in mixedCase
Parameter NodeRegistry.registerNodeInternal(string,uint64,uint64,address,address,uint256,uint64)._deposit (../../sb/NodeRegistry.sol#680) is not in mixedCase
Parameter NodeRegistry.registerNodeInternal(string,uint64,uint64,address,address,uint256,uint64)._weight (../../sb/NodeRegistry.sol#681) is not in mixedCase
Parameter NodeRegistry.unregisterNodeInternal(NodeRegistry.SignerInformation,NodeRegistry.In3Node)._si (../../sb/NodeRegistry.sol#734) is not in mixedCase
Parameter NodeRegistry.unregisterNodeInternal(NodeRegistry.SignerInformation,NodeRegistry.In3Node)._n (../../sb/NodeRegistry.sol#734) is not in mixedCase
Parameter NodeRegistry.removeNode(uint256)._nodeIndex (../../sb/NodeRegistry.sol#746) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

recreateBlockheaders(uint256,bytes[]) should be declared external:
	- BlockhashRegistry.recreateBlockheaders(uint256,bytes[]) (../../sb/NodeRegistry.sol#60-73)
Moreover, the following function parameters should change its data location:
_blockheaders location should be calldata
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
/sb/NodeRegistry.sol analyzed (2 contracts with 93 detectors), 65 result(s) found
