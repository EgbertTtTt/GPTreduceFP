{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "NodeRegistry",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Slockit_Incubed3/in3-contracts-e25c758a115aef0c0640bc446027259aa7cb1a52/contracts/NodeRegistry.sol",
            "function": "checkNodeProperties",
            "impact": "Low",
            "line": 653,
            "line_end": 660,
            "message": "NodeRegistry.checkNodeProperties(uint256,uint64) (NodeRegistry.sol#653-660) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp < (blockTimeStampDeployment + YEAR_DEFINITION) (NodeRegistry.sol#656)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "NodeRegistry",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Slockit_Incubed3/in3-contracts-e25c758a115aef0c0640bc446027259aa7cb1a52/contracts/NodeRegistry.sol",
            "function": "registerNodeInternal",
            "impact": "Low",
            "line": 674,
            "line_end": 729,
            "message": "NodeRegistry.registerNodeInternal(string,uint64,uint64,address,address,uint256,uint64) (NodeRegistry.sol#674-729) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(! urlIndex[urlHash].used && signerIndex[_signer].stage == Stages.NotInUse,a node with the same url or signer is already registered) (NodeRegistry.sol#695-696)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "NodeRegistry",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Slockit_Incubed3/in3-contracts-e25c758a115aef0c0640bc446027259aa7cb1a52/contracts/NodeRegistry.sol",
            "function": "revealConvict",
            "impact": "Low",
            "line": 443,
            "line_end": 515,
            "message": "NodeRegistry.revealConvict(address,bytes32,uint256,uint8,bytes32,bytes32) (NodeRegistry.sol#443-515) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- assert(bool)(nodes[si.index].signer == _signer) (NodeRegistry.sol#494)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "NodeRegistry",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Slockit_Incubed3/in3-contracts-e25c758a115aef0c0640bc446027259aa7cb1a52/contracts/NodeRegistry.sol",
            "function": "removeNode",
            "impact": "Low",
            "line": 746,
            "line_end": 765,
            "message": "NodeRegistry.removeNode(uint256) (NodeRegistry.sol#746-765) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- assert(bool)(length > 0) (NodeRegistry.sol#753)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "NodeRegistry",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Slockit_Incubed3/in3-contracts-e25c758a115aef0c0640bc446027259aa7cb1a52/contracts/NodeRegistry.sol",
            "function": "removeNodeFromRegistry",
            "impact": "Low",
            "line": 394,
            "line_end": 408,
            "message": "NodeRegistry.removeNodeFromRegistry(address) (NodeRegistry.sol#394-408) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(block.timestamp < (blockTimeStampDeployment + YEAR_DEFINITION),only in 1st year) (NodeRegistry.sol#400)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "NodeRegistry",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Slockit_Incubed3/in3-contracts-e25c758a115aef0c0640bc446027259aa7cb1a52/contracts/NodeRegistry.sol",
            "function": "returnDeposit",
            "impact": "Low",
            "line": 416,
            "line_end": 429,
            "message": "NodeRegistry.returnDeposit(address) (NodeRegistry.sol#416-429) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(block.timestamp > si.lockedTime,deposit still locked) (NodeRegistry.sol#424)\n",
            "name": "timestamp",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}