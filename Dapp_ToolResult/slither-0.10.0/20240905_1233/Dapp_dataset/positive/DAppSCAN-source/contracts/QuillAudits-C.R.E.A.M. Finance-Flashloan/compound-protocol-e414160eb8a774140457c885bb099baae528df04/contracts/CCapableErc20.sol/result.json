{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "CCapableErc20",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Flashloan/compound-protocol-e414160eb8a774140457c885bb099baae528df04/contracts/CCapableErc20.sol",
            "function": "flashLoan",
            "impact": "Medium",
            "line": 2718,
            "line_end": 2742,
            "message": "Reentrancy in CCapableErc20.flashLoan(address,uint256,bytes) (CCapableErc20.sol#2718-2742):\n\tExternal calls:\n\t- doTransferOut(address(uint160(receiver)),amount) (CCapableErc20.sol#2727)\n\t\t- token.transfer(to,amount) (CCapableErc20.sol#2698)\n\t- IFlashloanReceiver(receiver).executeOperation(msg.sender,underlying,amount,totalFee,params) (CCapableErc20.sol#2730)\n\tState variables written after the call(s):\n\t- internalCash = add_(cashBefore,totalFee) (CCapableErc20.sol#2739)\n\tCDelegationStorageExtension.internalCash (CCapableErc20.sol#393) can be used in cross function reentrancies:\n\t- CCapableErc20.doTransferIn(address,uint256) (CCapableErc20.sol#2659-2685)\n\t- CCapableErc20.doTransferOut(address,uint256) (CCapableErc20.sol#2696-2716)\n\t- CCapableErc20.getCashPrior() (CCapableErc20.sol#2636-2638)\n\t- CCapableErc20.gulp() (CCapableErc20.sol#2619-2626)\n\t- CDelegationStorageExtension.internalCash (CCapableErc20.sol#393)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Flashloan/compound-protocol-e414160eb8a774140457c885bb099baae528df04/contracts/CCapableErc20.sol",
            "function": "redeemFresh",
            "impact": "Medium",
            "line": 1726,
            "line_end": 1801,
            "message": "Reentrancy in CToken.redeemFresh(address,uint256,uint256) (CCapableErc20.sol#1726-1801):\n\tExternal calls:\n\t- allowed = comptroller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (CCapableErc20.sol#1754)\n\tState variables written after the call(s):\n\t- totalSupply = vars.totalSupplyNew (CCapableErc20.sol#1790)\n\tCTokenStorage.totalSupply (CCapableErc20.sol#188) can be used in cross function reentrancies:\n\t- CToken.exchangeRateStoredInternal() (CCapableErc20.sol#1497-1515)\n\t- CTokenStorage.totalSupply (CCapableErc20.sol#188)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Flashloan/compound-protocol-e414160eb8a774140457c885bb099baae528df04/contracts/CCapableErc20.sol",
            "function": "liquidateBorrowInternal",
            "impact": "Medium",
            "line": 2003,
            "line_end": 2018,
            "message": "Reentrancy in CToken.liquidateBorrowInternal(address,uint256,CTokenInterface) (CCapableErc20.sol#2003-2018):\n\tExternal calls:\n\t- error = cTokenCollateral.accrueInterest() (CCapableErc20.sol#2010)\n\t- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral) (CCapableErc20.sol#2017)\n\t\t- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (CCapableErc20.sol#1935)\n\t\t- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (CCapableErc20.sol#2124)\n\t\t- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (CCapableErc20.sol#2031)\n\t\t- comptroller.seizeVerify(address(this),seizerToken,liquidator,borrower,seizeTokens) (CCapableErc20.sol#2154)\n\t\t- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.actualRepayAmount,vars.borrowerIndex) (CCapableErc20.sol#1990)\n\t\t- seizeError = cTokenCollateral.seize(liquidator,borrower,seizeTokens) (CCapableErc20.sol#2084)\n\t\t- comptroller.liquidateBorrowVerify(address(this),address(cTokenCollateral),liquidator,borrower,actualRepayAmount,seizeTokens) (CCapableErc20.sol#2094)\n\tState variables written after the call(s):\n\t- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral) (CCapableErc20.sol#2017)\n\t\t- totalBorrows = vars.totalBorrowsNew (CCapableErc20.sol#1984)\n\tCTokenStorage.totalBorrows (CCapableErc20.sol#178) can be used in cross function reentrancies:\n\t- CToken.accrueInterest() (CCapableErc20.sol#1530-1582)\n\t- CToken.borrowRatePerBlock() (CCapableErc20.sol#1410-1412)\n\t- CToken.exchangeRateStoredInternal() (CCapableErc20.sol#1497-1515)\n\t- CToken.supplyRatePerBlock() (CCapableErc20.sol#1418-1420)\n\t- CTokenStorage.totalBorrows (CCapableErc20.sol#178)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CCapableErc20",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Flashloan/compound-protocol-e414160eb8a774140457c885bb099baae528df04/contracts/CCapableErc20.sol",
            "function": "initialize",
            "impact": "Medium",
            "line": 2515,
            "line_end": 2528,
            "message": "CCapableErc20.initialize(address,ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (CCapableErc20.sol#2515-2528) ignores return value by EIP20Interface(underlying).totalSupply() (CCapableErc20.sol#2527)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "Exponential",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Flashloan/compound-protocol-e414160eb8a774140457c885bb099baae528df04/contracts/CCapableErc20.sol",
            "function": "fraction",
            "impact": "Low",
            "line": 851,
            "message": "Exponential.divScalarByExpTruncate(uint256,Exponential.Exp).fraction (CCapableErc20.sol#851) shadows:\n\t- Exponential.fraction(uint256,uint256) (CCapableErc20.sol#1081-1083) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "Exponential",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Flashloan/compound-protocol-e414160eb8a774140457c885bb099baae528df04/contracts/CCapableErc20.sol",
            "function": "fraction",
            "impact": "Low",
            "line": 880,
            "message": "Exponential.div_ScalarByExpTruncate(uint256,Exponential.Exp).fraction (CCapableErc20.sol#880) shadows:\n\t- Exponential.fraction(uint256,uint256) (CCapableErc20.sol#1081-1083) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Flashloan/compound-protocol-e414160eb8a774140457c885bb099baae528df04/contracts/CCapableErc20.sol",
            "function": "seizeInternal",
            "impact": "Low",
            "line": 2122,
            "line_end": 2157,
            "message": "Reentrancy in CToken.seizeInternal(address,address,address,uint256) (CCapableErc20.sol#2122-2157):\n\tExternal calls:\n\t- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (CCapableErc20.sol#2124)\n\tState variables written after the call(s):\n\t- accountTokens[borrower] = borrowerTokensNew (CCapableErc20.sol#2147)\n\t- accountTokens[liquidator] = liquidatorTokensNew (CCapableErc20.sol#2148)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Flashloan/compound-protocol-e414160eb8a774140457c885bb099baae528df04/contracts/CCapableErc20.sol",
            "function": "mintFresh",
            "impact": "Low",
            "line": 1617,
            "line_end": 1674,
            "message": "Reentrancy in CToken.mintFresh(address,uint256) (CCapableErc20.sol#1617-1674):\n\tExternal calls:\n\t- allowed = comptroller.mintAllowed(address(this),minter,mintAmount) (CCapableErc20.sol#1619)\n\tState variables written after the call(s):\n\t- accountTokens[minter] = vars.accountTokensNew (CCapableErc20.sol#1664)\n\t- totalSupply = vars.totalSupplyNew (CCapableErc20.sol#1663)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Flashloan/compound-protocol-e414160eb8a774140457c885bb099baae528df04/contracts/CCapableErc20.sol",
            "function": "repayBorrowFresh",
            "impact": "Low",
            "line": 1933,
            "line_end": 1993,
            "message": "Reentrancy in CToken.repayBorrowFresh(address,address,uint256) (CCapableErc20.sol#1933-1993):\n\tExternal calls:\n\t- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (CCapableErc20.sol#1935)\n\tState variables written after the call(s):\n\t- accountBorrows[borrower].principal = vars.accountBorrowsNew (CCapableErc20.sol#1982)\n\t- accountBorrows[borrower].interestIndex = borrowIndex (CCapableErc20.sol#1983)\n\t- totalBorrows = vars.totalBorrowsNew (CCapableErc20.sol#1984)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CCapableErc20",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Flashloan/compound-protocol-e414160eb8a774140457c885bb099baae528df04/contracts/CCapableErc20.sol",
            "function": "doTransferOut",
            "impact": "Low",
            "line": 2696,
            "line_end": 2716,
            "message": "Reentrancy in CCapableErc20.doTransferOut(address,uint256) (CCapableErc20.sol#2696-2716):\n\tExternal calls:\n\t- token.transfer(to,amount) (CCapableErc20.sol#2698)\n\tState variables written after the call(s):\n\t- internalCash = sub_(internalCash,amount) (CCapableErc20.sol#2715)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Flashloan/compound-protocol-e414160eb8a774140457c885bb099baae528df04/contracts/CCapableErc20.sol",
            "function": "borrowFresh",
            "impact": "Low",
            "line": 1830,
            "line_end": 1882,
            "message": "Reentrancy in CToken.borrowFresh(address,uint256) (CCapableErc20.sol#1830-1882):\n\tExternal calls:\n\t- allowed = comptroller.borrowAllowed(address(this),borrower,borrowAmount) (CCapableErc20.sol#1832)\n\tState variables written after the call(s):\n\t- accountBorrows[borrower].principal = vars.accountBorrowsNew (CCapableErc20.sol#1871)\n\t- accountBorrows[borrower].interestIndex = borrowIndex (CCapableErc20.sol#1872)\n\t- totalBorrows = vars.totalBorrowsNew (CCapableErc20.sol#1873)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CCapableErc20",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Flashloan/compound-protocol-e414160eb8a774140457c885bb099baae528df04/contracts/CCapableErc20.sol",
            "function": "doTransferIn",
            "impact": "Low",
            "line": 2659,
            "line_end": 2685,
            "message": "Reentrancy in CCapableErc20.doTransferIn(address,uint256) (CCapableErc20.sol#2659-2685):\n\tExternal calls:\n\t- token.transferFrom(from,address(this),amount) (CCapableErc20.sol#2662)\n\tState variables written after the call(s):\n\t- internalCash = add_(internalCash,transferredIn) (CCapableErc20.sol#2683)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Flashloan/compound-protocol-e414160eb8a774140457c885bb099baae528df04/contracts/CCapableErc20.sol",
            "function": "transferTokens",
            "impact": "Low",
            "line": 1273,
            "line_end": 1316,
            "message": "Reentrancy in CToken.transferTokens(address,address,address,uint256) (CCapableErc20.sol#1273-1316):\n\tExternal calls:\n\t- allowed = comptroller.transferAllowed(address(this),src,dst,tokens) (CCapableErc20.sol#1275)\n\tState variables written after the call(s):\n\t- accountTokens[src] = srcTokensNew (CCapableErc20.sol#1302)\n\t- accountTokens[dst] = dstTokensNew (CCapableErc20.sol#1303)\n\t- transferAllowances[src][spender] = allowanceNew (CCapableErc20.sol#1307)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CCapableErc20",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Flashloan/compound-protocol-e414160eb8a774140457c885bb099baae528df04/contracts/CCapableErc20.sol",
            "function": "flashLoan",
            "impact": "Low",
            "line": 2718,
            "line_end": 2742,
            "message": "Reentrancy in CCapableErc20.flashLoan(address,uint256,bytes) (CCapableErc20.sol#2718-2742):\n\tExternal calls:\n\t- doTransferOut(address(uint160(receiver)),amount) (CCapableErc20.sol#2727)\n\t\t- token.transfer(to,amount) (CCapableErc20.sol#2698)\n\t- IFlashloanReceiver(receiver).executeOperation(msg.sender,underlying,amount,totalFee,params) (CCapableErc20.sol#2730)\n\tState variables written after the call(s):\n\t- totalReserves = add_(totalReserves,reservesFee) (CCapableErc20.sol#2738)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Flashloan/compound-protocol-e414160eb8a774140457c885bb099baae528df04/contracts/CCapableErc20.sol",
            "function": "redeemFresh",
            "impact": "Low",
            "line": 1726,
            "line_end": 1801,
            "message": "Reentrancy in CToken.redeemFresh(address,uint256,uint256) (CCapableErc20.sol#1726-1801):\n\tExternal calls:\n\t- allowed = comptroller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (CCapableErc20.sol#1754)\n\tState variables written after the call(s):\n\t- accountTokens[redeemer] = vars.accountTokensNew (CCapableErc20.sol#1791)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Flashloan/compound-protocol-e414160eb8a774140457c885bb099baae528df04/contracts/CCapableErc20.sol",
            "function": "liquidateBorrowFresh",
            "impact": "Low",
            "line": 2029,
            "line_end": 2097,
            "message": "Reentrancy in CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface) (CCapableErc20.sol#2029-2097):\n\tExternal calls:\n\t- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (CCapableErc20.sol#2031)\n\t- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (CCapableErc20.sol#2063)\n\t\t- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (CCapableErc20.sol#1935)\n\t\t- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.actualRepayAmount,vars.borrowerIndex) (CCapableErc20.sol#1990)\n\t- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (CCapableErc20.sol#2082)\n\t\t- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (CCapableErc20.sol#2124)\n\t\t- comptroller.seizeVerify(address(this),seizerToken,liquidator,borrower,seizeTokens) (CCapableErc20.sol#2154)\n\t- seizeError = cTokenCollateral.seize(liquidator,borrower,seizeTokens) (CCapableErc20.sol#2084)\n\tEvent emitted after the call(s):\n\t- LiquidateBorrow(liquidator,borrower,actualRepayAmount,address(cTokenCollateral),seizeTokens) (CCapableErc20.sol#2091)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Flashloan/compound-protocol-e414160eb8a774140457c885bb099baae528df04/contracts/CCapableErc20.sol",
            "function": "liquidateBorrowFresh",
            "impact": "Low",
            "line": 2029,
            "line_end": 2097,
            "message": "Reentrancy in CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface) (CCapableErc20.sol#2029-2097):\n\tExternal calls:\n\t- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (CCapableErc20.sol#2031)\n\t- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (CCapableErc20.sol#2063)\n\t\t- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (CCapableErc20.sol#1935)\n\t\t- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.actualRepayAmount,vars.borrowerIndex) (CCapableErc20.sol#1990)\n\tEvent emitted after the call(s):\n\t- Failure(uint256(err),uint256(info),opaqueError) (CCapableErc20.sol#615)\n\t\t- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (CCapableErc20.sol#2063)\n\t- Failure(uint256(err),uint256(info),0) (CCapableErc20.sol#606)\n\t\t- (fail(TokenErrorReporter.Error(repayBorrowError),FailureInfo.LIQUIDATE_REPAY_BORROW_FRESH_FAILED),0) (CCapableErc20.sol#2065)\n\t- Failure(uint256(err),uint256(info),0) (CCapableErc20.sol#606)\n\t\t- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (CCapableErc20.sol#2063)\n\t- RepayBorrow(payer,borrower,vars.actualRepayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (CCapableErc20.sol#1987)\n\t\t- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (CCapableErc20.sol#2063)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Flashloan/compound-protocol-e414160eb8a774140457c885bb099baae528df04/contracts/CCapableErc20.sol",
            "function": "repayBorrowFresh",
            "impact": "Low",
            "line": 1933,
            "line_end": 1993,
            "message": "Reentrancy in CToken.repayBorrowFresh(address,address,uint256) (CCapableErc20.sol#1933-1993):\n\tExternal calls:\n\t- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (CCapableErc20.sol#1935)\n\tEvent emitted after the call(s):\n\t- Failure(uint256(err),uint256(info),0) (CCapableErc20.sol#606)\n\t\t- (fail(Error.MARKET_NOT_FRESH,FailureInfo.REPAY_BORROW_FRESHNESS_CHECK),0) (CCapableErc20.sol#1942)\n\t- Failure(uint256(err),uint256(info),opaqueError) (CCapableErc20.sol#615)\n\t\t- (failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.REPAY_BORROW_COMPTROLLER_REJECTION,allowed),0) (CCapableErc20.sol#1937)\n\t- RepayBorrow(payer,borrower,vars.actualRepayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (CCapableErc20.sol#1987)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Flashloan/compound-protocol-e414160eb8a774140457c885bb099baae528df04/contracts/CCapableErc20.sol",
            "function": "borrowFresh",
            "impact": "Low",
            "line": 1830,
            "line_end": 1882,
            "message": "Reentrancy in CToken.borrowFresh(address,uint256) (CCapableErc20.sol#1830-1882):\n\tExternal calls:\n\t- allowed = comptroller.borrowAllowed(address(this),borrower,borrowAmount) (CCapableErc20.sol#1832)\n\tEvent emitted after the call(s):\n\t- Borrow(borrower,borrowAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (CCapableErc20.sol#1876)\n\t- Failure(uint256(err),uint256(info),opaqueError) (CCapableErc20.sol#615)\n\t\t- failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.BORROW_COMPTROLLER_REJECTION,allowed) (CCapableErc20.sol#1834)\n\t- Failure(uint256(err),uint256(info),0) (CCapableErc20.sol#606)\n\t\t- fail(Error.MARKET_NOT_FRESH,FailureInfo.BORROW_FRESHNESS_CHECK) (CCapableErc20.sol#1839)\n\t- Failure(uint256(err),uint256(info),0) (CCapableErc20.sol#606)\n\t\t- fail(Error.TOKEN_INSUFFICIENT_CASH,FailureInfo.BORROW_CASH_NOT_AVAILABLE) (CCapableErc20.sol#1844)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Flashloan/compound-protocol-e414160eb8a774140457c885bb099baae528df04/contracts/CCapableErc20.sol",
            "function": "redeemFresh",
            "impact": "Low",
            "line": 1726,
            "line_end": 1801,
            "message": "Reentrancy in CToken.redeemFresh(address,uint256,uint256) (CCapableErc20.sol#1726-1801):\n\tExternal calls:\n\t- allowed = comptroller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (CCapableErc20.sol#1754)\n\tEvent emitted after the call(s):\n\t- Failure(uint256(err),uint256(info),0) (CCapableErc20.sol#606)\n\t\t- fail(Error.MARKET_NOT_FRESH,FailureInfo.REDEEM_FRESHNESS_CHECK) (CCapableErc20.sol#1761)\n\t- Failure(uint256(err),uint256(info),opaqueError) (CCapableErc20.sol#615)\n\t\t- failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.REDEEM_COMPTROLLER_REJECTION,allowed) (CCapableErc20.sol#1756)\n\t- Failure(uint256(err),uint256(info),0) (CCapableErc20.sol#606)\n\t\t- fail(Error.TOKEN_INSUFFICIENT_CASH,FailureInfo.REDEEM_TRANSFER_OUT_NOT_POSSIBLE) (CCapableErc20.sol#1774)\n\t- Redeem(redeemer,vars.redeemAmount,vars.redeemTokens) (CCapableErc20.sol#1795)\n\t- Transfer(redeemer,address(this),vars.redeemTokens) (CCapableErc20.sol#1794)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Flashloan/compound-protocol-e414160eb8a774140457c885bb099baae528df04/contracts/CCapableErc20.sol",
            "function": "liquidateBorrowFresh",
            "impact": "Low",
            "line": 2029,
            "line_end": 2097,
            "message": "Reentrancy in CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface) (CCapableErc20.sol#2029-2097):\n\tExternal calls:\n\t- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (CCapableErc20.sol#2031)\n\t- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (CCapableErc20.sol#2063)\n\t\t- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (CCapableErc20.sol#1935)\n\t\t- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.actualRepayAmount,vars.borrowerIndex) (CCapableErc20.sol#1990)\n\t- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (CCapableErc20.sol#2082)\n\t\t- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (CCapableErc20.sol#2124)\n\t\t- comptroller.seizeVerify(address(this),seizerToken,liquidator,borrower,seizeTokens) (CCapableErc20.sol#2154)\n\tEvent emitted after the call(s):\n\t- Failure(uint256(err),uint256(info),0) (CCapableErc20.sol#606)\n\t\t- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (CCapableErc20.sol#2082)\n\t- Failure(uint256(err),uint256(info),opaqueError) (CCapableErc20.sol#615)\n\t\t- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (CCapableErc20.sol#2082)\n\t- Transfer(borrower,liquidator,seizeTokens) (CCapableErc20.sol#2151)\n\t\t- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (CCapableErc20.sol#2082)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Flashloan/compound-protocol-e414160eb8a774140457c885bb099baae528df04/contracts/CCapableErc20.sol",
            "function": "mintFresh",
            "impact": "Low",
            "line": 1617,
            "line_end": 1674,
            "message": "Reentrancy in CToken.mintFresh(address,uint256) (CCapableErc20.sol#1617-1674):\n\tExternal calls:\n\t- allowed = comptroller.mintAllowed(address(this),minter,mintAmount) (CCapableErc20.sol#1619)\n\tEvent emitted after the call(s):\n\t- Failure(uint256(err),uint256(info),0) (CCapableErc20.sol#606)\n\t\t- (fail(Error.MARKET_NOT_FRESH,FailureInfo.MINT_FRESHNESS_CHECK),0) (CCapableErc20.sol#1626)\n\t- Failure(uint256(err),uint256(info),opaqueError) (CCapableErc20.sol#615)\n\t\t- (failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.MINT_COMPTROLLER_REJECTION,allowed),0) (CCapableErc20.sol#1621)\n\t- Mint(minter,vars.actualMintAmount,vars.mintTokens) (CCapableErc20.sol#1667)\n\t- Transfer(address(this),minter,vars.mintTokens) (CCapableErc20.sol#1668)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-C.R.E.A.M. Finance-Flashloan/compound-protocol-e414160eb8a774140457c885bb099baae528df04/contracts/CCapableErc20.sol",
            "function": "liquidateBorrowFresh",
            "impact": "Low",
            "line": 2029,
            "line_end": 2097,
            "message": "Reentrancy in CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface) (CCapableErc20.sol#2029-2097):\n\tExternal calls:\n\t- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (CCapableErc20.sol#2031)\n\tEvent emitted after the call(s):\n\t- Failure(uint256(err),uint256(info),opaqueError) (CCapableErc20.sol#615)\n\t\t- (failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.LIQUIDATE_COMPTROLLER_REJECTION,allowed),0) (CCapableErc20.sol#2033)\n\t- Failure(uint256(err),uint256(info),0) (CCapableErc20.sol#606)\n\t\t- (fail(Error.MARKET_NOT_FRESH,FailureInfo.LIQUIDATE_FRESHNESS_CHECK),0) (CCapableErc20.sol#2038)\n\t- Failure(uint256(err),uint256(info),0) (CCapableErc20.sol#606)\n\t\t- (fail(Error.INVALID_CLOSE_AMOUNT_REQUESTED,FailureInfo.LIQUIDATE_CLOSE_AMOUNT_IS_ZERO),0) (CCapableErc20.sol#2053)\n\t- Failure(uint256(err),uint256(info),0) (CCapableErc20.sol#606)\n\t\t- (fail(Error.INVALID_CLOSE_AMOUNT_REQUESTED,FailureInfo.LIQUIDATE_CLOSE_AMOUNT_IS_UINT_MAX),0) (CCapableErc20.sol#2058)\n\t- Failure(uint256(err),uint256(info),0) (CCapableErc20.sol#606)\n\t\t- (fail(Error.MARKET_NOT_FRESH,FailureInfo.LIQUIDATE_COLLATERAL_FRESHNESS_CHECK),0) (CCapableErc20.sol#2043)\n\t- Failure(uint256(err),uint256(info),0) (CCapableErc20.sol#606)\n\t\t- (fail(Error.INVALID_ACCOUNT_PAIR,FailureInfo.LIQUIDATE_LIQUIDATOR_IS_BORROWER),0) (CCapableErc20.sol#2048)\n",
            "name": "reentrancy-events",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}