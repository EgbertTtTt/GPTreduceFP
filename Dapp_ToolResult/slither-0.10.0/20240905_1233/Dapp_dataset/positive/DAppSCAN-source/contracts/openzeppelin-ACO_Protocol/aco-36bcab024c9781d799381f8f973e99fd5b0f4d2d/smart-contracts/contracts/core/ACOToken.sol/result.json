{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "ACOToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol",
            "function": "_getFormattedExpiryTime",
            "impact": "Medium",
            "line": 1615,
            "line_end": 1626,
            "message": "ACOToken._getFormattedExpiryTime() (ACOToken.sol#1615-1626) ignores return value by (year,month,day,hour,minute) = BokkyPooBahsDateTimeLibrary.timestampToDateTime(expiryTime) (ACOToken.sol#1616)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ACOToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol",
            "function": "mintTo",
            "impact": "Low",
            "line": 1127,
            "line_end": 1133,
            "message": "Reentrancy in ACOToken.mintTo(address,uint256) (ACOToken.sol#1127-1133):\n\tExternal calls:\n\t- _transferFromERC20(_collateral,msg.sender,address(this),collateralAmount) (ACOToken.sol#1131)\n\t\t- (success,returndata) = token.call(abi.encodeWithSelector(_transferFromSelector,sender,recipient,amount)) (ACOToken.sol#1788)\n\tState variables written after the call(s):\n\t- _mintToken(account,collateralAmount) (ACOToken.sol#1132)\n\t\t- _balances[account] = _balances[account].add(amount) (ACOToken.sol#317)\n\t- _mintToken(account,collateralAmount) (ACOToken.sol#1132)\n\t\t- _collateralOwners.push(account) (ACOToken.sol#1284)\n\t- _mintToken(account,collateralAmount) (ACOToken.sol#1132)\n\t\t- _notEntered = false (ACOToken.sol#872)\n\t\t- _notEntered = true (ACOToken.sol#874)\n\t- _mintToken(account,collateralAmount) (ACOToken.sol#1132)\n\t\t- _totalSupply = _totalSupply.add(amount) (ACOToken.sol#316)\n\t- _mintToken(account,collateralAmount) (ACOToken.sol#1132)\n\t\t- tokenData[account].index = _collateralOwners.length (ACOToken.sol#1283)\n\t\t- tokenData[account].amount = tokenData[account].amount.add(tokenAmount) (ACOToken.sol#1288)\n\t- _mintToken(account,collateralAmount) (ACOToken.sol#1132)\n\t\t- totalCollateral = totalCollateral.add(collateralAmount) (ACOToken.sol#1290)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ACOToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol",
            "function": "mint",
            "impact": "Low",
            "line": 1112,
            "line_end": 1118,
            "message": "Reentrancy in ACOToken.mint(uint256) (ACOToken.sol#1112-1118):\n\tExternal calls:\n\t- _transferFromERC20(_collateral,msg.sender,address(this),collateralAmount) (ACOToken.sol#1116)\n\t\t- (success,returndata) = token.call(abi.encodeWithSelector(_transferFromSelector,sender,recipient,amount)) (ACOToken.sol#1788)\n\tState variables written after the call(s):\n\t- _mintToken(msg.sender,collateralAmount) (ACOToken.sol#1117)\n\t\t- _balances[account] = _balances[account].add(amount) (ACOToken.sol#317)\n\t- _mintToken(msg.sender,collateralAmount) (ACOToken.sol#1117)\n\t\t- _collateralOwners.push(account) (ACOToken.sol#1284)\n\t- _mintToken(msg.sender,collateralAmount) (ACOToken.sol#1117)\n\t\t- _notEntered = false (ACOToken.sol#872)\n\t\t- _notEntered = true (ACOToken.sol#874)\n\t- _mintToken(msg.sender,collateralAmount) (ACOToken.sol#1117)\n\t\t- _totalSupply = _totalSupply.add(amount) (ACOToken.sol#316)\n\t- _mintToken(msg.sender,collateralAmount) (ACOToken.sol#1117)\n\t\t- tokenData[account].index = _collateralOwners.length (ACOToken.sol#1283)\n\t\t- tokenData[account].amount = tokenData[account].amount.add(tokenAmount) (ACOToken.sol#1288)\n\t- _mintToken(msg.sender,collateralAmount) (ACOToken.sol#1117)\n\t\t- totalCollateral = totalCollateral.add(collateralAmount) (ACOToken.sol#1290)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ACOToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol",
            "function": "_burn",
            "impact": "Low",
            "line": 1495,
            "line_end": 1498,
            "message": "Reentrancy in ACOToken._burn(address,uint256) (ACOToken.sol#1495-1498):\n\tExternal calls:\n\t- _redeemCollateral(account,tokenAmount) (ACOToken.sol#1496)\n\t\t- (success,returndata) = token.call(abi.encodeWithSelector(_transferSelector,recipient,amount)) (ACOToken.sol#1776)\n\tExternal calls sending eth:\n\t- _redeemCollateral(account,tokenAmount) (ACOToken.sol#1496)\n\t\t- address(msg.sender).transfer(collateralAmount) (ACOToken.sol#1333)\n\t\t- feeDestination.transfer(fee) (ACOToken.sol#1335)\n\tState variables written after the call(s):\n\t- _callBurn(account,tokenAmount) (ACOToken.sol#1497)\n\t\t- _allowances[owner][spender] = amount (ACOToken.sol#308)\n\t- _callBurn(account,tokenAmount) (ACOToken.sol#1497)\n\t\t- _balances[account] = _balances[account].sub(amount) (ACOToken.sol#325)\n\t- _callBurn(account,tokenAmount) (ACOToken.sol#1497)\n\t\t- _totalSupply = _totalSupply.sub(amount) (ACOToken.sol#326)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ACOToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol",
            "function": "_redeem",
            "impact": "Low",
            "line": 1483,
            "line_end": 1488,
            "message": "Reentrancy in ACOToken._redeem(address) (ACOToken.sol#1483-1488):\n\tExternal calls:\n\t- _redeemCollateral(account,tokenData[account].amount) (ACOToken.sol#1486)\n\t\t- (success,returndata) = token.call(abi.encodeWithSelector(_transferSelector,recipient,amount)) (ACOToken.sol#1776)\n\tExternal calls sending eth:\n\t- _redeemCollateral(account,tokenData[account].amount) (ACOToken.sol#1486)\n\t\t- address(msg.sender).transfer(collateralAmount) (ACOToken.sol#1333)\n\t\t- feeDestination.transfer(fee) (ACOToken.sol#1335)\n\tState variables written after the call(s):\n\t- super._burnAction(account,balanceOf(account)) (ACOToken.sol#1487)\n\t\t- _balances[account] = _balances[account].sub(amount) (ACOToken.sol#325)\n\t- super._burnAction(account,balanceOf(account)) (ACOToken.sol#1487)\n\t\t- _totalSupply = _totalSupply.sub(amount) (ACOToken.sol#326)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ACOToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol",
            "function": "mintTo",
            "impact": "Low",
            "line": 1127,
            "line_end": 1133,
            "message": "Reentrancy in ACOToken.mintTo(address,uint256) (ACOToken.sol#1127-1133):\n\tExternal calls:\n\t- _transferFromERC20(_collateral,msg.sender,address(this),collateralAmount) (ACOToken.sol#1131)\n\t\t- (success,returndata) = token.call(abi.encodeWithSelector(_transferFromSelector,sender,recipient,amount)) (ACOToken.sol#1788)\n\tEvent emitted after the call(s):\n\t- CollateralDeposit(account,collateralAmount) (ACOToken.sol#1292)\n\t\t- _mintToken(account,collateralAmount) (ACOToken.sol#1132)\n\t- Transfer(address(0),account,amount) (ACOToken.sol#319)\n\t\t- _mintToken(account,collateralAmount) (ACOToken.sol#1132)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ACOToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol",
            "function": "mint",
            "impact": "Low",
            "line": 1112,
            "line_end": 1118,
            "message": "Reentrancy in ACOToken.mint(uint256) (ACOToken.sol#1112-1118):\n\tExternal calls:\n\t- _transferFromERC20(_collateral,msg.sender,address(this),collateralAmount) (ACOToken.sol#1116)\n\t\t- (success,returndata) = token.call(abi.encodeWithSelector(_transferFromSelector,sender,recipient,amount)) (ACOToken.sol#1788)\n\tEvent emitted after the call(s):\n\t- CollateralDeposit(account,collateralAmount) (ACOToken.sol#1292)\n\t\t- _mintToken(msg.sender,collateralAmount) (ACOToken.sol#1117)\n\t- Transfer(address(0),account,amount) (ACOToken.sol#319)\n\t\t- _mintToken(msg.sender,collateralAmount) (ACOToken.sol#1117)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ACOToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol",
            "function": "_transferCollateral",
            "impact": "Low",
            "line": 1327,
            "line_end": 1345,
            "message": "Reentrancy in ACOToken._transferCollateral(address,uint256,uint256) (ACOToken.sol#1327-1345):\n\tExternal calls:\n\t- _transferERC20(_collateral,msg.sender,collateralAmount) (ACOToken.sol#1338)\n\t\t- (success,returndata) = token.call(abi.encodeWithSelector(_transferSelector,recipient,amount)) (ACOToken.sol#1776)\n\t- _transferERC20(_collateral,feeDestination,fee) (ACOToken.sol#1340)\n\t\t- (success,returndata) = token.call(abi.encodeWithSelector(_transferSelector,recipient,amount)) (ACOToken.sol#1776)\n\tExternal calls sending eth:\n\t- address(msg.sender).transfer(collateralAmount) (ACOToken.sol#1333)\n\t- feeDestination.transfer(fee) (ACOToken.sol#1335)\n\tEvent emitted after the call(s):\n\t- CollateralWithdraw(account,msg.sender,collateralAmount,fee) (ACOToken.sol#1344)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ACOToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol",
            "function": "_exerciseAccount",
            "impact": "Low",
            "line": 1411,
            "line_end": 1440,
            "message": "Reentrancy in ACOToken._exerciseAccount(address,uint256,address) (ACOToken.sol#1411-1440):\n\tExternal calls:\n\t- _transferERC20(exerciseAsset,account,amount) (ACOToken.sol#1434)\n\t\t- (success,returndata) = token.call(abi.encodeWithSelector(_transferSelector,recipient,amount)) (ACOToken.sol#1776)\n\tExternal calls sending eth:\n\t- address(account).transfer(amount) (ACOToken.sol#1432)\n\tEvent emitted after the call(s):\n\t- Assigned(account,exerciseAccount,amount,valueToTransfer) (ACOToken.sol#1436)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ACOToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol",
            "function": "_notExpired",
            "impact": "Low",
            "line": 1548,
            "line_end": 1550,
            "message": "ACOToken._notExpired() (ACOToken.sol#1548-1550) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- now <= expiryTime (ACOToken.sol#1549)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ACOToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol",
            "function": "init",
            "impact": "Low",
            "line": 889,
            "line_end": 924,
            "message": "ACOToken.init(address,address,bool,uint256,uint256,uint256,address) (ACOToken.sol#889-924) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(_expiryTime > now,ACOToken::init: Invalid expiry) (ACOToken.sol#900)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ACOToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol",
            "function": "_exerciseFromAccounts",
            "impact": "Informational",
            "line": 1365,
            "line_end": 1370,
            "message": "Reentrancy in ACOToken._exerciseFromAccounts(address,uint256,address[]) (ACOToken.sol#1365-1370):\n\tExternal calls:\n\t- _exerciseAccounts(account,tokenAmount,accounts) (ACOToken.sol#1367)\n\t\t- address(account).transfer(amount) (ACOToken.sol#1432)\n\t- _transferCollateral(account,collateralAmount,fee) (ACOToken.sol#1369)\n\t\t- address(msg.sender).transfer(collateralAmount) (ACOToken.sol#1333)\n\t\t- feeDestination.transfer(fee) (ACOToken.sol#1335)\n\tState variables written after the call(s):\n\t- _transferCollateral(account,collateralAmount,fee) (ACOToken.sol#1369)\n\t\t- totalCollateral = totalCollateral.sub(collateralAmount.add(fee)) (ACOToken.sol#1329)\n\tEvent emitted after the call(s):\n\t- CollateralWithdraw(account,msg.sender,collateralAmount,fee) (ACOToken.sol#1344)\n\t\t- _transferCollateral(account,collateralAmount,fee) (ACOToken.sol#1369)\n",
            "name": "reentrancy-unlimited-gas",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ACOToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol",
            "function": "_burn",
            "impact": "Informational",
            "line": 1495,
            "line_end": 1498,
            "message": "Reentrancy in ACOToken._burn(address,uint256) (ACOToken.sol#1495-1498):\n\tExternal calls:\n\t- _redeemCollateral(account,tokenAmount) (ACOToken.sol#1496)\n\t\t- address(msg.sender).transfer(collateralAmount) (ACOToken.sol#1333)\n\t\t- feeDestination.transfer(fee) (ACOToken.sol#1335)\n\tState variables written after the call(s):\n\t- _callBurn(account,tokenAmount) (ACOToken.sol#1497)\n\t\t- _allowances[owner][spender] = amount (ACOToken.sol#308)\n\t- _callBurn(account,tokenAmount) (ACOToken.sol#1497)\n\t\t- _balances[account] = _balances[account].sub(amount) (ACOToken.sol#325)\n\t- _callBurn(account,tokenAmount) (ACOToken.sol#1497)\n\t\t- _totalSupply = _totalSupply.sub(amount) (ACOToken.sol#326)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (ACOToken.sol#310)\n\t\t- _callBurn(account,tokenAmount) (ACOToken.sol#1497)\n\t- Transfer(account,address(0),amount) (ACOToken.sol#328)\n\t\t- _callBurn(account,tokenAmount) (ACOToken.sol#1497)\n",
            "name": "reentrancy-unlimited-gas",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ACOToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol",
            "function": "_exercise",
            "impact": "Informational",
            "line": 1352,
            "line_end": 1357,
            "message": "Reentrancy in ACOToken._exercise(address,uint256) (ACOToken.sol#1352-1357):\n\tExternal calls:\n\t- _exerciseOwners(account,tokenAmount) (ACOToken.sol#1354)\n\t\t- address(account).transfer(amount) (ACOToken.sol#1432)\n\t- _transferCollateral(account,collateralAmount,fee) (ACOToken.sol#1356)\n\t\t- address(msg.sender).transfer(collateralAmount) (ACOToken.sol#1333)\n\t\t- feeDestination.transfer(fee) (ACOToken.sol#1335)\n\tState variables written after the call(s):\n\t- _transferCollateral(account,collateralAmount,fee) (ACOToken.sol#1356)\n\t\t- totalCollateral = totalCollateral.sub(collateralAmount.add(fee)) (ACOToken.sol#1329)\n\tEvent emitted after the call(s):\n\t- CollateralWithdraw(account,msg.sender,collateralAmount,fee) (ACOToken.sol#1344)\n\t\t- _transferCollateral(account,collateralAmount,fee) (ACOToken.sol#1356)\n",
            "name": "reentrancy-unlimited-gas",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ACOToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol",
            "function": "_redeem",
            "impact": "Informational",
            "line": 1483,
            "line_end": 1488,
            "message": "Reentrancy in ACOToken._redeem(address) (ACOToken.sol#1483-1488):\n\tExternal calls:\n\t- _redeemCollateral(account,tokenData[account].amount) (ACOToken.sol#1486)\n\t\t- address(msg.sender).transfer(collateralAmount) (ACOToken.sol#1333)\n\t\t- feeDestination.transfer(fee) (ACOToken.sol#1335)\n\tState variables written after the call(s):\n\t- super._burnAction(account,balanceOf(account)) (ACOToken.sol#1487)\n\t\t- _balances[account] = _balances[account].sub(amount) (ACOToken.sol#325)\n\t- super._burnAction(account,balanceOf(account)) (ACOToken.sol#1487)\n\t\t- _totalSupply = _totalSupply.sub(amount) (ACOToken.sol#326)\n\tEvent emitted after the call(s):\n\t- Transfer(account,address(0),amount) (ACOToken.sol#328)\n\t\t- super._burnAction(account,balanceOf(account)) (ACOToken.sol#1487)\n",
            "name": "reentrancy-unlimited-gas",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ACOToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol",
            "function": "_exerciseAccount",
            "impact": "Informational",
            "line": 1411,
            "line_end": 1440,
            "message": "Reentrancy in ACOToken._exerciseAccount(address,uint256,address) (ACOToken.sol#1411-1440):\n\tExternal calls:\n\t- address(account).transfer(amount) (ACOToken.sol#1432)\n\tEvent emitted after the call(s):\n\t- Assigned(account,exerciseAccount,amount,valueToTransfer) (ACOToken.sol#1436)\n",
            "name": "reentrancy-unlimited-gas",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ACOToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol",
            "function": "_transferCollateral",
            "impact": "Informational",
            "line": 1327,
            "line_end": 1345,
            "message": "Reentrancy in ACOToken._transferCollateral(address,uint256,uint256) (ACOToken.sol#1327-1345):\n\tExternal calls:\n\t- address(msg.sender).transfer(collateralAmount) (ACOToken.sol#1333)\n\t- feeDestination.transfer(fee) (ACOToken.sol#1335)\n\tEvent emitted after the call(s):\n\t- CollateralWithdraw(account,msg.sender,collateralAmount,fee) (ACOToken.sol#1344)\n",
            "name": "reentrancy-unlimited-gas",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol",
            "impact": "Informational",
            "line": 422,
            "message": "BokkyPooBahsDateTimeLibrary.DOW_TUE (ACOToken.sol#422) is never used in BokkyPooBahsDateTimeLibrary (ACOToken.sol#414-686)\n",
            "name": "unused-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol",
            "impact": "Informational",
            "line": 427,
            "message": "BokkyPooBahsDateTimeLibrary.DOW_SUN (ACOToken.sol#427) is never used in BokkyPooBahsDateTimeLibrary (ACOToken.sol#414-686)\n",
            "name": "unused-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol",
            "impact": "Informational",
            "line": 421,
            "message": "BokkyPooBahsDateTimeLibrary.DOW_MON (ACOToken.sol#421) is never used in BokkyPooBahsDateTimeLibrary (ACOToken.sol#414-686)\n",
            "name": "unused-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol",
            "impact": "Informational",
            "line": 424,
            "message": "BokkyPooBahsDateTimeLibrary.DOW_THU (ACOToken.sol#424) is never used in BokkyPooBahsDateTimeLibrary (ACOToken.sol#414-686)\n",
            "name": "unused-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-ACO_Protocol/aco-36bcab024c9781d799381f8f973e99fd5b0f4d2d/smart-contracts/contracts/core/ACOToken.sol",
            "impact": "Informational",
            "line": 423,
            "message": "BokkyPooBahsDateTimeLibrary.DOW_WED (ACOToken.sol#423) is never used in BokkyPooBahsDateTimeLibrary (ACOToken.sol#414-686)\n",
            "name": "unused-state",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}