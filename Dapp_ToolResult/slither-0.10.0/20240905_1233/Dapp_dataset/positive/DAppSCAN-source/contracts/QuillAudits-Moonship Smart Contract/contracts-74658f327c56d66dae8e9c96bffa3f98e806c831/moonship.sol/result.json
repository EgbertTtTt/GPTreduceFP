{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "Utils",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol",
            "function": "swapETHForTokens",
            "impact": "High",
            "line": 780,
            "line_end": 799,
            "message": "Utils.swapETHForTokens(address,address,uint256) (moonship.sol#780-799) sends eth to arbitrary user\n\tDangerous calls:\n\t- nutRouter.swapExactETHForTokensSupportingFeeOnTransferTokens{value: ethAmount}(0,path,address(recipient),block.timestamp + 360) (moonship.sol#793-798)\n",
            "name": "arbitrary-send-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Utils",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol",
            "function": "addLiquidity",
            "impact": "High",
            "line": 801,
            "line_end": 818,
            "message": "Utils.addLiquidity(address,address,uint256,uint256) (moonship.sol#801-818) sends eth to arbitrary user\n\tDangerous calls:\n\t- nutRouter.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner,block.timestamp + 360) (moonship.sol#810-817)\n",
            "name": "arbitrary-send-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MoonShip",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol",
            "function": "_transfer",
            "impact": "High",
            "line": 1192,
            "line_end": 1217,
            "message": "Reentrancy in MoonShip._transfer(address,address,uint256,uint256) (moonship.sol#1192-1217):\n\tExternal calls:\n\t- swapAndLiquify(from,to) (moonship.sol#1205)\n\t\t- nutRouter.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner,block.timestamp + 360) (moonship.sol#810-817)\n\t\t- nutRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (moonship.sol#771-777)\n\t\t- Utils.swapTokensForEth(address(nutRouter),tokenAmountToBeSwapped) (moonship.sol#1415)\n\t\t- Utils.addLiquidity(address(nutRouter),owner(),otherPiece,bnbToBeAddedToLiquidity) (moonship.sol#1428)\n\tExternal calls sending eth:\n\t- swapAndLiquify(from,to) (moonship.sol#1205)\n\t\t- nutRouter.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner,block.timestamp + 360) (moonship.sol#810-817)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount,takeFee) (moonship.sol#1216)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)].add(rLiquidity) (moonship.sol#1148)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (moonship.sol#1245)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (moonship.sol#1254)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (moonship.sol#1070)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (moonship.sol#1265)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (moonship.sol#1246)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (moonship.sol#1266)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (moonship.sol#1256)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (moonship.sol#1072)\n\tMoonShip._rOwned (moonship.sol#891) can be used in cross function reentrancies:\n\t- MoonShip._getCurrentSupply() (moonship.sol#1133-1143)\n\t- MoonShip._takeLiquidity(uint256) (moonship.sol#1145-1151)\n\t- MoonShip._transferBothExcluded(address,address,uint256) (moonship.sol#1067-1076)\n\t- MoonShip._transferFromExcluded(address,address,uint256) (moonship.sol#1262-1270)\n\t- MoonShip._transferStandard(address,address,uint256) (moonship.sol#1243-1250)\n\t- MoonShip._transferToExcluded(address,address,uint256) (moonship.sol#1252-1260)\n\t- MoonShip.balanceOf(address) (moonship.sol#976-979)\n\t- MoonShip.constructor(address) (moonship.sol#934-958)\n\t- MoonShip.deliver(uint256) (moonship.sol#1019-1026)\n\t- MoonShip.excludeFromReward(address) (moonship.sol#1045-1052)\n\t- _tokenTransfer(from,to,amount,takeFee) (moonship.sol#1216)\n\t\t- _rTotal = _rTotal.sub(rFee) (moonship.sol#1103)\n\tMoonShip._rTotal (moonship.sol#903) can be used in cross function reentrancies:\n\t- MoonShip._getCurrentSupply() (moonship.sol#1133-1143)\n\t- MoonShip._reflectFee(uint256,uint256) (moonship.sol#1102-1105)\n\t- MoonShip.constructor(address) (moonship.sol#934-958)\n\t- MoonShip.deliver(uint256) (moonship.sol#1019-1026)\n\t- MoonShip.tokenFromReflection(uint256) (moonship.sol#1039-1043)\n\t- _tokenTransfer(from,to,amount,takeFee) (moonship.sol#1216)\n\t\t- _tOwned[address(this)] = _tOwned[address(this)].add(tLiquidity) (moonship.sol#1150)\n\t\t- _tOwned[sender] = _tOwned[sender].sub(tAmount) (moonship.sol#1069)\n\t\t- _tOwned[sender] = _tOwned[sender].sub(tAmount) (moonship.sol#1264)\n\t\t- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (moonship.sol#1255)\n\t\t- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (moonship.sol#1071)\n\tMoonShip._tOwned (moonship.sol#892) can be used in cross function reentrancies:\n\t- MoonShip._getCurrentSupply() (moonship.sol#1133-1143)\n\t- MoonShip._takeLiquidity(uint256) (moonship.sol#1145-1151)\n\t- MoonShip._transferBothExcluded(address,address,uint256) (moonship.sol#1067-1076)\n\t- MoonShip._transferFromExcluded(address,address,uint256) (moonship.sol#1262-1270)\n\t- MoonShip._transferToExcluded(address,address,uint256) (moonship.sol#1252-1260)\n\t- MoonShip.balanceOf(address) (moonship.sol#976-979)\n\t- MoonShip.excludeFromReward(address) (moonship.sol#1045-1052)\n\t- MoonShip.includeInReward(address) (moonship.sol#1054-1065)\n",
            "name": "reentrancy-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MoonShip",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol",
            "function": "claimBNBReward",
            "impact": "Medium",
            "line": 1324,
            "line_end": 1346,
            "message": "Reentrancy in MoonShip.claimBNBReward() (moonship.sol#1324-1346):\n\tExternal calls:\n\t- Utils.swapETHForTokens(address(nutRouter),address(0x000000000000000000000000000000000000dEaD),reward.div(5)) (moonship.sol#1332-1336)\n\tState variables written after the call(s):\n\t- nextAvailableClaimDate[msg.sender] = block.timestamp + getRewardCycleBlock() (moonship.sol#1341)\n\tMoonShip.nextAvailableClaimDate (moonship.sol#1278) can be used in cross function reentrancies:\n\t- MoonShip.nextAvailableClaimDate (moonship.sol#1278)\n\t- MoonShip.topUpClaimCycleAfterTransfer(address,uint256) (moonship.sol#1348-1358)\n",
            "name": "reentrancy-no-eth",
            "check": "TP"
        },
        {
            "confidence": "Medium",
            "contract": "Utils",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol",
            "function": "addLiquidity",
            "impact": "Medium",
            "line": 801,
            "line_end": 818,
            "message": "Utils.addLiquidity(address,address,uint256,uint256) (moonship.sol#801-818) ignores return value by nutRouter.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner,block.timestamp + 360) (moonship.sol#810-817)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "Ownable",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol",
            "function": "owner",
            "impact": "Low",
            "line": 1184,
            "message": "MoonShip._approve(address,address,uint256).owner (moonship.sol#1184) shadows:\n\t- Ownable.owner() (moonship.sol#422-424) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "Ownable",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol",
            "function": "owner",
            "impact": "Low",
            "line": 986,
            "message": "MoonShip.allowance(address,address).owner (moonship.sol#986) shadows:\n\t- Ownable.owner() (moonship.sol#422-424) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MoonShip",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol",
            "function": "setMaxTxPercent",
            "impact": "Low",
            "line": 1293,
            "line_end": 1295,
            "message": "MoonShip.setMaxTxPercent(uint256) (moonship.sol#1293-1295) should emit an event for: \n\t- _maxTxAmount = _tTotal.mul(maxTxPercent).div(10000) (moonship.sol#1294) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MoonShip",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol",
            "function": "setLiquidityFeePercent",
            "impact": "Low",
            "line": 1090,
            "line_end": 1092,
            "message": "MoonShip.setLiquidityFeePercent(uint256) (moonship.sol#1090-1092) should emit an event for: \n\t- _liquidityFee = liquidityFee (moonship.sol#1091) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MoonShip",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol",
            "function": "setTaxFeePercent",
            "impact": "Low",
            "line": 1086,
            "line_end": 1088,
            "message": "MoonShip.setTaxFeePercent(uint256) (moonship.sol#1086-1088) should emit an event for: \n\t- _taxFee = taxFee (moonship.sol#1087) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MoonShip",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol",
            "function": "_transfer",
            "impact": "Low",
            "line": 1192,
            "line_end": 1217,
            "message": "Reentrancy in MoonShip._transfer(address,address,uint256,uint256) (moonship.sol#1192-1217):\n\tExternal calls:\n\t- swapAndLiquify(from,to) (moonship.sol#1205)\n\t\t- nutRouter.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner,block.timestamp + 360) (moonship.sol#810-817)\n\t\t- nutRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (moonship.sol#771-777)\n\t\t- Utils.swapTokensForEth(address(nutRouter),tokenAmountToBeSwapped) (moonship.sol#1415)\n\t\t- Utils.addLiquidity(address(nutRouter),owner(),otherPiece,bnbToBeAddedToLiquidity) (moonship.sol#1428)\n\tExternal calls sending eth:\n\t- swapAndLiquify(from,to) (moonship.sol#1205)\n\t\t- nutRouter.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner,block.timestamp + 360) (moonship.sol#810-817)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount,takeFee) (moonship.sol#1216)\n\t\t- _liquidityFee = _previousLiquidityFee (moonship.sol#1177)\n\t\t- _liquidityFee = 0 (moonship.sol#1172)\n\t- _tokenTransfer(from,to,amount,takeFee) (moonship.sol#1216)\n\t\t- _previousLiquidityFee = _liquidityFee (moonship.sol#1169)\n\t- _tokenTransfer(from,to,amount,takeFee) (moonship.sol#1216)\n\t\t- _previousTaxFee = _taxFee (moonship.sol#1168)\n\t- _tokenTransfer(from,to,amount,takeFee) (moonship.sol#1216)\n\t\t- _tFeeTotal = _tFeeTotal.add(tFee) (moonship.sol#1104)\n\t- _tokenTransfer(from,to,amount,takeFee) (moonship.sol#1216)\n\t\t- _taxFee = _previousTaxFee (moonship.sol#1176)\n\t\t- _taxFee = 0 (moonship.sol#1171)\n\t- _tokenTransfer(from,to,amount,takeFee) (moonship.sol#1216)\n\t\t- nextAvailableClaimDate[recipient] = nextAvailableClaimDate[recipient] + Utils.calculateTopUpClaim(currentRecipientBalance,basedRewardCycleBlock,threshHoldTopUpRate,amount) (moonship.sol#1352-1357)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MoonShip",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol",
            "function": "transferFrom",
            "impact": "Low",
            "line": 995,
            "line_end": 999,
            "message": "Reentrancy in MoonShip.transferFrom(address,address,uint256) (moonship.sol#995-999):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount,0) (moonship.sol#996)\n\t\t- nutRouter.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner,block.timestamp + 360) (moonship.sol#810-817)\n\t\t- nutRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (moonship.sol#771-777)\n\t\t- Utils.swapTokensForEth(address(nutRouter),tokenAmountToBeSwapped) (moonship.sol#1415)\n\t\t- Utils.addLiquidity(address(nutRouter),owner(),otherPiece,bnbToBeAddedToLiquidity) (moonship.sol#1428)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount,0) (moonship.sol#996)\n\t\t- nutRouter.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner,block.timestamp + 360) (moonship.sol#810-817)\n\tState variables written after the call(s):\n\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,BEP20: transfer amount exceeds allowance)) (moonship.sol#997)\n\t\t- _allowances[owner][spender] = amount (moonship.sol#1188)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MoonShip",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol",
            "function": "_transfer",
            "impact": "Low",
            "line": 1192,
            "line_end": 1217,
            "message": "Reentrancy in MoonShip._transfer(address,address,uint256,uint256) (moonship.sol#1192-1217):\n\tExternal calls:\n\t- swapAndLiquify(from,to) (moonship.sol#1205)\n\t\t- nutRouter.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner,block.timestamp + 360) (moonship.sol#810-817)\n\t\t- nutRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (moonship.sol#771-777)\n\t\t- Utils.swapTokensForEth(address(nutRouter),tokenAmountToBeSwapped) (moonship.sol#1415)\n\t\t- Utils.addLiquidity(address(nutRouter),owner(),otherPiece,bnbToBeAddedToLiquidity) (moonship.sol#1428)\n\tExternal calls sending eth:\n\t- swapAndLiquify(from,to) (moonship.sol#1205)\n\t\t- nutRouter.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner,block.timestamp + 360) (moonship.sol#810-817)\n\tEvent emitted after the call(s):\n\t- Transfer(sender,recipient,tTransferAmount) (moonship.sol#1249)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (moonship.sol#1216)\n\t- Transfer(sender,recipient,tTransferAmount) (moonship.sol#1259)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (moonship.sol#1216)\n\t- Transfer(sender,recipient,tTransferAmount) (moonship.sol#1269)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (moonship.sol#1216)\n\t- Transfer(sender,recipient,tTransferAmount) (moonship.sol#1075)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (moonship.sol#1216)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MoonShip",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol",
            "function": "transferFrom",
            "impact": "Low",
            "line": 995,
            "line_end": 999,
            "message": "Reentrancy in MoonShip.transferFrom(address,address,uint256) (moonship.sol#995-999):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount,0) (moonship.sol#996)\n\t\t- nutRouter.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner,block.timestamp + 360) (moonship.sol#810-817)\n\t\t- nutRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (moonship.sol#771-777)\n\t\t- Utils.swapTokensForEth(address(nutRouter),tokenAmountToBeSwapped) (moonship.sol#1415)\n\t\t- Utils.addLiquidity(address(nutRouter),owner(),otherPiece,bnbToBeAddedToLiquidity) (moonship.sol#1428)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount,0) (moonship.sol#996)\n\t\t- nutRouter.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner,block.timestamp + 360) (moonship.sol#810-817)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (moonship.sol#1189)\n\t\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,BEP20: transfer amount exceeds allowance)) (moonship.sol#997)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MoonShip",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol",
            "function": "swapAndLiquify",
            "impact": "Low",
            "line": 1381,
            "line_end": 1432,
            "message": "Reentrancy in MoonShip.swapAndLiquify(address,address) (moonship.sol#1381-1432):\n\tExternal calls:\n\t- Utils.swapTokensForEth(address(nutRouter),tokenAmountToBeSwapped) (moonship.sol#1415)\n\t- Utils.addLiquidity(address(nutRouter),owner(),otherPiece,bnbToBeAddedToLiquidity) (moonship.sol#1428)\n\tEvent emitted after the call(s):\n\t- SwapAndLiquify(piece,deltaBalance,otherPiece) (moonship.sol#1430)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Utils",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol",
            "function": "isLotteryWon",
            "impact": "Low",
            "line": 699,
            "line_end": 703,
            "message": "Utils.isLotteryWon(uint256,uint256) (moonship.sol#699-703) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- luckyNumber <= winPercentage (moonship.sol#702)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Ownable",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol",
            "function": "unlock",
            "impact": "Low",
            "line": 469,
            "line_end": 474,
            "message": "Ownable.unlock() (moonship.sol#469-474) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(now > _lockTime,Contract is locked until 7 days) (moonship.sol#471)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MoonShip",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol",
            "function": "ensureMaxTxAmount",
            "impact": "Low",
            "line": 1360,
            "line_end": 1374,
            "message": "MoonShip.ensureMaxTxAmount(address,address,uint256,uint256) (moonship.sol#1360-1374) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- value < disruptiveCoverageFee && block.timestamp >= disruptiveTransferEnabledFrom (moonship.sol#1370)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MoonShip",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol",
            "function": "getRewardCycleBlock",
            "impact": "Low",
            "line": 1319,
            "line_end": 1322,
            "message": "MoonShip.getRewardCycleBlock() (moonship.sol#1319-1322) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp >= disableEasyRewardFrom (moonship.sol#1320)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MoonShip",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol",
            "function": "claimBNBReward",
            "impact": "Low",
            "line": 1324,
            "line_end": 1346,
            "message": "MoonShip.claimBNBReward() (moonship.sol#1324-1346) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(nextAvailableClaimDate[msg.sender] <= block.timestamp,Error: next available not reached) (moonship.sol#1325)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MoonShip",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol",
            "function": "includeInReward",
            "impact": "Informational",
            "line": 1054,
            "line_end": 1065,
            "message": "MoonShip.includeInReward(address) (moonship.sol#1054-1065) has costly operations inside a loop:\n\t- _excluded.pop() (moonship.sol#1061)\n",
            "name": "costly-loop",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol",
            "impact": "Informational",
            "line": 903,
            "message": "MoonShip._rTotal (moonship.sol#903) is set pre-construction with a non-constant function or state variable:\n\t- (MAX - (MAX % _tTotal))\n",
            "name": "function-init-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol",
            "impact": "Informational",
            "line": 1291,
            "message": "MoonShip.minTokenNumberToSell (moonship.sol#1291) is set pre-construction with a non-constant function or state variable:\n\t- _tTotal.mul(1).div(10000).div(10)\n",
            "name": "function-init-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol",
            "impact": "Informational",
            "line": 1285,
            "message": "MoonShip._previousTaxFee (moonship.sol#1285) is set pre-construction with a non-constant function or state variable:\n\t- _taxFee\n",
            "name": "function-init-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol",
            "impact": "Informational",
            "line": 1288,
            "message": "MoonShip._previousLiquidityFee (moonship.sol#1288) is set pre-construction with a non-constant function or state variable:\n\t- _liquidityFee\n",
            "name": "function-init-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Moonship Smart Contract/contracts-74658f327c56d66dae8e9c96bffa3f98e806c831/moonship.sol",
            "impact": "Informational",
            "line": 1276,
            "message": "MoonShip._maxTxAmount (moonship.sol#1276) is set pre-construction with a non-constant function or state variable:\n\t- _tTotal\n",
            "name": "function-init-state",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}