'solc --version' running
'solc /sb/RToken.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running

EIP20NonStandardInterface (../../sb/RToken.sol#108-170) has incorrect ERC20 function interface:EIP20NonStandardInterface.transfer(address,uint256) (../../sb/RToken.sol#134)
EIP20NonStandardInterface (../../sb/RToken.sol#108-170) has incorrect ERC20 function interface:EIP20NonStandardInterface.transferFrom(address,address,uint256) (../../sb/RToken.sol#148)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface

RToken.accrueInterest() (../../sb/RToken.sol#1569-1647) uses a dangerous strict equality:
	- accrualBlockNumberPrior == currentBlockNumber (../../sb/RToken.sol#1575)
RToken.accrueInterest() (../../sb/RToken.sol#1569-1647) uses a dangerous strict equality:
	- require(bool,string)(mathErr == MathError.NO_ERROR,could not calculate block delta) (../../sb/RToken.sol#1591)
RToken.balanceOfUnderlying(address) (../../sb/RToken.sol#1375-1380) uses a dangerous strict equality:
	- require(bool,string)(mErr == MathError.NO_ERROR,balance could not be calculated) (../../sb/RToken.sol#1378)
RToken.borrowBalanceStored(address) (../../sb/RToken.sol#1456-1460) uses a dangerous strict equality:
	- require(bool,string)(err == MathError.NO_ERROR,borrowBalanceStored: borrowBalanceStoredInternal failed) (../../sb/RToken.sol#1458)
CarefulMath.divUInt(uint256,uint256) (../../sb/RToken.sol#715-721) uses a dangerous strict equality:
	- b == 0 (../../sb/RToken.sol#716)
RToken.exchangeRateStored() (../../sb/RToken.sol#1513-1517) uses a dangerous strict equality:
	- require(bool,string)(err == MathError.NO_ERROR,exchangeRateStored: exchangeRateStoredInternal failed) (../../sb/RToken.sol#1515)
RToken.exchangeRateStoredInternal() (../../sb/RToken.sol#1524-1554) uses a dangerous strict equality:
	- _totalSupply == 0 (../../sb/RToken.sol#1526)
RToken.initialize(CointrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sb/RToken.sol#1210-1241) uses a dangerous strict equality:
	- require(bool,string)(accrualBlockNumber == 0 && borrowIndex == 0,market may only be initialized once) (../../sb/RToken.sol#1217)
RToken.initialize(CointrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sb/RToken.sol#1210-1241) uses a dangerous strict equality:
	- require(bool,string)(err == uint256(Error.NO_ERROR),setting cointroller failed) (../../sb/RToken.sol#1225)
RToken.initialize(CointrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sb/RToken.sol#1210-1241) uses a dangerous strict equality:
	- require(bool,string)(err == uint256(Error.NO_ERROR),setting interest rate model failed) (../../sb/RToken.sol#1233)
RToken.liquidateBorrowFresh(address,address,uint256,RTokenInterface) (../../sb/RToken.sol#2141-2210) uses a dangerous strict equality:
	- require(bool,string)(amountSeizeError == uint256(Error.NO_ERROR),LIQUIDATE_COINTROLLER_CALCULATE_AMOUNT_SEIZE_FAILED) (../../sb/RToken.sol#2186)
RToken.liquidateBorrowFresh(address,address,uint256,RTokenInterface) (../../sb/RToken.sol#2141-2210) uses a dangerous strict equality:
	- require(bool,string)(seizeError == uint256(Error.NO_ERROR),token seizure failed) (../../sb/RToken.sol#2200)
RToken.mintFresh(address,uint256) (../../sb/RToken.sol#1682-1747) uses a dangerous strict equality:
	- require(bool,string)(vars.mathErr == MathError.NO_ERROR,MINT_EXCHANGE_CALCULATION_FAILED) (../../sb/RToken.sol#1721)
RToken.mintFresh(address,uint256) (../../sb/RToken.sol#1682-1747) uses a dangerous strict equality:
	- require(bool,string)(vars.mathErr == MathError.NO_ERROR,MINT_NEW_TOTAL_SUPPLY_CALCULATION_FAILED) (../../sb/RToken.sol#1729)
RToken.mintFresh(address,uint256) (../../sb/RToken.sol#1682-1747) uses a dangerous strict equality:
	- require(bool,string)(vars.mathErr == MathError.NO_ERROR,MINT_NEW_ACCOUNT_BALANCE_CALCULATION_FAILED) (../../sb/RToken.sol#1732)
Exponential.mulExp(ExponentialNoError.Exp,ExponentialNoError.Exp) (../../sb/RToken.sol#1084-1104) uses a dangerous strict equality:
	- assert(bool)(err2 == MathError.NO_ERROR) (../../sb/RToken.sol#1101)
CarefulMath.mulUInt(uint256,uint256) (../../sb/RToken.sol#698-710) uses a dangerous strict equality:
	- a == 0 (../../sb/RToken.sol#699)
RToken.repayBorrowFresh(address,address,uint256) (../../sb/RToken.sol#2038-2105) uses a dangerous strict equality:
	- require(bool,string)(vars.mathErr == MathError.NO_ERROR,REPAY_BORROW_NEW_ACCOUNT_BORROW_BALANCE_CALCULATION_FAILED) (../../sb/RToken.sol#2087)
RToken.repayBorrowFresh(address,address,uint256) (../../sb/RToken.sol#2038-2105) uses a dangerous strict equality:
	- require(bool,string)(vars.mathErr == MathError.NO_ERROR,REPAY_BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED) (../../sb/RToken.sol#2090)
RToken.transfer(address,uint256) (../../sb/RToken.sol#1320-1322) uses a dangerous strict equality:
	- transferTokens(msg.sender,msg.sender,dst,amount) == uint256(Error.NO_ERROR) (../../sb/RToken.sol#1321)
RToken.transferFrom(address,address,uint256) (../../sb/RToken.sol#1331-1333) uses a dangerous strict equality:
	- transferTokens(msg.sender,src,dst,amount) == uint256(Error.NO_ERROR) (../../sb/RToken.sol#1332)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

Reentrancy in RToken.liquidateBorrowInternal(address,uint256,RTokenInterface) (../../sb/RToken.sol#2115-2130):
	External calls:
	- error = rTokenCollateral.accrueInterest() (../../sb/RToken.sol#2122)
	- liquidateBorrowFresh(msg.sender,borrower,repayAmount,rTokenCollateral) (../../sb/RToken.sol#2129)
		- allowed = cointroller.liquidateBorrowAllowed(address(this),address(rTokenCollateral),liquidator,borrower,repayAmount) (../../sb/RToken.sol#2143)
		- allowed = cointroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sb/RToken.sol#2040)
		- allowed = cointroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sb/RToken.sol#2237)
		- seizeError = rTokenCollateral.seize(liquidator,borrower,seizeTokens) (../../sb/RToken.sol#2196)
	State variables written after the call(s):
	- liquidateBorrowFresh(msg.sender,borrower,repayAmount,rTokenCollateral) (../../sb/RToken.sol#2129)
		- totalBorrows = vars.totalBorrowsNew (../../sb/RToken.sol#2095)
	RTokenStorage.totalBorrows (../../sb/RToken.sol#247) can be used in cross function reentrancies:
	- RToken.accrueInterest() (../../sb/RToken.sol#1569-1647)
	- RToken.borrowRatePerBlock() (../../sb/RToken.sol#1420-1422)
	- RToken.exchangeRateStoredInternal() (../../sb/RToken.sol#1524-1554)
	- RToken.supplyRatePerBlock() (../../sb/RToken.sol#1428-1430)
	- RTokenStorage.totalBorrows (../../sb/RToken.sol#247)
Reentrancy in RToken.redeemFresh(address,uint256,uint256) (../../sb/RToken.sol#1799-1893):
	External calls:
	- allowed = cointroller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (../../sb/RToken.sol#1839)
	State variables written after the call(s):
	- totalSupply = vars.totalSupplyNew (../../sb/RToken.sol#1882)
	RTokenStorage.totalSupply (../../sb/RToken.sol#257) can be used in cross function reentrancies:
	- RToken.exchangeRateStoredInternal() (../../sb/RToken.sol#1524-1554)
	- RTokenStorage.totalSupply (../../sb/RToken.sol#257)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

RToken.mintFresh(address,uint256).vars (../../sb/RToken.sol#1694) is a local variable never initialized
RToken.redeemFresh(address,uint256,uint256).vars (../../sb/RToken.sol#1802) is a local variable never initialized
RToken.borrowFresh(address,uint256).vars (../../sb/RToken.sol#1940) is a local variable never initialized
RToken.repayBorrowFresh(address,address,uint256).vars (../../sb/RToken.sol#2050) is a local variable never initialized
RToken._addReservesFresh(uint256).actualAddAmount (../../sb/RToken.sol#2432) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables

Exponential.divScalarByExpTruncate(uint256,ExponentialNoError.Exp).fraction (../../sb/RToken.sol#1073) shadows:
	- ExponentialNoError.fraction(uint256,uint256) (../../sb/RToken.sol#950-952) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

RToken.initialize(CointrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sb/RToken.sol#1210-1241) should emit an event for: 
	- initialExchangeRateMantissa = initialExchangeRateMantissa_ (../../sb/RToken.sol#1220) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

RToken._setPendingAdmin(address).newPendingAdmin (../../sb/RToken.sol#2293) lacks a zero-check on :
		- pendingAdmin = newPendingAdmin (../../sb/RToken.sol#2303)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Reentrancy in RToken.borrowFresh(address,uint256) (../../sb/RToken.sol#1923-1987):
	External calls:
	- allowed = cointroller.borrowAllowed(address(this),borrower,borrowAmount) (../../sb/RToken.sol#1925)
	State variables written after the call(s):
	- accountBorrows[borrower].principal = vars.accountBorrowsNew (../../sb/RToken.sol#1975)
	- accountBorrows[borrower].interestIndex = borrowIndex (../../sb/RToken.sol#1976)
	- totalBorrows = vars.totalBorrowsNew (../../sb/RToken.sol#1977)
Reentrancy in RToken.mintFresh(address,uint256) (../../sb/RToken.sol#1682-1747):
	External calls:
	- allowed = cointroller.mintAllowed(address(this),minter,mintAmount) (../../sb/RToken.sol#1684)
	State variables written after the call(s):
	- accountTokens[minter] = vars.accountTokensNew (../../sb/RToken.sol#1736)
	- totalSupply = vars.totalSupplyNew (../../sb/RToken.sol#1735)
Reentrancy in RToken.redeemFresh(address,uint256,uint256) (../../sb/RToken.sol#1799-1893):
	External calls:
	- allowed = cointroller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (../../sb/RToken.sol#1839)
	State variables written after the call(s):
	- accountTokens[redeemer] = vars.accountTokensNew (../../sb/RToken.sol#1883)
Reentrancy in RToken.repayBorrowFresh(address,address,uint256) (../../sb/RToken.sol#2038-2105):
	External calls:
	- allowed = cointroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sb/RToken.sol#2040)
	State variables written after the call(s):
	- accountBorrows[borrower].principal = vars.accountBorrowsNew (../../sb/RToken.sol#2093)
	- accountBorrows[borrower].interestIndex = borrowIndex (../../sb/RToken.sol#2094)
	- totalBorrows = vars.totalBorrowsNew (../../sb/RToken.sol#2095)
Reentrancy in RToken.seizeInternal(address,address,address,uint256) (../../sb/RToken.sol#2235-2282):
	External calls:
	- allowed = cointroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sb/RToken.sol#2237)
	State variables written after the call(s):
	- accountTokens[borrower] = borrowerTokensNew (../../sb/RToken.sol#2271)
	- accountTokens[liquidator] = liquidatorTokensNew (../../sb/RToken.sol#2272)
Reentrancy in RToken.transferTokens(address,address,address,uint256) (../../sb/RToken.sol#1252-1312):
	External calls:
	- allowed = cointroller.transferAllowed(address(this),src,dst,tokens) (../../sb/RToken.sol#1254)
	State variables written after the call(s):
	- accountTokens[src] = srrTokensNew (../../sb/RToken.sol#1297)
	- accountTokens[dst] = dstTokensNew (../../sb/RToken.sol#1298)
	- transferAllowances[src][spender] = allowanceNew (../../sb/RToken.sol#1302)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in RToken.borrowFresh(address,uint256) (../../sb/RToken.sol#1923-1987):
	External calls:
	- allowed = cointroller.borrowAllowed(address(this),borrower,borrowAmount) (../../sb/RToken.sol#1925)
	Event emitted after the call(s):
	- Borrow(borrower,borrowAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (../../sb/RToken.sol#1980)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/RToken.sol#671)
		- failOpaque(Error.MATH_ERROR,FailureInfo.BORROW_NEW_ACCOUNT_BORROW_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (../../sb/RToken.sol#1954)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/RToken.sol#671)
		- failOpaque(Error.MATH_ERROR,FailureInfo.BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (../../sb/RToken.sol#1949)
	- Failure(uint256(err),uint256(info),0) (../../sb/RToken.sol#662)
		- fail(Error.TOKEN_INSUFFICIENT_CASH,FailureInfo.BORROW_CASH_NOT_AVAILABLE) (../../sb/RToken.sol#1937)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/RToken.sol#671)
		- failOpaque(Error.COINTROLLER_REJECTION,FailureInfo.BORROW_COINTROLLER_REJECTION,allowed) (../../sb/RToken.sol#1927)
	- Failure(uint256(err),uint256(info),0) (../../sb/RToken.sol#662)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.BORROW_FRESHNESS_CHECK) (../../sb/RToken.sol#1932)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/RToken.sol#671)
		- failOpaque(Error.MATH_ERROR,FailureInfo.BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (../../sb/RToken.sol#1959)
Reentrancy in RToken.liquidateBorrowFresh(address,address,uint256,RTokenInterface) (../../sb/RToken.sol#2141-2210):
	External calls:
	- allowed = cointroller.liquidateBorrowAllowed(address(this),address(rTokenCollateral),liquidator,borrower,repayAmount) (../../sb/RToken.sol#2143)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (../../sb/RToken.sol#662)
		- (fail(Error.INVALID_CLOSE_AMOUNT_REQUESTED,FailureInfo.LIQUIDATE_CLOSE_AMOUNT_IS_ZERO),0) (../../sb/RToken.sol#2165)
	- Failure(uint256(err),uint256(info),0) (../../sb/RToken.sol#662)
		- (fail(Error.INVALID_CLOSE_AMOUNT_REQUESTED,FailureInfo.LIQUIDATE_CLOSE_AMOUNT_IS_UINT_MAX),0) (../../sb/RToken.sol#2170)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/RToken.sol#671)
		- (failOpaque(Error.COINTROLLER_REJECTION,FailureInfo.LIQUIDATE_COINTROLLER_REJECTION,allowed),0) (../../sb/RToken.sol#2145)
	- Failure(uint256(err),uint256(info),0) (../../sb/RToken.sol#662)
		- (fail(Error.MARKET_NOT_FRESH,FailureInfo.LIQUIDATE_COLLATERAL_FRESHNESS_CHECK),0) (../../sb/RToken.sol#2155)
	- Failure(uint256(err),uint256(info),0) (../../sb/RToken.sol#662)
		- (fail(Error.INVALID_ACCOUNT_PAIR,FailureInfo.LIQUIDATE_LIQUIDATOR_IS_BORROWER),0) (../../sb/RToken.sol#2160)
	- Failure(uint256(err),uint256(info),0) (../../sb/RToken.sol#662)
		- (fail(Error.MARKET_NOT_FRESH,FailureInfo.LIQUIDATE_FRESHNESS_CHECK),0) (../../sb/RToken.sol#2150)
Reentrancy in RToken.liquidateBorrowFresh(address,address,uint256,RTokenInterface) (../../sb/RToken.sol#2141-2210):
	External calls:
	- allowed = cointroller.liquidateBorrowAllowed(address(this),address(rTokenCollateral),liquidator,borrower,repayAmount) (../../sb/RToken.sol#2143)
	- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (../../sb/RToken.sol#2175)
		- allowed = cointroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sb/RToken.sol#2040)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (../../sb/RToken.sol#662)
		- (fail(TokenErrorReporter.Error(repayBorrowError),FailureInfo.LIQUIDATE_REPAY_BORROW_FRESH_FAILED),0) (../../sb/RToken.sol#2177)
	- Failure(uint256(err),uint256(info),0) (../../sb/RToken.sol#662)
		- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (../../sb/RToken.sol#2175)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/RToken.sol#671)
		- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (../../sb/RToken.sol#2175)
	- RepayBorrow(payer,borrower,vars.actualRepayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (../../sb/RToken.sol#2098)
		- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (../../sb/RToken.sol#2175)
Reentrancy in RToken.liquidateBorrowFresh(address,address,uint256,RTokenInterface) (../../sb/RToken.sol#2141-2210):
	External calls:
	- allowed = cointroller.liquidateBorrowAllowed(address(this),address(rTokenCollateral),liquidator,borrower,repayAmount) (../../sb/RToken.sol#2143)
	- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (../../sb/RToken.sol#2175)
		- allowed = cointroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sb/RToken.sol#2040)
	- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (../../sb/RToken.sol#2194)
		- allowed = cointroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sb/RToken.sol#2237)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (../../sb/RToken.sol#662)
		- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (../../sb/RToken.sol#2194)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/RToken.sol#671)
		- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (../../sb/RToken.sol#2194)
	- Transfer(borrower,liquidator,seizeTokens) (../../sb/RToken.sol#2275)
		- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (../../sb/RToken.sol#2194)
Reentrancy in RToken.liquidateBorrowFresh(address,address,uint256,RTokenInterface) (../../sb/RToken.sol#2141-2210):
	External calls:
	- allowed = cointroller.liquidateBorrowAllowed(address(this),address(rTokenCollateral),liquidator,borrower,repayAmount) (../../sb/RToken.sol#2143)
	- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (../../sb/RToken.sol#2175)
		- allowed = cointroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sb/RToken.sol#2040)
	- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (../../sb/RToken.sol#2194)
		- allowed = cointroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sb/RToken.sol#2237)
	- seizeError = rTokenCollateral.seize(liquidator,borrower,seizeTokens) (../../sb/RToken.sol#2196)
	Event emitted after the call(s):
	- LiquidateBorrow(liquidator,borrower,actualRepayAmount,address(rTokenCollateral),seizeTokens) (../../sb/RToken.sol#2203)
Reentrancy in RToken.mintFresh(address,uint256) (../../sb/RToken.sol#1682-1747):
	External calls:
	- allowed = cointroller.mintAllowed(address(this),minter,mintAmount) (../../sb/RToken.sol#1684)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (../../sb/RToken.sol#662)
		- (fail(Error.MARKET_NOT_FRESH,FailureInfo.MINT_FRESHNESS_CHECK),0) (../../sb/RToken.sol#1691)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/RToken.sol#671)
		- (failOpaque(Error.COINTROLLER_REJECTION,FailureInfo.MINT_COINTROLLER_REJECTION,allowed),0) (../../sb/RToken.sol#1686)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/RToken.sol#671)
		- (failOpaque(Error.MATH_ERROR,FailureInfo.MINT_EXCHANGE_RATE_READ_FAILED,uint256(vars.mathErr)),0) (../../sb/RToken.sol#1698)
	- Mint(minter,vars.actualMintAmount,vars.mintTokens) (../../sb/RToken.sol#1739)
	- Transfer(address(this),minter,vars.mintTokens) (../../sb/RToken.sol#1740)
Reentrancy in RToken.redeemFresh(address,uint256,uint256) (../../sb/RToken.sol#1799-1893):
	External calls:
	- allowed = cointroller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (../../sb/RToken.sol#1839)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/RToken.sol#671)
		- failOpaque(Error.MATH_ERROR,FailureInfo.REDEEM_NEW_ACCOUNT_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (../../sb/RToken.sol#1861)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/RToken.sol#671)
		- failOpaque(Error.MATH_ERROR,FailureInfo.REDEEM_NEW_TOTAL_SUPPLY_CALCULATION_FAILED,uint256(vars.mathErr)) (../../sb/RToken.sol#1856)
	- Failure(uint256(err),uint256(info),0) (../../sb/RToken.sol#662)
		- fail(Error.TOKEN_INSUFFICIENT_CASH,FailureInfo.REDEEM_TRANSFER_OUT_NOT_POSSIBLE) (../../sb/RToken.sol#1866)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/RToken.sol#671)
		- failOpaque(Error.COINTROLLER_REJECTION,FailureInfo.REDEEM_COINTROLLER_REJECTION,allowed) (../../sb/RToken.sol#1841)
	- Failure(uint256(err),uint256(info),0) (../../sb/RToken.sol#662)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.REDEEM_FRESHNESS_CHECK) (../../sb/RToken.sol#1846)
	- Redeem(redeemer,vars.redeemAmount,vars.redeemTokens) (../../sb/RToken.sol#1887)
	- Transfer(redeemer,address(this),vars.redeemTokens) (../../sb/RToken.sol#1886)
Reentrancy in RToken.repayBorrowFresh(address,address,uint256) (../../sb/RToken.sol#2038-2105):
	External calls:
	- allowed = cointroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sb/RToken.sol#2040)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/RToken.sol#671)
		- (failOpaque(Error.COINTROLLER_REJECTION,FailureInfo.REPAY_BORROW_COINTROLLER_REJECTION,allowed),0) (../../sb/RToken.sol#2042)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/RToken.sol#671)
		- (failOpaque(Error.MATH_ERROR,FailureInfo.REPAY_BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)),0) (../../sb/RToken.sol#2058)
	- Failure(uint256(err),uint256(info),0) (../../sb/RToken.sol#662)
		- (fail(Error.MARKET_NOT_FRESH,FailureInfo.REPAY_BORROW_FRESHNESS_CHECK),0) (../../sb/RToken.sol#2047)
	- RepayBorrow(payer,borrower,vars.actualRepayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (../../sb/RToken.sol#2098)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

CointrollerErrorReporter.fail(CointrollerErrorReporter.Error,CointrollerErrorReporter.FailureInfo) (../../sb/RToken.sol#525-529) is never used and should be removed
CointrollerErrorReporter.failOpaque(CointrollerErrorReporter.Error,CointrollerErrorReporter.FailureInfo,uint256) (../../sb/RToken.sol#534-538) is never used and should be removed
Exponential.addExp(ExponentialNoError.Exp,ExponentialNoError.Exp) (../../sb/RToken.sol#986-990) is never used and should be removed
Exponential.divExp(ExponentialNoError.Exp,ExponentialNoError.Exp) (../../sb/RToken.sol#1129-1131) is never used and should be removed
Exponential.divScalar(ExponentialNoError.Exp,uint256) (../../sb/RToken.sol#1040-1047) is never used and should be removed
Exponential.divScalarByExp(uint256,ExponentialNoError.Exp) (../../sb/RToken.sol#1052-1067) is never used and should be removed
Exponential.divScalarByExpTruncate(uint256,ExponentialNoError.Exp) (../../sb/RToken.sol#1072-1079) is never used and should be removed
Exponential.mulExp(ExponentialNoError.Exp,ExponentialNoError.Exp) (../../sb/RToken.sol#1084-1104) is never used and should be removed
Exponential.mulExp(uint256,uint256) (../../sb/RToken.sol#1109-1111) is never used and should be removed
Exponential.mulExp3(ExponentialNoError.Exp,ExponentialNoError.Exp,ExponentialNoError.Exp) (../../sb/RToken.sol#1116-1122) is never used and should be removed
Exponential.subExp(ExponentialNoError.Exp,ExponentialNoError.Exp) (../../sb/RToken.sol#995-999) is never used and should be removed
ExponentialNoError.add_(ExponentialNoError.Double,ExponentialNoError.Double) (../../sb/RToken.sol#849-851) is never used and should be removed
ExponentialNoError.add_(ExponentialNoError.Exp,ExponentialNoError.Exp) (../../sb/RToken.sol#845-847) is never used and should be removed
ExponentialNoError.add_(uint256,uint256) (../../sb/RToken.sol#853-855) is never used and should be removed
ExponentialNoError.add_(uint256,uint256,string) (../../sb/RToken.sol#857-861) is never used and should be removed
ExponentialNoError.div_(ExponentialNoError.Double,ExponentialNoError.Double) (../../sb/RToken.sol#929-931) is never used and should be removed
ExponentialNoError.div_(ExponentialNoError.Double,uint256) (../../sb/RToken.sol#933-935) is never used and should be removed
ExponentialNoError.div_(ExponentialNoError.Exp,ExponentialNoError.Exp) (../../sb/RToken.sol#917-919) is never used and should be removed
ExponentialNoError.div_(ExponentialNoError.Exp,uint256) (../../sb/RToken.sol#921-923) is never used and should be removed
ExponentialNoError.div_(uint256,ExponentialNoError.Double) (../../sb/RToken.sol#937-939) is never used and should be removed
ExponentialNoError.div_(uint256,ExponentialNoError.Exp) (../../sb/RToken.sol#925-927) is never used and should be removed
ExponentialNoError.div_(uint256,uint256) (../../sb/RToken.sol#941-943) is never used and should be removed
ExponentialNoError.div_(uint256,uint256,string) (../../sb/RToken.sol#945-948) is never used and should be removed
ExponentialNoError.fraction(uint256,uint256) (../../sb/RToken.sol#950-952) is never used and should be removed
ExponentialNoError.greaterThanExp(ExponentialNoError.Exp,ExponentialNoError.Exp) (../../sb/RToken.sol#824-826) is never used and should be removed
ExponentialNoError.isZeroExp(ExponentialNoError.Exp) (../../sb/RToken.sol#831-833) is never used and should be removed
ExponentialNoError.lessThanExp(ExponentialNoError.Exp,ExponentialNoError.Exp) (../../sb/RToken.sol#810-812) is never used and should be removed
ExponentialNoError.lessThanOrEqualExp(ExponentialNoError.Exp,ExponentialNoError.Exp) (../../sb/RToken.sol#817-819) is never used and should be removed
ExponentialNoError.mul_(ExponentialNoError.Double,ExponentialNoError.Double) (../../sb/RToken.sol#892-894) is never used and should be removed
ExponentialNoError.mul_(ExponentialNoError.Double,uint256) (../../sb/RToken.sol#896-898) is never used and should be removed
ExponentialNoError.mul_(ExponentialNoError.Exp,ExponentialNoError.Exp) (../../sb/RToken.sol#880-882) is never used and should be removed
ExponentialNoError.mul_(ExponentialNoError.Exp,uint256) (../../sb/RToken.sol#884-886) is never used and should be removed
ExponentialNoError.mul_(uint256,ExponentialNoError.Double) (../../sb/RToken.sol#900-902) is never used and should be removed
ExponentialNoError.mul_(uint256,ExponentialNoError.Exp) (../../sb/RToken.sol#888-890) is never used and should be removed
ExponentialNoError.mul_(uint256,uint256) (../../sb/RToken.sol#904-906) is never used and should be removed
ExponentialNoError.mul_(uint256,uint256,string) (../../sb/RToken.sol#908-915) is never used and should be removed
ExponentialNoError.mul_ScalarTruncate(ExponentialNoError.Exp,uint256) (../../sb/RToken.sol#794-797) is never used and should be removed
ExponentialNoError.mul_ScalarTruncateAddUInt(ExponentialNoError.Exp,uint256,uint256) (../../sb/RToken.sol#802-805) is never used and should be removed
ExponentialNoError.safe224(uint256,string) (../../sb/RToken.sol#835-838) is never used and should be removed
ExponentialNoError.safe32(uint256,string) (../../sb/RToken.sol#840-843) is never used and should be removed
ExponentialNoError.sub_(ExponentialNoError.Double,ExponentialNoError.Double) (../../sb/RToken.sol#867-869) is never used and should be removed
ExponentialNoError.sub_(ExponentialNoError.Exp,ExponentialNoError.Exp) (../../sb/RToken.sol#863-865) is never used and should be removed
ExponentialNoError.sub_(uint256,uint256) (../../sb/RToken.sol#871-873) is never used and should be removed
ExponentialNoError.sub_(uint256,uint256,string) (../../sb/RToken.sol#875-878) is never used and should be removed
RToken._addReservesFresh(uint256) (../../sb/RToken.sol#2429-2466) is never used and should be removed
RToken._addReservesInternal(uint256) (../../sb/RToken.sol#2411-2421) is never used and should be removed
RToken.borrowFresh(address,uint256) (../../sb/RToken.sol#1923-1987) is never used and should be removed
RToken.borrowInternal(uint256) (../../sb/RToken.sol#1900-1908) is never used and should be removed
RToken.liquidateBorrowFresh(address,address,uint256,RTokenInterface) (../../sb/RToken.sol#2141-2210) is never used and should be removed
RToken.liquidateBorrowInternal(address,uint256,RTokenInterface) (../../sb/RToken.sol#2115-2130) is never used and should be removed
RToken.mintFresh(address,uint256) (../../sb/RToken.sol#1682-1747) is never used and should be removed
RToken.mintInternal(uint256) (../../sb/RToken.sol#1655-1663) is never used and should be removed
RToken.redeemFresh(address,uint256,uint256) (../../sb/RToken.sol#1799-1893) is never used and should be removed
RToken.redeemInternal(uint256) (../../sb/RToken.sol#1755-1763) is never used and should be removed
RToken.redeemUnderlyingInternal(uint256) (../../sb/RToken.sol#1771-1779) is never used and should be removed
RToken.repayBorrowBehalfInternal(address,uint256) (../../sb/RToken.sol#2010-2018) is never used and should be removed
RToken.repayBorrowFresh(address,address,uint256) (../../sb/RToken.sol#2038-2105) is never used and should be removed
RToken.repayBorrowInternal(uint256) (../../sb/RToken.sol#1994-2002) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Pragma version^0.5.16 (../../sb/RToken.sol#1) allows old versions
solc-0.5.17 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Constant RTokenStorage.borrowRateMaxMantissa (../../sb/RToken.sol#197) is not in UPPER_CASE_WITH_UNDERSCORES
Constant RTokenStorage.reserveFactorMaxMantissa (../../sb/RToken.sol#202) is not in UPPER_CASE_WITH_UNDERSCORES
Function RTokenInterface._setPendingAdmin(address) (../../sb/RToken.sol#401) is not in mixedCase
Function RTokenInterface._acceptAdmin() (../../sb/RToken.sol#402) is not in mixedCase
Function RTokenInterface._setCointroller(CointrollerInterface) (../../sb/RToken.sol#403) is not in mixedCase
Function RTokenInterface._setReserveFactor(uint256) (../../sb/RToken.sol#404) is not in mixedCase
Function RTokenInterface._reduceReserves(uint256) (../../sb/RToken.sol#405) is not in mixedCase
Function RTokenInterface._setInterestRateModel(InterestRateModel) (../../sb/RToken.sol#406) is not in mixedCase
Function RBep20Interface._addReserves(uint256) (../../sb/RToken.sol#432) is not in mixedCase
Function RDelegatorInterface._setImplementation(address,bool,bytes) (../../sb/RToken.sol#454) is not in mixedCase
Function RDelegateInterface._becomeImplementation(bytes) (../../sb/RToken.sol#463) is not in mixedCase
Function RDelegateInterface._resignImplementation() (../../sb/RToken.sol#468) is not in mixedCase
Function ExponentialNoError.mul_ScalarTruncate(ExponentialNoError.Exp,uint256) (../../sb/RToken.sol#794-797) is not in mixedCase
Function ExponentialNoError.mul_ScalarTruncateAddUInt(ExponentialNoError.Exp,uint256,uint256) (../../sb/RToken.sol#802-805) is not in mixedCase
Constant ExponentialNoError.expScale (../../sb/RToken.sol#769) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ExponentialNoError.doubleScale (../../sb/RToken.sol#770) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ExponentialNoError.halfExpScale (../../sb/RToken.sol#771) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ExponentialNoError.mantissaOne (../../sb/RToken.sol#772) is not in UPPER_CASE_WITH_UNDERSCORES
Function RToken._setPendingAdmin(address) (../../sb/RToken.sol#2293-2309) is not in mixedCase
Function RToken._acceptAdmin() (../../sb/RToken.sol#2316-2336) is not in mixedCase
Function RToken._setCointroller(CointrollerInterface) (../../sb/RToken.sol#2343-2360) is not in mixedCase
Function RToken._setReserveFactor(uint256) (../../sb/RToken.sol#2367-2375) is not in mixedCase
Function RToken._reduceReserves(uint256) (../../sb/RToken.sol#2474-2482) is not in mixedCase
Function RToken._setInterestRateModel(InterestRateModel) (../../sb/RToken.sol#2539-2547) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Variable RToken.liquidateBorrowFresh(address,address,uint256,RTokenInterface).seizeTokens (../../sb/RToken.sol#2185) is too similar to RToken.seizeInternal(address,address,address,uint256).seizerToken (../../sb/RToken.sol#2235)
Variable RTokenInterface.seize(address,address,uint256).seizeTokens (../../sb/RToken.sol#396) is too similar to RToken.seizeInternal(address,address,address,uint256).seizerToken (../../sb/RToken.sol#2235)
Variable RToken.seize(address,address,uint256).seizeTokens (../../sb/RToken.sol#2221) is too similar to RToken.seizeInternal(address,address,address,uint256).seizerToken (../../sb/RToken.sol#2235)
Variable RToken.seizeInternal(address,address,address,uint256).seizeTokens (../../sb/RToken.sol#2235) is too similar to RToken.seizeInternal(address,address,address,uint256).seizerToken (../../sb/RToken.sol#2235)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar

RToken (../../sb/RToken.sol#1200-2619) does not implement functions:
	- RToken.doTransferIn(address,uint256) (../../sb/RToken.sol#2598)
	- RToken.doTransferOut(address,uint256) (../../sb/RToken.sol#2605)
	- RToken.getCashPrior() (../../sb/RToken.sol#2592)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unimplemented-functions

_setImplementation(address,bool,bytes) should be declared external:
	- RDelegatorInterface._setImplementation(address,bool,bytes) (../../sb/RToken.sol#454)
Moreover, the following function parameters should change its data location:
becomeImplementationData location should be calldata
_becomeImplementation(bytes) should be declared external:
	- RDelegateInterface._becomeImplementation(bytes) (../../sb/RToken.sol#463)
Moreover, the following function parameters should change its data location:
data location should be calldata
initialize(CointrollerInterface,InterestRateModel,uint256,string,string,uint8) should be declared external:
	- RToken.initialize(CointrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sb/RToken.sol#1210-1241)
Moreover, the following function parameters should change its data location:
name_ location should be calldata
symbol_ location should be calldata
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
/sb/RToken.sol analyzed (17 contracts with 93 detectors), 139 result(s) found
