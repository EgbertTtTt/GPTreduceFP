'solc --version' running
'solc /sb/GUniLPOracle.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running
Compilation warnings/errors on /sb/GUniLPOracle.sol:
Warning: Variable is shadowed in inline assembly by an instruction of the same name
   --> /sb/GUniLPOracle.sol:203:5:
    |
203 |     function stop() external auth {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Variable is shadowed in inline assembly by an instruction of the same name
   --> /sb/GUniLPOracle.sol:203:5:
    |
203 |     function stop() external auth {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Variable is shadowed in inline assembly by an instruction of the same name
   --> /sb/GUniLPOracle.sol:203:5:
    |
203 |     function stop() external auth {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Function state mutability can be restricted to view
   --> /sb/GUniLPOracle.sol:244:5:
    |
244 |     function seek() internal returns (uint128 quote) {
    |     ^ (Relevant source part starts here and spans across multiple lines).



Reentrancy in GUniLPOracleFactory.build(address,address,bytes32,address,address) (../../sb/GUniLPOracle.sol#71-85):
	External calls:
	- GUniLPOracle(orcl).rely(_owner) (../../sb/GUniLPOracle.sol#81)
	- GUniLPOracle(orcl).deny(address(this)) (../../sb/GUniLPOracle.sol#82)
	State variables written after the call(s):
	- isOracle[orcl] = true (../../sb/GUniLPOracle.sol#83)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in GUniLPOracleFactory.build(address,address,bytes32,address,address) (../../sb/GUniLPOracle.sol#71-85):
	External calls:
	- GUniLPOracle(orcl).rely(_owner) (../../sb/GUniLPOracle.sol#81)
	- GUniLPOracle(orcl).deny(address(this)) (../../sb/GUniLPOracle.sol#82)
	Event emitted after the call(s):
	- NewGUniLPOracle(_owner,orcl,_wat,tok0,tok1,_orb0,_orb1) (../../sb/GUniLPOracle.sol#84)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

GUniLPOracle.pass() (../../sb/GUniLPOracle.sol#240-242) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= zph (../../sb/GUniLPOracle.sol#241)
GUniLPOracle.poke() (../../sb/GUniLPOracle.sol#267-328) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp >= zph_,GUniLPOracle/not-passed) (../../sb/GUniLPOracle.sol#289)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

GUniLPOracle.poke() (../../sb/GUniLPOracle.sol#267-328) uses assembly
	- INLINE ASM (../../sb/GUniLPOracle.sol#276-281)
	- INLINE ASM (../../sb/GUniLPOracle.sol#308-319)
	- INLINE ASM (../../sb/GUniLPOracle.sol#325-327)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

Pragma version=0.6.12 (../../sb/GUniLPOracle.sol#1) allows old versions
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

GUniLPOracle (../../sb/GUniLPOracle.sol#88-368) should inherit from OracleLike (../../sb/GUniLPOracle.sol#59-61)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-inheritance

Parameter GUniLPOracleFactory.build(address,address,bytes32,address,address)._owner (../../sb/GUniLPOracle.sol#72) is not in mixedCase
Parameter GUniLPOracleFactory.build(address,address,bytes32,address,address)._src (../../sb/GUniLPOracle.sol#73) is not in mixedCase
Parameter GUniLPOracleFactory.build(address,address,bytes32,address,address)._wat (../../sb/GUniLPOracle.sol#74) is not in mixedCase
Parameter GUniLPOracleFactory.build(address,address,bytes32,address,address)._orb0 (../../sb/GUniLPOracle.sol#75) is not in mixedCase
Parameter GUniLPOracleFactory.build(address,address,bytes32,address,address)._orb1 (../../sb/GUniLPOracle.sol#76) is not in mixedCase
Parameter GUniLPOracle.rely(address)._usr (../../sb/GUniLPOracle.sol#92) is not in mixedCase
Parameter GUniLPOracle.deny(address)._usr (../../sb/GUniLPOracle.sol#93) is not in mixedCase
Parameter GUniLPOracle.sqrt(uint256)._x (../../sb/GUniLPOracle.sol#148) is not in mixedCase
Parameter GUniLPOracle.step(uint256)._hop (../../sb/GUniLPOracle.sol#216) is not in mixedCase
Parameter GUniLPOracle.link(uint256,address)._id (../../sb/GUniLPOracle.sol#222) is not in mixedCase
Parameter GUniLPOracle.link(uint256,address)._orb (../../sb/GUniLPOracle.sol#222) is not in mixedCase
Parameter GUniLPOracle.kiss(address)._a (../../sb/GUniLPOracle.sol#343) is not in mixedCase
Parameter GUniLPOracle.kiss(address[])._a (../../sb/GUniLPOracle.sol#349) is not in mixedCase
Parameter GUniLPOracle.diss(address)._a (../../sb/GUniLPOracle.sol#357) is not in mixedCase
Parameter GUniLPOracle.diss(address[])._a (../../sb/GUniLPOracle.sol#362) is not in mixedCase
Variable GUniLPOracle.UNIT_0 (../../sb/GUniLPOracle.sol#122) is not in mixedCase
Variable GUniLPOracle.UNIT_1 (../../sb/GUniLPOracle.sol#123) is not in mixedCase
Variable GUniLPOracle.TO_18_DEC_0 (../../sb/GUniLPOracle.sol#124) is not in mixedCase
Variable GUniLPOracle.TO_18_DEC_1 (../../sb/GUniLPOracle.sol#125) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Variable GUniLPOracle.TO_18_DEC_0 (../../sb/GUniLPOracle.sol#124) is too similar to GUniLPOracle.TO_18_DEC_1 (../../sb/GUniLPOracle.sol#125)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar

GUniLPOracle.sqrt(uint256) (../../sb/GUniLPOracle.sol#148-170) uses literals with too many digits:
	- xx >= 0x100000000000000000000000000000000 (../../sb/GUniLPOracle.sol#153)
GUniLPOracle.sqrt(uint256) (../../sb/GUniLPOracle.sol#148-170) uses literals with too many digits:
	- xx >= 0x10000000000000000 (../../sb/GUniLPOracle.sol#154)
GUniLPOracle.sqrt(uint256) (../../sb/GUniLPOracle.sol#148-170) uses literals with too many digits:
	- xx >= 0x100000000 (../../sb/GUniLPOracle.sol#155)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

GUniLPOracle.WAD (../../sb/GUniLPOracle.sol#132) is never used in GUniLPOracle (../../sb/GUniLPOracle.sol#88-368)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
/sb/GUniLPOracle.sol analyzed (5 contracts with 93 detectors), 32 result(s) found
