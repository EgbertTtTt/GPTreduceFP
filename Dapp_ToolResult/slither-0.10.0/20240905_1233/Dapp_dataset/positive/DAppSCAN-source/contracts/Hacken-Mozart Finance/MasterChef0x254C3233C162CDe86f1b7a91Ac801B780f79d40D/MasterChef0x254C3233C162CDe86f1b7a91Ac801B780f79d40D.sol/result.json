{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Mozart Finance/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol",
            "function": "set",
            "impact": "Medium",
            "line": 1393,
            "line_end": 1401,
            "message": "Reentrancy in MasterChef.set(uint256,uint256,uint16,bool) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1393-1401):\n\tExternal calls:\n\t- massUpdatePools() (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1396)\n\t\t- melody.mint(devaddr,treasuryReward) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1475)\n\t\t- melody.mint(address(this),contractReward) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1476)\n\tState variables written after the call(s):\n\t- poolInfo[_pid].allocPoint = _allocPoint (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1399)\n\tMasterChef.poolInfo (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1324) can be used in cross function reentrancies:\n\t- MasterChef.add(uint256,IBEP20,uint16,bool) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1375-1390)\n\t- MasterChef.massUpdatePools() (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1452-1458)\n\t- MasterChef.pendingMelody(uint256,address) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1438-1449)\n\t- MasterChef.poolInfo (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1324)\n\t- MasterChef.poolLength() (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1364-1366)\n\t- MasterChef.set(uint256,uint256,uint16,bool) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1393-1401)\n\t- MasterChef.updatePool(uint256) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1461-1479)\n\t- poolInfo[_pid].depositFeeBP = _depositFeeBP (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1400)\n\tMasterChef.poolInfo (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1324) can be used in cross function reentrancies:\n\t- MasterChef.add(uint256,IBEP20,uint16,bool) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1375-1390)\n\t- MasterChef.massUpdatePools() (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1452-1458)\n\t- MasterChef.pendingMelody(uint256,address) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1438-1449)\n\t- MasterChef.poolInfo (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1324)\n\t- MasterChef.poolLength() (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1364-1366)\n\t- MasterChef.set(uint256,uint256,uint16,bool) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1393-1401)\n\t- MasterChef.updatePool(uint256) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1461-1479)\n\t- totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1398)\n\tMasterChef.totalAllocPoint (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1329) can be used in cross function reentrancies:\n\t- MasterChef.add(uint256,IBEP20,uint16,bool) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1375-1390)\n\t- MasterChef.pendingMelody(uint256,address) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1438-1449)\n\t- MasterChef.set(uint256,uint256,uint16,bool) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1393-1401)\n\t- MasterChef.totalAllocPoint (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1329)\n\t- MasterChef.updatePool(uint256) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1461-1479)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Mozart Finance/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol",
            "function": "add",
            "impact": "Medium",
            "line": 1375,
            "line_end": 1390,
            "message": "Reentrancy in MasterChef.add(uint256,IBEP20,uint16,bool) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1375-1390):\n\tExternal calls:\n\t- massUpdatePools() (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1378)\n\t\t- melody.mint(devaddr,treasuryReward) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1475)\n\t\t- melody.mint(address(this),contractReward) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1476)\n\tState variables written after the call(s):\n\t- poolExistence[_lpToken] = true (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1382)\n\tMasterChef.poolExistence (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1368) can be used in cross function reentrancies:\n\t- MasterChef.add(uint256,IBEP20,uint16,bool) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1375-1390)\n\t- MasterChef.nonDuplicated(IBEP20) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1369-1372)\n\t- MasterChef.poolExistence (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1368)\n\t- poolInfo.push(PoolInfo({lpToken:_lpToken,allocPoint:_allocPoint,lastRewardBlock:lastRewardBlock,accMelodyPerShare:0,depositFeeBP:_depositFeeBP})) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1383-1389)\n\tMasterChef.poolInfo (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1324) can be used in cross function reentrancies:\n\t- MasterChef.add(uint256,IBEP20,uint16,bool) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1375-1390)\n\t- MasterChef.massUpdatePools() (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1452-1458)\n\t- MasterChef.pendingMelody(uint256,address) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1438-1449)\n\t- MasterChef.poolInfo (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1324)\n\t- MasterChef.poolLength() (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1364-1366)\n\t- MasterChef.set(uint256,uint256,uint16,bool) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1393-1401)\n\t- MasterChef.updatePool(uint256) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1461-1479)\n\t- totalAllocPoint = totalAllocPoint.add(_allocPoint) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1381)\n\tMasterChef.totalAllocPoint (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1329) can be used in cross function reentrancies:\n\t- MasterChef.add(uint256,IBEP20,uint16,bool) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1375-1390)\n\t- MasterChef.pendingMelody(uint256,address) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1438-1449)\n\t- MasterChef.set(uint256,uint256,uint16,bool) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1393-1401)\n\t- MasterChef.totalAllocPoint (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1329)\n\t- MasterChef.updatePool(uint256) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1461-1479)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Mozart Finance/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol",
            "function": "withdraw",
            "impact": "Medium",
            "line": 1507,
            "line_end": 1522,
            "message": "Reentrancy in MasterChef.withdraw(uint256,uint256) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1507-1522):\n\tExternal calls:\n\t- updatePool(_pid) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1511)\n\t\t- melody.mint(devaddr,treasuryReward) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1475)\n\t\t- melody.mint(address(this),contractReward) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1476)\n\t- safeMelodyTransfer(msg.sender,pending) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1514)\n\t\t- transferSuccess = melody.transfer(_to,melodyBal) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1540)\n\t\t- transferSuccess = melody.transfer(_to,_amount) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1542)\n\t- pool.lpToken.safeTransfer(address(msg.sender),_amount) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1518)\n\tState variables written after the call(s):\n\t- user.rewardDebt = user.amount.mul(pool.accMelodyPerShare).div(1e12) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1520)\n\tMasterChef.userInfo (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1327) can be used in cross function reentrancies:\n\t- MasterChef.pendingMelody(uint256,address) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1438-1449)\n\t- MasterChef.userInfo (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1327)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Mozart Finance/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol",
            "function": "updatePool",
            "impact": "Medium",
            "line": 1461,
            "line_end": 1479,
            "message": "Reentrancy in MasterChef.updatePool(uint256) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1461-1479):\n\tExternal calls:\n\t- melody.mint(devaddr,treasuryReward) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1475)\n\t- melody.mint(address(this),contractReward) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1476)\n\tState variables written after the call(s):\n\t- pool.accMelodyPerShare = pool.accMelodyPerShare.add(melodyReward.mul(1e12).div(lpSupply)) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1477)\n\tMasterChef.poolInfo (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1324) can be used in cross function reentrancies:\n\t- MasterChef.add(uint256,IBEP20,uint16,bool) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1375-1390)\n\t- MasterChef.massUpdatePools() (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1452-1458)\n\t- MasterChef.pendingMelody(uint256,address) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1438-1449)\n\t- MasterChef.poolInfo (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1324)\n\t- MasterChef.poolLength() (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1364-1366)\n\t- MasterChef.set(uint256,uint256,uint16,bool) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1393-1401)\n\t- MasterChef.updatePool(uint256) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1461-1479)\n\t- pool.lastRewardBlock = block.number (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1478)\n\tMasterChef.poolInfo (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1324) can be used in cross function reentrancies:\n\t- MasterChef.add(uint256,IBEP20,uint16,bool) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1375-1390)\n\t- MasterChef.massUpdatePools() (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1452-1458)\n\t- MasterChef.pendingMelody(uint256,address) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1438-1449)\n\t- MasterChef.poolInfo (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1324)\n\t- MasterChef.poolLength() (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1364-1366)\n\t- MasterChef.set(uint256,uint256,uint16,bool) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1393-1401)\n\t- MasterChef.updatePool(uint256) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1461-1479)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Mozart Finance/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol",
            "function": "withdraw",
            "impact": "Medium",
            "line": 1507,
            "line_end": 1522,
            "message": "Reentrancy in MasterChef.withdraw(uint256,uint256) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1507-1522):\n\tExternal calls:\n\t- updatePool(_pid) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1511)\n\t\t- melody.mint(devaddr,treasuryReward) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1475)\n\t\t- melody.mint(address(this),contractReward) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1476)\n\t- safeMelodyTransfer(msg.sender,pending) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1514)\n\t\t- transferSuccess = melody.transfer(_to,melodyBal) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1540)\n\t\t- transferSuccess = melody.transfer(_to,_amount) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1542)\n\tState variables written after the call(s):\n\t- user.amount = user.amount.sub(_amount) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1517)\n\tMasterChef.userInfo (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1327) can be used in cross function reentrancies:\n\t- MasterChef.pendingMelody(uint256,address) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1438-1449)\n\t- MasterChef.userInfo (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1327)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Mozart Finance/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol",
            "function": "deposit",
            "impact": "Medium",
            "line": 1482,
            "line_end": 1504,
            "message": "Reentrancy in MasterChef.deposit(uint256,uint256) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1482-1504):\n\tExternal calls:\n\t- updatePool(_pid) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1485)\n\t\t- melody.mint(devaddr,treasuryReward) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1475)\n\t\t- melody.mint(address(this),contractReward) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1476)\n\t- safeMelodyTransfer(msg.sender,pending) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1489)\n\t\t- transferSuccess = melody.transfer(_to,melodyBal) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1540)\n\t\t- transferSuccess = melody.transfer(_to,_amount) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1542)\n\t- pool.lpToken.safeTransferFrom(address(msg.sender),address(this),_amount) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1493)\n\tState variables written after the call(s):\n\t- user.amount = user.amount.add(_amount) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1499)\n\tMasterChef.userInfo (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1327) can be used in cross function reentrancies:\n\t- MasterChef.pendingMelody(uint256,address) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1438-1449)\n\t- MasterChef.userInfo (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1327)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Mozart Finance/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol",
            "function": "deposit",
            "impact": "Medium",
            "line": 1482,
            "line_end": 1504,
            "message": "Reentrancy in MasterChef.deposit(uint256,uint256) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1482-1504):\n\tExternal calls:\n\t- updatePool(_pid) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1485)\n\t\t- melody.mint(devaddr,treasuryReward) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1475)\n\t\t- melody.mint(address(this),contractReward) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1476)\n\t- safeMelodyTransfer(msg.sender,pending) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1489)\n\t\t- transferSuccess = melody.transfer(_to,melodyBal) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1540)\n\t\t- transferSuccess = melody.transfer(_to,_amount) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1542)\n\t- pool.lpToken.safeTransferFrom(address(msg.sender),address(this),_amount) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1493)\n\t- pool.lpToken.safeTransfer(feeAddress,depositFee) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1496)\n\tState variables written after the call(s):\n\t- user.amount = user.amount.add(_amount).sub(depositFee) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1497)\n\tMasterChef.userInfo (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1327) can be used in cross function reentrancies:\n\t- MasterChef.pendingMelody(uint256,address) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1438-1449)\n\t- MasterChef.userInfo (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1327)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "FixedBEP20",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Mozart Finance/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol",
            "function": "totalSupply",
            "impact": "Low",
            "line": 774,
            "message": "FixedBEP20.constructor(string,string,uint256).totalSupply (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#774) shadows:\n\t- FixedBEP20.totalSupply() (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#813-815) (function)\n\t- IBEP20.totalSupply() (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#235) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "Ownable",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Mozart Finance/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol",
            "function": "owner",
            "impact": "Low",
            "line": 1009,
            "message": "FixedBEP20._approve(address,address,uint256).owner (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1009) shadows:\n\t- Ownable.owner() (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#630-632) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "FixedBEP20",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Mozart Finance/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol",
            "function": "name",
            "impact": "Low",
            "line": 774,
            "message": "FixedBEP20.constructor(string,string,uint256).name (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#774) shadows:\n\t- FixedBEP20.name() (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#791-793) (function)\n\t- IBEP20.name() (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#250) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "FixedBEP20",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Mozart Finance/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol",
            "function": "symbol",
            "impact": "Low",
            "line": 774,
            "message": "FixedBEP20.constructor(string,string,uint256).symbol (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#774) shadows:\n\t- FixedBEP20.symbol() (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#799-801) (function)\n\t- IBEP20.symbol() (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#245) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "Ownable",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Mozart Finance/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol",
            "function": "owner",
            "impact": "Low",
            "line": 840,
            "message": "FixedBEP20.allowance(address,address).owner (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#840) shadows:\n\t- Ownable.owner() (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#630-632) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Mozart Finance/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol",
            "function": "set",
            "impact": "Low",
            "line": 1393,
            "line_end": 1401,
            "message": "MasterChef.set(uint256,uint256,uint16,bool) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1393-1401) should emit an event for: \n\t- totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1398) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Mozart Finance/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol",
            "function": "add",
            "impact": "Low",
            "line": 1375,
            "line_end": 1390,
            "message": "MasterChef.add(uint256,IBEP20,uint16,bool) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1375-1390) should emit an event for: \n\t- totalAllocPoint = totalAllocPoint.add(_allocPoint) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1381) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Mozart Finance/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol",
            "function": "updatePool",
            "impact": "Low",
            "line": 1461,
            "line_end": 1479,
            "message": "MasterChef.updatePool(uint256) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1461-1479) has external calls inside a loop: melody.mint(devaddr,treasuryReward) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1475)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Mozart Finance/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol",
            "function": "updatePool",
            "impact": "Low",
            "line": 1461,
            "line_end": 1479,
            "message": "MasterChef.updatePool(uint256) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1461-1479) has external calls inside a loop: lpSupply = pool.lpToken.balanceOf(address(this)) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1466)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Mozart Finance/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol",
            "function": "updatePool",
            "impact": "Low",
            "line": 1461,
            "line_end": 1479,
            "message": "MasterChef.updatePool(uint256) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1461-1479) has external calls inside a loop: melody.mint(address(this),contractReward) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1476)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MelodyToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Mozart Finance/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol",
            "function": "delegateBySig",
            "impact": "Low",
            "line": 1103,
            "line_end": 1144,
            "message": "MelodyToken.delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1103-1144) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(now <= expiry,MELODY::delegateBySig: signature expired) (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1142)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Mozart Finance/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D/MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol",
            "impact": "Informational",
            "line": 10,
            "message": "Different versions of Solidity are used:\n\t- Version used: ['0.6.12', '>=0.4.0', '>=0.6.0<0.8.0', '>=0.6.2<0.8.0', '>=0.6.4']\n\t- 0.6.12 (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#10)\n\t- 0.6.12 (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#11)\n\t- >=0.4.0 (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#9)\n\t- >=0.6.0<0.8.0 (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#1)\n\t- >=0.6.0<0.8.0 (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#4)\n\t- >=0.6.0<0.8.0 (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#5)\n\t- >=0.6.0<0.8.0 (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#6)\n\t- >=0.6.0<0.8.0 (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#7)\n\t- >=0.6.0<0.8.0 (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#8)\n\t- >=0.6.2<0.8.0 (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#3)\n\t- >=0.6.4 (MasterChef0x254C3233C162CDe86f1b7a91Ac801B780f79d40D.sol#2)\n",
            "name": "pragma",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}