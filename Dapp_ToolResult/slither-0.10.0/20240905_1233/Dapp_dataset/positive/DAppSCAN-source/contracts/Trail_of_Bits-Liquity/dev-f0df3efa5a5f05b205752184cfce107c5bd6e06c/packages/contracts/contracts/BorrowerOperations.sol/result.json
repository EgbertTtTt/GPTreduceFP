{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "BorrowerOperations",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-Liquity/dev-f0df3efa5a5f05b205752184cfce107c5bd6e06c/packages/contracts/contracts/BorrowerOperations.sol",
            "function": "openTrove",
            "impact": "Medium",
            "line": 2814,
            "line_end": 2860,
            "message": "BorrowerOperations.openTrove(uint256,address) (BorrowerOperations.sol#2814-2860) ignores return value by troveManager.increaseTroveColl(msg.sender,msg.value) (BorrowerOperations.sol#2838)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BorrowerOperations",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-Liquity/dev-f0df3efa5a5f05b205752184cfce107c5bd6e06c/packages/contracts/contracts/BorrowerOperations.sol",
            "function": "openTrove",
            "impact": "Medium",
            "line": 2814,
            "line_end": 2860,
            "message": "BorrowerOperations.openTrove(uint256,address) (BorrowerOperations.sol#2814-2860) ignores return value by troveManager.increaseTroveDebt(msg.sender,compositeDebt) (BorrowerOperations.sol#2839)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BorrowerOperations",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-Liquity/dev-f0df3efa5a5f05b205752184cfce107c5bd6e06c/packages/contracts/contracts/BorrowerOperations.sol",
            "function": "closeTrove",
            "impact": "Low",
            "line": 2953,
            "line_end": 2972,
            "message": "Reentrancy in BorrowerOperations.closeTrove() (BorrowerOperations.sol#2953-2972):\n\tExternal calls:\n\t- troveManager.applyPendingRewards(msg.sender) (BorrowerOperations.sol#2957)\n\t- troveManager.removeStake(msg.sender) (BorrowerOperations.sol#2962)\n\t- troveManager.closeTrove(msg.sender) (BorrowerOperations.sol#2963)\n\t- _repayLUSD(msg.sender,debt.sub(LUSD_GAS_COMPENSATION)) (BorrowerOperations.sol#2966)\n\t\t- activePool.decreaseLUSDDebt(_LUSD) (BorrowerOperations.sol#3064)\n\t\t- lusdToken.burn(_account,_LUSD) (BorrowerOperations.sol#3065)\n\t- activePool.sendETH(msg.sender,coll) (BorrowerOperations.sol#2967)\n\t- _repayLUSD(GAS_POOL_ADDRESS,LUSD_GAS_COMPENSATION) (BorrowerOperations.sol#2969)\n\t\t- activePool.decreaseLUSDDebt(_LUSD) (BorrowerOperations.sol#3064)\n\t\t- lusdToken.burn(_account,_LUSD) (BorrowerOperations.sol#3065)\n\tEvent emitted after the call(s):\n\t- TroveUpdated(msg.sender,0,0,0,BorrowerOperation.closeTrove) (BorrowerOperations.sol#2971)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BorrowerOperations",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-Liquity/dev-f0df3efa5a5f05b205752184cfce107c5bd6e06c/packages/contracts/contracts/BorrowerOperations.sol",
            "function": "openTrove",
            "impact": "Low",
            "line": 2814,
            "line_end": 2860,
            "message": "Reentrancy in BorrowerOperations.openTrove(uint256,address) (BorrowerOperations.sol#2814-2860):\n\tExternal calls:\n\t- troveManager.decayBaseRateFromBorrowing() (BorrowerOperations.sol#2820)\n\t- troveManager.setTroveStatus(msg.sender,1) (BorrowerOperations.sol#2837)\n\t- troveManager.increaseTroveColl(msg.sender,msg.value) (BorrowerOperations.sol#2838)\n\t- troveManager.increaseTroveDebt(msg.sender,compositeDebt) (BorrowerOperations.sol#2839)\n\t- troveManager.updateTroveRewardSnapshots(msg.sender) (BorrowerOperations.sol#2841)\n\t- stake = troveManager.updateStakeAndTotalStakes(msg.sender) (BorrowerOperations.sol#2842)\n\t- sortedTroves.insert(msg.sender,ICR,price,_hint,_hint) (BorrowerOperations.sol#2844)\n\t- arrayIndex = troveManager.addTroveOwnerToArray(msg.sender) (BorrowerOperations.sol#2845)\n\t- lusdToken.mint(lqtyStakingAddress,LUSDFee) (BorrowerOperations.sol#2849)\n\t- lqtyStaking.increaseF_LUSD(LUSDFee) (BorrowerOperations.sol#2850)\n\t- _activePoolAddColl(msg.value) (BorrowerOperations.sol#2853)\n\t\t- (success) = address(activePool).call{value: _amount}() (BorrowerOperations.sol#3052)\n\t- _withdrawLUSD(msg.sender,_LUSDAmount,rawDebt) (BorrowerOperations.sol#2854)\n\t\t- activePool.increaseLUSDDebt(_rawDebtIncrease) (BorrowerOperations.sol#3058)\n\t\t- lusdToken.mint(_account,_LUSDAmount) (BorrowerOperations.sol#3059)\n\t- _withdrawLUSD(GAS_POOL_ADDRESS,LUSD_GAS_COMPENSATION,LUSD_GAS_COMPENSATION) (BorrowerOperations.sol#2856)\n\t\t- activePool.increaseLUSDDebt(_rawDebtIncrease) (BorrowerOperations.sol#3058)\n\t\t- lusdToken.mint(_account,_LUSDAmount) (BorrowerOperations.sol#3059)\n\tExternal calls sending eth:\n\t- _activePoolAddColl(msg.value) (BorrowerOperations.sol#2853)\n\t\t- (success) = address(activePool).call{value: _amount}() (BorrowerOperations.sol#3052)\n\tEvent emitted after the call(s):\n\t- LUSDBorrowingFeePaid(msg.sender,LUSDFee) (BorrowerOperations.sol#2859)\n\t- TroveUpdated(msg.sender,rawDebt,msg.value,stake,BorrowerOperation.openTrove) (BorrowerOperations.sol#2858)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BorrowerOperations",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-Liquity/dev-f0df3efa5a5f05b205752184cfce107c5bd6e06c/packages/contracts/contracts/BorrowerOperations.sol",
            "function": "claimRedeemedCollateral",
            "impact": "Low",
            "line": 2974,
            "line_end": 2979,
            "message": "Reentrancy in BorrowerOperations.claimRedeemedCollateral(address) (BorrowerOperations.sol#2974-2979):\n\tExternal calls:\n\t- collSurplusPool.claimColl(_user) (BorrowerOperations.sol#2976)\n\tEvent emitted after the call(s):\n\t- RedeemedCollateralClaimed(_user) (BorrowerOperations.sol#2978)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BorrowerOperations",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-Liquity/dev-f0df3efa5a5f05b205752184cfce107c5bd6e06c/packages/contracts/contracts/BorrowerOperations.sol",
            "function": "openTrove",
            "impact": "Low",
            "line": 2814,
            "line_end": 2860,
            "message": "Reentrancy in BorrowerOperations.openTrove(uint256,address) (BorrowerOperations.sol#2814-2860):\n\tExternal calls:\n\t- troveManager.decayBaseRateFromBorrowing() (BorrowerOperations.sol#2820)\n\t- troveManager.setTroveStatus(msg.sender,1) (BorrowerOperations.sol#2837)\n\t- troveManager.increaseTroveColl(msg.sender,msg.value) (BorrowerOperations.sol#2838)\n\t- troveManager.increaseTroveDebt(msg.sender,compositeDebt) (BorrowerOperations.sol#2839)\n\t- troveManager.updateTroveRewardSnapshots(msg.sender) (BorrowerOperations.sol#2841)\n\t- stake = troveManager.updateStakeAndTotalStakes(msg.sender) (BorrowerOperations.sol#2842)\n\t- sortedTroves.insert(msg.sender,ICR,price,_hint,_hint) (BorrowerOperations.sol#2844)\n\t- arrayIndex = troveManager.addTroveOwnerToArray(msg.sender) (BorrowerOperations.sol#2845)\n\tEvent emitted after the call(s):\n\t- TroveCreated(msg.sender,arrayIndex) (BorrowerOperations.sol#2846)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BorrowerOperations",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-Liquity/dev-f0df3efa5a5f05b205752184cfce107c5bd6e06c/packages/contracts/contracts/BorrowerOperations.sol",
            "function": "_adjustTrove",
            "impact": "Low",
            "line": 2896,
            "line_end": 2951,
            "message": "Reentrancy in BorrowerOperations._adjustTrove(address,uint256,uint256,bool,address) (BorrowerOperations.sol#2896-2951):\n\tExternal calls:\n\t- troveManager.applyPendingRewards(_borrower) (BorrowerOperations.sol#2910)\n\t- troveManager.decayBaseRateFromBorrowing() (BorrowerOperations.sol#2917)\n\t- lqtyStaking.increaseF_LUSD(L.LUSDFee) (BorrowerOperations.sol#2924)\n\t- lusdToken.mint(lqtyStakingAddress,L.LUSDFee) (BorrowerOperations.sol#2925)\n\t- (L.newColl,L.newDebt) = _updateTroveFromAdjustment(_borrower,L.collChange,L.isCollIncrease,L.rawDebtChange,_isDebtIncrease) (BorrowerOperations.sol#2940)\n\t\t- newColl = troveManager.increaseTroveColl(_borrower,_collChange) (BorrowerOperations.sol#3017-3018)\n\t\t- newColl = troveManager.decreaseTroveColl(_borrower,_collChange) (BorrowerOperations.sol#3017-3018)\n\t\t- newDebt = troveManager.increaseTroveDebt(_borrower,_debtChange) (BorrowerOperations.sol#3019-3020)\n\t\t- newDebt = troveManager.decreaseTroveDebt(_borrower,_debtChange) (BorrowerOperations.sol#3019-3020)\n\t- L.stake = troveManager.updateStakeAndTotalStakes(_borrower) (BorrowerOperations.sol#2941)\n\t- sortedTroves.reInsert(_borrower,L.newICR,L.price,_hint,_hint) (BorrowerOperations.sol#2944)\n\t- _moveTokensAndETHfromAdjustment(msg.sender,L.collChange,L.isCollIncrease,_debtChange,_isDebtIncrease,L.rawDebtChange) (BorrowerOperations.sol#2947)\n\t\t- activePool.increaseLUSDDebt(_rawDebtIncrease) (BorrowerOperations.sol#3058)\n\t\t- activePool.decreaseLUSDDebt(_LUSD) (BorrowerOperations.sol#3064)\n\t\t- lusdToken.mint(_account,_LUSDAmount) (BorrowerOperations.sol#3059)\n\t\t- lusdToken.burn(_account,_LUSD) (BorrowerOperations.sol#3065)\n\t\t- (success) = address(activePool).call{value: _amount}() (BorrowerOperations.sol#3052)\n\t\t- activePool.sendETH(_borrower,_collChange) (BorrowerOperations.sol#3046)\n\tExternal calls sending eth:\n\t- _moveTokensAndETHfromAdjustment(msg.sender,L.collChange,L.isCollIncrease,_debtChange,_isDebtIncrease,L.rawDebtChange) (BorrowerOperations.sol#2947)\n\t\t- (success) = address(activePool).call{value: _amount}() (BorrowerOperations.sol#3052)\n\tEvent emitted after the call(s):\n\t- LUSDBorrowingFeePaid(msg.sender,L.LUSDFee) (BorrowerOperations.sol#2950)\n\t- TroveUpdated(_borrower,L.newDebt,L.newColl,L.stake,BorrowerOperation.adjustTrove) (BorrowerOperations.sol#2949)\n",
            "name": "reentrancy-events",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}