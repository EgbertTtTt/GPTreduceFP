{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "MasterMilker",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-MilkySwap/milkyswap-59f163e9959cf8bae4a521a9648219b553312e07/contracts/MasterMilker.sol",
            "function": "updatePool",
            "impact": "Medium",
            "line": 1624,
            "line_end": 1645,
            "message": "Reentrancy in MasterMilker.updatePool(uint256) (MasterMilker.sol#1624-1645):\n\tExternal calls:\n\t- milky.mint(devaddr,milkyReward.div(10)) (MasterMilker.sol#1639)\n\t- milky.mint(address(this),milkyReward) (MasterMilker.sol#1640)\n\tState variables written after the call(s):\n\t- pool.accMilkyPerShare = pool.accMilkyPerShare.add(milkyReward.mul(1e12).div(lpSupply)) (MasterMilker.sol#1641-1643)\n\tMasterMilker.poolInfo (MasterMilker.sol#1507) can be used in cross function reentrancies:\n\t- MasterMilker.add(uint256,IERC20) (MasterMilker.sol#1543-1559)\n\t- MasterMilker.deposit(uint256,uint256) (MasterMilker.sol#1648-1667)\n\t- MasterMilker.emergencyWithdraw(uint256) (MasterMilker.sol#1688-1695)\n\t- MasterMilker.massUpdatePools() (MasterMilker.sol#1616-1621)\n\t- MasterMilker.pendingMilky(uint256,address) (MasterMilker.sol#1592-1613)\n\t- MasterMilker.poolInfo (MasterMilker.sol#1507)\n\t- MasterMilker.poolLength() (MasterMilker.sol#1537-1539)\n\t- MasterMilker.set(uint256,uint256) (MasterMilker.sol#1562-1571)\n\t- MasterMilker.updatePool(uint256) (MasterMilker.sol#1624-1645)\n\t- MasterMilker.withdraw(uint256,uint256) (MasterMilker.sol#1670-1684)\n\t- pool.lastRewardBlock = block.number (MasterMilker.sol#1644)\n\tMasterMilker.poolInfo (MasterMilker.sol#1507) can be used in cross function reentrancies:\n\t- MasterMilker.add(uint256,IERC20) (MasterMilker.sol#1543-1559)\n\t- MasterMilker.deposit(uint256,uint256) (MasterMilker.sol#1648-1667)\n\t- MasterMilker.emergencyWithdraw(uint256) (MasterMilker.sol#1688-1695)\n\t- MasterMilker.massUpdatePools() (MasterMilker.sol#1616-1621)\n\t- MasterMilker.pendingMilky(uint256,address) (MasterMilker.sol#1592-1613)\n\t- MasterMilker.poolInfo (MasterMilker.sol#1507)\n\t- MasterMilker.poolLength() (MasterMilker.sol#1537-1539)\n\t- MasterMilker.set(uint256,uint256) (MasterMilker.sol#1562-1571)\n\t- MasterMilker.updatePool(uint256) (MasterMilker.sol#1624-1645)\n\t- MasterMilker.withdraw(uint256,uint256) (MasterMilker.sol#1670-1684)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterMilker",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-MilkySwap/milkyswap-59f163e9959cf8bae4a521a9648219b553312e07/contracts/MasterMilker.sol",
            "function": "emergencyWithdraw",
            "impact": "Medium",
            "line": 1688,
            "line_end": 1695,
            "message": "Reentrancy in MasterMilker.emergencyWithdraw(uint256) (MasterMilker.sol#1688-1695):\n\tExternal calls:\n\t- pool.lpToken.safeTransfer(address(msg.sender),user.amount) (MasterMilker.sol#1692)\n\tState variables written after the call(s):\n\t- user.amount = 0 (MasterMilker.sol#1693)\n\tMasterMilker.userInfo (MasterMilker.sol#1509) can be used in cross function reentrancies:\n\t- MasterMilker.deposit(uint256,uint256) (MasterMilker.sol#1648-1667)\n\t- MasterMilker.emergencyWithdraw(uint256) (MasterMilker.sol#1688-1695)\n\t- MasterMilker.pendingMilky(uint256,address) (MasterMilker.sol#1592-1613)\n\t- MasterMilker.userInfo (MasterMilker.sol#1509)\n\t- MasterMilker.withdraw(uint256,uint256) (MasterMilker.sol#1670-1684)\n\t- user.rewardDebt = 0 (MasterMilker.sol#1694)\n\tMasterMilker.userInfo (MasterMilker.sol#1509) can be used in cross function reentrancies:\n\t- MasterMilker.deposit(uint256,uint256) (MasterMilker.sol#1648-1667)\n\t- MasterMilker.emergencyWithdraw(uint256) (MasterMilker.sol#1688-1695)\n\t- MasterMilker.pendingMilky(uint256,address) (MasterMilker.sol#1592-1613)\n\t- MasterMilker.userInfo (MasterMilker.sol#1509)\n\t- MasterMilker.withdraw(uint256,uint256) (MasterMilker.sol#1670-1684)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterMilker",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-MilkySwap/milkyswap-59f163e9959cf8bae4a521a9648219b553312e07/contracts/MasterMilker.sol",
            "function": "set",
            "impact": "Medium",
            "line": 1562,
            "line_end": 1571,
            "message": "Reentrancy in MasterMilker.set(uint256,uint256) (MasterMilker.sol#1562-1571):\n\tExternal calls:\n\t- massUpdatePools() (MasterMilker.sol#1566)\n\t\t- milky.mint(devaddr,milkyReward.div(10)) (MasterMilker.sol#1639)\n\t\t- milky.mint(address(this),milkyReward) (MasterMilker.sol#1640)\n\tState variables written after the call(s):\n\t- poolInfo[_pid].allocPoint = _allocPoint (MasterMilker.sol#1570)\n\tMasterMilker.poolInfo (MasterMilker.sol#1507) can be used in cross function reentrancies:\n\t- MasterMilker.add(uint256,IERC20) (MasterMilker.sol#1543-1559)\n\t- MasterMilker.deposit(uint256,uint256) (MasterMilker.sol#1648-1667)\n\t- MasterMilker.emergencyWithdraw(uint256) (MasterMilker.sol#1688-1695)\n\t- MasterMilker.massUpdatePools() (MasterMilker.sol#1616-1621)\n\t- MasterMilker.pendingMilky(uint256,address) (MasterMilker.sol#1592-1613)\n\t- MasterMilker.poolInfo (MasterMilker.sol#1507)\n\t- MasterMilker.poolLength() (MasterMilker.sol#1537-1539)\n\t- MasterMilker.set(uint256,uint256) (MasterMilker.sol#1562-1571)\n\t- MasterMilker.updatePool(uint256) (MasterMilker.sol#1624-1645)\n\t- MasterMilker.withdraw(uint256,uint256) (MasterMilker.sol#1670-1684)\n\t- totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) (MasterMilker.sol#1567-1569)\n\tMasterMilker.totalAllocPoint (MasterMilker.sol#1511) can be used in cross function reentrancies:\n\t- MasterMilker.add(uint256,IERC20) (MasterMilker.sol#1543-1559)\n\t- MasterMilker.pendingMilky(uint256,address) (MasterMilker.sol#1592-1613)\n\t- MasterMilker.set(uint256,uint256) (MasterMilker.sol#1562-1571)\n\t- MasterMilker.totalAllocPoint (MasterMilker.sol#1511)\n\t- MasterMilker.updatePool(uint256) (MasterMilker.sol#1624-1645)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterMilker",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-MilkySwap/milkyswap-59f163e9959cf8bae4a521a9648219b553312e07/contracts/MasterMilker.sol",
            "function": "updateEmissionRate",
            "impact": "Medium",
            "line": 1715,
            "line_end": 1718,
            "message": "Reentrancy in MasterMilker.updateEmissionRate(uint256) (MasterMilker.sol#1715-1718):\n\tExternal calls:\n\t- massUpdatePools() (MasterMilker.sol#1716)\n\t\t- milky.mint(devaddr,milkyReward.div(10)) (MasterMilker.sol#1639)\n\t\t- milky.mint(address(this),milkyReward) (MasterMilker.sol#1640)\n\tState variables written after the call(s):\n\t- milkyPerBlock = _milkyPerBlock (MasterMilker.sol#1717)\n\tMasterMilker.milkyPerBlock (MasterMilker.sol#1503) can be used in cross function reentrancies:\n\t- MasterMilker.constructor(MilkyToken,address,uint256,uint256,uint256) (MasterMilker.sol#1522-1535)\n\t- MasterMilker.milkyPerBlock (MasterMilker.sol#1503)\n\t- MasterMilker.pendingMilky(uint256,address) (MasterMilker.sol#1592-1613)\n\t- MasterMilker.updateEmissionRate(uint256) (MasterMilker.sol#1715-1718)\n\t- MasterMilker.updatePool(uint256) (MasterMilker.sol#1624-1645)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterMilker",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-MilkySwap/milkyswap-59f163e9959cf8bae4a521a9648219b553312e07/contracts/MasterMilker.sol",
            "function": "withdraw",
            "impact": "Medium",
            "line": 1670,
            "line_end": 1684,
            "message": "Reentrancy in MasterMilker.withdraw(uint256,uint256) (MasterMilker.sol#1670-1684):\n\tExternal calls:\n\t- updatePool(_pid) (MasterMilker.sol#1674)\n\t\t- milky.mint(devaddr,milkyReward.div(10)) (MasterMilker.sol#1639)\n\t\t- milky.mint(address(this),milkyReward) (MasterMilker.sol#1640)\n\t- safeMilkyTransfer(msg.sender,pending) (MasterMilker.sol#1679)\n\t\t- assert(bool)(milky.transfer(_to,milkyBal)) (MasterMilker.sol#1701)\n\t\t- assert(bool)(milky.transfer(_to,_amount)) (MasterMilker.sol#1703)\n\tState variables written after the call(s):\n\t- user.amount = user.amount.sub(_amount) (MasterMilker.sol#1680)\n\tMasterMilker.userInfo (MasterMilker.sol#1509) can be used in cross function reentrancies:\n\t- MasterMilker.deposit(uint256,uint256) (MasterMilker.sol#1648-1667)\n\t- MasterMilker.emergencyWithdraw(uint256) (MasterMilker.sol#1688-1695)\n\t- MasterMilker.pendingMilky(uint256,address) (MasterMilker.sol#1592-1613)\n\t- MasterMilker.userInfo (MasterMilker.sol#1509)\n\t- MasterMilker.withdraw(uint256,uint256) (MasterMilker.sol#1670-1684)\n\t- user.rewardDebt = user.amount.mul(pool.accMilkyPerShare).div(1e12) (MasterMilker.sol#1681)\n\tMasterMilker.userInfo (MasterMilker.sol#1509) can be used in cross function reentrancies:\n\t- MasterMilker.deposit(uint256,uint256) (MasterMilker.sol#1648-1667)\n\t- MasterMilker.emergencyWithdraw(uint256) (MasterMilker.sol#1688-1695)\n\t- MasterMilker.pendingMilky(uint256,address) (MasterMilker.sol#1592-1613)\n\t- MasterMilker.userInfo (MasterMilker.sol#1509)\n\t- MasterMilker.withdraw(uint256,uint256) (MasterMilker.sol#1670-1684)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterMilker",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-MilkySwap/milkyswap-59f163e9959cf8bae4a521a9648219b553312e07/contracts/MasterMilker.sol",
            "function": "deposit",
            "impact": "Medium",
            "line": 1648,
            "line_end": 1667,
            "message": "Reentrancy in MasterMilker.deposit(uint256,uint256) (MasterMilker.sol#1648-1667):\n\tExternal calls:\n\t- updatePool(_pid) (MasterMilker.sol#1651)\n\t\t- milky.mint(devaddr,milkyReward.div(10)) (MasterMilker.sol#1639)\n\t\t- milky.mint(address(this),milkyReward) (MasterMilker.sol#1640)\n\t- safeMilkyTransfer(msg.sender,pending) (MasterMilker.sol#1657)\n\t\t- assert(bool)(milky.transfer(_to,milkyBal)) (MasterMilker.sol#1701)\n\t\t- assert(bool)(milky.transfer(_to,_amount)) (MasterMilker.sol#1703)\n\t- pool.lpToken.safeTransferFrom(address(msg.sender),address(this),_amount) (MasterMilker.sol#1659-1663)\n\tState variables written after the call(s):\n\t- user.amount = user.amount.add(_amount) (MasterMilker.sol#1664)\n\tMasterMilker.userInfo (MasterMilker.sol#1509) can be used in cross function reentrancies:\n\t- MasterMilker.deposit(uint256,uint256) (MasterMilker.sol#1648-1667)\n\t- MasterMilker.emergencyWithdraw(uint256) (MasterMilker.sol#1688-1695)\n\t- MasterMilker.pendingMilky(uint256,address) (MasterMilker.sol#1592-1613)\n\t- MasterMilker.userInfo (MasterMilker.sol#1509)\n\t- MasterMilker.withdraw(uint256,uint256) (MasterMilker.sol#1670-1684)\n\t- user.rewardDebt = user.amount.mul(pool.accMilkyPerShare).div(1e12) (MasterMilker.sol#1665)\n\tMasterMilker.userInfo (MasterMilker.sol#1509) can be used in cross function reentrancies:\n\t- MasterMilker.deposit(uint256,uint256) (MasterMilker.sol#1648-1667)\n\t- MasterMilker.emergencyWithdraw(uint256) (MasterMilker.sol#1688-1695)\n\t- MasterMilker.pendingMilky(uint256,address) (MasterMilker.sol#1592-1613)\n\t- MasterMilker.userInfo (MasterMilker.sol#1509)\n\t- MasterMilker.withdraw(uint256,uint256) (MasterMilker.sol#1670-1684)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterMilker",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-MilkySwap/milkyswap-59f163e9959cf8bae4a521a9648219b553312e07/contracts/MasterMilker.sol",
            "function": "add",
            "impact": "Medium",
            "line": 1543,
            "line_end": 1559,
            "message": "Reentrancy in MasterMilker.add(uint256,IERC20) (MasterMilker.sol#1543-1559):\n\tExternal calls:\n\t- massUpdatePools() (MasterMilker.sol#1547)\n\t\t- milky.mint(devaddr,milkyReward.div(10)) (MasterMilker.sol#1639)\n\t\t- milky.mint(address(this),milkyReward) (MasterMilker.sol#1640)\n\tState variables written after the call(s):\n\t- poolInfo.push(PoolInfo({lpToken:_lpToken,allocPoint:_allocPoint,lastRewardBlock:lastRewardBlock,accMilkyPerShare:0})) (MasterMilker.sol#1551-1558)\n\tMasterMilker.poolInfo (MasterMilker.sol#1507) can be used in cross function reentrancies:\n\t- MasterMilker.add(uint256,IERC20) (MasterMilker.sol#1543-1559)\n\t- MasterMilker.deposit(uint256,uint256) (MasterMilker.sol#1648-1667)\n\t- MasterMilker.emergencyWithdraw(uint256) (MasterMilker.sol#1688-1695)\n\t- MasterMilker.massUpdatePools() (MasterMilker.sol#1616-1621)\n\t- MasterMilker.pendingMilky(uint256,address) (MasterMilker.sol#1592-1613)\n\t- MasterMilker.poolInfo (MasterMilker.sol#1507)\n\t- MasterMilker.poolLength() (MasterMilker.sol#1537-1539)\n\t- MasterMilker.set(uint256,uint256) (MasterMilker.sol#1562-1571)\n\t- MasterMilker.updatePool(uint256) (MasterMilker.sol#1624-1645)\n\t- MasterMilker.withdraw(uint256,uint256) (MasterMilker.sol#1670-1684)\n\t- totalAllocPoint = totalAllocPoint.add(_allocPoint) (MasterMilker.sol#1550)\n\tMasterMilker.totalAllocPoint (MasterMilker.sol#1511) can be used in cross function reentrancies:\n\t- MasterMilker.add(uint256,IERC20) (MasterMilker.sol#1543-1559)\n\t- MasterMilker.pendingMilky(uint256,address) (MasterMilker.sol#1592-1613)\n\t- MasterMilker.set(uint256,uint256) (MasterMilker.sol#1562-1571)\n\t- MasterMilker.totalAllocPoint (MasterMilker.sol#1511)\n\t- MasterMilker.updatePool(uint256) (MasterMilker.sol#1624-1645)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterMilker",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-MilkySwap/milkyswap-59f163e9959cf8bae4a521a9648219b553312e07/contracts/MasterMilker.sol",
            "function": "updateEmissionRate",
            "impact": "Low",
            "line": 1715,
            "line_end": 1718,
            "message": "MasterMilker.updateEmissionRate(uint256) (MasterMilker.sol#1715-1718) should emit an event for: \n\t- milkyPerBlock = _milkyPerBlock (MasterMilker.sol#1717) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterMilker",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-MilkySwap/milkyswap-59f163e9959cf8bae4a521a9648219b553312e07/contracts/MasterMilker.sol",
            "function": "add",
            "impact": "Low",
            "line": 1543,
            "line_end": 1559,
            "message": "MasterMilker.add(uint256,IERC20) (MasterMilker.sol#1543-1559) should emit an event for: \n\t- totalAllocPoint = totalAllocPoint.add(_allocPoint) (MasterMilker.sol#1550) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterMilker",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-MilkySwap/milkyswap-59f163e9959cf8bae4a521a9648219b553312e07/contracts/MasterMilker.sol",
            "function": "set",
            "impact": "Low",
            "line": 1562,
            "line_end": 1571,
            "message": "MasterMilker.set(uint256,uint256) (MasterMilker.sol#1562-1571) should emit an event for: \n\t- totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) (MasterMilker.sol#1567-1569) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterMilker",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-MilkySwap/milkyswap-59f163e9959cf8bae4a521a9648219b553312e07/contracts/MasterMilker.sol",
            "function": "updatePool",
            "impact": "Low",
            "line": 1624,
            "line_end": 1645,
            "message": "MasterMilker.updatePool(uint256) (MasterMilker.sol#1624-1645) has external calls inside a loop: milky.mint(address(this),milkyReward) (MasterMilker.sol#1640)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterMilker",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-MilkySwap/milkyswap-59f163e9959cf8bae4a521a9648219b553312e07/contracts/MasterMilker.sol",
            "function": "updatePool",
            "impact": "Low",
            "line": 1624,
            "line_end": 1645,
            "message": "MasterMilker.updatePool(uint256) (MasterMilker.sol#1624-1645) has external calls inside a loop: milky.mint(devaddr,milkyReward.div(10)) (MasterMilker.sol#1639)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterMilker",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-MilkySwap/milkyswap-59f163e9959cf8bae4a521a9648219b553312e07/contracts/MasterMilker.sol",
            "function": "updatePool",
            "impact": "Low",
            "line": 1624,
            "line_end": 1645,
            "message": "MasterMilker.updatePool(uint256) (MasterMilker.sol#1624-1645) has external calls inside a loop: lpSupply = pool.lpToken.balanceOf(address(this)) (MasterMilker.sol#1629)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterMilker",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-MilkySwap/milkyswap-59f163e9959cf8bae4a521a9648219b553312e07/contracts/MasterMilker.sol",
            "function": "withdraw",
            "impact": "Low",
            "line": 1670,
            "line_end": 1684,
            "message": "Reentrancy in MasterMilker.withdraw(uint256,uint256) (MasterMilker.sol#1670-1684):\n\tExternal calls:\n\t- updatePool(_pid) (MasterMilker.sol#1674)\n\t\t- milky.mint(devaddr,milkyReward.div(10)) (MasterMilker.sol#1639)\n\t\t- milky.mint(address(this),milkyReward) (MasterMilker.sol#1640)\n\t- safeMilkyTransfer(msg.sender,pending) (MasterMilker.sol#1679)\n\t\t- assert(bool)(milky.transfer(_to,milkyBal)) (MasterMilker.sol#1701)\n\t\t- assert(bool)(milky.transfer(_to,_amount)) (MasterMilker.sol#1703)\n\t- pool.lpToken.safeTransfer(address(msg.sender),_amount) (MasterMilker.sol#1682)\n\tEvent emitted after the call(s):\n\t- Withdraw(msg.sender,_pid,_amount) (MasterMilker.sol#1683)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterMilker",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-MilkySwap/milkyswap-59f163e9959cf8bae4a521a9648219b553312e07/contracts/MasterMilker.sol",
            "function": "deposit",
            "impact": "Low",
            "line": 1648,
            "line_end": 1667,
            "message": "Reentrancy in MasterMilker.deposit(uint256,uint256) (MasterMilker.sol#1648-1667):\n\tExternal calls:\n\t- updatePool(_pid) (MasterMilker.sol#1651)\n\t\t- milky.mint(devaddr,milkyReward.div(10)) (MasterMilker.sol#1639)\n\t\t- milky.mint(address(this),milkyReward) (MasterMilker.sol#1640)\n\t- safeMilkyTransfer(msg.sender,pending) (MasterMilker.sol#1657)\n\t\t- assert(bool)(milky.transfer(_to,milkyBal)) (MasterMilker.sol#1701)\n\t\t- assert(bool)(milky.transfer(_to,_amount)) (MasterMilker.sol#1703)\n\t- pool.lpToken.safeTransferFrom(address(msg.sender),address(this),_amount) (MasterMilker.sol#1659-1663)\n\tEvent emitted after the call(s):\n\t- Deposit(msg.sender,_pid,_amount) (MasterMilker.sol#1666)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MilkyToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-MilkySwap/milkyswap-59f163e9959cf8bae4a521a9648219b553312e07/contracts/MasterMilker.sol",
            "function": "delegateBySig",
            "impact": "Low",
            "line": 1297,
            "line_end": 1338,
            "message": "MilkyToken.delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32) (MasterMilker.sol#1297-1338) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(now <= expiry,MILKY::delegateBySig: signature expired) (MasterMilker.sol#1336)\n",
            "name": "timestamp",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}