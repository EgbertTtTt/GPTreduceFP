{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "Spawn",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-Opyn_Gamma_Protocol/GammaProtocol-d151621b33134789b29dc78eb89dad2b557b25b9/contracts/OtokenFactory.sol",
            "function": "constructor",
            "impact": "High",
            "line": 5,
            "line_end": 27,
            "message": "Spawn.constructor(address,bytes) (OtokenFactory.sol#5-27) uses delegatecall to a input-controlled function id\n\t- (ok) = logicContract.delegatecall(initializationCalldata) (OtokenFactory.sol#7)\n",
            "name": "controlled-delegatecall",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "OtokenFactory",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-Opyn_Gamma_Protocol/GammaProtocol-d151621b33134789b29dc78eb89dad2b557b25b9/contracts/OtokenFactory.sol",
            "function": "createOtoken",
            "impact": "Low",
            "line": 424,
            "line_end": 483,
            "message": "Reentrancy in OtokenFactory.createOtoken(address,address,address,uint256,uint256,bool) (OtokenFactory.sol#424-483):\n\tExternal calls:\n\t- WhitelistInterface(whitelist).whitelistOtoken(newOtoken) (OtokenFactory.sol#469)\n\tEvent emitted after the call(s):\n\t- OtokenCreated(newOtoken,msg.sender,_underlyingAsset,_strikeAsset,_collateralAsset,_strikePrice,_expiry,_isPut) (OtokenFactory.sol#471-480)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "OtokenFactory",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/openzeppelin-Opyn_Gamma_Protocol/GammaProtocol-d151621b33134789b29dc78eb89dad2b557b25b9/contracts/OtokenFactory.sol",
            "function": "createOtoken",
            "impact": "Low",
            "line": 424,
            "line_end": 483,
            "message": "OtokenFactory.createOtoken(address,address,address,uint256,uint256,bool) (OtokenFactory.sol#424-483) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(_expiry > now,OtokenFactory: Can't create expired option) (OtokenFactory.sol#432)\n",
            "name": "timestamp",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}