{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "WaultSwapPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-WSwap/WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570/WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol",
            "function": "_update",
            "impact": "High",
            "line": 611,
            "line_end": 637,
            "message": "WaultSwapPair._update(uint256,uint256,uint112,uint112) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#611-637) uses a weak PRNG: \"blockTimestamp = uint32(block.timestamp % 2 ** 32) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#615)\" \n",
            "name": "weak-prng",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WaultSwapPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-WSwap/WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570/WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol",
            "function": "swap",
            "impact": "Medium",
            "line": 783,
            "line_end": 839,
            "message": "Reentrancy in WaultSwapPair.swap(uint256,uint256,address,bytes) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#783-839):\n\tExternal calls:\n\t- _safeTransfer(_token0,to,amount0Out) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#805)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#555)\n\t- _safeTransfer(_token1,to,amount1Out) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#807)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#555)\n\t- IWaultSwapCallee(to).waultSwapCall(msg.sender,amount0Out,amount1Out,data) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#809)\n\tState variables written after the call(s):\n\t- _update(balance0,balance1,_reserve0,_reserve1) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#835)\n\t\t- blockTimestampLast = blockTimestamp (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#633)\n\tWaultSwapPair.blockTimestampLast (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#513) can be used in cross function reentrancies:\n\t- WaultSwapPair._update(uint256,uint256,uint112,uint112) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#611-637)\n\t- WaultSwapPair.getReserves() (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#541-549)\n\t- _update(balance0,balance1,_reserve0,_reserve1) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#835)\n\t\t- reserve0 = uint112(balance0) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#629)\n\tWaultSwapPair.reserve0 (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#509) can be used in cross function reentrancies:\n\t- WaultSwapPair._update(uint256,uint256,uint112,uint112) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#611-637)\n\t- WaultSwapPair.burn(address) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#733-777)\n\t- WaultSwapPair.getReserves() (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#541-549)\n\t- WaultSwapPair.mint(address) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#685-727)\n\t- WaultSwapPair.skim(address) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#845-855)\n\t- WaultSwapPair.sync() (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#861-865)\n\t- _update(balance0,balance1,_reserve0,_reserve1) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#835)\n\t\t- reserve1 = uint112(balance1) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#631)\n\tWaultSwapPair.reserve1 (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#511) can be used in cross function reentrancies:\n\t- WaultSwapPair._update(uint256,uint256,uint112,uint112) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#611-637)\n\t- WaultSwapPair.burn(address) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#733-777)\n\t- WaultSwapPair.getReserves() (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#541-549)\n\t- WaultSwapPair.mint(address) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#685-727)\n\t- WaultSwapPair.skim(address) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#845-855)\n\t- WaultSwapPair.sync() (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#861-865)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WaultSwapFactory",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-WSwap/WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570/WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol",
            "function": "createPair",
            "impact": "Medium",
            "line": 907,
            "line_end": 937,
            "message": "Reentrancy in WaultSwapFactory.createPair(address,address) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#907-937):\n\tExternal calls:\n\t- IWaultSwapPair(pair).initialize(token0,token1) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#927)\n\tState variables written after the call(s):\n\t- getPair[token0][token1] = pair (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#929)\n\tWaultSwapFactory.getPair (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#881) can be used in cross function reentrancies:\n\t- WaultSwapFactory.createPair(address,address) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#907-937)\n\t- WaultSwapFactory.getPair (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#881)\n\t- getPair[token1][token0] = pair (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#931)\n\tWaultSwapFactory.getPair (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#881) can be used in cross function reentrancies:\n\t- WaultSwapFactory.createPair(address,address) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#907-937)\n\t- WaultSwapFactory.getPair (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#881)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WaultSwapPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-WSwap/WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570/WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol",
            "function": "burn",
            "impact": "Medium",
            "line": 733,
            "line_end": 777,
            "message": "Reentrancy in WaultSwapPair.burn(address) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#733-777):\n\tExternal calls:\n\t- _safeTransfer(_token0,to,amount0) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#761)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#555)\n\t- _safeTransfer(_token1,to,amount1) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#763)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#555)\n\tState variables written after the call(s):\n\t- _update(balance0,balance1,_reserve0,_reserve1) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#771)\n\t\t- blockTimestampLast = blockTimestamp (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#633)\n\tWaultSwapPair.blockTimestampLast (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#513) can be used in cross function reentrancies:\n\t- WaultSwapPair._update(uint256,uint256,uint112,uint112) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#611-637)\n\t- WaultSwapPair.getReserves() (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#541-549)\n\t- kLast = uint256(reserve0).mul(reserve1) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#773)\n\tWaultSwapPair.kLast (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#521) can be used in cross function reentrancies:\n\t- WaultSwapPair._mintFee(uint112,uint112) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#643-679)\n\t- WaultSwapPair.burn(address) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#733-777)\n\t- WaultSwapPair.kLast (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#521)\n\t- WaultSwapPair.mint(address) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#685-727)\n\t- _update(balance0,balance1,_reserve0,_reserve1) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#771)\n\t\t- reserve0 = uint112(balance0) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#629)\n\tWaultSwapPair.reserve0 (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#509) can be used in cross function reentrancies:\n\t- WaultSwapPair._update(uint256,uint256,uint112,uint112) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#611-637)\n\t- WaultSwapPair.burn(address) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#733-777)\n\t- WaultSwapPair.getReserves() (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#541-549)\n\t- WaultSwapPair.mint(address) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#685-727)\n\t- WaultSwapPair.skim(address) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#845-855)\n\t- WaultSwapPair.sync() (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#861-865)\n\t- _update(balance0,balance1,_reserve0,_reserve1) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#771)\n\t\t- reserve1 = uint112(balance1) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#631)\n\tWaultSwapPair.reserve1 (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#511) can be used in cross function reentrancies:\n\t- WaultSwapPair._update(uint256,uint256,uint112,uint112) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#611-637)\n\t- WaultSwapPair.burn(address) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#733-777)\n\t- WaultSwapPair.getReserves() (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#541-549)\n\t- WaultSwapPair.mint(address) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#685-727)\n\t- WaultSwapPair.skim(address) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#845-855)\n\t- WaultSwapPair.sync() (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#861-865)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WaultSwapPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-WSwap/WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570/WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol",
            "function": "burn",
            "impact": "Low",
            "line": 733,
            "line_end": 777,
            "message": "Reentrancy in WaultSwapPair.burn(address) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#733-777):\n\tExternal calls:\n\t- _safeTransfer(_token0,to,amount0) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#761)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#555)\n\t- _safeTransfer(_token1,to,amount1) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#763)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#555)\n\tState variables written after the call(s):\n\t- _update(balance0,balance1,_reserve0,_reserve1) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#771)\n\t\t- price0CumulativeLast += uint256(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#623)\n\t- _update(balance0,balance1,_reserve0,_reserve1) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#771)\n\t\t- price1CumulativeLast += uint256(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#625)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WaultSwapPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-WSwap/WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570/WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol",
            "function": "swap",
            "impact": "Low",
            "line": 783,
            "line_end": 839,
            "message": "Reentrancy in WaultSwapPair.swap(uint256,uint256,address,bytes) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#783-839):\n\tExternal calls:\n\t- _safeTransfer(_token0,to,amount0Out) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#805)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#555)\n\t- _safeTransfer(_token1,to,amount1Out) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#807)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#555)\n\t- IWaultSwapCallee(to).waultSwapCall(msg.sender,amount0Out,amount1Out,data) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#809)\n\tState variables written after the call(s):\n\t- _update(balance0,balance1,_reserve0,_reserve1) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#835)\n\t\t- price0CumulativeLast += uint256(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#623)\n\t- _update(balance0,balance1,_reserve0,_reserve1) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#835)\n\t\t- price1CumulativeLast += uint256(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#625)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WaultSwapFactory",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-WSwap/WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570/WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol",
            "function": "createPair",
            "impact": "Low",
            "line": 907,
            "line_end": 937,
            "message": "Reentrancy in WaultSwapFactory.createPair(address,address) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#907-937):\n\tExternal calls:\n\t- IWaultSwapPair(pair).initialize(token0,token1) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#927)\n\tState variables written after the call(s):\n\t- allPairs.push(pair) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#933)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WaultSwapPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-WSwap/WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570/WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol",
            "function": "burn",
            "impact": "Low",
            "line": 733,
            "line_end": 777,
            "message": "Reentrancy in WaultSwapPair.burn(address) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#733-777):\n\tExternal calls:\n\t- _safeTransfer(_token0,to,amount0) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#761)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#555)\n\t- _safeTransfer(_token1,to,amount1) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#763)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#555)\n\tEvent emitted after the call(s):\n\t- Burn(msg.sender,amount0,amount1,to) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#775)\n\t- Sync(reserve0,reserve1) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#635)\n\t\t- _update(balance0,balance1,_reserve0,_reserve1) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#771)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WaultSwapPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-WSwap/WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570/WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol",
            "function": "swap",
            "impact": "Low",
            "line": 783,
            "line_end": 839,
            "message": "Reentrancy in WaultSwapPair.swap(uint256,uint256,address,bytes) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#783-839):\n\tExternal calls:\n\t- _safeTransfer(_token0,to,amount0Out) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#805)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#555)\n\t- _safeTransfer(_token1,to,amount1Out) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#807)\n\t\t- (success,data) = token.call(abi.encodeWithSelector(SELECTOR,to,value)) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#555)\n\t- IWaultSwapCallee(to).waultSwapCall(msg.sender,amount0Out,amount1Out,data) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#809)\n\tEvent emitted after the call(s):\n\t- Swap(msg.sender,amount0In,amount1In,amount0Out,amount1Out,to) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#837)\n\t- Sync(reserve0,reserve1) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#635)\n\t\t- _update(balance0,balance1,_reserve0,_reserve1) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#835)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WaultSwapFactory",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-WSwap/WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570/WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol",
            "function": "createPair",
            "impact": "Low",
            "line": 907,
            "line_end": 937,
            "message": "Reentrancy in WaultSwapFactory.createPair(address,address) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#907-937):\n\tExternal calls:\n\t- IWaultSwapPair(pair).initialize(token0,token1) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#927)\n\tEvent emitted after the call(s):\n\t- PairCreated(token0,token1,pair,allPairs.length) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#935)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WaultSwapERC20",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-WSwap/WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570/WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol",
            "function": "permit",
            "impact": "Low",
            "line": 355,
            "line_end": 379,
            "message": "WaultSwapERC20.permit(address,address,uint256,uint256,uint8,bytes32,bytes32) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#355-379) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(deadline >= block.timestamp,WaultSwap: EXPIRED) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#357)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WaultSwapPair",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-WSwap/WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570/WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol",
            "function": "_update",
            "impact": "Low",
            "line": 611,
            "line_end": 637,
            "message": "WaultSwapPair._update(uint256,uint256,uint112,uint112) (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#611-637) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0 (WaultSwapFactory0xB42E3FE71b7E0673335b3331B3e1053BD9822570.sol#619)\n",
            "name": "timestamp",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}