{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "SpaceDogeCoin",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-SpaceDoge/SpaceDoge-b4170e5899e917f7ec6efe463e054068369fcdaa/SpaceDogeCoin.sol",
            "function": "_transfer",
            "impact": "Medium",
            "line": 1010,
            "line_end": 1054,
            "message": "Reentrancy in SpaceDogeCoin._transfer(address,address,uint256) (SpaceDogeCoin.sol#1010-1054):\n\tExternal calls:\n\t- swapAndLiquify(contractTokenBalance) (SpaceDogeCoin.sol#1041)\n\t\t- usdt.approve(address(uniswapV2Router),usdtAmount) (SpaceDogeCoin.sol#1120)\n\t\t- uniswapV2Router.addLiquidity(address(this),address(usdt),tokenAmount,usdtAmount,0,0,blackHole,block.timestamp) (SpaceDogeCoin.sol#1122-1131)\n\t\t- uniswapV2Router.swapExactTokensForTokensSupportingFeeOnTransferTokens(tokenAmount,0,path,address(wrap),block.timestamp) (SpaceDogeCoin.sol#1088-1094)\n\t\t- wrap.withdraw() (SpaceDogeCoin.sol#1096)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount,takeFee) (SpaceDogeCoin.sol#1053)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)].add(rLiquidity) (SpaceDogeCoin.sol#966)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (SpaceDogeCoin.sol#1174)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (SpaceDogeCoin.sol#1183)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (SpaceDogeCoin.sol#1175)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (SpaceDogeCoin.sol#1194)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (SpaceDogeCoin.sol#876)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (SpaceDogeCoin.sol#1195)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (SpaceDogeCoin.sol#1185)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (SpaceDogeCoin.sol#878)\n\tSpaceDogeCoin._rOwned (SpaceDogeCoin.sol#691) can be used in cross function reentrancies:\n\t- SpaceDogeCoin._getCurrentSupply() (SpaceDogeCoin.sol#951-961)\n\t- SpaceDogeCoin._takeLiquidity(uint256) (SpaceDogeCoin.sol#963-969)\n\t- SpaceDogeCoin._transferBothExcluded(address,address,uint256) (SpaceDogeCoin.sol#873-882)\n\t- SpaceDogeCoin._transferFromExcluded(address,address,uint256) (SpaceDogeCoin.sol#1191-1199)\n\t- SpaceDogeCoin._transferStandard(address,address,uint256) (SpaceDogeCoin.sol#1172-1179)\n\t- SpaceDogeCoin._transferToExcluded(address,address,uint256) (SpaceDogeCoin.sol#1181-1189)\n\t- SpaceDogeCoin.balanceOf(address) (SpaceDogeCoin.sol#781-784)\n\t- SpaceDogeCoin.constructor() (SpaceDogeCoin.sol#741-757)\n\t- SpaceDogeCoin.deliver(uint256) (SpaceDogeCoin.sol#824-831)\n\t- SpaceDogeCoin.excludeFromReward(address) (SpaceDogeCoin.sol#850-858)\n\t- _tokenTransfer(from,to,amount,takeFee) (SpaceDogeCoin.sol#1053)\n\t\t- _rTotal = _rTotal.sub(rFee) (SpaceDogeCoin.sol#921)\n\tSpaceDogeCoin._rTotal (SpaceDogeCoin.sol#703) can be used in cross function reentrancies:\n\t- SpaceDogeCoin._getCurrentSupply() (SpaceDogeCoin.sol#951-961)\n\t- SpaceDogeCoin._reflectFee(uint256,uint256) (SpaceDogeCoin.sol#920-923)\n\t- SpaceDogeCoin.constructor() (SpaceDogeCoin.sol#741-757)\n\t- SpaceDogeCoin.deliver(uint256) (SpaceDogeCoin.sol#824-831)\n\t- SpaceDogeCoin.tokenFromReflection(uint256) (SpaceDogeCoin.sol#844-848)\n\t- _tokenTransfer(from,to,amount,takeFee) (SpaceDogeCoin.sol#1053)\n\t\t- _tOwned[address(this)] = _tOwned[address(this)].add(tLiquidity) (SpaceDogeCoin.sol#968)\n\t\t- _tOwned[sender] = _tOwned[sender].sub(tAmount) (SpaceDogeCoin.sol#1193)\n\t\t- _tOwned[sender] = _tOwned[sender].sub(tAmount) (SpaceDogeCoin.sol#875)\n\t\t- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (SpaceDogeCoin.sol#1184)\n\t\t- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (SpaceDogeCoin.sol#877)\n\tSpaceDogeCoin._tOwned (SpaceDogeCoin.sol#692) can be used in cross function reentrancies:\n\t- SpaceDogeCoin._getCurrentSupply() (SpaceDogeCoin.sol#951-961)\n\t- SpaceDogeCoin._takeLiquidity(uint256) (SpaceDogeCoin.sol#963-969)\n\t- SpaceDogeCoin._transferBothExcluded(address,address,uint256) (SpaceDogeCoin.sol#873-882)\n\t- SpaceDogeCoin._transferFromExcluded(address,address,uint256) (SpaceDogeCoin.sol#1191-1199)\n\t- SpaceDogeCoin._transferToExcluded(address,address,uint256) (SpaceDogeCoin.sol#1181-1189)\n\t- SpaceDogeCoin.balanceOf(address) (SpaceDogeCoin.sol#781-784)\n\t- SpaceDogeCoin.excludeFromReward(address) (SpaceDogeCoin.sol#850-858)\n\t- SpaceDogeCoin.includeInReward(address) (SpaceDogeCoin.sol#860-871)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SpaceDogeCoin",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-SpaceDoge/SpaceDoge-b4170e5899e917f7ec6efe463e054068369fcdaa/SpaceDogeCoin.sol",
            "function": "addLiquidityUsdt",
            "impact": "Medium",
            "line": 1117,
            "line_end": 1132,
            "message": "SpaceDogeCoin.addLiquidityUsdt(uint256,uint256) (SpaceDogeCoin.sol#1117-1132) ignores return value by usdt.approve(address(uniswapV2Router),usdtAmount) (SpaceDogeCoin.sol#1120)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SpaceDogeCoin",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-SpaceDoge/SpaceDoge-b4170e5899e917f7ec6efe463e054068369fcdaa/SpaceDogeCoin.sol",
            "function": "addLiquidityUsdt",
            "impact": "Medium",
            "line": 1117,
            "line_end": 1132,
            "message": "SpaceDogeCoin.addLiquidityUsdt(uint256,uint256) (SpaceDogeCoin.sol#1117-1132) ignores return value by uniswapV2Router.addLiquidity(address(this),address(usdt),tokenAmount,usdtAmount,0,0,blackHole,block.timestamp) (SpaceDogeCoin.sol#1122-1131)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SpaceDogeCoin",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-SpaceDoge/SpaceDoge-b4170e5899e917f7ec6efe463e054068369fcdaa/SpaceDogeCoin.sol",
            "function": "addLiquidity",
            "impact": "Medium",
            "line": 1135,
            "line_end": 1148,
            "message": "SpaceDogeCoin.addLiquidity(uint256,uint256) (SpaceDogeCoin.sol#1135-1148) ignores return value by uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (SpaceDogeCoin.sol#1140-1147)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "Ownable",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-SpaceDoge/SpaceDoge-b4170e5899e917f7ec6efe463e054068369fcdaa/SpaceDogeCoin.sol",
            "function": "owner",
            "impact": "Low",
            "line": 1002,
            "message": "SpaceDogeCoin._approve(address,address,uint256).owner (SpaceDogeCoin.sol#1002) shadows:\n\t- Ownable.owner() (SpaceDogeCoin.sol#422-424) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "Ownable",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-SpaceDoge/SpaceDoge-b4170e5899e917f7ec6efe463e054068369fcdaa/SpaceDogeCoin.sol",
            "function": "owner",
            "impact": "Low",
            "line": 791,
            "message": "SpaceDogeCoin.allowance(address,address).owner (SpaceDogeCoin.sol#791) shadows:\n\t- Ownable.owner() (SpaceDogeCoin.sol#422-424) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SpaceDogeCoin",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-SpaceDoge/SpaceDoge-b4170e5899e917f7ec6efe463e054068369fcdaa/SpaceDogeCoin.sol",
            "function": "setTaxFeePercent",
            "impact": "Low",
            "line": 892,
            "line_end": 894,
            "message": "SpaceDogeCoin.setTaxFeePercent(uint256) (SpaceDogeCoin.sol#892-894) should emit an event for: \n\t- _taxFee = taxFee (SpaceDogeCoin.sol#893) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SpaceDogeCoin",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-SpaceDoge/SpaceDoge-b4170e5899e917f7ec6efe463e054068369fcdaa/SpaceDogeCoin.sol",
            "function": "setMaxTxPercent",
            "impact": "Low",
            "line": 900,
            "line_end": 904,
            "message": "SpaceDogeCoin.setMaxTxPercent(uint256) (SpaceDogeCoin.sol#900-904) should emit an event for: \n\t- _maxTxAmount = _tTotal.mul(maxTxPercent).div(10 ** 2) (SpaceDogeCoin.sol#901-903) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SpaceDogeCoin",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-SpaceDoge/SpaceDoge-b4170e5899e917f7ec6efe463e054068369fcdaa/SpaceDogeCoin.sol",
            "function": "setLiquidityFeePercent",
            "impact": "Low",
            "line": 896,
            "line_end": 898,
            "message": "SpaceDogeCoin.setLiquidityFeePercent(uint256) (SpaceDogeCoin.sol#896-898) should emit an event for: \n\t- _liquidityFee = liquidityFee (SpaceDogeCoin.sol#897) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SpaceDogeCoin",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-SpaceDoge/SpaceDoge-b4170e5899e917f7ec6efe463e054068369fcdaa/SpaceDogeCoin.sol",
            "function": "transferFrom",
            "impact": "Low",
            "line": 800,
            "line_end": 804,
            "message": "Reentrancy in SpaceDogeCoin.transferFrom(address,address,uint256) (SpaceDogeCoin.sol#800-804):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (SpaceDogeCoin.sol#801)\n\t\t- usdt.approve(address(uniswapV2Router),usdtAmount) (SpaceDogeCoin.sol#1120)\n\t\t- uniswapV2Router.addLiquidity(address(this),address(usdt),tokenAmount,usdtAmount,0,0,blackHole,block.timestamp) (SpaceDogeCoin.sol#1122-1131)\n\t\t- uniswapV2Router.swapExactTokensForTokensSupportingFeeOnTransferTokens(tokenAmount,0,path,address(wrap),block.timestamp) (SpaceDogeCoin.sol#1088-1094)\n\t\t- wrap.withdraw() (SpaceDogeCoin.sol#1096)\n\tState variables written after the call(s):\n\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (SpaceDogeCoin.sol#802)\n\t\t- _allowances[owner][spender] = amount (SpaceDogeCoin.sol#1006)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SpaceDogeCoin",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-SpaceDoge/SpaceDoge-b4170e5899e917f7ec6efe463e054068369fcdaa/SpaceDogeCoin.sol",
            "function": "swapAndLiquify",
            "impact": "Low",
            "line": 1056,
            "line_end": 1077,
            "message": "Reentrancy in SpaceDogeCoin.swapAndLiquify(uint256) (SpaceDogeCoin.sol#1056-1077):\n\tExternal calls:\n\t- swapTokensForUsdt(half) (SpaceDogeCoin.sol#1068)\n\t\t- uniswapV2Router.swapExactTokensForTokensSupportingFeeOnTransferTokens(tokenAmount,0,path,address(wrap),block.timestamp) (SpaceDogeCoin.sol#1088-1094)\n\t\t- wrap.withdraw() (SpaceDogeCoin.sol#1096)\n\t- addLiquidityUsdt(otherHalf,usdtBalance) (SpaceDogeCoin.sol#1074)\n\t\t- usdt.approve(address(uniswapV2Router),usdtAmount) (SpaceDogeCoin.sol#1120)\n\t\t- uniswapV2Router.addLiquidity(address(this),address(usdt),tokenAmount,usdtAmount,0,0,blackHole,block.timestamp) (SpaceDogeCoin.sol#1122-1131)\n\tState variables written after the call(s):\n\t- addLiquidityUsdt(otherHalf,usdtBalance) (SpaceDogeCoin.sol#1074)\n\t\t- _allowances[owner][spender] = amount (SpaceDogeCoin.sol#1006)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SpaceDogeCoin",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-SpaceDoge/SpaceDoge-b4170e5899e917f7ec6efe463e054068369fcdaa/SpaceDogeCoin.sol",
            "function": "_transfer",
            "impact": "Low",
            "line": 1010,
            "line_end": 1054,
            "message": "Reentrancy in SpaceDogeCoin._transfer(address,address,uint256) (SpaceDogeCoin.sol#1010-1054):\n\tExternal calls:\n\t- swapAndLiquify(contractTokenBalance) (SpaceDogeCoin.sol#1041)\n\t\t- usdt.approve(address(uniswapV2Router),usdtAmount) (SpaceDogeCoin.sol#1120)\n\t\t- uniswapV2Router.addLiquidity(address(this),address(usdt),tokenAmount,usdtAmount,0,0,blackHole,block.timestamp) (SpaceDogeCoin.sol#1122-1131)\n\t\t- uniswapV2Router.swapExactTokensForTokensSupportingFeeOnTransferTokens(tokenAmount,0,path,address(wrap),block.timestamp) (SpaceDogeCoin.sol#1088-1094)\n\t\t- wrap.withdraw() (SpaceDogeCoin.sol#1096)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount,takeFee) (SpaceDogeCoin.sol#1053)\n\t\t- _liquidityFee = _previousLiquidityFee (SpaceDogeCoin.sol#995)\n\t\t- _liquidityFee = 0 (SpaceDogeCoin.sol#990)\n\t- _tokenTransfer(from,to,amount,takeFee) (SpaceDogeCoin.sol#1053)\n\t\t- _previousLiquidityFee = _liquidityFee (SpaceDogeCoin.sol#987)\n\t- _tokenTransfer(from,to,amount,takeFee) (SpaceDogeCoin.sol#1053)\n\t\t- _previousTaxFee = _taxFee (SpaceDogeCoin.sol#986)\n\t- _tokenTransfer(from,to,amount,takeFee) (SpaceDogeCoin.sol#1053)\n\t\t- _tFeeTotal = _tFeeTotal.add(tFee) (SpaceDogeCoin.sol#922)\n\t- _tokenTransfer(from,to,amount,takeFee) (SpaceDogeCoin.sol#1053)\n\t\t- _taxFee = _previousTaxFee (SpaceDogeCoin.sol#994)\n\t\t- _taxFee = 0 (SpaceDogeCoin.sol#989)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SpaceDogeCoin",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-SpaceDoge/SpaceDoge-b4170e5899e917f7ec6efe463e054068369fcdaa/SpaceDogeCoin.sol",
            "function": "_transfer",
            "impact": "Low",
            "line": 1010,
            "line_end": 1054,
            "message": "Reentrancy in SpaceDogeCoin._transfer(address,address,uint256) (SpaceDogeCoin.sol#1010-1054):\n\tExternal calls:\n\t- swapAndLiquify(contractTokenBalance) (SpaceDogeCoin.sol#1041)\n\t\t- usdt.approve(address(uniswapV2Router),usdtAmount) (SpaceDogeCoin.sol#1120)\n\t\t- uniswapV2Router.addLiquidity(address(this),address(usdt),tokenAmount,usdtAmount,0,0,blackHole,block.timestamp) (SpaceDogeCoin.sol#1122-1131)\n\t\t- uniswapV2Router.swapExactTokensForTokensSupportingFeeOnTransferTokens(tokenAmount,0,path,address(wrap),block.timestamp) (SpaceDogeCoin.sol#1088-1094)\n\t\t- wrap.withdraw() (SpaceDogeCoin.sol#1096)\n\tEvent emitted after the call(s):\n\t- Transfer(sender,recipient,tTransferAmount) (SpaceDogeCoin.sol#1178)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (SpaceDogeCoin.sol#1053)\n\t- Transfer(sender,recipient,tTransferAmount) (SpaceDogeCoin.sol#1198)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (SpaceDogeCoin.sol#1053)\n\t- Transfer(sender,recipient,tTransferAmount) (SpaceDogeCoin.sol#1188)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (SpaceDogeCoin.sol#1053)\n\t- Transfer(sender,recipient,tTransferAmount) (SpaceDogeCoin.sol#881)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (SpaceDogeCoin.sol#1053)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SpaceDogeCoin",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-SpaceDoge/SpaceDoge-b4170e5899e917f7ec6efe463e054068369fcdaa/SpaceDogeCoin.sol",
            "function": "swapAndLiquify",
            "impact": "Low",
            "line": 1056,
            "line_end": 1077,
            "message": "Reentrancy in SpaceDogeCoin.swapAndLiquify(uint256) (SpaceDogeCoin.sol#1056-1077):\n\tExternal calls:\n\t- swapTokensForUsdt(half) (SpaceDogeCoin.sol#1068)\n\t\t- uniswapV2Router.swapExactTokensForTokensSupportingFeeOnTransferTokens(tokenAmount,0,path,address(wrap),block.timestamp) (SpaceDogeCoin.sol#1088-1094)\n\t\t- wrap.withdraw() (SpaceDogeCoin.sol#1096)\n\t- addLiquidityUsdt(otherHalf,usdtBalance) (SpaceDogeCoin.sol#1074)\n\t\t- usdt.approve(address(uniswapV2Router),usdtAmount) (SpaceDogeCoin.sol#1120)\n\t\t- uniswapV2Router.addLiquidity(address(this),address(usdt),tokenAmount,usdtAmount,0,0,blackHole,block.timestamp) (SpaceDogeCoin.sol#1122-1131)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (SpaceDogeCoin.sol#1007)\n\t\t- addLiquidityUsdt(otherHalf,usdtBalance) (SpaceDogeCoin.sol#1074)\n\t- SwapAndLiquify(half,usdtBalance,otherHalf) (SpaceDogeCoin.sol#1076)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SpaceDogeCoin",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-SpaceDoge/SpaceDoge-b4170e5899e917f7ec6efe463e054068369fcdaa/SpaceDogeCoin.sol",
            "function": "transferFrom",
            "impact": "Low",
            "line": 800,
            "line_end": 804,
            "message": "Reentrancy in SpaceDogeCoin.transferFrom(address,address,uint256) (SpaceDogeCoin.sol#800-804):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (SpaceDogeCoin.sol#801)\n\t\t- usdt.approve(address(uniswapV2Router),usdtAmount) (SpaceDogeCoin.sol#1120)\n\t\t- uniswapV2Router.addLiquidity(address(this),address(usdt),tokenAmount,usdtAmount,0,0,blackHole,block.timestamp) (SpaceDogeCoin.sol#1122-1131)\n\t\t- uniswapV2Router.swapExactTokensForTokensSupportingFeeOnTransferTokens(tokenAmount,0,path,address(wrap),block.timestamp) (SpaceDogeCoin.sol#1088-1094)\n\t\t- wrap.withdraw() (SpaceDogeCoin.sol#1096)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (SpaceDogeCoin.sol#1007)\n\t\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (SpaceDogeCoin.sol#802)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Ownable",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-SpaceDoge/SpaceDoge-b4170e5899e917f7ec6efe463e054068369fcdaa/SpaceDogeCoin.sol",
            "function": "unlock",
            "impact": "Low",
            "line": 469,
            "line_end": 474,
            "message": "Ownable.unlock() (SpaceDogeCoin.sol#469-474) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(now > _lockTime,Contract is locked until 7 days) (SpaceDogeCoin.sol#471)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-SpaceDoge/SpaceDoge-b4170e5899e917f7ec6efe463e054068369fcdaa/SpaceDogeCoin.sol",
            "impact": "Informational",
            "line": 2,
            "message": "Different versions of Solidity are used:\n\t- Version used: ['>=0.5.0', '>=0.6.2', '^0.6.12']\n\t- >=0.5.0 (SpaceDogeCoin.sol#2)\n\t- >=0.5.0 (SpaceDogeCoin.sol#3)\n\t- >=0.6.2 (SpaceDogeCoin.sol#4)\n\t- >=0.6.2 (SpaceDogeCoin.sol#5)\n\t- ^0.6.12 (SpaceDogeCoin.sol#1)\n",
            "name": "pragma",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SpaceDogeCoin",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-SpaceDoge/SpaceDoge-b4170e5899e917f7ec6efe463e054068369fcdaa/SpaceDogeCoin.sol",
            "function": "includeInReward",
            "impact": "Informational",
            "line": 860,
            "line_end": 871,
            "message": "SpaceDogeCoin.includeInReward(address) (SpaceDogeCoin.sol#860-871) has costly operations inside a loop:\n\t- _excluded.pop() (SpaceDogeCoin.sol#867)\n",
            "name": "costly-loop",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-SpaceDoge/SpaceDoge-b4170e5899e917f7ec6efe463e054068369fcdaa/SpaceDogeCoin.sol",
            "impact": "Informational",
            "line": 703,
            "message": "SpaceDogeCoin._rTotal (SpaceDogeCoin.sol#703) is set pre-construction with a non-constant function or state variable:\n\t- (MAX - (MAX % _tTotal))\n",
            "name": "function-init-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-SpaceDoge/SpaceDoge-b4170e5899e917f7ec6efe463e054068369fcdaa/SpaceDogeCoin.sol",
            "impact": "Informational",
            "line": 711,
            "message": "SpaceDogeCoin._previousTaxFee (SpaceDogeCoin.sol#711) is set pre-construction with a non-constant function or state variable:\n\t- _taxFee\n",
            "name": "function-init-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-SpaceDoge/SpaceDoge-b4170e5899e917f7ec6efe463e054068369fcdaa/SpaceDogeCoin.sol",
            "impact": "Informational",
            "line": 714,
            "message": "SpaceDogeCoin._previousLiquidityFee (SpaceDogeCoin.sol#714) is set pre-construction with a non-constant function or state variable:\n\t- _liquidityFee\n",
            "name": "function-init-state",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}