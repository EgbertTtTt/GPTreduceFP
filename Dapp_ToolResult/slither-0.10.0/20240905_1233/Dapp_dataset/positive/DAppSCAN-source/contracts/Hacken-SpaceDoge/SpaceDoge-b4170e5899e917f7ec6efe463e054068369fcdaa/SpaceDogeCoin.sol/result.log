'solc --version' running
'solc /sb/SpaceDogeCoin.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running

Reentrancy in SpaceDogeCoin._transfer(address,address,uint256) (../../sb/SpaceDogeCoin.sol#1010-1054):
	External calls:
	- swapAndLiquify(contractTokenBalance) (../../sb/SpaceDogeCoin.sol#1041)
		- usdt.approve(address(uniswapV2Router),usdtAmount) (../../sb/SpaceDogeCoin.sol#1120)
		- uniswapV2Router.addLiquidity(address(this),address(usdt),tokenAmount,usdtAmount,0,0,blackHole,block.timestamp) (../../sb/SpaceDogeCoin.sol#1122-1131)
		- uniswapV2Router.swapExactTokensForTokensSupportingFeeOnTransferTokens(tokenAmount,0,path,address(wrap),block.timestamp) (../../sb/SpaceDogeCoin.sol#1088-1094)
		- wrap.withdraw() (../../sb/SpaceDogeCoin.sol#1096)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount,takeFee) (../../sb/SpaceDogeCoin.sol#1053)
		- _rOwned[address(this)] = _rOwned[address(this)].add(rLiquidity) (../../sb/SpaceDogeCoin.sol#966)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sb/SpaceDogeCoin.sol#1174)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sb/SpaceDogeCoin.sol#1183)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sb/SpaceDogeCoin.sol#1175)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sb/SpaceDogeCoin.sol#1194)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (../../sb/SpaceDogeCoin.sol#876)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sb/SpaceDogeCoin.sol#1195)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sb/SpaceDogeCoin.sol#1185)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (../../sb/SpaceDogeCoin.sol#878)
	SpaceDogeCoin._rOwned (../../sb/SpaceDogeCoin.sol#691) can be used in cross function reentrancies:
	- SpaceDogeCoin._getCurrentSupply() (../../sb/SpaceDogeCoin.sol#951-961)
	- SpaceDogeCoin._takeLiquidity(uint256) (../../sb/SpaceDogeCoin.sol#963-969)
	- SpaceDogeCoin._transferBothExcluded(address,address,uint256) (../../sb/SpaceDogeCoin.sol#873-882)
	- SpaceDogeCoin._transferFromExcluded(address,address,uint256) (../../sb/SpaceDogeCoin.sol#1191-1199)
	- SpaceDogeCoin._transferStandard(address,address,uint256) (../../sb/SpaceDogeCoin.sol#1172-1179)
	- SpaceDogeCoin._transferToExcluded(address,address,uint256) (../../sb/SpaceDogeCoin.sol#1181-1189)
	- SpaceDogeCoin.balanceOf(address) (../../sb/SpaceDogeCoin.sol#781-784)
	- SpaceDogeCoin.constructor() (../../sb/SpaceDogeCoin.sol#741-757)
	- SpaceDogeCoin.deliver(uint256) (../../sb/SpaceDogeCoin.sol#824-831)
	- SpaceDogeCoin.excludeFromReward(address) (../../sb/SpaceDogeCoin.sol#850-858)
	- _tokenTransfer(from,to,amount,takeFee) (../../sb/SpaceDogeCoin.sol#1053)
		- _rTotal = _rTotal.sub(rFee) (../../sb/SpaceDogeCoin.sol#921)
	SpaceDogeCoin._rTotal (../../sb/SpaceDogeCoin.sol#703) can be used in cross function reentrancies:
	- SpaceDogeCoin._getCurrentSupply() (../../sb/SpaceDogeCoin.sol#951-961)
	- SpaceDogeCoin._reflectFee(uint256,uint256) (../../sb/SpaceDogeCoin.sol#920-923)
	- SpaceDogeCoin.constructor() (../../sb/SpaceDogeCoin.sol#741-757)
	- SpaceDogeCoin.deliver(uint256) (../../sb/SpaceDogeCoin.sol#824-831)
	- SpaceDogeCoin.tokenFromReflection(uint256) (../../sb/SpaceDogeCoin.sol#844-848)
	- _tokenTransfer(from,to,amount,takeFee) (../../sb/SpaceDogeCoin.sol#1053)
		- _tOwned[address(this)] = _tOwned[address(this)].add(tLiquidity) (../../sb/SpaceDogeCoin.sol#968)
		- _tOwned[sender] = _tOwned[sender].sub(tAmount) (../../sb/SpaceDogeCoin.sol#1193)
		- _tOwned[sender] = _tOwned[sender].sub(tAmount) (../../sb/SpaceDogeCoin.sol#875)
		- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (../../sb/SpaceDogeCoin.sol#1184)
		- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (../../sb/SpaceDogeCoin.sol#877)
	SpaceDogeCoin._tOwned (../../sb/SpaceDogeCoin.sol#692) can be used in cross function reentrancies:
	- SpaceDogeCoin._getCurrentSupply() (../../sb/SpaceDogeCoin.sol#951-961)
	- SpaceDogeCoin._takeLiquidity(uint256) (../../sb/SpaceDogeCoin.sol#963-969)
	- SpaceDogeCoin._transferBothExcluded(address,address,uint256) (../../sb/SpaceDogeCoin.sol#873-882)
	- SpaceDogeCoin._transferFromExcluded(address,address,uint256) (../../sb/SpaceDogeCoin.sol#1191-1199)
	- SpaceDogeCoin._transferToExcluded(address,address,uint256) (../../sb/SpaceDogeCoin.sol#1181-1189)
	- SpaceDogeCoin.balanceOf(address) (../../sb/SpaceDogeCoin.sol#781-784)
	- SpaceDogeCoin.excludeFromReward(address) (../../sb/SpaceDogeCoin.sol#850-858)
	- SpaceDogeCoin.includeInReward(address) (../../sb/SpaceDogeCoin.sol#860-871)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

SpaceDogeCoin.addLiquidityUsdt(uint256,uint256) (../../sb/SpaceDogeCoin.sol#1117-1132) ignores return value by usdt.approve(address(uniswapV2Router),usdtAmount) (../../sb/SpaceDogeCoin.sol#1120)
SpaceDogeCoin.addLiquidityUsdt(uint256,uint256) (../../sb/SpaceDogeCoin.sol#1117-1132) ignores return value by uniswapV2Router.addLiquidity(address(this),address(usdt),tokenAmount,usdtAmount,0,0,blackHole,block.timestamp) (../../sb/SpaceDogeCoin.sol#1122-1131)
SpaceDogeCoin.addLiquidity(uint256,uint256) (../../sb/SpaceDogeCoin.sol#1135-1148) ignores return value by uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (../../sb/SpaceDogeCoin.sol#1140-1147)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

SpaceDogeCoin.allowance(address,address).owner (../../sb/SpaceDogeCoin.sol#791) shadows:
	- Ownable.owner() (../../sb/SpaceDogeCoin.sol#422-424) (function)
SpaceDogeCoin._approve(address,address,uint256).owner (../../sb/SpaceDogeCoin.sol#1002) shadows:
	- Ownable.owner() (../../sb/SpaceDogeCoin.sol#422-424) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

SpaceDogeCoin.setTaxFeePercent(uint256) (../../sb/SpaceDogeCoin.sol#892-894) should emit an event for: 
	- _taxFee = taxFee (../../sb/SpaceDogeCoin.sol#893) 
SpaceDogeCoin.setLiquidityFeePercent(uint256) (../../sb/SpaceDogeCoin.sol#896-898) should emit an event for: 
	- _liquidityFee = liquidityFee (../../sb/SpaceDogeCoin.sol#897) 
SpaceDogeCoin.setMaxTxPercent(uint256) (../../sb/SpaceDogeCoin.sol#900-904) should emit an event for: 
	- _maxTxAmount = _tTotal.mul(maxTxPercent).div(10 ** 2) (../../sb/SpaceDogeCoin.sol#901-903) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

SpaceDogeCoin.setBlackHole(address)._blackHole (../../sb/SpaceDogeCoin.sol#911) lacks a zero-check on :
		- blackHole = _blackHole (../../sb/SpaceDogeCoin.sol#913)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Reentrancy in SpaceDogeCoin._transfer(address,address,uint256) (../../sb/SpaceDogeCoin.sol#1010-1054):
	External calls:
	- swapAndLiquify(contractTokenBalance) (../../sb/SpaceDogeCoin.sol#1041)
		- usdt.approve(address(uniswapV2Router),usdtAmount) (../../sb/SpaceDogeCoin.sol#1120)
		- uniswapV2Router.addLiquidity(address(this),address(usdt),tokenAmount,usdtAmount,0,0,blackHole,block.timestamp) (../../sb/SpaceDogeCoin.sol#1122-1131)
		- uniswapV2Router.swapExactTokensForTokensSupportingFeeOnTransferTokens(tokenAmount,0,path,address(wrap),block.timestamp) (../../sb/SpaceDogeCoin.sol#1088-1094)
		- wrap.withdraw() (../../sb/SpaceDogeCoin.sol#1096)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount,takeFee) (../../sb/SpaceDogeCoin.sol#1053)
		- _liquidityFee = _previousLiquidityFee (../../sb/SpaceDogeCoin.sol#995)
		- _liquidityFee = 0 (../../sb/SpaceDogeCoin.sol#990)
	- _tokenTransfer(from,to,amount,takeFee) (../../sb/SpaceDogeCoin.sol#1053)
		- _previousLiquidityFee = _liquidityFee (../../sb/SpaceDogeCoin.sol#987)
	- _tokenTransfer(from,to,amount,takeFee) (../../sb/SpaceDogeCoin.sol#1053)
		- _previousTaxFee = _taxFee (../../sb/SpaceDogeCoin.sol#986)
	- _tokenTransfer(from,to,amount,takeFee) (../../sb/SpaceDogeCoin.sol#1053)
		- _tFeeTotal = _tFeeTotal.add(tFee) (../../sb/SpaceDogeCoin.sol#922)
	- _tokenTransfer(from,to,amount,takeFee) (../../sb/SpaceDogeCoin.sol#1053)
		- _taxFee = _previousTaxFee (../../sb/SpaceDogeCoin.sol#994)
		- _taxFee = 0 (../../sb/SpaceDogeCoin.sol#989)
Reentrancy in SpaceDogeCoin.swapAndLiquify(uint256) (../../sb/SpaceDogeCoin.sol#1056-1077):
	External calls:
	- swapTokensForUsdt(half) (../../sb/SpaceDogeCoin.sol#1068)
		- uniswapV2Router.swapExactTokensForTokensSupportingFeeOnTransferTokens(tokenAmount,0,path,address(wrap),block.timestamp) (../../sb/SpaceDogeCoin.sol#1088-1094)
		- wrap.withdraw() (../../sb/SpaceDogeCoin.sol#1096)
	- addLiquidityUsdt(otherHalf,usdtBalance) (../../sb/SpaceDogeCoin.sol#1074)
		- usdt.approve(address(uniswapV2Router),usdtAmount) (../../sb/SpaceDogeCoin.sol#1120)
		- uniswapV2Router.addLiquidity(address(this),address(usdt),tokenAmount,usdtAmount,0,0,blackHole,block.timestamp) (../../sb/SpaceDogeCoin.sol#1122-1131)
	State variables written after the call(s):
	- addLiquidityUsdt(otherHalf,usdtBalance) (../../sb/SpaceDogeCoin.sol#1074)
		- _allowances[owner][spender] = amount (../../sb/SpaceDogeCoin.sol#1006)
Reentrancy in SpaceDogeCoin.transferFrom(address,address,uint256) (../../sb/SpaceDogeCoin.sol#800-804):
	External calls:
	- _transfer(sender,recipient,amount) (../../sb/SpaceDogeCoin.sol#801)
		- usdt.approve(address(uniswapV2Router),usdtAmount) (../../sb/SpaceDogeCoin.sol#1120)
		- uniswapV2Router.addLiquidity(address(this),address(usdt),tokenAmount,usdtAmount,0,0,blackHole,block.timestamp) (../../sb/SpaceDogeCoin.sol#1122-1131)
		- uniswapV2Router.swapExactTokensForTokensSupportingFeeOnTransferTokens(tokenAmount,0,path,address(wrap),block.timestamp) (../../sb/SpaceDogeCoin.sol#1088-1094)
		- wrap.withdraw() (../../sb/SpaceDogeCoin.sol#1096)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sb/SpaceDogeCoin.sol#802)
		- _allowances[owner][spender] = amount (../../sb/SpaceDogeCoin.sol#1006)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in SpaceDogeCoin._transfer(address,address,uint256) (../../sb/SpaceDogeCoin.sol#1010-1054):
	External calls:
	- swapAndLiquify(contractTokenBalance) (../../sb/SpaceDogeCoin.sol#1041)
		- usdt.approve(address(uniswapV2Router),usdtAmount) (../../sb/SpaceDogeCoin.sol#1120)
		- uniswapV2Router.addLiquidity(address(this),address(usdt),tokenAmount,usdtAmount,0,0,blackHole,block.timestamp) (../../sb/SpaceDogeCoin.sol#1122-1131)
		- uniswapV2Router.swapExactTokensForTokensSupportingFeeOnTransferTokens(tokenAmount,0,path,address(wrap),block.timestamp) (../../sb/SpaceDogeCoin.sol#1088-1094)
		- wrap.withdraw() (../../sb/SpaceDogeCoin.sol#1096)
	Event emitted after the call(s):
	- Transfer(sender,recipient,tTransferAmount) (../../sb/SpaceDogeCoin.sol#1178)
		- _tokenTransfer(from,to,amount,takeFee) (../../sb/SpaceDogeCoin.sol#1053)
	- Transfer(sender,recipient,tTransferAmount) (../../sb/SpaceDogeCoin.sol#1198)
		- _tokenTransfer(from,to,amount,takeFee) (../../sb/SpaceDogeCoin.sol#1053)
	- Transfer(sender,recipient,tTransferAmount) (../../sb/SpaceDogeCoin.sol#1188)
		- _tokenTransfer(from,to,amount,takeFee) (../../sb/SpaceDogeCoin.sol#1053)
	- Transfer(sender,recipient,tTransferAmount) (../../sb/SpaceDogeCoin.sol#881)
		- _tokenTransfer(from,to,amount,takeFee) (../../sb/SpaceDogeCoin.sol#1053)
Reentrancy in SpaceDogeCoin.swapAndLiquify(uint256) (../../sb/SpaceDogeCoin.sol#1056-1077):
	External calls:
	- swapTokensForUsdt(half) (../../sb/SpaceDogeCoin.sol#1068)
		- uniswapV2Router.swapExactTokensForTokensSupportingFeeOnTransferTokens(tokenAmount,0,path,address(wrap),block.timestamp) (../../sb/SpaceDogeCoin.sol#1088-1094)
		- wrap.withdraw() (../../sb/SpaceDogeCoin.sol#1096)
	- addLiquidityUsdt(otherHalf,usdtBalance) (../../sb/SpaceDogeCoin.sol#1074)
		- usdt.approve(address(uniswapV2Router),usdtAmount) (../../sb/SpaceDogeCoin.sol#1120)
		- uniswapV2Router.addLiquidity(address(this),address(usdt),tokenAmount,usdtAmount,0,0,blackHole,block.timestamp) (../../sb/SpaceDogeCoin.sol#1122-1131)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sb/SpaceDogeCoin.sol#1007)
		- addLiquidityUsdt(otherHalf,usdtBalance) (../../sb/SpaceDogeCoin.sol#1074)
	- SwapAndLiquify(half,usdtBalance,otherHalf) (../../sb/SpaceDogeCoin.sol#1076)
Reentrancy in SpaceDogeCoin.transferFrom(address,address,uint256) (../../sb/SpaceDogeCoin.sol#800-804):
	External calls:
	- _transfer(sender,recipient,amount) (../../sb/SpaceDogeCoin.sol#801)
		- usdt.approve(address(uniswapV2Router),usdtAmount) (../../sb/SpaceDogeCoin.sol#1120)
		- uniswapV2Router.addLiquidity(address(this),address(usdt),tokenAmount,usdtAmount,0,0,blackHole,block.timestamp) (../../sb/SpaceDogeCoin.sol#1122-1131)
		- uniswapV2Router.swapExactTokensForTokensSupportingFeeOnTransferTokens(tokenAmount,0,path,address(wrap),block.timestamp) (../../sb/SpaceDogeCoin.sol#1088-1094)
		- wrap.withdraw() (../../sb/SpaceDogeCoin.sol#1096)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (../../sb/SpaceDogeCoin.sol#1007)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (../../sb/SpaceDogeCoin.sol#802)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

Ownable.unlock() (../../sb/SpaceDogeCoin.sol#469-474) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(now > _lockTime,Contract is locked until 7 days) (../../sb/SpaceDogeCoin.sol#471)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Address.isContract(address) (../../sb/SpaceDogeCoin.sol#274-283) uses assembly
	- INLINE ASM (../../sb/SpaceDogeCoin.sol#281)
Address._functionCallWithValue(address,bytes,uint256,string) (../../sb/SpaceDogeCoin.sol#367-388) uses assembly
	- INLINE ASM (../../sb/SpaceDogeCoin.sol#380-383)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

Different versions of Solidity are used:
	- Version used: ['>=0.5.0', '>=0.6.2', '^0.6.12']
	- >=0.5.0 (../../sb/SpaceDogeCoin.sol#2)
	- >=0.5.0 (../../sb/SpaceDogeCoin.sol#3)
	- >=0.6.2 (../../sb/SpaceDogeCoin.sol#4)
	- >=0.6.2 (../../sb/SpaceDogeCoin.sol#5)
	- ^0.6.12 (../../sb/SpaceDogeCoin.sol#1)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used

SpaceDogeCoin.includeInReward(address) (../../sb/SpaceDogeCoin.sol#860-871) has costly operations inside a loop:
	- _excluded.pop() (../../sb/SpaceDogeCoin.sol#867)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop

Address._functionCallWithValue(address,bytes,uint256,string) (../../sb/SpaceDogeCoin.sol#367-388) is never used and should be removed
Address.functionCall(address,bytes) (../../sb/SpaceDogeCoin.sol#327-329) is never used and should be removed
Address.functionCall(address,bytes,string) (../../sb/SpaceDogeCoin.sol#337-339) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sb/SpaceDogeCoin.sol#352-354) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (../../sb/SpaceDogeCoin.sol#362-365) is never used and should be removed
Address.isContract(address) (../../sb/SpaceDogeCoin.sol#274-283) is never used and should be removed
Address.sendValue(address,uint256) (../../sb/SpaceDogeCoin.sol#301-307) is never used and should be removed
Context._msgData() (../../sb/SpaceDogeCoin.sol#247-250) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sb/SpaceDogeCoin.sol#220-222) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sb/SpaceDogeCoin.sol#236-239) is never used and should be removed
SpaceDogeCoin.addLiquidity(uint256,uint256) (../../sb/SpaceDogeCoin.sol#1135-1148) is never used and should be removed
SpaceDogeCoin.swapTokensForEth(uint256) (../../sb/SpaceDogeCoin.sol#1099-1115) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

SpaceDogeCoin._rTotal (../../sb/SpaceDogeCoin.sol#703) is set pre-construction with a non-constant function or state variable:
	- (MAX - (MAX % _tTotal))
SpaceDogeCoin._previousTaxFee (../../sb/SpaceDogeCoin.sol#711) is set pre-construction with a non-constant function or state variable:
	- _taxFee
SpaceDogeCoin._previousLiquidityFee (../../sb/SpaceDogeCoin.sol#714) is set pre-construction with a non-constant function or state variable:
	- _liquidityFee
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state

Pragma version^0.6.12 (../../sb/SpaceDogeCoin.sol#1) allows old versions
Pragma version>=0.5.0 (../../sb/SpaceDogeCoin.sol#2) allows old versions
Pragma version>=0.5.0 (../../sb/SpaceDogeCoin.sol#3) allows old versions
Pragma version>=0.6.2 (../../sb/SpaceDogeCoin.sol#4) allows old versions
Pragma version>=0.6.2 (../../sb/SpaceDogeCoin.sol#5) allows old versions
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Address.sendValue(address,uint256) (../../sb/SpaceDogeCoin.sol#301-307):
	- (success) = recipient.call{value: amount}() (../../sb/SpaceDogeCoin.sol#305)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (../../sb/SpaceDogeCoin.sol#367-388):
	- (success,returndata) = target.call{value: weiValue}(data) (../../sb/SpaceDogeCoin.sol#371)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function IUniswapV2Pair.DOMAIN_SEPARATOR() (../../sb/SpaceDogeCoin.sol#510) is not in mixedCase
Function IUniswapV2Pair.PERMIT_TYPEHASH() (../../sb/SpaceDogeCoin.sol#511) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (../../sb/SpaceDogeCoin.sol#528) is not in mixedCase
Function IUniswapV2Router01.WETH() (../../sb/SpaceDogeCoin.sol#549) is not in mixedCase
Parameter SpaceDogeCoin.setWrap(IWrap)._wrap (../../sb/SpaceDogeCoin.sol#759) is not in mixedCase
Parameter SpaceDogeCoin.setSwapAndLiquifyEnabled(bool)._enabled (../../sb/SpaceDogeCoin.sol#906) is not in mixedCase
Parameter SpaceDogeCoin.setBlackHole(address)._blackHole (../../sb/SpaceDogeCoin.sol#911) is not in mixedCase
Parameter SpaceDogeCoin.calculateTaxFee(uint256)._amount (../../sb/SpaceDogeCoin.sol#971) is not in mixedCase
Parameter SpaceDogeCoin.calculateLiquidityFee(uint256)._amount (../../sb/SpaceDogeCoin.sol#977) is not in mixedCase
Variable SpaceDogeCoin._taxFee (../../sb/SpaceDogeCoin.sol#710) is not in mixedCase
Variable SpaceDogeCoin._liquidityFee (../../sb/SpaceDogeCoin.sol#713) is not in mixedCase
Variable SpaceDogeCoin._maxTxAmount (../../sb/SpaceDogeCoin.sol#722) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Redundant expression "this (../../sb/SpaceDogeCoin.sol#248)" inContext (../../sb/SpaceDogeCoin.sol#242-251)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements

Variable IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (../../sb/SpaceDogeCoin.sol#554) is too similar to IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (../../sb/SpaceDogeCoin.sol#555)
Variable SpaceDogeCoin._transferToExcluded(address,address,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#1182) is too similar to SpaceDogeCoin._getTValues(uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#934)
Variable SpaceDogeCoin._transferToExcluded(address,address,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#1182) is too similar to SpaceDogeCoin._transferStandard(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#1173)
Variable SpaceDogeCoin._transferStandard(address,address,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#1173) is too similar to SpaceDogeCoin._transferFromExcluded(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#1192)
Variable SpaceDogeCoin._transferStandard(address,address,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#1173) is too similar to SpaceDogeCoin._getValues(uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#926)
Variable SpaceDogeCoin._transferToExcluded(address,address,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#1182) is too similar to SpaceDogeCoin._transferToExcluded(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#1182)
Variable SpaceDogeCoin._transferStandard(address,address,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#1173) is too similar to SpaceDogeCoin._transferBothExcluded(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#874)
Variable SpaceDogeCoin._transferBothExcluded(address,address,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#874) is too similar to SpaceDogeCoin._transferFromExcluded(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#1192)
Variable SpaceDogeCoin._transferBothExcluded(address,address,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#874) is too similar to SpaceDogeCoin._getValues(uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#926)
Variable SpaceDogeCoin._transferFromExcluded(address,address,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#1192) is too similar to SpaceDogeCoin._transferFromExcluded(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#1192)
Variable SpaceDogeCoin._transferStandard(address,address,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#1173) is too similar to SpaceDogeCoin._getTValues(uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#934)
Variable SpaceDogeCoin._transferToExcluded(address,address,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#1182) is too similar to SpaceDogeCoin._transferFromExcluded(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#1192)
Variable SpaceDogeCoin._transferToExcluded(address,address,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#1182) is too similar to SpaceDogeCoin._getValues(uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#926)
Variable SpaceDogeCoin._transferStandard(address,address,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#1173) is too similar to SpaceDogeCoin._transferStandard(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#1173)
Variable SpaceDogeCoin._transferFromExcluded(address,address,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#1192) is too similar to SpaceDogeCoin._getValues(uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#926)
Variable SpaceDogeCoin._transferBothExcluded(address,address,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#874) is too similar to SpaceDogeCoin._transferBothExcluded(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#874)
Variable SpaceDogeCoin._transferToExcluded(address,address,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#1182) is too similar to SpaceDogeCoin._transferBothExcluded(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#874)
Variable SpaceDogeCoin._transferFromExcluded(address,address,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#1192) is too similar to SpaceDogeCoin._transferBothExcluded(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#874)
Variable SpaceDogeCoin._transferStandard(address,address,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#1173) is too similar to SpaceDogeCoin._transferToExcluded(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#1182)
Variable SpaceDogeCoin.reflectionFromToken(uint256,bool).rTransferAmount (../../sb/SpaceDogeCoin.sol#839) is too similar to SpaceDogeCoin._getValues(uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#926)
Variable SpaceDogeCoin._transferFromExcluded(address,address,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#1192) is too similar to SpaceDogeCoin._transferStandard(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#1173)
Variable SpaceDogeCoin._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#942) is too similar to SpaceDogeCoin._transferStandard(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#1173)
Variable SpaceDogeCoin._getValues(uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#927) is too similar to SpaceDogeCoin._transferToExcluded(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#1182)
Variable SpaceDogeCoin._getValues(uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#927) is too similar to SpaceDogeCoin._transferBothExcluded(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#874)
Variable SpaceDogeCoin._transferBothExcluded(address,address,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#874) is too similar to SpaceDogeCoin._transferStandard(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#1173)
Variable SpaceDogeCoin._getValues(uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#927) is too similar to SpaceDogeCoin._transferFromExcluded(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#1192)
Variable SpaceDogeCoin.reflectionFromToken(uint256,bool).rTransferAmount (../../sb/SpaceDogeCoin.sol#839) is too similar to SpaceDogeCoin._transferStandard(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#1173)
Variable SpaceDogeCoin._transferFromExcluded(address,address,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#1192) is too similar to SpaceDogeCoin._transferToExcluded(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#1182)
Variable SpaceDogeCoin._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#942) is too similar to SpaceDogeCoin._transferToExcluded(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#1182)
Variable SpaceDogeCoin._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#942) is too similar to SpaceDogeCoin._transferBothExcluded(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#874)
Variable SpaceDogeCoin._transferBothExcluded(address,address,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#874) is too similar to SpaceDogeCoin._transferToExcluded(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#1182)
Variable SpaceDogeCoin.reflectionFromToken(uint256,bool).rTransferAmount (../../sb/SpaceDogeCoin.sol#839) is too similar to SpaceDogeCoin._transferToExcluded(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#1182)
Variable SpaceDogeCoin._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#942) is too similar to SpaceDogeCoin._transferFromExcluded(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#1192)
Variable SpaceDogeCoin.reflectionFromToken(uint256,bool).rTransferAmount (../../sb/SpaceDogeCoin.sol#839) is too similar to SpaceDogeCoin._transferBothExcluded(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#874)
Variable SpaceDogeCoin._getValues(uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#927) is too similar to SpaceDogeCoin._getTValues(uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#934)
Variable SpaceDogeCoin.reflectionFromToken(uint256,bool).rTransferAmount (../../sb/SpaceDogeCoin.sol#839) is too similar to SpaceDogeCoin._transferFromExcluded(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#1192)
Variable SpaceDogeCoin._getValues(uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#927) is too similar to SpaceDogeCoin._getValues(uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#926)
Variable SpaceDogeCoin._transferFromExcluded(address,address,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#1192) is too similar to SpaceDogeCoin._getTValues(uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#934)
Variable SpaceDogeCoin._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#942) is too similar to SpaceDogeCoin._getTValues(uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#934)
Variable SpaceDogeCoin._getValues(uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#927) is too similar to SpaceDogeCoin._transferStandard(address,address,uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#1173)
Variable SpaceDogeCoin._getRValues(uint256,uint256,uint256,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#942) is too similar to SpaceDogeCoin._getValues(uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#926)
Variable SpaceDogeCoin._transferBothExcluded(address,address,uint256).rTransferAmount (../../sb/SpaceDogeCoin.sol#874) is too similar to SpaceDogeCoin._getTValues(uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#934)
Variable SpaceDogeCoin.reflectionFromToken(uint256,bool).rTransferAmount (../../sb/SpaceDogeCoin.sol#839) is too similar to SpaceDogeCoin._getTValues(uint256).tTransferAmount (../../sb/SpaceDogeCoin.sol#934)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar

SpaceDogeCoin.slitherConstructorVariables() (../../sb/SpaceDogeCoin.sol#687-1201) uses literals with too many digits:
	- _tTotal = 1000000000 * 10 ** 6 * 10 ** 2 (../../sb/SpaceDogeCoin.sol#702)
SpaceDogeCoin.slitherConstructorVariables() (../../sb/SpaceDogeCoin.sol#687-1201) uses literals with too many digits:
	- _maxTxAmount = 2000000 * 10 ** 6 * 10 ** 2 (../../sb/SpaceDogeCoin.sol#722)
SpaceDogeCoin.slitherConstructorVariables() (../../sb/SpaceDogeCoin.sol#687-1201) uses literals with too many digits:
	- numTokensSellToAddToLiquidity = 200000 * 10 ** 6 * 10 ** 2 (../../sb/SpaceDogeCoin.sol#723)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

Loop condition i < _excluded.length (../../sb/SpaceDogeCoin.sol#954) should use cached array length instead of referencing `length` member of the storage array.
 Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cache-array-length

SpaceDogeCoin._decimals (../../sb/SpaceDogeCoin.sol#708) should be constant 
SpaceDogeCoin._name (../../sb/SpaceDogeCoin.sol#706) should be constant 
SpaceDogeCoin._symbol (../../sb/SpaceDogeCoin.sol#707) should be constant 
SpaceDogeCoin._tTotal (../../sb/SpaceDogeCoin.sol#702) should be constant 
SpaceDogeCoin.numTokensSellToAddToLiquidity (../../sb/SpaceDogeCoin.sol#723) should be constant 
SpaceDogeCoin.usdt (../../sb/SpaceDogeCoin.sol#724) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
/sb/SpaceDogeCoin.sol analyzed (11 contracts with 93 detectors), 110 result(s) found
