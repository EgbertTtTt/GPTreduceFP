'solc --version' running
'solc /sb/ROSCA.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running
Compilation warnings/errors on /sb/ROSCA.sol:
/sb/ROSCA.sol:123:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:130:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:137:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:144:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:151:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:158:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:165:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:172:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:185:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function ROSCA (
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/ROSCA.sol:192:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:197:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:202:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:206:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:220:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:234:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:277:70: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (delinquentWinner == 0 || members[delinquentWinner].paid) throw;
                                                                     ^---^
/sb/ROSCA.sol:387:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:413:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:421:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/sb/ROSCA.sol:479:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/sb/ROSCA.sol:531:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/ROSCA.sol:306:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      User member = members[membersAddresses[j]];
      ^---------^
/sb/ROSCA.sol:355:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    User member = members[msg.sender];
    ^---------^
/sb/ROSCA.sol:42:43: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x1dF62f291b2E969fB0849d99D9Ce41e2F137006e'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
  address constant internal FEE_ADDRESS = 0x1df62f291b2e969fb0849d99d9ce41e2f137006e;
                                          ^----------------------------------------^
/sb/ROSCA.sol:47:52: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x1dF62f291b2E969fB0849d99D9Ce41e2F137006e'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
  address constant internal ESCAPE_HATCH_ENABLER = 0x1df62f291b2e969fb0849d99d9ce41e2f137006e;
                                                   ^----------------------------------------^
/sb/ROSCA.sol:244:7: Warning: Invoking events without "emit" prefix is deprecated.
      LogStartOfRound(currentRound);
      ^---------------------------^
/sb/ROSCA.sol:247:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogEndOfROSCA();
        ^-------------^
/sb/ROSCA.sol:294:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogRoundFundsReleased(winnerAddress, lowestBid);
    ^---------------------------------------------^
/sb/ROSCA.sol:368:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogContributionMade(msg.sender, msg.value);
    ^----------------------------------------^
/sb/ROSCA.sol:400:7: Warning: Invoking events without "emit" prefix is deprecated.
      LogUnsuccessfulBid(msg.sender, bidInWei, lowestBid);
      ^-------------------------------------------------^
/sb/ROSCA.sol:405:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogNewLowestBid(lowestBid, winnerAddress);
    ^---------------------------------------^
/sb/ROSCA.sol:425:31: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    uint256 amountAvailable = this.balance - totalFees;
                              ^----------^
/sb/ROSCA.sol:429:7: Warning: Invoking events without "emit" prefix is deprecated.
      LogCannotWithdrawFully(amountToWithdraw);
      ^--------------------------------------^
/sb/ROSCA.sol:439:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogFundsWithdrawal(msg.sender, amountToWithdraw);
    ^----------------------------------------------^
/sb/ROSCA.sol:466:12: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    return this.balance - totalFees;
           ^----------^
/sb/ROSCA.sol:483:31: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    uint256 amountToCollect = this.balance - totalFees;
                              ^----------^
/sb/ROSCA.sol:490:7: Warning: Invoking events without "emit" prefix is deprecated.
      LogForepersonSurplusWithdrawal(amountToCollect);
      ^---------------------------------------------^
/sb/ROSCA.sol:511:7: Warning: Invoking events without "emit" prefix is deprecated.
      LogFundsWithdrawal(FEE_ADDRESS, totalFees);
      ^----------------------------------------^
/sb/ROSCA.sol:521:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogEscapeHatchEnabled();
    ^---------------------^
/sb/ROSCA.sol:534:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogEscapeHatchActivated();
    ^-----------------------^
/sb/ROSCA.sol:542:37: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    LogEmergencyWithdrawalPerformed(this.balance);
                                    ^----------^
/sb/ROSCA.sol:542:5: Warning: Invoking events without "emit" prefix is deprecated.
    LogEmergencyWithdrawalPerformed(this.balance);
    ^-------------------------------------------^
/sb/ROSCA.sol:185:3: Warning: No visibility specified. Defaulting to "public". 
  function ROSCA (
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/ROSCA.sol:299:3: Warning: No visibility specified. Defaulting to "public". 
  function recalculateTotalFees() {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/ROSCA.sol:541:3: Warning: No visibility specified. Defaulting to "public". 
  function emergencyWithdrawal() onlyFromForeperson onlyIfEscapeHatchActive {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/ROSCA.sol:342:3: Warning: Function state mutability can be restricted to view
  function removeFees(uint256 amount) internal returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/ROSCA.sol:453:31: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        totalCredit -= int256(removeFees(membersAddresses.length * contributionSize));
                              ^----------------------------------------------------^


ROSCA (../../sb/ROSCA.sol#17-546) contract sets array length with a user-controlled value:
	- membersAddresses.push(newMember) (../../sb/ROSCA.sol#223)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

ROSCA.cleanUpPreviousRound() (../../sb/ROSCA.sol#251-296) uses a weak PRNG: "semi_random = now % numUnpaidParticipants (../../sb/ROSCA.sol#261)" 
ROSCA.cleanUpPreviousRound() (../../sb/ROSCA.sol#251-296) uses a weak PRNG: "index = (semi_random + i) % numUnpaidParticipants (../../sb/ROSCA.sol#263)" 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG

ROSCA.cleanUpPreviousRound().winnerIndex (../../sb/ROSCA.sol#253) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables

ROSCA.ROSCA(uint16,uint128,uint256,address[],uint16) (../../sb/ROSCA.sol#185-216) uses timestamp for comparisons
	Dangerous comparisons:
	- startTime_ < (now + MINIMUM_TIME_BEFORE_ROSCA_START) (../../sb/ROSCA.sol#201)
ROSCA.startRound() (../../sb/ROSCA.sol#231-249) uses timestamp for comparisons
	Dangerous comparisons:
	- now < roundStartTime (../../sb/ROSCA.sol#233)
ROSCA.endOfROSCARetrieveSurplus() (../../sb/ROSCA.sol#476-492) uses timestamp for comparisons
	Dangerous comparisons:
	- now < roscaCollectionTime || forepersonSurplusCollected (../../sb/ROSCA.sol#478)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Deprecated standard detected THROW (../../sb/ROSCA.sol#192):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/ROSCA.sol#197):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/ROSCA.sol#202):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/ROSCA.sol#206):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/ROSCA.sol#220):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/ROSCA.sol#234):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/ROSCA.sol#277):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/ROSCA.sol#387):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/ROSCA.sol#413):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/ROSCA.sol#421):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/ROSCA.sol#479):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/ROSCA.sol#531):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/ROSCA.sol#123):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/ROSCA.sol#130):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/ROSCA.sol#137):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/ROSCA.sol#144):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/ROSCA.sol#151):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/ROSCA.sol#158):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/ROSCA.sol#165):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/ROSCA.sol#172):
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.4 (../../sb/ROSCA.sol#1) allows old versions
solc-0.4.26 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Reentrancy in ROSCA.endOfROSCARetrieveFees() (../../sb/ROSCA.sol#501-513):
	External calls:
	- ! FEE_ADDRESS.send(tempTotalFees) (../../sb/ROSCA.sol#504)
	Event emitted after the call(s):
	- LogFundsWithdrawal(FEE_ADDRESS,totalFees) (../../sb/ROSCA.sol#511)
Reentrancy in ROSCA.endOfROSCARetrieveSurplus() (../../sb/ROSCA.sol#476-492):
	External calls:
	- ! foreperson.send(amountToCollect) (../../sb/ROSCA.sol#484)
	Event emitted after the call(s):
	- LogForepersonSurplusWithdrawal(amountToCollect) (../../sb/ROSCA.sol#490)
Reentrancy in ROSCA.withdraw() (../../sb/ROSCA.sol#411-441):
	External calls:
	- ! msg.sender.send(amountToWithdraw) (../../sb/ROSCA.sol#433)
	Event emitted after the call(s):
	- LogFundsWithdrawal(msg.sender,amountToWithdraw) (../../sb/ROSCA.sol#439)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

Variable ROSCA.MAX_CONTRIBUTION_SIZE (../../sb/ROSCA.sol#23) is too similar to ROSCA.MIN_CONTRIBUTION_SIZE (../../sb/ROSCA.sol#22)
Variable ROSCA.MAX_ROUND_PERIOD_IN_DAYS (../../sb/ROSCA.sol#32) is too similar to ROSCA.MIN_ROUND_PERIOD_IN_DAYS (../../sb/ROSCA.sol#31)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
/sb/ROSCA.sol analyzed (1 contracts with 93 detectors), 34 result(s) found
