{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "RocketNodeStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Rocketpool/rocketpool-2.5-Tokenomics-updates/contracts/contract/node/RocketNodeStaking.sol",
            "function": "slashRPL",
            "impact": "Medium",
            "line": 727,
            "line_end": 744,
            "message": "RocketNodeStaking.slashRPL(address,uint256) (RocketNodeStaking.sol#727-744) ignores return value by rocketVault.transferToken(rocketAuctionManager,getContractAddress(rocketTokenRPL),rplSlashAmount) (RocketNodeStaking.sol#738)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "RocketNodeStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Rocketpool/rocketpool-2.5-Tokenomics-updates/contracts/contract/node/RocketNodeStaking.sol",
            "function": "stakeRPL",
            "impact": "Medium",
            "line": 682,
            "line_end": 700,
            "message": "RocketNodeStaking.stakeRPL(uint256) (RocketNodeStaking.sol#682-700) ignores return value by rocketVault.depositToken(rocketNodeStaking,rplTokenAddress,_amount) (RocketNodeStaking.sol#693)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "RocketNodeStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Rocketpool/rocketpool-2.5-Tokenomics-updates/contracts/contract/node/RocketNodeStaking.sol",
            "function": "withdrawRPL",
            "impact": "Medium",
            "line": 704,
            "line_end": 723,
            "message": "RocketNodeStaking.withdrawRPL(uint256) (RocketNodeStaking.sol#704-723) ignores return value by rocketVault.withdrawToken(msg.sender,getContractAddress(rocketTokenRPL),_amount) (RocketNodeStaking.sol#717)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "RocketNodeStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Rocketpool/rocketpool-2.5-Tokenomics-updates/contracts/contract/node/RocketNodeStaking.sol",
            "function": "slashRPL",
            "impact": "Low",
            "line": 727,
            "line_end": 744,
            "message": "Reentrancy in RocketNodeStaking.slashRPL(address,uint256) (RocketNodeStaking.sol#727-744):\n\tExternal calls:\n\t- rocketVault.transferToken(rocketAuctionManager,getContractAddress(rocketTokenRPL),rplSlashAmount) (RocketNodeStaking.sol#738)\n\t- decreaseTotalRPLStake(rplSlashAmount) (RocketNodeStaking.sol#740)\n\t\t- rocketStorage.setUint(keccak256(bytes)(abi.encodePacked(_key)),_value) (RocketNodeStaking.sol#457)\n\t- decreaseNodeRPLStake(_nodeAddress,rplSlashAmount) (RocketNodeStaking.sol#741)\n\t\t- rocketStorage.setUint(_key,_value) (RocketNodeStaking.sol#450)\n\tEvent emitted after the call(s):\n\t- RPLSlashed(_nodeAddress,rplSlashAmount,_ethSlashAmount,block.timestamp) (RocketNodeStaking.sol#743)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "RocketNodeStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Rocketpool/rocketpool-2.5-Tokenomics-updates/contracts/contract/node/RocketNodeStaking.sol",
            "function": "stakeRPL",
            "impact": "Low",
            "line": 682,
            "line_end": 700,
            "message": "Reentrancy in RocketNodeStaking.stakeRPL(uint256) (RocketNodeStaking.sol#682-700):\n\tExternal calls:\n\t- require(bool,string)(rplToken.transferFrom(msg.sender,address(this),_amount),Could not transfer RPL to staking contract) (RocketNodeStaking.sol#689)\n\t- require(bool,string)(rplToken.approve(rocketVaultAddress,_amount),Could not approve vault RPL deposit) (RocketNodeStaking.sol#691)\n\t- rocketVault.depositToken(rocketNodeStaking,rplTokenAddress,_amount) (RocketNodeStaking.sol#693)\n\t- increaseTotalRPLStake(_amount) (RocketNodeStaking.sol#695)\n\t\t- rocketStorage.setUint(keccak256(bytes)(abi.encodePacked(_key)),_value) (RocketNodeStaking.sol#457)\n\t- increaseNodeRPLStake(msg.sender,_amount) (RocketNodeStaking.sol#696)\n\t\t- rocketStorage.setUint(_key,_value) (RocketNodeStaking.sol#450)\n\t- setNodeRPLStakedBlock(msg.sender,block.number) (RocketNodeStaking.sol#697)\n\t\t- rocketStorage.setUint(_key,_value) (RocketNodeStaking.sol#450)\n\tEvent emitted after the call(s):\n\t- RPLStaked(msg.sender,_amount,block.timestamp) (RocketNodeStaking.sol#699)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "RocketNodeStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Rocketpool/rocketpool-2.5-Tokenomics-updates/contracts/contract/node/RocketNodeStaking.sol",
            "function": "withdrawRPL",
            "impact": "Low",
            "line": 704,
            "line_end": 723,
            "message": "Reentrancy in RocketNodeStaking.withdrawRPL(uint256) (RocketNodeStaking.sol#704-723):\n\tExternal calls:\n\t- rocketVault.withdrawToken(msg.sender,getContractAddress(rocketTokenRPL),_amount) (RocketNodeStaking.sol#717)\n\t- decreaseTotalRPLStake(_amount) (RocketNodeStaking.sol#719)\n\t\t- rocketStorage.setUint(keccak256(bytes)(abi.encodePacked(_key)),_value) (RocketNodeStaking.sol#457)\n\t- decreaseNodeRPLStake(msg.sender,_amount) (RocketNodeStaking.sol#720)\n\t\t- rocketStorage.setUint(_key,_value) (RocketNodeStaking.sol#450)\n\tEvent emitted after the call(s):\n\t- RPLWithdrawn(msg.sender,_amount,block.timestamp) (RocketNodeStaking.sol#722)\n",
            "name": "reentrancy-events",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}