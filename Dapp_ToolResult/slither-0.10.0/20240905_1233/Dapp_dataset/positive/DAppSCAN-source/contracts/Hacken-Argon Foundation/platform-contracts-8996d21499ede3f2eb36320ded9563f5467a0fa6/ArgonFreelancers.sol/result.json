{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "_payEmployer",
            "impact": "High",
            "line": 752,
            "line_end": 758,
            "message": "WorkContract._payEmployer() (ArgonFreelancers.sol#752-758) sends eth to arbitrary user\n\tDangerous calls:\n\t- employerAddress.transfer(workPrice) (ArgonFreelancers.sol#754)\n",
            "name": "arbitrary-send-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "_payFreelancer",
            "impact": "High",
            "line": 721,
            "line_end": 750,
            "message": "WorkContract._payFreelancer() (ArgonFreelancers.sol#721-750) sends eth to arbitrary user\n\tDangerous calls:\n\t- deployedFromContract.feeAddress().transfer(workPrice.safeSub(amount)) (ArgonFreelancers.sol#731-733)\n",
            "name": "arbitrary-send-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "employerReceiveFile",
            "impact": "High",
            "line": 760,
            "line_end": 772,
            "message": "Reentrancy in WorkContract.employerReceiveFile(uint256,string) (ArgonFreelancers.sol#760-772):\n\tExternal calls:\n\t- _payFreelancer() (ArgonFreelancers.sol#767)\n\t\t- amount = workPrice.safeSub((workPrice.safeMul(deployedFromContract.bnbFeeRate())).safeDiv(1e6)) (ArgonFreelancers.sol#725-729)\n\t\t- deployedFromContract.feeAddress().transfer(workPrice.safeSub(amount)) (ArgonFreelancers.sol#731-733)\n\t\t- amount = workPrice.safeSub((workPrice.safeMul(deployedFromContract.feeRates(tokenContractAddress))).safeDiv(1e6)) (ArgonFreelancers.sol#735-742)\n\t\t- IERC20(tokenContractAddress).transfer(freelancerAddress,amount) (ArgonFreelancers.sol#744)\n\t\t- IERC20(tokenContractAddress).transfer(deployedFromContract.feeAddress(),workPrice.safeSub(amount)) (ArgonFreelancers.sol#745-748)\n\t- deployedFromContract.setPuan(_puan,freelancerAddress) (ArgonFreelancers.sol#768)\n\tExternal calls sending eth:\n\t- _payFreelancer() (ArgonFreelancers.sol#767)\n\t\t- freelancerAddress.transfer(amount) (ArgonFreelancers.sol#730)\n\t\t- deployedFromContract.feeAddress().transfer(workPrice.safeSub(amount)) (ArgonFreelancers.sol#731-733)\n\tState variables written after the call(s):\n\t- employerReceiveFiles = true (ArgonFreelancers.sol#770)\n\tWorkContract.employerReceiveFiles (ArgonFreelancers.sol#513) can be used in cross function reentrancies:\n\t- WorkContract.constructor(string,string,string,string,address,address) (ArgonFreelancers.sol#535-557)\n\t- WorkContract.employerCancel(string) (ArgonFreelancers.sol#774-784)\n\t- WorkContract.employerReceiveFiles (ArgonFreelancers.sol#513)\n",
            "name": "reentrancy-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MainContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "unLock",
            "impact": "High",
            "line": 291,
            "line_end": 304,
            "message": "MainContract.unLock() (ArgonFreelancers.sol#291-304) ignores return value by argonToken.transfer(msg.sender,approverLockBalances[msg.sender]) (ArgonFreelancers.sol#302)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "_payFreelancer",
            "impact": "High",
            "line": 721,
            "line_end": 750,
            "message": "WorkContract._payFreelancer() (ArgonFreelancers.sol#721-750) ignores return value by IERC20(tokenContractAddress).transfer(freelancerAddress,amount) (ArgonFreelancers.sol#744)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MainContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "sendApproverArgonCoin",
            "impact": "High",
            "line": 466,
            "line_end": 472,
            "message": "MainContract.sendApproverArgonCoin(address) (ArgonFreelancers.sol#466-472) ignores return value by argonToken.transfer(_approveraddress,amount) (ArgonFreelancers.sol#470)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "_payEmployer",
            "impact": "High",
            "line": 752,
            "line_end": 758,
            "message": "WorkContract._payEmployer() (ArgonFreelancers.sol#752-758) ignores return value by IERC20(tokenContractAddress).transfer(employerAddress,workPrice) (ArgonFreelancers.sol#756)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "_payFreelancer",
            "impact": "High",
            "line": 721,
            "line_end": 750,
            "message": "WorkContract._payFreelancer() (ArgonFreelancers.sol#721-750) ignores return value by IERC20(tokenContractAddress).transfer(deployedFromContract.feeAddress(),workPrice.safeSub(amount)) (ArgonFreelancers.sol#745-748)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MainContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "sendArgonTokenAdmin",
            "impact": "High",
            "line": 283,
            "line_end": 289,
            "message": "MainContract.sendArgonTokenAdmin(address,uint256) (ArgonFreelancers.sol#283-289) ignores return value by argonToken.transfer(_address,amount) (ArgonFreelancers.sol#288)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "cancelApprover",
            "impact": "Medium",
            "line": 810,
            "line_end": 828,
            "message": "Reentrancy in WorkContract.cancelApprover(string) (ArgonFreelancers.sol#810-828):\n\tExternal calls:\n\t- deployedFromContract.deleteApproverWorkAddress(this,approverAddress) (ArgonFreelancers.sol#819-822)\n\t- deployedFromContract.sendApproverArgonCoin(approverAddress) (ArgonFreelancers.sol#823)\n\tState variables written after the call(s):\n\t- approverConfirmStatus = 2 (ArgonFreelancers.sol#825)\n\tWorkContract.approverConfirmStatus (ArgonFreelancers.sol#504) can be used in cross function reentrancies:\n\t- WorkContract.approverConfirmStatus (ArgonFreelancers.sol#504)\n\t- WorkContract.employerCancel(string) (ArgonFreelancers.sol#774-784)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MainContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "sendApproverArgonCoin",
            "impact": "Medium",
            "line": 466,
            "line_end": 472,
            "message": "Reentrancy in MainContract.sendApproverArgonCoin(address) (ArgonFreelancers.sol#466-472):\n\tExternal calls:\n\t- argonToken.transfer(_approveraddress,amount) (ArgonFreelancers.sol#470)\n\tState variables written after the call(s):\n\t- remainingArgonToken = remainingArgonToken.safeSub(amount) (ArgonFreelancers.sol#471)\n\tMainContract.remainingArgonToken (ArgonFreelancers.sol#221) can be used in cross function reentrancies:\n\t- MainContract.constructor(address,uint8,address) (ArgonFreelancers.sol#247-258)\n\t- MainContract.remainingArgonToken (ArgonFreelancers.sol#221)\n\t- MainContract.sendApproverArgonCoin(address) (ArgonFreelancers.sol#466-472)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MainContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "createWork",
            "impact": "Medium",
            "line": 381,
            "line_end": 401,
            "message": "Reentrancy in MainContract.createWork(string,string,string,string) (ArgonFreelancers.sol#381-401):\n\tExternal calls:\n\t- newWork = new WorkContract(_workTitle,_workCategory,_workDescription,_workAvarageBudget,msg.sender,this) (ArgonFreelancers.sol#389-397)\n\tState variables written after the call(s):\n\t- data.WorkAddresses.push(newWork) (ArgonFreelancers.sol#398)\n\tMainContract.accounts (ArgonFreelancers.sol#213) can be used in cross function reentrancies:\n\t- MainContract._removeApproverWorkAddressArray(uint256,address) (ArgonFreelancers.sol#423-436)\n\t- MainContract.createWork(string,string,string,string) (ArgonFreelancers.sol#381-401)\n\t- MainContract.deleteApproverWorkAddress(address,address) (ArgonFreelancers.sol#438-450)\n\t- MainContract.getPersonAccountType(address) (ArgonFreelancers.sol#363-370)\n\t- MainContract.getPersonInfoData(address) (ArgonFreelancers.sol#342-361)\n\t- MainContract.setApproverWorkAddress(address,address) (ArgonFreelancers.sol#413-421)\n\t- MainContract.setPuan(uint256,address) (ArgonFreelancers.sol#407-411)\n\t- MainContract.updatePerson(string) (ArgonFreelancers.sol#372-379)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "confirmApprover",
            "impact": "Medium",
            "line": 786,
            "line_end": 808,
            "message": "Reentrancy in WorkContract.confirmApprover(string) (ArgonFreelancers.sol#786-808):\n\tExternal calls:\n\t- deployedFromContract.deleteApproverWorkAddress(this,approverAddress) (ArgonFreelancers.sol#796-799)\n\t- deployedFromContract.sendApproverArgonCoin(approverAddress) (ArgonFreelancers.sol#801)\n\tState variables written after the call(s):\n\t- approverConfirmStatus = 1 (ArgonFreelancers.sol#804)\n\tWorkContract.approverConfirmStatus (ArgonFreelancers.sol#504) can be used in cross function reentrancies:\n\t- WorkContract.approverConfirmStatus (ArgonFreelancers.sol#504)\n\t- WorkContract.employerCancel(string) (ArgonFreelancers.sol#774-784)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MainContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "unLock",
            "impact": "Medium",
            "line": 291,
            "line_end": 304,
            "message": "Reentrancy in MainContract.unLock() (ArgonFreelancers.sol#291-304):\n\tExternal calls:\n\t- argonToken.transfer(msg.sender,approverLockBalances[msg.sender]) (ArgonFreelancers.sol#302)\n\tState variables written after the call(s):\n\t- approverLockBalances[msg.sender] = 0 (ArgonFreelancers.sol#303)\n\tMainContract.approverLockBalances (ArgonFreelancers.sol#217) can be used in cross function reentrancies:\n\t- MainContract.approverLockBalances (ArgonFreelancers.sol#217)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MainContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "changeSettings",
            "impact": "Low",
            "line": 273,
            "line_end": 281,
            "message": "MainContract.changeSettings(uint256,uint8,address) (ArgonFreelancers.sol#273-281) should emit an event for: \n\t- approverMinArgonLimit = _approverMinArgonLimit (ArgonFreelancers.sol#278) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "selectOffer",
            "impact": "Low",
            "line": 653,
            "line_end": 678,
            "message": "Reentrancy in WorkContract.selectOffer(address,address) (ArgonFreelancers.sol#653-678):\n\tExternal calls:\n\t- require(bool)(deployedFromContract.approverLockBalances(_approveraddress) >= deployedFromContract.approverMinArgonLimit()) (ArgonFreelancers.sol#662-665)\n\t- deployedFromContract.setApproverWorkAddress(this,_approveraddress) (ArgonFreelancers.sol#667)\n\t- mustActive() (ArgonFreelancers.sol#656)\n\t\t- require(bool)(deployedFromContract.isActive()) (ArgonFreelancers.sol#525)\n\tState variables written after the call(s):\n\t- argonShield = data.ArgonShield (ArgonFreelancers.sol#677)\n\t- deadLine = data.deadline (ArgonFreelancers.sol#674)\n\t- freelancerAddress = data.freelancerAddress (ArgonFreelancers.sol#671)\n\t- isBNB = true (ArgonFreelancers.sol#676)\n\t- workPrice = data.offerPrice (ArgonFreelancers.sol#675)\n\t- workStartDate = now (ArgonFreelancers.sol#673)\n\t- workStatus = true (ArgonFreelancers.sol#672)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MainContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "addPerson",
            "impact": "Low",
            "line": 310,
            "line_end": 340,
            "message": "Reentrancy in MainContract.addPerson(uint8,string) (ArgonFreelancers.sol#310-340):\n\tExternal calls:\n\t- require(bool)(argonToken.transferFrom(msg.sender,address(this),approverMinArgonLimit)) (ArgonFreelancers.sol#318-324)\n\tState variables written after the call(s):\n\t- accounts[msg.sender] = newAccount (ArgonFreelancers.sol#337)\n\t- allPersons.push(msg.sender) (ArgonFreelancers.sol#338)\n\t- personsAddress[msg.sender] = true (ArgonFreelancers.sol#339)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MainContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "createWork",
            "impact": "Low",
            "line": 381,
            "line_end": 401,
            "message": "Reentrancy in MainContract.createWork(string,string,string,string) (ArgonFreelancers.sol#381-401):\n\tExternal calls:\n\t- newWork = new WorkContract(_workTitle,_workCategory,_workDescription,_workAvarageBudget,msg.sender,this) (ArgonFreelancers.sol#389-397)\n\tState variables written after the call(s):\n\t- deployedWorks.push(newWork) (ArgonFreelancers.sol#399)\n\t- isDeployedWorks[newWork] = true (ArgonFreelancers.sol#400)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "selectOffer",
            "impact": "Low",
            "line": 653,
            "line_end": 678,
            "message": "Reentrancy in WorkContract.selectOffer(address,address) (ArgonFreelancers.sol#653-678):\n\tExternal calls:\n\t- require(bool)(deployedFromContract.approverLockBalances(_approveraddress) >= deployedFromContract.approverMinArgonLimit()) (ArgonFreelancers.sol#662-665)\n\t- mustActive() (ArgonFreelancers.sol#656)\n\t\t- require(bool)(deployedFromContract.isActive()) (ArgonFreelancers.sol#525)\n\tState variables written after the call(s):\n\t- approverAddress = _approveraddress (ArgonFreelancers.sol#666)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "cancelApprover",
            "impact": "Low",
            "line": 810,
            "line_end": 828,
            "message": "Reentrancy in WorkContract.cancelApprover(string) (ArgonFreelancers.sol#810-828):\n\tExternal calls:\n\t- deployedFromContract.deleteApproverWorkAddress(this,approverAddress) (ArgonFreelancers.sol#819-822)\n\t- deployedFromContract.sendApproverArgonCoin(approverAddress) (ArgonFreelancers.sol#823)\n\tState variables written after the call(s):\n\t- approverReport = _description (ArgonFreelancers.sol#826)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "selectOfferWithToken",
            "impact": "Low",
            "line": 680,
            "line_end": 711,
            "message": "Reentrancy in WorkContract.selectOfferWithToken(address,address) (ArgonFreelancers.sol#680-711):\n\tExternal calls:\n\t- require(bool)(deployedFromContract.approverLockBalances(_approveraddress) >= deployedFromContract.approverMinArgonLimit()) (ArgonFreelancers.sol#688-691)\n\t- mustActive() (ArgonFreelancers.sol#683)\n\t\t- require(bool)(deployedFromContract.isActive()) (ArgonFreelancers.sol#525)\n\tState variables written after the call(s):\n\t- approverAddress = _approveraddress (ArgonFreelancers.sol#693)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "employerReceiveFile",
            "impact": "Low",
            "line": 760,
            "line_end": 772,
            "message": "Reentrancy in WorkContract.employerReceiveFile(uint256,string) (ArgonFreelancers.sol#760-772):\n\tExternal calls:\n\t- _payFreelancer() (ArgonFreelancers.sol#767)\n\t\t- amount = workPrice.safeSub((workPrice.safeMul(deployedFromContract.bnbFeeRate())).safeDiv(1e6)) (ArgonFreelancers.sol#725-729)\n\t\t- deployedFromContract.feeAddress().transfer(workPrice.safeSub(amount)) (ArgonFreelancers.sol#731-733)\n\t\t- amount = workPrice.safeSub((workPrice.safeMul(deployedFromContract.feeRates(tokenContractAddress))).safeDiv(1e6)) (ArgonFreelancers.sol#735-742)\n\t\t- IERC20(tokenContractAddress).transfer(freelancerAddress,amount) (ArgonFreelancers.sol#744)\n\t\t- IERC20(tokenContractAddress).transfer(deployedFromContract.feeAddress(),workPrice.safeSub(amount)) (ArgonFreelancers.sol#745-748)\n\t- deployedFromContract.setPuan(_puan,freelancerAddress) (ArgonFreelancers.sol#768)\n\tExternal calls sending eth:\n\t- _payFreelancer() (ArgonFreelancers.sol#767)\n\t\t- freelancerAddress.transfer(amount) (ArgonFreelancers.sol#730)\n\t\t- deployedFromContract.feeAddress().transfer(workPrice.safeSub(amount)) (ArgonFreelancers.sol#731-733)\n\tState variables written after the call(s):\n\t- employerRemark = _remark (ArgonFreelancers.sol#769)\n\t- workEndDate = now (ArgonFreelancers.sol#771)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "selectOfferWithToken",
            "impact": "Low",
            "line": 680,
            "line_end": 711,
            "message": "Reentrancy in WorkContract.selectOfferWithToken(address,address) (ArgonFreelancers.sol#680-711):\n\tExternal calls:\n\t- require(bool)(deployedFromContract.approverLockBalances(_approveraddress) >= deployedFromContract.approverMinArgonLimit()) (ArgonFreelancers.sol#688-691)\n\t- deployedFromContract.setApproverWorkAddress(this,_approveraddress) (ArgonFreelancers.sol#694)\n\t- mustActive() (ArgonFreelancers.sol#683)\n\t\t- require(bool)(deployedFromContract.isActive()) (ArgonFreelancers.sol#525)\n\tState variables written after the call(s):\n\t- deadLine = data.deadline (ArgonFreelancers.sol#699)\n\t- freelancerAddress = data.freelancerAddress (ArgonFreelancers.sol#696)\n\t- isBNB = false (ArgonFreelancers.sol#701)\n\t- tokenContractAddress = data.offerTokenContract (ArgonFreelancers.sol#702)\n\t- workPrice = data.offerPrice (ArgonFreelancers.sol#700)\n\t- workStartDate = now (ArgonFreelancers.sol#698)\n\t- workStatus = true (ArgonFreelancers.sol#697)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "autoConfirm",
            "impact": "Low",
            "line": 830,
            "line_end": 838,
            "message": "Reentrancy in WorkContract.autoConfirm() (ArgonFreelancers.sol#830-838):\n\tExternal calls:\n\t- _payFreelancer() (ArgonFreelancers.sol#834)\n\t\t- amount = workPrice.safeSub((workPrice.safeMul(deployedFromContract.bnbFeeRate())).safeDiv(1e6)) (ArgonFreelancers.sol#725-729)\n\t\t- deployedFromContract.feeAddress().transfer(workPrice.safeSub(amount)) (ArgonFreelancers.sol#731-733)\n\t\t- amount = workPrice.safeSub((workPrice.safeMul(deployedFromContract.feeRates(tokenContractAddress))).safeDiv(1e6)) (ArgonFreelancers.sol#735-742)\n\t\t- IERC20(tokenContractAddress).transfer(freelancerAddress,amount) (ArgonFreelancers.sol#744)\n\t\t- IERC20(tokenContractAddress).transfer(deployedFromContract.feeAddress(),workPrice.safeSub(amount)) (ArgonFreelancers.sol#745-748)\n\t- deployedFromContract.setPuan(5,freelancerAddress) (ArgonFreelancers.sol#835)\n\tExternal calls sending eth:\n\t- _payFreelancer() (ArgonFreelancers.sol#834)\n\t\t- freelancerAddress.transfer(amount) (ArgonFreelancers.sol#730)\n\t\t- deployedFromContract.feeAddress().transfer(workPrice.safeSub(amount)) (ArgonFreelancers.sol#731-733)\n\tState variables written after the call(s):\n\t- employerRemark = Auto Confirmed By Smart Contract (ArgonFreelancers.sol#836)\n\t- workEndDate = now (ArgonFreelancers.sol#837)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "createOffer",
            "impact": "Low",
            "line": 578,
            "line_end": 606,
            "message": "Reentrancy in WorkContract.createOffer(uint256,string,uint256,string,address,bool,bool) (ArgonFreelancers.sol#578-606):\n\tExternal calls:\n\t- require(bool)(deployedFromContract.getPersonAccountType(msg.sender) == 0) (ArgonFreelancers.sol#587)\n\t- require(bool)(deployedFromContract.availableTokens(_tokenContract)) (ArgonFreelancers.sol#590)\n\t- mustActive() (ArgonFreelancers.sol#586)\n\t\t- require(bool)(deployedFromContract.isActive()) (ArgonFreelancers.sol#525)\n\tState variables written after the call(s):\n\t- allFreelancerAddress.push(msg.sender) (ArgonFreelancers.sol#604)\n\t- offers[msg.sender] = newOffer (ArgonFreelancers.sol#603)\n\t- workOfferCount ++ (ArgonFreelancers.sol#605)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "updateOffer",
            "impact": "Low",
            "line": 613,
            "line_end": 624,
            "message": "Reentrancy in WorkContract.updateOffer(uint256,string,string,bool) (ArgonFreelancers.sol#613-624):\n\tExternal calls:\n\t- mustActive() (ArgonFreelancers.sol#618)\n\t\t- require(bool)(deployedFromContract.isActive()) (ArgonFreelancers.sol#525)\n\tState variables written after the call(s):\n\t- data.offerPrice = _offerPrice (ArgonFreelancers.sol#620)\n\t- data.description = _description (ArgonFreelancers.sol#621)\n\t- data.title = _title (ArgonFreelancers.sol#622)\n\t- data.ArgonShield = _ArgonShield (ArgonFreelancers.sol#623)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "updateWork",
            "impact": "Low",
            "line": 563,
            "line_end": 576,
            "message": "Reentrancy in WorkContract.updateWork(string,string,string,string,address) (ArgonFreelancers.sol#563-576):\n\tExternal calls:\n\t- mustActive() (ArgonFreelancers.sol#569)\n\t\t- require(bool)(deployedFromContract.isActive()) (ArgonFreelancers.sol#525)\n\tState variables written after the call(s):\n\t- workAvarageBudget = _workAvarageBudget (ArgonFreelancers.sol#575)\n\t- workCategory = _workCategory (ArgonFreelancers.sol#573)\n\t- workDescription = _workDescription (ArgonFreelancers.sol#574)\n\t- workTitle = _workTitle (ArgonFreelancers.sol#572)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "selectOfferWithToken",
            "impact": "Low",
            "line": 680,
            "line_end": 711,
            "message": "Reentrancy in WorkContract.selectOfferWithToken(address,address) (ArgonFreelancers.sol#680-711):\n\tExternal calls:\n\t- require(bool)(deployedFromContract.approverLockBalances(_approveraddress) >= deployedFromContract.approverMinArgonLimit()) (ArgonFreelancers.sol#688-691)\n\t- deployedFromContract.setApproverWorkAddress(this,_approveraddress) (ArgonFreelancers.sol#694)\n\t- require(bool)(IERC20(data.offerTokenContract).transferFrom(msg.sender,address(this),data.offerPrice)) (ArgonFreelancers.sol#703-709)\n\t- mustActive() (ArgonFreelancers.sol#683)\n\t\t- require(bool)(deployedFromContract.isActive()) (ArgonFreelancers.sol#525)\n\tState variables written after the call(s):\n\t- argonShield = data.ArgonShield (ArgonFreelancers.sol#710)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "deleteOffer",
            "impact": "Low",
            "line": 608,
            "line_end": 611,
            "message": "Reentrancy in WorkContract.deleteOffer() (ArgonFreelancers.sol#608-611):\n\tExternal calls:\n\t- mustActive() (ArgonFreelancers.sol#608)\n\t\t- require(bool)(deployedFromContract.isActive()) (ArgonFreelancers.sol#525)\n\tState variables written after the call(s):\n\t- delete offers[msg.sender] (ArgonFreelancers.sol#609)\n\t- workOfferCount -- (ArgonFreelancers.sol#610)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "confirmApprover",
            "impact": "Low",
            "line": 786,
            "line_end": 808,
            "message": "Reentrancy in WorkContract.confirmApprover(string) (ArgonFreelancers.sol#786-808):\n\tExternal calls:\n\t- deployedFromContract.deleteApproverWorkAddress(this,approverAddress) (ArgonFreelancers.sol#796-799)\n\t- deployedFromContract.sendApproverArgonCoin(approverAddress) (ArgonFreelancers.sol#801)\n\t- _payFreelancer() (ArgonFreelancers.sol#805)\n\t\t- amount = workPrice.safeSub((workPrice.safeMul(deployedFromContract.bnbFeeRate())).safeDiv(1e6)) (ArgonFreelancers.sol#725-729)\n\t\t- deployedFromContract.feeAddress().transfer(workPrice.safeSub(amount)) (ArgonFreelancers.sol#731-733)\n\t\t- amount = workPrice.safeSub((workPrice.safeMul(deployedFromContract.feeRates(tokenContractAddress))).safeDiv(1e6)) (ArgonFreelancers.sol#735-742)\n\t\t- IERC20(tokenContractAddress).transfer(freelancerAddress,amount) (ArgonFreelancers.sol#744)\n\t\t- IERC20(tokenContractAddress).transfer(deployedFromContract.feeAddress(),workPrice.safeSub(amount)) (ArgonFreelancers.sol#745-748)\n\tExternal calls sending eth:\n\t- _payFreelancer() (ArgonFreelancers.sol#805)\n\t\t- freelancerAddress.transfer(amount) (ArgonFreelancers.sol#730)\n\t\t- deployedFromContract.feeAddress().transfer(workPrice.safeSub(amount)) (ArgonFreelancers.sol#731-733)\n\tState variables written after the call(s):\n\t- approverReport = _description (ArgonFreelancers.sol#806)\n\t- workEndDate = now (ArgonFreelancers.sol#807)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MainContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "checkDeadline",
            "impact": "Low",
            "line": 452,
            "line_end": 464,
            "message": "MainContract.checkDeadline(address) (ArgonFreelancers.sol#452-464) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- now > deployedWork.deadLine() && deployedWork.deadLine() != 0 (ArgonFreelancers.sol#459)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "autoConfirm",
            "impact": "Low",
            "line": 830,
            "line_end": 838,
            "message": "WorkContract.autoConfirm() (ArgonFreelancers.sol#830-838) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool)(now > freelancerSendFilesDate.safeAdd(432000)) (ArgonFreelancers.sol#831)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "cancelApprover",
            "impact": "Low",
            "line": 810,
            "line_end": 828,
            "message": "WorkContract.cancelApprover(string) (ArgonFreelancers.sol#810-828) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- now > approverStartDate.safeAdd(432000) (ArgonFreelancers.sol#815)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "employerCancel",
            "impact": "Low",
            "line": 774,
            "line_end": 784,
            "message": "WorkContract.employerCancel(string) (ArgonFreelancers.sol#774-784) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool)(approverStartDate == 0) (ArgonFreelancers.sol#777)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "confirmApprover",
            "impact": "Low",
            "line": 786,
            "line_end": 808,
            "message": "WorkContract.confirmApprover(string) (ArgonFreelancers.sol#786-808) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- now > approverStartDate.safeAdd(432000) (ArgonFreelancers.sol#791)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "sendDeadline",
            "impact": "Low",
            "line": 840,
            "line_end": 844,
            "message": "WorkContract.sendDeadline() (ArgonFreelancers.sol#840-844) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool)(now > deadLine) (ArgonFreelancers.sol#841)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MainContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "unLock",
            "impact": "Informational",
            "line": 291,
            "line_end": 304,
            "message": "MainContract.unLock() (ArgonFreelancers.sol#291-304) has costly operations inside a loop:\n\t- delete allPersons[x] (ArgonFreelancers.sol#299)\n",
            "name": "costly-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "autoConfirm",
            "impact": "Informational",
            "line": 830,
            "line_end": 838,
            "message": "Reentrancy in WorkContract.autoConfirm() (ArgonFreelancers.sol#830-838):\n\tExternal calls:\n\t- _payFreelancer() (ArgonFreelancers.sol#834)\n\t\t- freelancerAddress.transfer(amount) (ArgonFreelancers.sol#730)\n\t\t- deployedFromContract.feeAddress().transfer(workPrice.safeSub(amount)) (ArgonFreelancers.sol#731-733)\n\tState variables written after the call(s):\n\t- employerRemark = Auto Confirmed By Smart Contract (ArgonFreelancers.sol#836)\n\t- workEndDate = now (ArgonFreelancers.sol#837)\n",
            "name": "reentrancy-unlimited-gas",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "confirmApprover",
            "impact": "Informational",
            "line": 786,
            "line_end": 808,
            "message": "Reentrancy in WorkContract.confirmApprover(string) (ArgonFreelancers.sol#786-808):\n\tExternal calls:\n\t- _payFreelancer() (ArgonFreelancers.sol#805)\n\t\t- freelancerAddress.transfer(amount) (ArgonFreelancers.sol#730)\n\t\t- deployedFromContract.feeAddress().transfer(workPrice.safeSub(amount)) (ArgonFreelancers.sol#731-733)\n\tState variables written after the call(s):\n\t- approverReport = _description (ArgonFreelancers.sol#806)\n\t- workEndDate = now (ArgonFreelancers.sol#807)\n",
            "name": "reentrancy-unlimited-gas",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "WorkContract",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Hacken-Argon Foundation/platform-contracts-8996d21499ede3f2eb36320ded9563f5467a0fa6/ArgonFreelancers.sol",
            "function": "employerReceiveFile",
            "impact": "Informational",
            "line": 760,
            "line_end": 772,
            "message": "Reentrancy in WorkContract.employerReceiveFile(uint256,string) (ArgonFreelancers.sol#760-772):\n\tExternal calls:\n\t- _payFreelancer() (ArgonFreelancers.sol#767)\n\t\t- freelancerAddress.transfer(amount) (ArgonFreelancers.sol#730)\n\t\t- deployedFromContract.feeAddress().transfer(workPrice.safeSub(amount)) (ArgonFreelancers.sol#731-733)\n\tState variables written after the call(s):\n\t- employerReceiveFiles = true (ArgonFreelancers.sol#770)\n\t- employerRemark = _remark (ArgonFreelancers.sol#769)\n\t- workEndDate = now (ArgonFreelancers.sol#771)\n",
            "name": "reentrancy-unlimited-gas",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}