'solc --version' running
'solc /sb/zAuctionAccountant.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/sb' running

zAuctionAccountant.SetZauction(address).zauctionaddress (../../sb/zAuctionAccountant.sol#272) lacks a zero-check on :
		- zauction = zauctionaddress (../../sb/zAuctionAccountant.sol#273)
zAuctionAccountant.SetAdmin(address).newadmin (../../sb/zAuctionAccountant.sol#277) lacks a zero-check on :
		- admin = newadmin (../../sb/zAuctionAccountant.sol#278)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

SafeMath.div(uint256,uint256) (../../sb/zAuctionAccountant.sol#133-135) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sb/zAuctionAccountant.sol#189-194) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sb/zAuctionAccountant.sol#149-151) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sb/zAuctionAccountant.sol#211-216) is never used and should be removed
SafeMath.mul(uint256,uint256) (../../sb/zAuctionAccountant.sol#119-121) is never used and should be removed
SafeMath.sub(uint256,uint256,string) (../../sb/zAuctionAccountant.sol#166-171) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sb/zAuctionAccountant.sol#20-26) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sb/zAuctionAccountant.sol#62-67) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sb/zAuctionAccountant.sol#74-79) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sb/zAuctionAccountant.sol#45-55) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sb/zAuctionAccountant.sol#33-38) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Pragma version^0.8.1 (../../sb/zAuctionAccountant.sol#1) allows old versions
solc-0.8.27 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Contract zAuctionAccountant (../../sb/zAuctionAccountant.sol#219-281) is not in CapWords
Event zAuctionAccountant.zDeposited(address,uint256) (../../sb/zAuctionAccountant.sol#226) is not in CapWords
Event zAuctionAccountant.zWithdrew(address,uint256) (../../sb/zAuctionAccountant.sol#227) is not in CapWords
Event zAuctionAccountant.zExchanged(address,address,uint256) (../../sb/zAuctionAccountant.sol#228) is not in CapWords
Function zAuctionAccountant.Deposit() (../../sb/zAuctionAccountant.sol#245-248) is not in mixedCase
Function zAuctionAccountant.Withdraw(uint256) (../../sb/zAuctionAccountant.sol#250-254) is not in mixedCase
Function zAuctionAccountant.Exchange(address,address,uint256) (../../sb/zAuctionAccountant.sol#266-270) is not in mixedCase
Function zAuctionAccountant.SetZauction(address) (../../sb/zAuctionAccountant.sol#272-275) is not in mixedCase
Function zAuctionAccountant.SetAdmin(address) (../../sb/zAuctionAccountant.sol#277-280) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in zAuctionAccountant.Withdraw(uint256) (../../sb/zAuctionAccountant.sol#250-254):
	External calls:
	- address(msg.sender).transfer(amount) (../../sb/zAuctionAccountant.sol#252)
	Event emitted after the call(s):
	- Withdrew(msg.sender,amount) (../../sb/zAuctionAccountant.sol#253)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
/sb/zAuctionAccountant.sol analyzed (2 contracts with 93 detectors), 25 result(s) found
