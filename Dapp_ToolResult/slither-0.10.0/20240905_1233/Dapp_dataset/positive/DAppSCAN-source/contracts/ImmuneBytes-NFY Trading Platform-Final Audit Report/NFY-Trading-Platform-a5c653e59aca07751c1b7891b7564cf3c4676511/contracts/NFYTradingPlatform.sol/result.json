{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "NFYTradingPlatform",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-NFY Trading Platform-Final Audit Report/NFY-Trading-Platform-a5c653e59aca07751c1b7891b7564cf3c4676511/contracts/NFYTradingPlatform.sol",
            "function": "createLimitOrder",
            "impact": "High",
            "line": 790,
            "line_end": 803,
            "message": "NFYTradingPlatform.createLimitOrder(string,uint256,uint256,NFYTradingPlatform.Side) (NFYTradingPlatform.sol#790-803) ignores return value by NFYToken.transferFrom(_msgSender(),communityFund,communityFee) (NFYTradingPlatform.sol#799)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "NFYTradingPlatform",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-NFY Trading Platform-Final Audit Report/NFY-Trading-Platform-a5c653e59aca07751c1b7891b7564cf3c4676511/contracts/NFYTradingPlatform.sol",
            "function": "createLimitOrder",
            "impact": "High",
            "line": 790,
            "line_end": 803,
            "message": "NFYTradingPlatform.createLimitOrder(string,uint256,uint256,NFYTradingPlatform.Side) (NFYTradingPlatform.sol#790-803) ignores return value by NFYToken.transferFrom(_msgSender(),rewardPool,rewardFee) (NFYTradingPlatform.sol#800)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "NFYTradingPlatform",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-NFY Trading Platform-Final Audit Report/NFY-Trading-Platform-a5c653e59aca07751c1b7891b7564cf3c4676511/contracts/NFYTradingPlatform.sol",
            "function": "createLimitOrder",
            "impact": "High",
            "line": 790,
            "line_end": 803,
            "message": "NFYTradingPlatform.createLimitOrder(string,uint256,uint256,NFYTradingPlatform.Side) (NFYTradingPlatform.sol#790-803) ignores return value by NFYToken.transferFrom(_msgSender(),devAddress,devFee) (NFYTradingPlatform.sol#798)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "NFYTradingPlatform",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-NFY Trading Platform-Final Audit Report/NFY-Trading-Platform-a5c653e59aca07751c1b7891b7564cf3c4676511/contracts/NFYTradingPlatform.sol",
            "function": "_createOrder",
            "impact": "High",
            "line": 651,
            "message": "NFYTradingPlatform.pendingETH (NFYTradingPlatform.sol#651) is never initialized. It is used in:\n\t- NFYTradingPlatform._createOrder(bytes32,uint256,uint256,NFYTradingPlatform.Side) (NFYTradingPlatform.sol#874-916)\n\t- NFYTradingPlatform._matchOrder(bytes32,NFYTradingPlatform.Order[],uint256,uint256,NFYTradingPlatform.Side) (NFYTradingPlatform.sol#918-978)\n\t- NFYTradingPlatform.cancelOrder(string,NFYTradingPlatform.Side) (NFYTradingPlatform.sol#980-995)\n",
            "name": "uninitialized-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "NFYTradingPlatform",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-NFY Trading Platform-Final Audit Report/NFY-Trading-Platform-a5c653e59aca07751c1b7891b7564cf3c4676511/contracts/NFYTradingPlatform.sol",
            "function": "getOrders",
            "impact": "High",
            "line": 659,
            "message": "NFYTradingPlatform.orderBook (NFYTradingPlatform.sol#659) is never initialized. It is used in:\n\t- NFYTradingPlatform.getOrders(string,NFYTradingPlatform.Side) (NFYTradingPlatform.sol#769-773)\n\t- NFYTradingPlatform._limitOrder(string,uint256,uint256,NFYTradingPlatform.Side) (NFYTradingPlatform.sol#806-872)\n\t- NFYTradingPlatform._createOrder(bytes32,uint256,uint256,NFYTradingPlatform.Side) (NFYTradingPlatform.sol#874-916)\n\t- NFYTradingPlatform.cancelOrder(string,NFYTradingPlatform.Side) (NFYTradingPlatform.sol#980-995)\n",
            "name": "uninitialized-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "NFYTradingPlatform",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-NFY Trading Platform-Final Audit Report/NFY-Trading-Platform-a5c653e59aca07751c1b7891b7564cf3c4676511/contracts/NFYTradingPlatform.sol",
            "function": "_createOrder",
            "impact": "High",
            "line": 653,
            "message": "NFYTradingPlatform.pendingToken (NFYTradingPlatform.sol#653) is never initialized. It is used in:\n\t- NFYTradingPlatform._createOrder(bytes32,uint256,uint256,NFYTradingPlatform.Side) (NFYTradingPlatform.sol#874-916)\n\t- NFYTradingPlatform._matchOrder(bytes32,NFYTradingPlatform.Order[],uint256,uint256,NFYTradingPlatform.Side) (NFYTradingPlatform.sol#918-978)\n\t- NFYTradingPlatform.cancelOrder(string,NFYTradingPlatform.Side) (NFYTradingPlatform.sol#980-995)\n",
            "name": "uninitialized-state",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "NFYTradingPlatform",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-NFY Trading Platform-Final Audit Report/NFY-Trading-Platform-a5c653e59aca07751c1b7891b7564cf3c4676511/contracts/NFYTradingPlatform.sol",
            "function": "withdrawStake",
            "impact": "Medium",
            "line": 729,
            "line_end": 743,
            "message": "Reentrancy in NFYTradingPlatform.withdrawStake(string,uint256) (NFYTradingPlatform.sol#729-743):\n\tExternal calls:\n\t- addStakeholder(_ticker) (NFYTradingPlatform.sol#733)\n\t\t- (success,data) = tokens[_ticker].stakingAddress.call(abi.encodeWithSignature(addStakeholderExternal(address),_stakeholder)) (NFYTradingPlatform.sol#764)\n\t- (success,data) = tokens[_ticker].stakingAddress.call(abi.encodeWithSignature(incrementNFTValue(uint256,uint256),_tokenId,_amount)) (NFYTradingPlatform.sol#739)\n\tState variables written after the call(s):\n\t- traderBalances[_msgSender()][_ticker] = traderBalances[_msgSender()][_ticker].sub(_amount) (NFYTradingPlatform.sol#742)\n\tNFYTradingPlatform.traderBalances (NFYTradingPlatform.sol#657) can be used in cross function reentrancies:\n\t- NFYTradingPlatform._createOrder(bytes32,uint256,uint256,NFYTradingPlatform.Side) (NFYTradingPlatform.sol#874-916)\n\t- NFYTradingPlatform._matchOrder(bytes32,NFYTradingPlatform.Order[],uint256,uint256,NFYTradingPlatform.Side) (NFYTradingPlatform.sol#918-978)\n\t- NFYTradingPlatform.cancelOrder(string,NFYTradingPlatform.Side) (NFYTradingPlatform.sol#980-995)\n\t- NFYTradingPlatform.depositStake(string,uint256,uint256) (NFYTradingPlatform.sol#718-726)\n\t- NFYTradingPlatform.getTraderBalance(address,string) (NFYTradingPlatform.sol#699-703)\n\t- NFYTradingPlatform.withdrawStake(string,uint256) (NFYTradingPlatform.sol#729-743)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "NFYTradingPlatform",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-NFY Trading Platform-Final Audit Report/NFY-Trading-Platform-a5c653e59aca07751c1b7891b7564cf3c4676511/contracts/NFYTradingPlatform.sol",
            "function": "setFee",
            "impact": "Low",
            "line": 684,
            "line_end": 686,
            "message": "NFYTradingPlatform.setFee(uint256) (NFYTradingPlatform.sol#684-686) should emit an event for: \n\t- platformFee = _fee (NFYTradingPlatform.sol#685) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "NFYTradingPlatform",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-NFY Trading Platform-Final Audit Report/NFY-Trading-Platform-a5c653e59aca07751c1b7891b7564cf3c4676511/contracts/NFYTradingPlatform.sol",
            "function": "depositStake",
            "impact": "Low",
            "line": 718,
            "line_end": 726,
            "message": "Reentrancy in NFYTradingPlatform.depositStake(string,uint256,uint256) (NFYTradingPlatform.sol#718-726):\n\tExternal calls:\n\t- (success,data) = tokens[_ticker].stakingAddress.call(abi.encodeWithSignature(decrementNFTValue(uint256,uint256),_tokenId,_amount)) (NFYTradingPlatform.sol#722)\n\tState variables written after the call(s):\n\t- traderBalances[_msgSender()][_ticker] = traderBalances[_msgSender()][_ticker].add(_amount) (NFYTradingPlatform.sol#725)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "NFYTradingPlatform",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-NFY Trading Platform-Final Audit Report/NFY-Trading-Platform-a5c653e59aca07751c1b7891b7564cf3c4676511/contracts/NFYTradingPlatform.sol",
            "function": "createLimitOrder",
            "impact": "Low",
            "line": 790,
            "line_end": 803,
            "message": "Reentrancy in NFYTradingPlatform.createLimitOrder(string,uint256,uint256,NFYTradingPlatform.Side) (NFYTradingPlatform.sol#790-803):\n\tExternal calls:\n\t- NFYToken.transferFrom(_msgSender(),devAddress,devFee) (NFYTradingPlatform.sol#798)\n\t- NFYToken.transferFrom(_msgSender(),communityFund,communityFee) (NFYTradingPlatform.sol#799)\n\t- NFYToken.transferFrom(_msgSender(),rewardPool,rewardFee) (NFYTradingPlatform.sol#800)\n\tState variables written after the call(s):\n\t- _limitOrder(ticker,_amount,_price,_side) (NFYTradingPlatform.sol#802)\n\t\t- ethBalance[_msgSender()] = ethBalance[_msgSender()].sub(_amount.mul(_price).div(1e18)) (NFYTradingPlatform.sol#880)\n\t\t- ethBalance[_msgSender()] = ethBalance[_msgSender()].add(matched.mul(orders[i].price).div(1e18)) (NFYTradingPlatform.sol#938)\n\t\t- ethBalance[orders[i].userAddress] = ethBalance[orders[i].userAddress].add(matched.mul(orders[i].price).div(1e18)) (NFYTradingPlatform.sol#959)\n\t\t- ethBalance[_msgSender()] = ethBalance[_msgSender()].sub(matched.mul(orders[i].price).div(1e18)) (NFYTradingPlatform.sol#960)\n\t- _limitOrder(ticker,_amount,_price,_side) (NFYTradingPlatform.sol#802)\n\t\t- nextOrderId = nextOrderId.add(1) (NFYTradingPlatform.sol#915)\n\t- _limitOrder(ticker,_amount,_price,_side) (NFYTradingPlatform.sol#802)\n\t\t- nextTradeId = nextTradeId.add(1) (NFYTradingPlatform.sol#823)\n\t\t- nextTradeId = nextTradeId.add(1) (NFYTradingPlatform.sol#846)\n\t- _limitOrder(ticker,_amount,_price,_side) (NFYTradingPlatform.sol#802)\n\t\t- traderBalances[_msgSender()][_ticker] = traderBalances[_msgSender()][_ticker].sub(matched) (NFYTradingPlatform.sol#936)\n\t\t- traderBalances[orders[i].userAddress][_ticker] = traderBalances[orders[i].userAddress][_ticker].add(matched) (NFYTradingPlatform.sol#937)\n\t\t- traderBalances[_msgSender()][_ticker] = traderBalances[_msgSender()][_ticker].sub(_amount) (NFYTradingPlatform.sol#886)\n\t\t- traderBalances[_msgSender()][_ticker] = traderBalances[_msgSender()][_ticker].add(matched) (NFYTradingPlatform.sol#958)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "NFYTradingPlatform",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-NFY Trading Platform-Final Audit Report/NFY-Trading-Platform-a5c653e59aca07751c1b7891b7564cf3c4676511/contracts/NFYTradingPlatform.sol",
            "function": "createLimitOrder",
            "impact": "Low",
            "line": 790,
            "line_end": 803,
            "message": "Reentrancy in NFYTradingPlatform.createLimitOrder(string,uint256,uint256,NFYTradingPlatform.Side) (NFYTradingPlatform.sol#790-803):\n\tExternal calls:\n\t- NFYToken.transferFrom(_msgSender(),devAddress,devFee) (NFYTradingPlatform.sol#798)\n\t- NFYToken.transferFrom(_msgSender(),communityFund,communityFee) (NFYTradingPlatform.sol#799)\n\t- NFYToken.transferFrom(_msgSender(),rewardPool,rewardFee) (NFYTradingPlatform.sol#800)\n\tEvent emitted after the call(s):\n\t- NewTrade(nextTradeId,orders[i].id,_ticker,orders[i].userAddress,_msgSender(),matched,orders[i].price,now) (NFYTradingPlatform.sol#924-933)\n\t\t- _limitOrder(ticker,_amount,_price,_side) (NFYTradingPlatform.sol#802)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "NFYTradingPlatform",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-NFY Trading Platform-Final Audit Report/NFY-Trading-Platform-a5c653e59aca07751c1b7891b7564cf3c4676511/contracts/NFYTradingPlatform.sol",
            "function": "_createOrder",
            "impact": "Low",
            "line": 874,
            "line_end": 916,
            "message": "NFYTradingPlatform._createOrder(bytes32,uint256,uint256,NFYTradingPlatform.Side) (NFYTradingPlatform.sol#874-916) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- i > 0 (NFYTradingPlatform.sol#903)\n\t- orders.length > 0 (NFYTradingPlatform.sol#902)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-NFY Trading Platform-Final Audit Report/NFY-Trading-Platform-a5c653e59aca07751c1b7891b7564cf3c4676511/contracts/NFYTradingPlatform.sol",
            "impact": "Informational",
            "line": 610,
            "message": "NFYTradingPlatform.ETH (NFYTradingPlatform.sol#610) is never used in NFYTradingPlatform (NFYTradingPlatform.sol#606-1058)\n",
            "name": "unused-state",
            "check": "TP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}