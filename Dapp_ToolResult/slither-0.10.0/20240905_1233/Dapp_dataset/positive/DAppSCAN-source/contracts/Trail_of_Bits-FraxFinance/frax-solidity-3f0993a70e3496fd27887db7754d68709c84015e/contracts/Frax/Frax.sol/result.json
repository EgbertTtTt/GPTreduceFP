{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "UniswapV2OracleLibrary",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "function": "currentBlockTimestamp",
            "impact": "High",
            "line": 1965,
            "line_end": 1967,
            "message": "UniswapV2OracleLibrary.currentBlockTimestamp() (Frax.sol#1965-1967) uses a weak PRNG: \"uint32(block.timestamp % 2 ** 32) (Frax.sol#1966)\" \n",
            "name": "weak-prng",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "FraxPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "function": "recollateralizeFRAX",
            "impact": "High",
            "line": 3032,
            "line_end": 3057,
            "message": "FraxPool.recollateralizeFRAX(uint256,uint256) (Frax.sol#3032-3057) ignores return value by collateral_token.transferFrom(msg.sender,address(this),collateral_units_precision) (Frax.sol#3054)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "FraxPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "function": "collectRedemption",
            "impact": "High",
            "line": 2993,
            "line_end": 3025,
            "message": "FraxPool.collectRedemption() (Frax.sol#2993-3025) ignores return value by collateral_token.transfer(msg.sender,CollateralAmount) (Frax.sol#3023)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "FraxPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "function": "buyBackFXS",
            "impact": "High",
            "line": 3061,
            "line_end": 3079,
            "message": "FraxPool.buyBackFXS(uint256,uint256) (Frax.sol#3061-3079) ignores return value by collateral_token.transfer(msg.sender,collateral_precision) (Frax.sol#3078)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "FraxPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "function": "mint1t1FRAX",
            "impact": "High",
            "line": 2841,
            "line_end": 2858,
            "message": "FraxPool.mint1t1FRAX(uint256,uint256) (Frax.sol#2841-2858) ignores return value by collateral_token.transferFrom(msg.sender,address(this),collateral_amount) (Frax.sol#2856)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "FraxPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "function": "mintFractionalFRAX",
            "impact": "High",
            "line": 2879,
            "line_end": 2905,
            "message": "FraxPool.mintFractionalFRAX(uint256,uint256,uint256) (Frax.sol#2879-2905) ignores return value by collateral_token.transferFrom(msg.sender,address(this),collateral_amount) (Frax.sol#2903)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "FraxPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "function": "collectRedemption",
            "impact": "High",
            "line": 2993,
            "line_end": 3025,
            "message": "FraxPool.collectRedemption() (Frax.sol#2993-3025) ignores return value by FXS.transfer(msg.sender,FXSAmount) (Frax.sol#3019)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "UniswapV2Library",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "function": "getReserves",
            "impact": "Medium",
            "line": 2019,
            "line_end": 2023,
            "message": "UniswapV2Library.getReserves(address,address,address) (Frax.sol#2019-2023) ignores return value by (reserve0,reserve1) = IUniswapV2Pair(pairFor(factory,tokenA,tokenB)).getReserves() (Frax.sol#2021)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ChainlinkETHUSDPriceConsumer",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "function": "getLatestPrice",
            "impact": "Medium",
            "line": 2223,
            "line_end": 2232,
            "message": "ChainlinkETHUSDPriceConsumer.getLatestPrice() (Frax.sol#2223-2232) ignores return value by (price) = priceFeed.latestRoundData() (Frax.sol#2224-2230)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "ERC20",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "function": "name",
            "impact": "Low",
            "line": 769,
            "message": "ERC20.constructor(string,string).name (Frax.sol#769) shadows:\n\t- ERC20.name() (Frax.sol#778-780) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "FRAXStablecoin",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "function": "eth_usd_price",
            "impact": "Low",
            "line": 2356,
            "message": "FRAXStablecoin.oracle_price(FRAXStablecoin.PriceChoice).eth_usd_price (Frax.sol#2356) shadows:\n\t- FRAXStablecoin.eth_usd_price() (Frax.sol#2381-2383) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "ERC20",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "function": "symbol",
            "impact": "Low",
            "line": 769,
            "message": "ERC20.constructor(string,string).symbol (Frax.sol#769) shadows:\n\t- ERC20.symbol() (Frax.sol#786-788) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "FRAXStablecoin",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "function": "setPriceBand",
            "impact": "Low",
            "line": 2522,
            "line_end": 2524,
            "message": "FRAXStablecoin.setPriceBand(uint256) (Frax.sol#2522-2524) should emit an event for: \n\t- price_band = _price_band (Frax.sol#2523) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "UniswapPairOracle",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "function": "setConsultLeniency",
            "impact": "Low",
            "line": 2129,
            "line_end": 2131,
            "message": "UniswapPairOracle.setConsultLeniency(uint256) (Frax.sol#2129-2131) should emit an event for: \n\t- CONSULT_LENIENCY = _consult_leniency (Frax.sol#2130) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "FraxPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "function": "toggleCollateralPrice",
            "impact": "Low",
            "line": 3103,
            "line_end": 3112,
            "message": "FraxPool.toggleCollateralPrice(uint256) (Frax.sol#3103-3112) should emit an event for: \n\t- pausedPrice = _new_price (Frax.sol#3107) \n\t- pausedPrice = 0 (Frax.sol#3109) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "UniswapPairOracle",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "function": "setPeriod",
            "impact": "Low",
            "line": 2125,
            "line_end": 2127,
            "message": "UniswapPairOracle.setPeriod(uint256) (Frax.sol#2125-2127) should emit an event for: \n\t- PERIOD = _period (Frax.sol#2126) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "FRAXStablecoin",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "function": "setPriceTarget",
            "impact": "Low",
            "line": 2496,
            "line_end": 2498,
            "message": "FRAXStablecoin.setPriceTarget(uint256) (Frax.sol#2496-2498) should emit an event for: \n\t- price_target = _new_price_target (Frax.sol#2497) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "FRAXStablecoin",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "function": "setETHUSDOracle",
            "impact": "Low",
            "line": 2508,
            "line_end": 2512,
            "message": "FRAXStablecoin.setETHUSDOracle(address) (Frax.sol#2508-2512) should emit an event for: \n\t- eth_usd_pricer_decimals = eth_usd_pricer.getDecimals() (Frax.sol#2511) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "FRAXStablecoin",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "function": "setRefreshCooldown",
            "impact": "Low",
            "line": 2500,
            "line_end": 2502,
            "message": "FRAXStablecoin.setRefreshCooldown(uint256) (Frax.sol#2500-2502) should emit an event for: \n\t- refresh_cooldown = _new_cooldown (Frax.sol#2501) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "FRAXStablecoin",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "function": "setMintingFee",
            "impact": "Low",
            "line": 2488,
            "line_end": 2490,
            "message": "FRAXStablecoin.setMintingFee(uint256) (Frax.sol#2488-2490) should emit an event for: \n\t- minting_fee = min_fee (Frax.sol#2489) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "FraxPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "function": "setPoolParameters",
            "impact": "Low",
            "line": 3115,
            "line_end": 3123,
            "message": "FraxPool.setPoolParameters(uint256,uint256,uint256,uint256,uint256,uint256,uint256) (Frax.sol#3115-3123) should emit an event for: \n\t- pool_ceiling = new_ceiling (Frax.sol#3116) \n\t- bonus_rate = new_bonus_rate (Frax.sol#3117) \n\t- redemption_delay = new_redemption_delay (Frax.sol#3118) \n\t- minting_fee = new_mint_fee (Frax.sol#3119) \n\t- redemption_fee = new_redeem_fee (Frax.sol#3120) \n\t- buyback_fee = new_buyback_fee (Frax.sol#3121) \n\t- recollat_fee = new_recollat_fee (Frax.sol#3122) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "FRAXStablecoin",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "function": "setFraxStep",
            "impact": "Low",
            "line": 2492,
            "line_end": 2494,
            "message": "FRAXStablecoin.setFraxStep(uint256) (Frax.sol#2492-2494) should emit an event for: \n\t- frax_step = _new_step (Frax.sol#2493) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "FRAXStablecoin",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "function": "setRedemptionFee",
            "impact": "Low",
            "line": 2484,
            "line_end": 2486,
            "message": "FRAXStablecoin.setRedemptionFee(uint256) (Frax.sol#2484-2486) should emit an event for: \n\t- redemption_fee = red_fee (Frax.sol#2485) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "FRAXStablecoin",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "function": "globalCollateralValue",
            "impact": "Low",
            "line": 2401,
            "line_end": 2412,
            "message": "FRAXStablecoin.globalCollateralValue() (Frax.sol#2401-2412) has external calls inside a loop: total_collateral_value_d18 = total_collateral_value_d18.add(FraxPool(frax_pools_array[i]).collatDollarBalance()) (Frax.sol#2407)\n",
            "name": "calls-loop",
            "check": "TP"
        },
        {
            "confidence": "Medium",
            "contract": "FRAXStablecoin",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "function": "refreshCollateralRatio",
            "impact": "Low",
            "line": 2418,
            "line_end": 2440,
            "message": "FRAXStablecoin.refreshCollateralRatio() (Frax.sol#2418-2440) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(block.timestamp - last_call_time >= refresh_cooldown,Must wait for the refresh cooldown since last refresh) (Frax.sol#2421)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "UniswapV2OracleLibrary",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "function": "currentCumulativePrices",
            "impact": "Low",
            "line": 1970,
            "line_end": 1988,
            "message": "UniswapV2OracleLibrary.currentCumulativePrices(address) (Frax.sol#1970-1988) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- blockTimestampLast != blockTimestamp (Frax.sol#1979)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-FraxFinance/frax-solidity-3f0993a70e3496fd27887db7754d68709c84015e/contracts/Frax/Frax.sol",
            "impact": "Informational",
            "line": 2557,
            "message": "FraxPoolLibrary.PRICE_PRECISION (Frax.sol#2557) is never used in FraxPoolLibrary (Frax.sol#2553-2666)\n",
            "name": "unused-state",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}