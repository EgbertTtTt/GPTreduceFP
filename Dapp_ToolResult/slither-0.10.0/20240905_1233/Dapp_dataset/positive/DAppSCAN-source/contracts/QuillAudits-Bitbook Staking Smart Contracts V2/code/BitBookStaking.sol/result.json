{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "Reserve",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bitbook Staking Smart Contracts V2/code/BitBookStaking.sol",
            "function": "safeTransfer",
            "impact": "High",
            "line": 762,
            "line_end": 773,
            "message": "Reserve.safeTransfer(IBEP20,address,uint256) (BitBookStaking.sol#762-773) ignores return value by rewardToken.transfer(_to,tokenBal) (BitBookStaking.sol#769)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Reserve",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bitbook Staking Smart Contracts V2/code/BitBookStaking.sol",
            "function": "safeTransfer",
            "impact": "High",
            "line": 762,
            "line_end": 773,
            "message": "Reserve.safeTransfer(IBEP20,address,uint256) (BitBookStaking.sol#762-773) ignores return value by rewardToken.transfer(_to,_amount) (BitBookStaking.sol#771)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BitBookStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bitbook Staking Smart Contracts V2/code/BitBookStaking.sol",
            "function": "emergencyAdminWithdraw",
            "impact": "High",
            "line": 1068,
            "line_end": 1076,
            "message": "BitBookStaking.emergencyAdminWithdraw(uint256) (BitBookStaking.sol#1068-1076) ignores return value by pool.rewardToken.transfer(owner(),balanceToWithdraw) (BitBookStaking.sol#1072)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BitBookStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bitbook Staking Smart Contracts V2/code/BitBookStaking.sol",
            "function": "deposit",
            "impact": "Medium",
            "line": 975,
            "line_end": 1001,
            "message": "Reentrancy in BitBookStaking.deposit(uint256,uint256) (BitBookStaking.sol#975-1001):\n\tExternal calls:\n\t- payOrLockupPendingToken(_pid) (BitBookStaking.sol#981)\n\t\t- rewardReserve.safeTransfer(pool.rewardToken,msg.sender,totalRewards) (BitBookStaking.sol#1039)\n\t- pool.stakedToken.safeTransferFrom(address(msg.sender),address(this),_amount) (BitBookStaking.sol#986)\n\t- pool.stakedToken.safeTransfer(owner(),depositFee) (BitBookStaking.sol#991)\n\tState variables written after the call(s):\n\t- pool.stakedAmount = pool.stakedAmount.add(delta).sub(depositFee) (BitBookStaking.sol#993)\n\tBitBookStaking.poolInfo (BitBookStaking.sol#814) can be used in cross function reentrancies:\n\t- BitBookStaking.add(uint256,IBEP20,IBEP20,uint16,uint256,uint256,BitBookStaking.WithdrawFeeInterval[]) (BitBookStaking.sol#861-898)\n\t- BitBookStaking.deposit(uint256,uint256) (BitBookStaking.sol#975-1001)\n\t- BitBookStaking.depositRewardToken(uint256,uint256) (BitBookStaking.sol#965-973)\n\t- BitBookStaking.emergencyAdminWithdraw(uint256) (BitBookStaking.sol#1068-1076)\n\t- BitBookStaking.emergencyWithdraw(uint256) (BitBookStaking.sol#1058-1066)\n\t- BitBookStaking.initialize() (BitBookStaking.sol#842-851)\n\t- BitBookStaking.payOrLockupPendingToken(uint256) (BitBookStaking.sol#1023-1046)\n\t- BitBookStaking.pendingToken(uint256,address) (BitBookStaking.sol#922-936)\n\t- BitBookStaking.poolInfo (BitBookStaking.sol#814)\n\t- BitBookStaking.poolLength() (BitBookStaking.sol#857-859)\n\t- BitBookStaking.set(uint256,uint256,uint16,uint256,uint256) (BitBookStaking.sol#900-916)\n\t- BitBookStaking.setLockDeposit(uint256,bool) (BitBookStaking.sol#1083-1086)\n\t- BitBookStaking.updatePool(uint256) (BitBookStaking.sol#943-963)\n\t- BitBookStaking.withdraw(uint256,uint256) (BitBookStaking.sol#1003-1021)\n\t- user.amount = user.amount.add(delta).sub(depositFee) (BitBookStaking.sol#992)\n\tBitBookStaking.userInfo (BitBookStaking.sol#815) can be used in cross function reentrancies:\n\t- BitBookStaking.canHarvest(uint256,address) (BitBookStaking.sol#938-941)\n\t- BitBookStaking.deposit(uint256,uint256) (BitBookStaking.sol#975-1001)\n\t- BitBookStaking.emergencyWithdraw(uint256) (BitBookStaking.sol#1058-1066)\n\t- BitBookStaking.payOrLockupPendingToken(uint256) (BitBookStaking.sol#1023-1046)\n\t- BitBookStaking.pendingToken(uint256,address) (BitBookStaking.sol#922-936)\n\t- BitBookStaking.userInfo (BitBookStaking.sol#815)\n\t- BitBookStaking.withdraw(uint256,uint256) (BitBookStaking.sol#1003-1021)\n\t- user.rewardDebt = user.amount.mul(pool.accTokenPerShare).div(1e12) (BitBookStaking.sol#999)\n\tBitBookStaking.userInfo (BitBookStaking.sol#815) can be used in cross function reentrancies:\n\t- BitBookStaking.canHarvest(uint256,address) (BitBookStaking.sol#938-941)\n\t- BitBookStaking.deposit(uint256,uint256) (BitBookStaking.sol#975-1001)\n\t- BitBookStaking.emergencyWithdraw(uint256) (BitBookStaking.sol#1058-1066)\n\t- BitBookStaking.payOrLockupPendingToken(uint256) (BitBookStaking.sol#1023-1046)\n\t- BitBookStaking.pendingToken(uint256,address) (BitBookStaking.sol#922-936)\n\t- BitBookStaking.userInfo (BitBookStaking.sol#815)\n\t- BitBookStaking.withdraw(uint256,uint256) (BitBookStaking.sol#1003-1021)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BitBookStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bitbook Staking Smart Contracts V2/code/BitBookStaking.sol",
            "function": "emergencyWithdraw",
            "impact": "Medium",
            "line": 1058,
            "line_end": 1066,
            "message": "Reentrancy in BitBookStaking.emergencyWithdraw(uint256) (BitBookStaking.sol#1058-1066):\n\tExternal calls:\n\t- pool.stakedToken.safeTransfer(address(msg.sender),amount) (BitBookStaking.sol#1063)\n\tState variables written after the call(s):\n\t- delete userInfo[_pid][msg.sender] (BitBookStaking.sol#1065)\n\tBitBookStaking.userInfo (BitBookStaking.sol#815) can be used in cross function reentrancies:\n\t- BitBookStaking.canHarvest(uint256,address) (BitBookStaking.sol#938-941)\n\t- BitBookStaking.deposit(uint256,uint256) (BitBookStaking.sol#975-1001)\n\t- BitBookStaking.emergencyWithdraw(uint256) (BitBookStaking.sol#1058-1066)\n\t- BitBookStaking.payOrLockupPendingToken(uint256) (BitBookStaking.sol#1023-1046)\n\t- BitBookStaking.pendingToken(uint256,address) (BitBookStaking.sol#922-936)\n\t- BitBookStaking.userInfo (BitBookStaking.sol#815)\n\t- BitBookStaking.withdraw(uint256,uint256) (BitBookStaking.sol#1003-1021)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BitBookStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bitbook Staking Smart Contracts V2/code/BitBookStaking.sol",
            "function": "emergencyAdminWithdraw",
            "impact": "Medium",
            "line": 1068,
            "line_end": 1076,
            "message": "Reentrancy in BitBookStaking.emergencyAdminWithdraw(uint256) (BitBookStaking.sol#1068-1076):\n\tExternal calls:\n\t- pool.rewardToken.transfer(owner(),balanceToWithdraw) (BitBookStaking.sol#1072)\n\t- rewardReserve.safeTransfer(pool.rewardToken,owner(),pool.rewardToken.balanceOf(address(rewardReserve))) (BitBookStaking.sol#1073)\n\tState variables written after the call(s):\n\t- delete poolInfo[_pid] (BitBookStaking.sol#1075)\n\tBitBookStaking.poolInfo (BitBookStaking.sol#814) can be used in cross function reentrancies:\n\t- BitBookStaking.add(uint256,IBEP20,IBEP20,uint16,uint256,uint256,BitBookStaking.WithdrawFeeInterval[]) (BitBookStaking.sol#861-898)\n\t- BitBookStaking.deposit(uint256,uint256) (BitBookStaking.sol#975-1001)\n\t- BitBookStaking.depositRewardToken(uint256,uint256) (BitBookStaking.sol#965-973)\n\t- BitBookStaking.emergencyAdminWithdraw(uint256) (BitBookStaking.sol#1068-1076)\n\t- BitBookStaking.emergencyWithdraw(uint256) (BitBookStaking.sol#1058-1066)\n\t- BitBookStaking.initialize() (BitBookStaking.sol#842-851)\n\t- BitBookStaking.payOrLockupPendingToken(uint256) (BitBookStaking.sol#1023-1046)\n\t- BitBookStaking.pendingToken(uint256,address) (BitBookStaking.sol#922-936)\n\t- BitBookStaking.poolInfo (BitBookStaking.sol#814)\n\t- BitBookStaking.poolLength() (BitBookStaking.sol#857-859)\n\t- BitBookStaking.set(uint256,uint256,uint16,uint256,uint256) (BitBookStaking.sol#900-916)\n\t- BitBookStaking.setLockDeposit(uint256,bool) (BitBookStaking.sol#1083-1086)\n\t- BitBookStaking.updatePool(uint256) (BitBookStaking.sol#943-963)\n\t- BitBookStaking.withdraw(uint256,uint256) (BitBookStaking.sol#1003-1021)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BitBookStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bitbook Staking Smart Contracts V2/code/BitBookStaking.sol",
            "function": "depositRewardToken",
            "impact": "Medium",
            "line": 965,
            "line_end": 973,
            "message": "Reentrancy in BitBookStaking.depositRewardToken(uint256,uint256) (BitBookStaking.sol#965-973):\n\tExternal calls:\n\t- _poolInfo.rewardToken.safeTransferFrom(msg.sender,address(rewardReserve),amount) (BitBookStaking.sol#968)\n\tState variables written after the call(s):\n\t- _poolInfo.rewardSupply += finalBalance.sub(initialBalance) (BitBookStaking.sol#970)\n\tBitBookStaking.poolInfo (BitBookStaking.sol#814) can be used in cross function reentrancies:\n\t- BitBookStaking.add(uint256,IBEP20,IBEP20,uint16,uint256,uint256,BitBookStaking.WithdrawFeeInterval[]) (BitBookStaking.sol#861-898)\n\t- BitBookStaking.deposit(uint256,uint256) (BitBookStaking.sol#975-1001)\n\t- BitBookStaking.depositRewardToken(uint256,uint256) (BitBookStaking.sol#965-973)\n\t- BitBookStaking.emergencyAdminWithdraw(uint256) (BitBookStaking.sol#1068-1076)\n\t- BitBookStaking.emergencyWithdraw(uint256) (BitBookStaking.sol#1058-1066)\n\t- BitBookStaking.initialize() (BitBookStaking.sol#842-851)\n\t- BitBookStaking.payOrLockupPendingToken(uint256) (BitBookStaking.sol#1023-1046)\n\t- BitBookStaking.pendingToken(uint256,address) (BitBookStaking.sol#922-936)\n\t- BitBookStaking.poolInfo (BitBookStaking.sol#814)\n\t- BitBookStaking.poolLength() (BitBookStaking.sol#857-859)\n\t- BitBookStaking.set(uint256,uint256,uint16,uint256,uint256) (BitBookStaking.sol#900-916)\n\t- BitBookStaking.setLockDeposit(uint256,bool) (BitBookStaking.sol#1083-1086)\n\t- BitBookStaking.updatePool(uint256) (BitBookStaking.sol#943-963)\n\t- BitBookStaking.withdraw(uint256,uint256) (BitBookStaking.sol#1003-1021)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BitBookStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bitbook Staking Smart Contracts V2/code/BitBookStaking.sol",
            "function": "deposit",
            "impact": "Medium",
            "line": 975,
            "line_end": 1001,
            "message": "Reentrancy in BitBookStaking.deposit(uint256,uint256) (BitBookStaking.sol#975-1001):\n\tExternal calls:\n\t- payOrLockupPendingToken(_pid) (BitBookStaking.sol#981)\n\t\t- rewardReserve.safeTransfer(pool.rewardToken,msg.sender,totalRewards) (BitBookStaking.sol#1039)\n\t- pool.stakedToken.safeTransferFrom(address(msg.sender),address(this),_amount) (BitBookStaking.sol#986)\n\tState variables written after the call(s):\n\t- pool.stakedAmount = pool.stakedAmount.add(delta) (BitBookStaking.sol#996)\n\tBitBookStaking.poolInfo (BitBookStaking.sol#814) can be used in cross function reentrancies:\n\t- BitBookStaking.add(uint256,IBEP20,IBEP20,uint16,uint256,uint256,BitBookStaking.WithdrawFeeInterval[]) (BitBookStaking.sol#861-898)\n\t- BitBookStaking.deposit(uint256,uint256) (BitBookStaking.sol#975-1001)\n\t- BitBookStaking.depositRewardToken(uint256,uint256) (BitBookStaking.sol#965-973)\n\t- BitBookStaking.emergencyAdminWithdraw(uint256) (BitBookStaking.sol#1068-1076)\n\t- BitBookStaking.emergencyWithdraw(uint256) (BitBookStaking.sol#1058-1066)\n\t- BitBookStaking.initialize() (BitBookStaking.sol#842-851)\n\t- BitBookStaking.payOrLockupPendingToken(uint256) (BitBookStaking.sol#1023-1046)\n\t- BitBookStaking.pendingToken(uint256,address) (BitBookStaking.sol#922-936)\n\t- BitBookStaking.poolInfo (BitBookStaking.sol#814)\n\t- BitBookStaking.poolLength() (BitBookStaking.sol#857-859)\n\t- BitBookStaking.set(uint256,uint256,uint16,uint256,uint256) (BitBookStaking.sol#900-916)\n\t- BitBookStaking.setLockDeposit(uint256,bool) (BitBookStaking.sol#1083-1086)\n\t- BitBookStaking.updatePool(uint256) (BitBookStaking.sol#943-963)\n\t- BitBookStaking.withdraw(uint256,uint256) (BitBookStaking.sol#1003-1021)\n\t- user.amount = user.amount.add(delta) (BitBookStaking.sol#995)\n\tBitBookStaking.userInfo (BitBookStaking.sol#815) can be used in cross function reentrancies:\n\t- BitBookStaking.canHarvest(uint256,address) (BitBookStaking.sol#938-941)\n\t- BitBookStaking.deposit(uint256,uint256) (BitBookStaking.sol#975-1001)\n\t- BitBookStaking.emergencyWithdraw(uint256) (BitBookStaking.sol#1058-1066)\n\t- BitBookStaking.payOrLockupPendingToken(uint256) (BitBookStaking.sol#1023-1046)\n\t- BitBookStaking.pendingToken(uint256,address) (BitBookStaking.sol#922-936)\n\t- BitBookStaking.userInfo (BitBookStaking.sol#815)\n\t- BitBookStaking.withdraw(uint256,uint256) (BitBookStaking.sol#1003-1021)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BitBookStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bitbook Staking Smart Contracts V2/code/BitBookStaking.sol",
            "function": "deposit",
            "impact": "Medium",
            "line": 975,
            "line_end": 1001,
            "message": "Reentrancy in BitBookStaking.deposit(uint256,uint256) (BitBookStaking.sol#975-1001):\n\tExternal calls:\n\t- payOrLockupPendingToken(_pid) (BitBookStaking.sol#981)\n\t\t- rewardReserve.safeTransfer(pool.rewardToken,msg.sender,totalRewards) (BitBookStaking.sol#1039)\n\tState variables written after the call(s):\n\t- user.depositTimestamp = block.timestamp (BitBookStaking.sol#984)\n\tBitBookStaking.userInfo (BitBookStaking.sol#815) can be used in cross function reentrancies:\n\t- BitBookStaking.canHarvest(uint256,address) (BitBookStaking.sol#938-941)\n\t- BitBookStaking.deposit(uint256,uint256) (BitBookStaking.sol#975-1001)\n\t- BitBookStaking.emergencyWithdraw(uint256) (BitBookStaking.sol#1058-1066)\n\t- BitBookStaking.payOrLockupPendingToken(uint256) (BitBookStaking.sol#1023-1046)\n\t- BitBookStaking.pendingToken(uint256,address) (BitBookStaking.sol#922-936)\n\t- BitBookStaking.userInfo (BitBookStaking.sol#815)\n\t- BitBookStaking.withdraw(uint256,uint256) (BitBookStaking.sol#1003-1021)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BitBookStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bitbook Staking Smart Contracts V2/code/BitBookStaking.sol",
            "function": "withdraw",
            "impact": "Medium",
            "line": 1003,
            "line_end": 1021,
            "message": "Reentrancy in BitBookStaking.withdraw(uint256,uint256) (BitBookStaking.sol#1003-1021):\n\tExternal calls:\n\t- payOrLockupPendingToken(_pid) (BitBookStaking.sol#1008)\n\t\t- rewardReserve.safeTransfer(pool.rewardToken,msg.sender,totalRewards) (BitBookStaking.sol#1039)\n\t- pool.stakedToken.safeTransfer(owner(),feeAmount) (BitBookStaking.sol#1016)\n\t- pool.stakedToken.safeTransfer(address(msg.sender),amountToTransfer) (BitBookStaking.sol#1017)\n\tState variables written after the call(s):\n\t- user.rewardDebt = user.amount.mul(pool.accTokenPerShare).div(1e12) (BitBookStaking.sol#1019)\n\tBitBookStaking.userInfo (BitBookStaking.sol#815) can be used in cross function reentrancies:\n\t- BitBookStaking.canHarvest(uint256,address) (BitBookStaking.sol#938-941)\n\t- BitBookStaking.deposit(uint256,uint256) (BitBookStaking.sol#975-1001)\n\t- BitBookStaking.emergencyWithdraw(uint256) (BitBookStaking.sol#1058-1066)\n\t- BitBookStaking.payOrLockupPendingToken(uint256) (BitBookStaking.sol#1023-1046)\n\t- BitBookStaking.pendingToken(uint256,address) (BitBookStaking.sol#922-936)\n\t- BitBookStaking.userInfo (BitBookStaking.sol#815)\n\t- BitBookStaking.withdraw(uint256,uint256) (BitBookStaking.sol#1003-1021)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BitBookStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bitbook Staking Smart Contracts V2/code/BitBookStaking.sol",
            "function": "withdraw",
            "impact": "Medium",
            "line": 1003,
            "line_end": 1021,
            "message": "Reentrancy in BitBookStaking.withdraw(uint256,uint256) (BitBookStaking.sol#1003-1021):\n\tExternal calls:\n\t- payOrLockupPendingToken(_pid) (BitBookStaking.sol#1008)\n\t\t- rewardReserve.safeTransfer(pool.rewardToken,msg.sender,totalRewards) (BitBookStaking.sol#1039)\n\tState variables written after the call(s):\n\t- pool.stakedAmount = pool.stakedAmount.sub(_amount) (BitBookStaking.sol#1015)\n\tBitBookStaking.poolInfo (BitBookStaking.sol#814) can be used in cross function reentrancies:\n\t- BitBookStaking.add(uint256,IBEP20,IBEP20,uint16,uint256,uint256,BitBookStaking.WithdrawFeeInterval[]) (BitBookStaking.sol#861-898)\n\t- BitBookStaking.deposit(uint256,uint256) (BitBookStaking.sol#975-1001)\n\t- BitBookStaking.depositRewardToken(uint256,uint256) (BitBookStaking.sol#965-973)\n\t- BitBookStaking.emergencyAdminWithdraw(uint256) (BitBookStaking.sol#1068-1076)\n\t- BitBookStaking.emergencyWithdraw(uint256) (BitBookStaking.sol#1058-1066)\n\t- BitBookStaking.initialize() (BitBookStaking.sol#842-851)\n\t- BitBookStaking.payOrLockupPendingToken(uint256) (BitBookStaking.sol#1023-1046)\n\t- BitBookStaking.pendingToken(uint256,address) (BitBookStaking.sol#922-936)\n\t- BitBookStaking.poolInfo (BitBookStaking.sol#814)\n\t- BitBookStaking.poolLength() (BitBookStaking.sol#857-859)\n\t- BitBookStaking.set(uint256,uint256,uint16,uint256,uint256) (BitBookStaking.sol#900-916)\n\t- BitBookStaking.setLockDeposit(uint256,bool) (BitBookStaking.sol#1083-1086)\n\t- BitBookStaking.updatePool(uint256) (BitBookStaking.sol#943-963)\n\t- BitBookStaking.withdraw(uint256,uint256) (BitBookStaking.sol#1003-1021)\n\t- user.amount = user.amount.sub(_amount) (BitBookStaking.sol#1011)\n\tBitBookStaking.userInfo (BitBookStaking.sol#815) can be used in cross function reentrancies:\n\t- BitBookStaking.canHarvest(uint256,address) (BitBookStaking.sol#938-941)\n\t- BitBookStaking.deposit(uint256,uint256) (BitBookStaking.sol#975-1001)\n\t- BitBookStaking.emergencyWithdraw(uint256) (BitBookStaking.sol#1058-1066)\n\t- BitBookStaking.payOrLockupPendingToken(uint256) (BitBookStaking.sol#1023-1046)\n\t- BitBookStaking.pendingToken(uint256,address) (BitBookStaking.sol#922-936)\n\t- BitBookStaking.userInfo (BitBookStaking.sol#815)\n\t- BitBookStaking.withdraw(uint256,uint256) (BitBookStaking.sol#1003-1021)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BitBookStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bitbook Staking Smart Contracts V2/code/BitBookStaking.sol",
            "function": "payOrLockupPendingToken",
            "impact": "Low",
            "line": 1023,
            "line_end": 1046,
            "message": "Reentrancy in BitBookStaking.payOrLockupPendingToken(uint256) (BitBookStaking.sol#1023-1046):\n\tExternal calls:\n\t- rewardReserve.safeTransfer(pool.rewardToken,msg.sender,totalRewards) (BitBookStaking.sol#1039)\n\tState variables written after the call(s):\n\t- rewardDistributions[_pid] = rewardDistributions[_pid].add(totalRewards) (BitBookStaking.sol#1040)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BitBookStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bitbook Staking Smart Contracts V2/code/BitBookStaking.sol",
            "function": "depositRewardToken",
            "impact": "Low",
            "line": 965,
            "line_end": 973,
            "message": "Reentrancy in BitBookStaking.depositRewardToken(uint256,uint256) (BitBookStaking.sol#965-973):\n\tExternal calls:\n\t- _poolInfo.rewardToken.safeTransferFrom(msg.sender,address(rewardReserve),amount) (BitBookStaking.sol#968)\n\tEvent emitted after the call(s):\n\t- RewardTokenDeposited(msg.sender,poolId,amount) (BitBookStaking.sol#972)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BitBookStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bitbook Staking Smart Contracts V2/code/BitBookStaking.sol",
            "function": "emergencyWithdraw",
            "impact": "Low",
            "line": 1058,
            "line_end": 1066,
            "message": "Reentrancy in BitBookStaking.emergencyWithdraw(uint256) (BitBookStaking.sol#1058-1066):\n\tExternal calls:\n\t- pool.stakedToken.safeTransfer(address(msg.sender),amount) (BitBookStaking.sol#1063)\n\tEvent emitted after the call(s):\n\t- EmergencyWithdraw(msg.sender,_pid,amount) (BitBookStaking.sol#1064)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BitBookStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bitbook Staking Smart Contracts V2/code/BitBookStaking.sol",
            "function": "withdraw",
            "impact": "Low",
            "line": 1003,
            "line_end": 1021,
            "message": "Reentrancy in BitBookStaking.withdraw(uint256,uint256) (BitBookStaking.sol#1003-1021):\n\tExternal calls:\n\t- payOrLockupPendingToken(_pid) (BitBookStaking.sol#1008)\n\t\t- rewardReserve.safeTransfer(pool.rewardToken,msg.sender,totalRewards) (BitBookStaking.sol#1039)\n\t- pool.stakedToken.safeTransfer(owner(),feeAmount) (BitBookStaking.sol#1016)\n\t- pool.stakedToken.safeTransfer(address(msg.sender),amountToTransfer) (BitBookStaking.sol#1017)\n\tEvent emitted after the call(s):\n\t- Withdraw(msg.sender,_pid,amountToTransfer) (BitBookStaking.sol#1020)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BitBookStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bitbook Staking Smart Contracts V2/code/BitBookStaking.sol",
            "function": "deposit",
            "impact": "Low",
            "line": 975,
            "line_end": 1001,
            "message": "Reentrancy in BitBookStaking.deposit(uint256,uint256) (BitBookStaking.sol#975-1001):\n\tExternal calls:\n\t- payOrLockupPendingToken(_pid) (BitBookStaking.sol#981)\n\t\t- rewardReserve.safeTransfer(pool.rewardToken,msg.sender,totalRewards) (BitBookStaking.sol#1039)\n\t- pool.stakedToken.safeTransferFrom(address(msg.sender),address(this),_amount) (BitBookStaking.sol#986)\n\t- pool.stakedToken.safeTransfer(owner(),depositFee) (BitBookStaking.sol#991)\n\tEvent emitted after the call(s):\n\t- Deposit(msg.sender,_pid,_amount) (BitBookStaking.sol#1000)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BitBookStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bitbook Staking Smart Contracts V2/code/BitBookStaking.sol",
            "function": "emergencyAdminWithdraw",
            "impact": "Low",
            "line": 1068,
            "line_end": 1076,
            "message": "Reentrancy in BitBookStaking.emergencyAdminWithdraw(uint256) (BitBookStaking.sol#1068-1076):\n\tExternal calls:\n\t- pool.rewardToken.transfer(owner(),balanceToWithdraw) (BitBookStaking.sol#1072)\n\t- rewardReserve.safeTransfer(pool.rewardToken,owner(),pool.rewardToken.balanceOf(address(rewardReserve))) (BitBookStaking.sol#1073)\n\tEvent emitted after the call(s):\n\t- AdminEmergencyWithdraw(_pid,pool.rewardToken.balanceOf(address(this)),pool.accTokenPerShare,pool.tokenPerBlock,pool.lastRewardBlock) (BitBookStaking.sol#1074)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BitBookStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bitbook Staking Smart Contracts V2/code/BitBookStaking.sol",
            "function": "canHarvest",
            "impact": "Low",
            "line": 938,
            "line_end": 941,
            "message": "BitBookStaking.canHarvest(uint256,address) (BitBookStaking.sol#938-941) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- user.amount != 0 && block.timestamp >= user.nextHarvestUntil (BitBookStaking.sol#940)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BitBookStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bitbook Staking Smart Contracts V2/code/BitBookStaking.sol",
            "function": "getWithdrawFee",
            "impact": "Low",
            "line": 1048,
            "line_end": 1056,
            "message": "BitBookStaking.getWithdrawFee(uint256,uint256) (BitBookStaking.sol#1048-1056) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- depositTime <= _withdrawFee[i].day (BitBookStaking.sol#1053)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bitbook Staking Smart Contracts V2/code/BitBookStaking.sol",
            "impact": "Informational",
            "line": 3,
            "message": "Different versions of Solidity are used:\n\t- Version used: ['>=0.6.0<0.8.0', '>=0.6.2<0.8.0', '^0.6.0']\n\t- >=0.6.0<0.8.0 (BitBookStaking.sol#3)\n\t- >=0.6.0<0.8.0 (BitBookStaking.sol#6)\n\t- >=0.6.0<0.8.0 (BitBookStaking.sol#7)\n\t- >=0.6.0<0.8.0 (BitBookStaking.sol#8)\n\t- >=0.6.2<0.8.0 (BitBookStaking.sol#4)\n\t- ABIEncoderV2 (BitBookStaking.sol#10)\n\t- ^0.6.0 (BitBookStaking.sol#1)\n\t- ^0.6.0 (BitBookStaking.sol#2)\n\t- ^0.6.0 (BitBookStaking.sol#5)\n\t- ^0.6.0 (BitBookStaking.sol#9)\n",
            "name": "pragma",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}