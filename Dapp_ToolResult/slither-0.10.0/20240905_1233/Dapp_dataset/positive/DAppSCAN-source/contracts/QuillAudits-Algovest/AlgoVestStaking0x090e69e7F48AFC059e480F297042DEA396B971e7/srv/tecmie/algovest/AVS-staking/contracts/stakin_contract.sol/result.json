{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "AlgoVestStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/srv/tecmie/algovest/AVS-staking/contracts/stakin_contract.sol",
            "function": "stakeEnd",
            "impact": "High",
            "line": 523,
            "line_end": 628,
            "message": "AlgoVestStaking.stakeEnd(uint256,uint256) (stakin_contract.sol#523-628) ignores return value by avsAddress.transfer(sender,st.stakedAVS.add((avsTokensToReturn_scope_0.sub(st.stakedAVS)).mul(98).div(100))) (stakin_contract.sol#581-586)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AlgoVestStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/srv/tecmie/algovest/AVS-staking/contracts/stakin_contract.sol",
            "function": "stakeEnd",
            "impact": "High",
            "line": 523,
            "line_end": 628,
            "message": "AlgoVestStaking.stakeEnd(uint256,uint256) (stakin_contract.sol#523-628) ignores return value by avsAddress.transfer(sender,avsTokensToReturn) (stakin_contract.sol#549)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AlgoVestStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/srv/tecmie/algovest/AVS-staking/contracts/stakin_contract.sol",
            "function": "stakeEnd",
            "impact": "Medium",
            "line": 523,
            "line_end": 628,
            "message": "Reentrancy in AlgoVestStaking.stakeEnd(uint256,uint256) (stakin_contract.sol#523-628):\n\tExternal calls:\n\t- avsAddress.transfer(sender,st.stakedAVS.add((avsTokensToReturn_scope_0.sub(st.stakedAVS)).mul(98).div(100))) (stakin_contract.sol#581-586)\n\tState variables written after the call(s):\n\t- _removeStake(stakeIndex,stakeId) (stakin_contract.sol#600)\n\t\t- stakeList[sender][stakeIndex] = stakeList[sender][stakeListLength - 1] (stakin_contract.sol#782-784)\n\t\t- stakeList[sender].pop() (stakin_contract.sol#785)\n\tAlgoVestStaking.stakeList (stakin_contract.sol#411) can be used in cross function reentrancies:\n\t- AlgoVestStaking._removeStake(uint256,uint256) (stakin_contract.sol#772-786)\n\t- AlgoVestStaking.getEndDayOfStakeInUnixTime(address,uint256,uint256) (stakin_contract.sol#659-679)\n\t- AlgoVestStaking.getStakeDivsNow(address,uint256,uint256) (stakin_contract.sol#681-704)\n\t- AlgoVestStaking.stakeEnd(uint256,uint256) (stakin_contract.sol#523-628)\n\t- AlgoVestStaking.stakeList (stakin_contract.sol#411)\n\t- AlgoVestStaking.stakeListCount(address) (stakin_contract.sol#630-632)\n\t- AlgoVestStaking.stakeStart(uint256,uint256) (stakin_contract.sol#472-521)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AlgoVestStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/srv/tecmie/algovest/AVS-staking/contracts/stakin_contract.sol",
            "function": "AVSOwnerWithdraw",
            "impact": "Medium",
            "line": 452,
            "line_end": 470,
            "message": "Reentrancy in AlgoVestStaking.AVSOwnerWithdraw(uint256) (stakin_contract.sol#452-470):\n\tExternal calls:\n\t- require(bool,string)(avsAddress.transfer(sender,amount),StakingAVS: Could not send AVS tokens) (stakin_contract.sol#463-466)\n\tState variables written after the call(s):\n\t- allAVSTokens = allAVSTokens.sub(amount) (stakin_contract.sol#467)\n\tAlgoVestStaking.allAVSTokens (stakin_contract.sol#392) can be used in cross function reentrancies:\n\t- AlgoVestStaking.AVSOwnerWithdraw(uint256) (stakin_contract.sol#452-470)\n\t- AlgoVestStaking.AVSTokenDonation(uint256) (stakin_contract.sol#441-450)\n\t- AlgoVestStaking.allAVSTokens (stakin_contract.sol#392)\n\t- AlgoVestStaking.stakeEnd(uint256,uint256) (stakin_contract.sol#523-628)\n\t- unfreezedAVSTokens = unfreezedAVSTokens.sub(amount) (stakin_contract.sol#468)\n\tAlgoVestStaking.unfreezedAVSTokens (stakin_contract.sol#395) can be used in cross function reentrancies:\n\t- AlgoVestStaking.AVSOwnerWithdraw(uint256) (stakin_contract.sol#452-470)\n\t- AlgoVestStaking.AVSTokenDonation(uint256) (stakin_contract.sol#441-450)\n\t- AlgoVestStaking.stakeEnd(uint256,uint256) (stakin_contract.sol#523-628)\n\t- AlgoVestStaking.stakeStart(uint256,uint256) (stakin_contract.sol#472-521)\n\t- AlgoVestStaking.unfreezedAVSTokens (stakin_contract.sol#395)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AlgoVestStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/srv/tecmie/algovest/AVS-staking/contracts/stakin_contract.sol",
            "function": "stakeEnd",
            "impact": "Medium",
            "line": 523,
            "line_end": 628,
            "message": "Reentrancy in AlgoVestStaking.stakeEnd(uint256,uint256) (stakin_contract.sol#523-628):\n\tExternal calls:\n\t- avsAddress.transfer(sender,avsTokensToReturn) (stakin_contract.sol#549)\n\tState variables written after the call(s):\n\t- _removeStake(stakeIndex,stakeId) (stakin_contract.sol#562)\n\t\t- stakeList[sender][stakeIndex] = stakeList[sender][stakeListLength - 1] (stakin_contract.sol#782-784)\n\t\t- stakeList[sender].pop() (stakin_contract.sol#785)\n\tAlgoVestStaking.stakeList (stakin_contract.sol#411) can be used in cross function reentrancies:\n\t- AlgoVestStaking._removeStake(uint256,uint256) (stakin_contract.sol#772-786)\n\t- AlgoVestStaking.getEndDayOfStakeInUnixTime(address,uint256,uint256) (stakin_contract.sol#659-679)\n\t- AlgoVestStaking.getStakeDivsNow(address,uint256,uint256) (stakin_contract.sol#681-704)\n\t- AlgoVestStaking.stakeEnd(uint256,uint256) (stakin_contract.sol#523-628)\n\t- AlgoVestStaking.stakeList (stakin_contract.sol#411)\n\t- AlgoVestStaking.stakeListCount(address) (stakin_contract.sol#630-632)\n\t- AlgoVestStaking.stakeStart(uint256,uint256) (stakin_contract.sol#472-521)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AlgoVestStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/srv/tecmie/algovest/AVS-staking/contracts/stakin_contract.sol",
            "function": "stakeStart",
            "impact": "Low",
            "line": 472,
            "line_end": 521,
            "message": "Reentrancy in AlgoVestStaking.stakeStart(uint256,uint256) (stakin_contract.sol#472-521):\n\tExternal calls:\n\t- require(bool,string)(avsAddress.transferFrom(sender,address(this),amount),StakingAVS: AVS token transfer failed) (stakin_contract.sol#483-486)\n\tState variables written after the call(s):\n\t- allStakes.push(st) (stakin_contract.sol#508)\n\t- freezedAVSTokens = freezedAVSTokens.add(avsEarnings - amount) (stakin_contract.sol#496)\n\t- st = StakeInfo(++ stakeIdLast,currDay,numDaysStake,amount,avsEarnings - amount) (stakin_contract.sol#499-506)\n\t- stakeList[sender].push(st) (stakin_contract.sol#507)\n\t- totalStakedAVS = totalStakedAVS.add(amount) (stakin_contract.sol#520)\n\t- ++ totalStakers (stakin_contract.sol#518)\n\t- unfreezedAVSTokens = unfreezedAVSTokens.sub(avsEarnings - amount) (stakin_contract.sol#495)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AlgoVestStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/srv/tecmie/algovest/AVS-staking/contracts/stakin_contract.sol",
            "function": "AVSTokenDonation",
            "impact": "Low",
            "line": 441,
            "line_end": 450,
            "message": "Reentrancy in AlgoVestStaking.AVSTokenDonation(uint256) (stakin_contract.sol#441-450):\n\tExternal calls:\n\t- require(bool,string)(avsAddress.transferFrom(sender,address(this),amount),StakingAVS: Could not get AVS tokens) (stakin_contract.sol#443-446)\n\tState variables written after the call(s):\n\t- allAVSTokens = allAVSTokens.add(amount) (stakin_contract.sol#447)\n\t- unfreezedAVSTokens = unfreezedAVSTokens.add(amount) (stakin_contract.sol#448)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AlgoVestStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/srv/tecmie/algovest/AVS-staking/contracts/stakin_contract.sol",
            "function": "stakeEnd",
            "impact": "Low",
            "line": 523,
            "line_end": 628,
            "message": "Reentrancy in AlgoVestStaking.stakeEnd(uint256,uint256) (stakin_contract.sol#523-628):\n\tExternal calls:\n\t- avsAddress.transfer(sender,avsTokensToReturn) (stakin_contract.sol#549)\n\tState variables written after the call(s):\n\t- totalStakedAVS = totalStakedAVS.sub(st.stakedAVS) (stakin_contract.sol#566)\n\t- -- totalStakers (stakin_contract.sol#564)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AlgoVestStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/srv/tecmie/algovest/AVS-staking/contracts/stakin_contract.sol",
            "function": "stakeEnd",
            "impact": "Low",
            "line": 523,
            "line_end": 628,
            "message": "Reentrancy in AlgoVestStaking.stakeEnd(uint256,uint256) (stakin_contract.sol#523-628):\n\tExternal calls:\n\t- avsAddress.transfer(sender,st.stakedAVS.add((avsTokensToReturn_scope_0.sub(st.stakedAVS)).mul(98).div(100))) (stakin_contract.sol#581-586)\n\tState variables written after the call(s):\n\t- totalStakedAVS = totalStakedAVS.sub(st.stakedAVS) (stakin_contract.sol#604)\n\t- -- totalStakers (stakin_contract.sol#602)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AlgoVestStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/srv/tecmie/algovest/AVS-staking/contracts/stakin_contract.sol",
            "function": "stakeStart",
            "impact": "Low",
            "line": 472,
            "line_end": 521,
            "message": "Reentrancy in AlgoVestStaking.stakeStart(uint256,uint256) (stakin_contract.sol#472-521):\n\tExternal calls:\n\t- require(bool,string)(avsAddress.transferFrom(sender,address(this),amount),StakingAVS: AVS token transfer failed) (stakin_contract.sol#483-486)\n\tEvent emitted after the call(s):\n\t- AVSTokenIncome(sender,amount,currDay) (stakin_contract.sol#488)\n\t- StakeStart(sender,amount,avsEarnings - amount,numDaysStake,currDay,stakeIdLast) (stakin_contract.sol#509-516)\n\t- TokenFreezed(sender,avsEarnings - amount,currDay) (stakin_contract.sol#497)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AlgoVestStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/srv/tecmie/algovest/AVS-staking/contracts/stakin_contract.sol",
            "function": "AVSTokenDonation",
            "impact": "Low",
            "line": 441,
            "line_end": 450,
            "message": "Reentrancy in AlgoVestStaking.AVSTokenDonation(uint256) (stakin_contract.sol#441-450):\n\tExternal calls:\n\t- require(bool,string)(avsAddress.transferFrom(sender,address(this),amount),StakingAVS: Could not get AVS tokens) (stakin_contract.sol#443-446)\n\tEvent emitted after the call(s):\n\t- AVSTokenIncome(sender,amount,_currentDay()) (stakin_contract.sol#449)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AlgoVestStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/srv/tecmie/algovest/AVS-staking/contracts/stakin_contract.sol",
            "function": "stakeEnd",
            "impact": "Low",
            "line": 523,
            "line_end": 628,
            "message": "Reentrancy in AlgoVestStaking.stakeEnd(uint256,uint256) (stakin_contract.sol#523-628):\n\tExternal calls:\n\t- avsAddress.transfer(sender,st.stakedAVS.add((avsTokensToReturn_scope_0.sub(st.stakedAVS)).mul(98).div(100))) (stakin_contract.sol#581-586)\n\tEvent emitted after the call(s):\n\t- AVSTokenOutcome(sender,(avsTokensToReturn_scope_0.sub(st.stakedAVS)).mul(98).div(100),currDay) (stakin_contract.sol#587-591)\n\t- StakeEnd(sender,st.stakeId,avsTokensToReturn_scope_0 - st.stakedAVS,servedNumOfDays,currDay) (stakin_contract.sol#593-599)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AlgoVestStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/srv/tecmie/algovest/AVS-staking/contracts/stakin_contract.sol",
            "function": "AVSOwnerWithdraw",
            "impact": "Low",
            "line": 452,
            "line_end": 470,
            "message": "Reentrancy in AlgoVestStaking.AVSOwnerWithdraw(uint256) (stakin_contract.sol#452-470):\n\tExternal calls:\n\t- require(bool,string)(avsAddress.transfer(sender,amount),StakingAVS: Could not send AVS tokens) (stakin_contract.sol#463-466)\n\tEvent emitted after the call(s):\n\t- AVSTokenOutcome(sender,amount,_currentDay()) (stakin_contract.sol#469)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AlgoVestStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/srv/tecmie/algovest/AVS-staking/contracts/stakin_contract.sol",
            "function": "stakeEnd",
            "impact": "Low",
            "line": 523,
            "line_end": 628,
            "message": "Reentrancy in AlgoVestStaking.stakeEnd(uint256,uint256) (stakin_contract.sol#523-628):\n\tExternal calls:\n\t- avsAddress.transfer(sender,avsTokensToReturn) (stakin_contract.sol#549)\n\tEvent emitted after the call(s):\n\t- AVSTokenOutcome(sender,avsTokensToReturn - st.stakedAVS,currDay) (stakin_contract.sol#550-554)\n\t- StakeEnd(sender,st.stakeId,avsTokensToReturn - st.stakedAVS,servedNumOfDays,currDay) (stakin_contract.sol#555-561)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AlgoVestStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/srv/tecmie/algovest/AVS-staking/contracts/stakin_contract.sol",
            "function": "_getAVSEarnings_pen",
            "impact": "Low",
            "line": 745,
            "line_end": 766,
            "message": "AlgoVestStaking._getAVSEarnings_pen(uint256,uint256) (stakin_contract.sol#745-766) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(numOfDays >= 0 && numOfDays <= maxNumDays,StakingAVS: Wrong numOfDays) (stakin_contract.sol#750-753)\n\t- i <= num_of_parts (stakin_contract.sol#757)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AlgoVestStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/srv/tecmie/algovest/AVS-staking/contracts/stakin_contract.sol",
            "function": "stakeStart",
            "impact": "Low",
            "line": 472,
            "line_end": 521,
            "message": "AlgoVestStaking.stakeStart(uint256,uint256) (stakin_contract.sol#472-521) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(unfreezedAVSTokens >= avsEarnings - amount,StakingAVS: Insufficient funds of AVS tokens to this stake) (stakin_contract.sol#491-494)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AlgoVestStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/srv/tecmie/algovest/AVS-staking/contracts/stakin_contract.sol",
            "function": "min",
            "impact": "Low",
            "line": 788,
            "line_end": 796,
            "message": "AlgoVestStaking.min(uint256,uint256) (stakin_contract.sol#788-796) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- a > b (stakin_contract.sol#790)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AlgoVestStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/srv/tecmie/algovest/AVS-staking/contracts/stakin_contract.sol",
            "function": "stakeEnd",
            "impact": "Low",
            "line": 523,
            "line_end": 628,
            "message": "AlgoVestStaking.stakeEnd(uint256,uint256) (stakin_contract.sol#523-628) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- servedNumOfDays < st.numDaysStake (stakin_contract.sol#536)\n\t- require(bool,string)(st.freezedRewardAVSTokens >= avsTokensToReturn - st.stakedAVS,StakingAVS: Internal error!) (stakin_contract.sol#539-542)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AlgoVestStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/srv/tecmie/algovest/AVS-staking/contracts/stakin_contract.sol",
            "function": "seven_days",
            "impact": "Low",
            "line": 802,
            "line_end": 836,
            "message": "AlgoVestStaking.seven_days() (stakin_contract.sol#802-836) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- allStakes.length == 0 (stakin_contract.sol#803)\n\t- day_now >= days_in_week (stakin_contract.sol#814)\n\t- stake_day >= day_week_ago && step >= 0 (stakin_contract.sol#817)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AlgoVestStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/srv/tecmie/algovest/AVS-staking/contracts/stakin_contract.sol",
            "function": "_getServedDays",
            "impact": "Low",
            "line": 706,
            "line_end": 713,
            "message": "AlgoVestStaking._getServedDays(uint256,uint256,uint256) (stakin_contract.sol#706-713) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- servedDays > numDaysStake (stakin_contract.sol#712)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AlgoVestStaking",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/srv/tecmie/algovest/AVS-staking/contracts/stakin_contract.sol",
            "function": "AVSOwnerWithdraw",
            "impact": "Low",
            "line": 452,
            "line_end": 470,
            "message": "AlgoVestStaking.AVSOwnerWithdraw(uint256) (stakin_contract.sol#452-470) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(allAVSTokens >= amount,StakingAVS: Not enough value on this contract) (stakin_contract.sol#455-458)\n\t- require(bool,string)(unfreezedAVSTokens >= amount,StakingAVS: Not enough unfreezed value on this contract) (stakin_contract.sol#459-462)\n",
            "name": "timestamp",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}