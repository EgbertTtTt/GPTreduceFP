{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "StratAlpaca",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-StakingPool, Vault, Strategy & VotingEscrow/scientix-contract-main/contracts/vaults/StratAlpaca.sol",
            "function": "_harvest",
            "impact": "Medium",
            "line": 1389,
            "line_end": 1421,
            "message": "Reentrancy in StratAlpaca._harvest(uint256) (StratAlpaca.sol#1389-1421):\n\tExternal calls:\n\t- fairLaunch.harvest(poolId) (StratAlpaca.sol#1400)\n\t- IPancakeRouter02(uniRouterAddress).swapExactTokensForTokens(earnedAlpacaBalance,earnedAlpacaBalance.mul(priceMin).div(1e18),alpacaToWantPath,address(this),now.add(600)) (StratAlpaca.sol#1408-1414)\n\t- alpacaVault.deposit(IERC20(wantToken).balanceOf(address(this))) (StratAlpaca.sol#1417)\n\t- fairLaunch.deposit(address(this),poolId,alpacaVault.balanceOf(address(this))) (StratAlpaca.sol#1418)\n\tState variables written after the call(s):\n\t- lastHarvestBlock = block.number (StratAlpaca.sol#1420)\n\tStratAlpaca.lastHarvestBlock (StratAlpaca.sol#1258) can be used in cross function reentrancies:\n\t- StratAlpaca._harvest(uint256) (StratAlpaca.sol#1389-1421)\n\t- StratAlpaca.lastHarvestBlock (StratAlpaca.sol#1258)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StratAlpaca",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-StakingPool, Vault, Strategy & VotingEscrow/scientix-contract-main/contracts/vaults/StratAlpaca.sol",
            "function": "_harvest",
            "impact": "Medium",
            "line": 1389,
            "line_end": 1421,
            "message": "StratAlpaca._harvest(uint256) (StratAlpaca.sol#1389-1421) ignores return value by IPancakeRouter02(uniRouterAddress).swapExactTokensForTokens(earnedAlpacaBalance,earnedAlpacaBalance.mul(priceMin).div(1e18),alpacaToWantPath,address(this),now.add(600)) (StratAlpaca.sol#1408-1414)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StratAlpaca",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-StakingPool, Vault, Strategy & VotingEscrow/scientix-contract-main/contracts/vaults/StratAlpaca.sol",
            "function": "_ibDeposited",
            "impact": "Medium",
            "line": 1341,
            "line_end": 1344,
            "message": "StratAlpaca._ibDeposited() (StratAlpaca.sol#1341-1344) ignores return value by (ibBal) = fairLaunch.userInfo(poolId,address(this)) (StratAlpaca.sol#1342)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StratAlpaca",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-StakingPool, Vault, Strategy & VotingEscrow/scientix-contract-main/contracts/vaults/StratAlpaca.sol",
            "function": "initialize",
            "impact": "Low",
            "line": 1282,
            "line_end": 1317,
            "message": "StratAlpaca.initialize(uint256,address,address,address,address,address,address,address) (StratAlpaca.sol#1282-1317) should emit an event for: \n\t- poolId = _poolId (StratAlpaca.sol#1296) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StratAlpaca",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-StakingPool, Vault, Strategy & VotingEscrow/scientix-contract-main/contracts/vaults/StratAlpaca.sol",
            "function": "initialize",
            "impact": "Low",
            "line": 1282,
            "line_end": 1317,
            "message": "Reentrancy in StratAlpaca.initialize(uint256,address,address,address,address,address,address,address) (StratAlpaca.sol#1282-1317):\n\tExternal calls:\n\t- wantToken.safeApprove(_alpacaVault,uint256(- 1)) (StratAlpaca.sol#1313)\n\t- alpacaVault.safeApprove(_fairLaunchAddress,uint256(- 1)) (StratAlpaca.sol#1314)\n\t- alpacaToken.safeApprove(uniRouterAddress,uint256(- 1)) (StratAlpaca.sol#1315)\n\tState variables written after the call(s):\n\t- vault = _vault (StratAlpaca.sol#1316)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StratAlpaca",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Inspex-StakingPool, Vault, Strategy & VotingEscrow/scientix-contract-main/contracts/vaults/StratAlpaca.sol",
            "function": "alpacaVaultTotalToken",
            "impact": "Low",
            "line": 1329,
            "line_end": 1339,
            "message": "StratAlpaca.alpacaVaultTotalToken() (StratAlpaca.sol#1329-1339) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- now > alpacaVault.lastAccrueTime() (StratAlpaca.sol#1332)\n",
            "name": "timestamp",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}