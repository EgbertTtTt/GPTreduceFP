'solc --version' running
'solc /sb/Falcons.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running
Compilation warnings/errors on /sb/Falcons.sol:
Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> /sb/Falcons.sol

Warning: Documentation tag on non-public state variables will be disallowed in 0.7.0. You will need to use the @dev tag explicitly.
   --> /sb/Falcons.sol:859:5:
    |
859 |     /// @notice A record of each accounts delegate
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



Falcons._writeCheckpoint(address,uint32,uint256,uint256) (../../sb/Falcons.sol#1052-1070) uses a dangerous strict equality:
	- nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber (../../sb/Falcons.sol#1062)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

BEP20.constructor(string,string).name (../../sb/Falcons.sol#595) shadows:
	- BEP20.name() (../../sb/Falcons.sol#611-613) (function)
	- IBEP20.name() (../../sb/Falcons.sol#125) (function)
BEP20.constructor(string,string).symbol (../../sb/Falcons.sol#595) shadows:
	- BEP20.symbol() (../../sb/Falcons.sol#625-627) (function)
	- IBEP20.symbol() (../../sb/Falcons.sol#120) (function)
BEP20.allowance(address,address).owner (../../sb/Falcons.sol#659) shadows:
	- Ownable.owner() (../../sb/Falcons.sol#63-65) (function)
BEP20._approve(address,address,uint256).owner (../../sb/Falcons.sol#818) shadows:
	- Ownable.owner() (../../sb/Falcons.sol#63-65) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

Falcons.delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32) (../../sb/Falcons.sol#918-959) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(now <= expiry,FLNS::delegateBySig: signature expired) (../../sb/Falcons.sol#957)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Address.isContract(address) (../../sb/Falcons.sol#410-421) uses assembly
	- INLINE ASM (../../sb/Falcons.sol#417-419)
Address._functionCallWithValue(address,bytes,uint256,string) (../../sb/Falcons.sol#518-544) uses assembly
	- INLINE ASM (../../sb/Falcons.sol#536-539)
Falcons.getChainId() (../../sb/Falcons.sol#1077-1081) uses assembly
	- INLINE ASM (../../sb/Falcons.sol#1079)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

Address._functionCallWithValue(address,bytes,uint256,string) (../../sb/Falcons.sol#518-544) is never used and should be removed
Address.functionCall(address,bytes) (../../sb/Falcons.sol#465-467) is never used and should be removed
Address.functionCall(address,bytes,string) (../../sb/Falcons.sol#475-481) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sb/Falcons.sol#494-500) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (../../sb/Falcons.sol#508-516) is never used and should be removed
Address.isContract(address) (../../sb/Falcons.sol#410-421) is never used and should be removed
Address.sendValue(address,uint256) (../../sb/Falcons.sol#439-445) is never used and should be removed
BEP20._burn(address,uint256) (../../sb/Falcons.sol#796-802) is never used and should be removed
BEP20._burnFrom(address,uint256) (../../sb/Falcons.sol#835-842) is never used and should be removed
Context._msgData() (../../sb/Falcons.sol#27-30) is never used and should be removed
SafeMath.div(uint256,uint256) (../../sb/Falcons.sol#304-306) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sb/Falcons.sol#320-330) is never used and should be removed
SafeMath.min(uint256,uint256) (../../sb/Falcons.sol#369-371) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sb/Falcons.sol#344-346) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sb/Falcons.sol#360-367) is never used and should be removed
SafeMath.mul(uint256,uint256) (../../sb/Falcons.sol#278-290) is never used and should be removed
SafeMath.sqrt(uint256) (../../sb/Falcons.sol#374-385) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Pragma version0.6.12 (../../sb/Falcons.sol#1) allows old versions
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Address.sendValue(address,uint256) (../../sb/Falcons.sol#439-445):
	- (success) = recipient.call{value: amount}() (../../sb/Falcons.sol#443)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (../../sb/Falcons.sol#518-544):
	- (success,returndata) = target.call{value: weiValue}(data) (../../sb/Falcons.sol#527)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Redundant expression "this (../../sb/Falcons.sol#28)" inContext (../../sb/Falcons.sol#18-31)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
/sb/Falcons.sol analyzed (7 contracts with 93 detectors), 31 result(s) found
