{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "withdraw",
            "impact": "High",
            "line": 1428,
            "line_end": 1450,
            "message": "Reentrancy in MutiRewardPool.withdraw(uint256) (MutiRewardPool.sol#1428-1450):\n\tExternal calls:\n\t- harvest(_stakingId) (MutiRewardPool.sol#1436)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (MutiRewardPool.sol#622)\n\t\t- (success,returndata) = target.call{value: value}(data) (MutiRewardPool.sol#490)\n\t\t- rewardToken0.safeTransfer(address(msgSender()),reward0) (MutiRewardPool.sol#1417)\n\t\t- rewardToken1.safeTransfer(address(msgSender()),reward1) (MutiRewardPool.sol#1421)\n\t- pool.lpToken.safeTransferFrom(address(poolVault),address(msgSender()),_amount) (MutiRewardPool.sol#1441)\n\tExternal calls sending eth:\n\t- harvest(_stakingId) (MutiRewardPool.sol#1436)\n\t\t- (success,returndata) = target.call{value: value}(data) (MutiRewardPool.sol#490)\n\tState variables written after the call(s):\n\t- staking.token0RewardDebt = _amount.mul(pool.token0AccRewardsPerShare).add(_amount.mul(pool.token0AccAdditionalRewardsPerShare)).div(1e12) (MutiRewardPool.sol#1443)\n\tMutiRewardPool.stakingInfo (MutiRewardPool.sol#1117) can be used in cross function reentrancies:\n\t- MutiRewardPool.balanceOf(address) (MutiRewardPool.sol#1712-1724)\n\t- MutiRewardPool.deposit(uint256,uint256) (MutiRewardPool.sol#1322-1350)\n\t- MutiRewardPool.emergencyWithdraw(uint256) (MutiRewardPool.sol#1453-1477)\n\t- MutiRewardPool.getStakingView(uint256) (MutiRewardPool.sol#1659-1675)\n\t- MutiRewardPool.harvest(uint256) (MutiRewardPool.sol#1376-1425)\n\t- MutiRewardPool.harvestPool(uint256) (MutiRewardPool.sol#1362-1374)\n\t- MutiRewardPool.stakingInfo (MutiRewardPool.sol#1117)\n\t- MutiRewardPool.token0PendingReward(uint256) (MutiRewardPool.sol#1203-1233)\n\t- MutiRewardPool.token1PendingReward(uint256) (MutiRewardPool.sol#1236-1265)\n\t- MutiRewardPool.totalStaking(address) (MutiRewardPool.sol#1491-1498)\n\t- MutiRewardPool.withdraw(uint256) (MutiRewardPool.sol#1428-1450)\n\t- staking.token1RewardDebt = _amount.mul(pool.token1AccRewardsPerShare).add(_amount.mul(pool.token1AccAdditionalRewardsPerShare)).div(1e12) (MutiRewardPool.sol#1444)\n\tMutiRewardPool.stakingInfo (MutiRewardPool.sol#1117) can be used in cross function reentrancies:\n\t- MutiRewardPool.balanceOf(address) (MutiRewardPool.sol#1712-1724)\n\t- MutiRewardPool.deposit(uint256,uint256) (MutiRewardPool.sol#1322-1350)\n\t- MutiRewardPool.emergencyWithdraw(uint256) (MutiRewardPool.sol#1453-1477)\n\t- MutiRewardPool.getStakingView(uint256) (MutiRewardPool.sol#1659-1675)\n\t- MutiRewardPool.harvest(uint256) (MutiRewardPool.sol#1376-1425)\n\t- MutiRewardPool.harvestPool(uint256) (MutiRewardPool.sol#1362-1374)\n\t- MutiRewardPool.stakingInfo (MutiRewardPool.sol#1117)\n\t- MutiRewardPool.token0PendingReward(uint256) (MutiRewardPool.sol#1203-1233)\n\t- MutiRewardPool.token1PendingReward(uint256) (MutiRewardPool.sol#1236-1265)\n\t- MutiRewardPool.totalStaking(address) (MutiRewardPool.sol#1491-1498)\n\t- MutiRewardPool.withdraw(uint256) (MutiRewardPool.sol#1428-1450)\n",
            "name": "reentrancy-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "withdraw",
            "impact": "High",
            "line": 1428,
            "line_end": 1450,
            "message": "Reentrancy in MutiRewardPool.withdraw(uint256) (MutiRewardPool.sol#1428-1450):\n\tExternal calls:\n\t- harvest(_stakingId) (MutiRewardPool.sol#1436)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (MutiRewardPool.sol#622)\n\t\t- (success,returndata) = target.call{value: value}(data) (MutiRewardPool.sol#490)\n\t\t- rewardToken0.safeTransfer(address(msgSender()),reward0) (MutiRewardPool.sol#1417)\n\t\t- rewardToken1.safeTransfer(address(msgSender()),reward1) (MutiRewardPool.sol#1421)\n\tExternal calls sending eth:\n\t- harvest(_stakingId) (MutiRewardPool.sol#1436)\n\t\t- (success,returndata) = target.call{value: value}(data) (MutiRewardPool.sol#490)\n\tState variables written after the call(s):\n\t- pool.totalDeposit = pool.totalDeposit.sub(_amount) (MutiRewardPool.sol#1440)\n\tMutiRewardPool.poolInfo (MutiRewardPool.sol#1113) can be used in cross function reentrancies:\n\t- MutiRewardPool.addPool(uint256,uint256) (MutiRewardPool.sol#1178-1200)\n\t- MutiRewardPool.balanceOf(address) (MutiRewardPool.sol#1712-1724)\n\t- MutiRewardPool.deposit(uint256,uint256) (MutiRewardPool.sol#1322-1350)\n\t- MutiRewardPool.donate(IERC20,uint256) (MutiRewardPool.sol#1500-1531)\n\t- MutiRewardPool.emergencyWithdraw(uint256) (MutiRewardPool.sol#1453-1477)\n\t- MutiRewardPool.getAllPoolViews() (MutiRewardPool.sol#1651-1657)\n\t- MutiRewardPool.getPoolView(uint256) (MutiRewardPool.sol#1606-1649)\n\t- MutiRewardPool.getStakingView(uint256) (MutiRewardPool.sol#1659-1675)\n\t- MutiRewardPool.harvest(uint256) (MutiRewardPool.sol#1376-1425)\n\t- MutiRewardPool.massUpdatePools() (MutiRewardPool.sol#1314-1319)\n\t- MutiRewardPool.poolInfo (MutiRewardPool.sol#1113)\n\t- MutiRewardPool.token0PendingReward(uint256) (MutiRewardPool.sol#1203-1233)\n\t- MutiRewardPool.token1PendingReward(uint256) (MutiRewardPool.sol#1236-1265)\n\t- MutiRewardPool.totalSupply() (MutiRewardPool.sol#1704-1710)\n\t- MutiRewardPool.updatePool(uint256) (MutiRewardPool.sol#1268-1311)\n\t- MutiRewardPool.withdraw(uint256) (MutiRewardPool.sol#1428-1450)\n\t- staking.amount = 0 (MutiRewardPool.sol#1439)\n\tMutiRewardPool.stakingInfo (MutiRewardPool.sol#1117) can be used in cross function reentrancies:\n\t- MutiRewardPool.balanceOf(address) (MutiRewardPool.sol#1712-1724)\n\t- MutiRewardPool.deposit(uint256,uint256) (MutiRewardPool.sol#1322-1350)\n\t- MutiRewardPool.emergencyWithdraw(uint256) (MutiRewardPool.sol#1453-1477)\n\t- MutiRewardPool.getStakingView(uint256) (MutiRewardPool.sol#1659-1675)\n\t- MutiRewardPool.harvest(uint256) (MutiRewardPool.sol#1376-1425)\n\t- MutiRewardPool.harvestPool(uint256) (MutiRewardPool.sol#1362-1374)\n\t- MutiRewardPool.stakingInfo (MutiRewardPool.sol#1117)\n\t- MutiRewardPool.token0PendingReward(uint256) (MutiRewardPool.sol#1203-1233)\n\t- MutiRewardPool.token1PendingReward(uint256) (MutiRewardPool.sol#1236-1265)\n\t- MutiRewardPool.totalStaking(address) (MutiRewardPool.sol#1491-1498)\n\t- MutiRewardPool.withdraw(uint256) (MutiRewardPool.sol#1428-1450)\n",
            "name": "reentrancy-eth",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "deposit",
            "impact": "High",
            "line": 1116,
            "message": "MutiRewardPool.userInfo (MutiRewardPool.sol#1116) is never initialized. It is used in:\n\t- MutiRewardPool.deposit(uint256,uint256) (MutiRewardPool.sol#1322-1350)\n\t- MutiRewardPool.harvestAll() (MutiRewardPool.sol#1352-1360)\n\t- MutiRewardPool.harvestPool(uint256) (MutiRewardPool.sol#1362-1374)\n\t- MutiRewardPool.harvest(uint256) (MutiRewardPool.sol#1376-1425)\n\t- MutiRewardPool.withdraw(uint256) (MutiRewardPool.sol#1428-1450)\n\t- MutiRewardPool.emergencyWithdraw(uint256) (MutiRewardPool.sol#1453-1477)\n\t- MutiRewardPool.totalStaking(address) (MutiRewardPool.sol#1491-1498)\n\t- MutiRewardPool.getStakingViews(address) (MutiRewardPool.sol#1677-1688)\n\t- MutiRewardPool.balanceOf(address) (MutiRewardPool.sol#1712-1724)\n",
            "name": "uninitialized-state",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "deposit",
            "impact": "Medium",
            "line": 1322,
            "line_end": 1350,
            "message": "Reentrancy in MutiRewardPool.deposit(uint256,uint256) (MutiRewardPool.sol#1322-1350):\n\tExternal calls:\n\t- pool.lpToken.safeTransferFrom(address(msgSender()),address(poolVault),_amount) (MutiRewardPool.sol#1333)\n\tState variables written after the call(s):\n\t- pool.totalDeposit = pool.totalDeposit.add(_amount) (MutiRewardPool.sol#1337)\n\tMutiRewardPool.poolInfo (MutiRewardPool.sol#1113) can be used in cross function reentrancies:\n\t- MutiRewardPool.addPool(uint256,uint256) (MutiRewardPool.sol#1178-1200)\n\t- MutiRewardPool.balanceOf(address) (MutiRewardPool.sol#1712-1724)\n\t- MutiRewardPool.deposit(uint256,uint256) (MutiRewardPool.sol#1322-1350)\n\t- MutiRewardPool.donate(IERC20,uint256) (MutiRewardPool.sol#1500-1531)\n\t- MutiRewardPool.emergencyWithdraw(uint256) (MutiRewardPool.sol#1453-1477)\n\t- MutiRewardPool.getAllPoolViews() (MutiRewardPool.sol#1651-1657)\n\t- MutiRewardPool.getPoolView(uint256) (MutiRewardPool.sol#1606-1649)\n\t- MutiRewardPool.getStakingView(uint256) (MutiRewardPool.sol#1659-1675)\n\t- MutiRewardPool.harvest(uint256) (MutiRewardPool.sol#1376-1425)\n\t- MutiRewardPool.massUpdatePools() (MutiRewardPool.sol#1314-1319)\n\t- MutiRewardPool.poolInfo (MutiRewardPool.sol#1113)\n\t- MutiRewardPool.token0PendingReward(uint256) (MutiRewardPool.sol#1203-1233)\n\t- MutiRewardPool.token1PendingReward(uint256) (MutiRewardPool.sol#1236-1265)\n\t- MutiRewardPool.totalSupply() (MutiRewardPool.sol#1704-1710)\n\t- MutiRewardPool.updatePool(uint256) (MutiRewardPool.sol#1268-1311)\n\t- MutiRewardPool.withdraw(uint256) (MutiRewardPool.sol#1428-1450)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "addAdditionalRewards",
            "impact": "Medium",
            "line": 1533,
            "line_end": 1575,
            "message": "Reentrancy in MutiRewardPool.addAdditionalRewards(IERC20,uint256,uint256) (MutiRewardPool.sol#1533-1575):\n\tExternal calls:\n\t- IERC20(token).safeTransferFrom(msgSender(),address(this),amount) (MutiRewardPool.sol#1539)\n\tState variables written after the call(s):\n\t- token0AdditionalRewardEndBlock = block.number.add(rewardsBlocks) (MutiRewardPool.sol#1554)\n\tMutiRewardPool.token0AdditionalRewardEndBlock (MutiRewardPool.sol#1106) can be used in cross function reentrancies:\n\t- MutiRewardPool.addAdditionalRewards(IERC20,uint256,uint256) (MutiRewardPool.sol#1533-1575)\n\t- MutiRewardPool.getBaseInfo() (MutiRewardPool.sol#1577-1604)\n\t- MutiRewardPool.token0AdditionalRewardEndBlock (MutiRewardPool.sol#1106)\n\t- MutiRewardPool.token0PendingReward(uint256) (MutiRewardPool.sol#1203-1233)\n\t- MutiRewardPool.updatePool(uint256) (MutiRewardPool.sol#1268-1311)\n\t- token0AdditionalRewardEndBlock = startBlock.add(rewardsBlocks) (MutiRewardPool.sol#1556)\n\tMutiRewardPool.token0AdditionalRewardEndBlock (MutiRewardPool.sol#1106) can be used in cross function reentrancies:\n\t- MutiRewardPool.addAdditionalRewards(IERC20,uint256,uint256) (MutiRewardPool.sol#1533-1575)\n\t- MutiRewardPool.getBaseInfo() (MutiRewardPool.sol#1577-1604)\n\t- MutiRewardPool.token0AdditionalRewardEndBlock (MutiRewardPool.sol#1106)\n\t- MutiRewardPool.token0PendingReward(uint256) (MutiRewardPool.sol#1203-1233)\n\t- MutiRewardPool.updatePool(uint256) (MutiRewardPool.sol#1268-1311)\n\t- token0AdditionalRewardPerBlock = remainingBal.div(rewardsBlocks) (MutiRewardPool.sol#1551)\n\tMutiRewardPool.token0AdditionalRewardPerBlock (MutiRewardPool.sol#1102) can be used in cross function reentrancies:\n\t- MutiRewardPool.addAdditionalRewards(IERC20,uint256,uint256) (MutiRewardPool.sol#1533-1575)\n\t- MutiRewardPool.getBaseInfo() (MutiRewardPool.sol#1577-1604)\n\t- MutiRewardPool.getPoolView(uint256) (MutiRewardPool.sol#1606-1649)\n\t- MutiRewardPool.token0AdditionalRewardPerBlock (MutiRewardPool.sol#1102)\n\t- MutiRewardPool.token0PendingReward(uint256) (MutiRewardPool.sol#1203-1233)\n\t- MutiRewardPool.updatePool(uint256) (MutiRewardPool.sol#1268-1311)\n\t- token1AdditionalRewardEndBlock = block.number.add(rewardsBlocks) (MutiRewardPool.sol#1570)\n\tMutiRewardPool.token1AdditionalRewardEndBlock (MutiRewardPool.sol#1107) can be used in cross function reentrancies:\n\t- MutiRewardPool.addAdditionalRewards(IERC20,uint256,uint256) (MutiRewardPool.sol#1533-1575)\n\t- MutiRewardPool.getBaseInfo() (MutiRewardPool.sol#1577-1604)\n\t- MutiRewardPool.token1AdditionalRewardEndBlock (MutiRewardPool.sol#1107)\n\t- MutiRewardPool.token1PendingReward(uint256) (MutiRewardPool.sol#1236-1265)\n\t- MutiRewardPool.updatePool(uint256) (MutiRewardPool.sol#1268-1311)\n\t- token1AdditionalRewardEndBlock = startBlock.add(rewardsBlocks) (MutiRewardPool.sol#1572)\n\tMutiRewardPool.token1AdditionalRewardEndBlock (MutiRewardPool.sol#1107) can be used in cross function reentrancies:\n\t- MutiRewardPool.addAdditionalRewards(IERC20,uint256,uint256) (MutiRewardPool.sol#1533-1575)\n\t- MutiRewardPool.getBaseInfo() (MutiRewardPool.sol#1577-1604)\n\t- MutiRewardPool.token1AdditionalRewardEndBlock (MutiRewardPool.sol#1107)\n\t- MutiRewardPool.token1PendingReward(uint256) (MutiRewardPool.sol#1236-1265)\n\t- MutiRewardPool.updatePool(uint256) (MutiRewardPool.sol#1268-1311)\n\t- token1AdditionalRewardPerBlock = remainingBal_scope_1.div(rewardsBlocks) (MutiRewardPool.sol#1567)\n\tMutiRewardPool.token1AdditionalRewardPerBlock (MutiRewardPool.sol#1103) can be used in cross function reentrancies:\n\t- MutiRewardPool.addAdditionalRewards(IERC20,uint256,uint256) (MutiRewardPool.sol#1533-1575)\n\t- MutiRewardPool.getBaseInfo() (MutiRewardPool.sol#1577-1604)\n\t- MutiRewardPool.getPoolView(uint256) (MutiRewardPool.sol#1606-1649)\n\t- MutiRewardPool.token1AdditionalRewardPerBlock (MutiRewardPool.sol#1103)\n\t- MutiRewardPool.token1PendingReward(uint256) (MutiRewardPool.sol#1236-1265)\n\t- MutiRewardPool.updatePool(uint256) (MutiRewardPool.sol#1268-1311)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "deposit",
            "impact": "Medium",
            "line": 1322,
            "line_end": 1350,
            "message": "MutiRewardPool.deposit(uint256,uint256) (MutiRewardPool.sol#1322-1350) ignores return value by user.stakingIds.add(lastStakingId) (MutiRewardPool.sol#1346)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "emergencyWithdraw",
            "impact": "Medium",
            "line": 1453,
            "line_end": 1477,
            "message": "MutiRewardPool.emergencyWithdraw(uint256) (MutiRewardPool.sol#1453-1477) ignores return value by user.stakingIds.remove(_stakingId) (MutiRewardPool.sol#1471)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "withdraw",
            "impact": "Medium",
            "line": 1428,
            "line_end": 1450,
            "message": "MutiRewardPool.withdraw(uint256) (MutiRewardPool.sol#1428-1450) ignores return value by user.stakingIds.remove(_stakingId) (MutiRewardPool.sol#1446)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "constructor",
            "impact": "Medium",
            "line": 1136,
            "line_end": 1155,
            "message": "MutiRewardPool.constructor(IERC20,IERC20,IERC20,uint256,uint256,uint256,uint256) (MutiRewardPool.sol#1136-1155) ignores return value by poolVault.approve(address(depositToken)) (MutiRewardPool.sol#1154)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "PoolVault",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "approve",
            "impact": "Medium",
            "line": 938,
            "line_end": 940,
            "message": "PoolVault.approve(address) (MutiRewardPool.sol#938-940) ignores return value by IERC20(token).approve(msg.sender,uint256(- 1)) (MutiRewardPool.sol#939)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "name",
            "impact": "Low",
            "line": 1612,
            "message": "MutiRewardPool.getPoolView(uint256).name (MutiRewardPool.sol#1612) shadows:\n\t- MutiRewardPool.name() (MutiRewardPool.sol#1692-1694) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "decimals",
            "impact": "Low",
            "line": 1613,
            "message": "MutiRewardPool.getPoolView(uint256).decimals (MutiRewardPool.sol#1613) shadows:\n\t- MutiRewardPool.decimals() (MutiRewardPool.sol#1700-1702) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "symbol",
            "impact": "Low",
            "line": 1611,
            "message": "MutiRewardPool.getPoolView(uint256).symbol (MutiRewardPool.sol#1611) shadows:\n\t- MutiRewardPool.symbol() (MutiRewardPool.sol#1696-1698) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "addPool",
            "impact": "Low",
            "line": 1178,
            "line_end": 1200,
            "message": "MutiRewardPool.addPool(uint256,uint256) (MutiRewardPool.sol#1178-1200) should emit an event for: \n\t- totalAllocPoint = totalAllocPoint.add(_allocPoint) (MutiRewardPool.sol#1199) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "updateMultiplier",
            "impact": "Low",
            "line": 1173,
            "line_end": 1176,
            "message": "MutiRewardPool.updateMultiplier(uint256) (MutiRewardPool.sol#1173-1176) should emit an event for: \n\t- BONUS_MULTIPLIER = multiplierNumber (MutiRewardPool.sol#1175) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "addAdditionalRewards",
            "impact": "Low",
            "line": 1533,
            "line_end": 1575,
            "message": "MutiRewardPool.addAdditionalRewards(IERC20,uint256,uint256) (MutiRewardPool.sol#1533-1575) should emit an event for: \n\t- token0AdditionalRewardPerBlock = remainingBal.div(rewardsBlocks) (MutiRewardPool.sol#1551) \n\t- token0AdditionalRewardEndBlock = block.number.add(rewardsBlocks) (MutiRewardPool.sol#1554) \n\t- token0AdditionalRewardEndBlock = startBlock.add(rewardsBlocks) (MutiRewardPool.sol#1556) \n\t- token1AdditionalRewardPerBlock = remainingBal_scope_1.div(rewardsBlocks) (MutiRewardPool.sol#1567) \n\t- token1AdditionalRewardEndBlock = block.number.add(rewardsBlocks) (MutiRewardPool.sol#1570) \n\t- token1AdditionalRewardEndBlock = startBlock.add(rewardsBlocks) (MutiRewardPool.sol#1572) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "getPoolView",
            "impact": "Low",
            "line": 1606,
            "line_end": 1649,
            "message": "MutiRewardPool.getPoolView(uint256) (MutiRewardPool.sol#1606-1649) has external calls inside a loop: PoolView({pid:pid,lpToken:address(pool.lpToken),totalDeposit:pool.totalDeposit,duration:pool.duration,allocPoint:pool.allocPoint,lastRewardBlock:pool.lastRewardBlock,token0AccRewardsPerShare:pool.token0AccRewardsPerShare,token1AccRewardsPerShare:pool.token1AccRewardsPerShare,token0AccAdditionalRewardsPerShare:pool.token0AccAdditionalRewardsPerShare,token1AccAdditionalRewardsPerShare:pool.token1AccAdditionalRewardsPerShare,token0AccDonateAmount:pool.token0AccDonateAmount,token1AccDonateAmount:pool.token1AccDonateAmount,token0RewardsPerBlock:rewardsPerBlock0,token1RewardsPerBlock:rewardsPerBlock1,token0AdditionalRewardPerBlock:additionalRewardsPerBlock0,token1AdditionalRewardPerBlock:additionalRewardsPerBlock1,lpSymbol:symbol,lpName:name,lpDecimals:decimals,rewardToken0Symbol:IERC20Metadata(address(rewardToken0)).symbol(),rewardToken0Name:IERC20Metadata(address(rewardToken0)).name(),rewardToken0Decimals:IERC20Metadata(address(rewardToken0)).decimals(),rewardToken1Symbol:IERC20Metadata(address(rewardToken1)).symbol(),rewardToken1Name:IERC20Metadata(address(rewardToken1)).name(),rewardToken1Decimals:IERC20Metadata(address(rewardToken1)).decimals()}) (MutiRewardPool.sol#1621-1648)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Address",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "functionCallWithValue",
            "impact": "Low",
            "line": 485,
            "line_end": 492,
            "message": "Address.functionCallWithValue(address,bytes,uint256,string) (MutiRewardPool.sol#485-492) has external calls inside a loop: (success,returndata) = target.call{value: value}(data) (MutiRewardPool.sol#490)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "getPoolView",
            "impact": "Low",
            "line": 1606,
            "line_end": 1649,
            "message": "MutiRewardPool.getPoolView(uint256) (MutiRewardPool.sol#1606-1649) has external calls inside a loop: name = IERC20Metadata(address(pool.lpToken)).name() (MutiRewardPool.sol#1612)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "getPoolView",
            "impact": "Low",
            "line": 1606,
            "line_end": 1649,
            "message": "MutiRewardPool.getPoolView(uint256) (MutiRewardPool.sol#1606-1649) has external calls inside a loop: decimals = IERC20Metadata(address(pool.lpToken)).decimals() (MutiRewardPool.sol#1613)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "getPoolView",
            "impact": "Low",
            "line": 1606,
            "line_end": 1649,
            "message": "MutiRewardPool.getPoolView(uint256) (MutiRewardPool.sol#1606-1649) has external calls inside a loop: symbol = IERC20Metadata(address(pool.lpToken)).symbol() (MutiRewardPool.sol#1611)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "harvest",
            "impact": "Low",
            "line": 1376,
            "line_end": 1425,
            "message": "MutiRewardPool.harvest(uint256) (MutiRewardPool.sol#1376-1425) has external calls inside a loop: bal_scope_1 = rewardToken1.balanceOf(address(this)) (MutiRewardPool.sol#1403)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "harvest",
            "impact": "Low",
            "line": 1376,
            "line_end": 1425,
            "message": "MutiRewardPool.harvest(uint256) (MutiRewardPool.sol#1376-1425) has external calls inside a loop: bal = rewardToken0.balanceOf(address(this)) (MutiRewardPool.sol#1391)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "donate",
            "impact": "Low",
            "line": 1500,
            "line_end": 1531,
            "message": "Reentrancy in MutiRewardPool.donate(IERC20,uint256) (MutiRewardPool.sol#1500-1531):\n\tExternal calls:\n\t- IERC20(token).safeTransferFrom(msgSender(),address(this),donateAmount) (MutiRewardPool.sol#1504)\n\tState variables written after the call(s):\n\t- updatePool(pid) (MutiRewardPool.sol#1510)\n\t\t- pool.lastRewardBlock = block.number (MutiRewardPool.sol#1275)\n\t\t- pool.token0AccRewardsPerShare = pool.token0AccRewardsPerShare.add(token0Reward.mul(1e12).div(lpSupply)) (MutiRewardPool.sol#1281)\n\t\t- pool.token0AccAdditionalRewardsPerShare = pool.token0AccAdditionalRewardsPerShare.add(additionalTokenReward.mul(1e12).div(lpSupply)) (MutiRewardPool.sol#1287)\n\t\t- pool.token1AccRewardsPerShare = pool.token1AccRewardsPerShare.add(token1Reward.mul(1e12).div(lpSupply)) (MutiRewardPool.sol#1296)\n\t\t- pool.token1AccAdditionalRewardsPerShare = pool.token1AccAdditionalRewardsPerShare.add(additionalTokenReward_scope_2.mul(1e12).div(lpSupply)) (MutiRewardPool.sol#1302)\n\t\t- pool.lastRewardBlock = block.number (MutiRewardPool.sol#1310)\n\t- pool.token0AccRewardsPerShare = pool.token0AccRewardsPerShare.add(tokenReward.div(pool.totalDeposit)) (MutiRewardPool.sol#1523)\n\t- pool.token0AccDonateAmount = pool.token0AccDonateAmount.add(tokenReward) (MutiRewardPool.sol#1524)\n\t- pool.token1AccRewardsPerShare = pool.token1AccRewardsPerShare.add(tokenReward.div(pool.totalDeposit)) (MutiRewardPool.sol#1526)\n\t- pool.token1AccDonateAmount = pool.token1AccDonateAmount.add(tokenReward) (MutiRewardPool.sol#1527)\n\t- updatePool(pid) (MutiRewardPool.sol#1510)\n\t\t- token0AdditionalRewardPerBlock = 0 (MutiRewardPool.sol#1291)\n\t- updatePool(pid) (MutiRewardPool.sol#1510)\n\t\t- token1AdditionalRewardPerBlock = 0 (MutiRewardPool.sol#1306)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "deposit",
            "impact": "Low",
            "line": 1322,
            "line_end": 1350,
            "message": "Reentrancy in MutiRewardPool.deposit(uint256,uint256) (MutiRewardPool.sol#1322-1350):\n\tExternal calls:\n\t- pool.lpToken.safeTransferFrom(address(msgSender()),address(poolVault),_amount) (MutiRewardPool.sol#1333)\n\tState variables written after the call(s):\n\t- lastStakingId ++ (MutiRewardPool.sol#1336)\n\t- stakingInfo[lastStakingId] = StakingInfo({pid:pid,amount:_amount,token0RewardDebt:_amount.mul(pool.token0AccRewardsPerShare).add(_amount.mul(pool.token0AccAdditionalRewardsPerShare)).div(1e12),token1RewardDebt:_amount.mul(pool.token1AccRewardsPerShare).add(_amount.mul(pool.token1AccAdditionalRewardsPerShare)).div(1e12),time:block.timestamp}) (MutiRewardPool.sol#1339-1345)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "withdraw",
            "impact": "Low",
            "line": 1428,
            "line_end": 1450,
            "message": "Reentrancy in MutiRewardPool.withdraw(uint256) (MutiRewardPool.sol#1428-1450):\n\tExternal calls:\n\t- harvest(_stakingId) (MutiRewardPool.sol#1436)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (MutiRewardPool.sol#622)\n\t\t- (success,returndata) = target.call{value: value}(data) (MutiRewardPool.sol#490)\n\t\t- rewardToken0.safeTransfer(address(msgSender()),reward0) (MutiRewardPool.sol#1417)\n\t\t- rewardToken1.safeTransfer(address(msgSender()),reward1) (MutiRewardPool.sol#1421)\n\t- pool.lpToken.safeTransferFrom(address(poolVault),address(msgSender()),_amount) (MutiRewardPool.sol#1441)\n\tExternal calls sending eth:\n\t- harvest(_stakingId) (MutiRewardPool.sol#1436)\n\t\t- (success,returndata) = target.call{value: value}(data) (MutiRewardPool.sol#490)\n\tEvent emitted after the call(s):\n\t- Transfer(msgSender(),address(0),_amount) (MutiRewardPool.sol#1449)\n\t- Withdraw(msgSender(),staking.pid,_stakingId,_amount) (MutiRewardPool.sol#1448)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "deposit",
            "impact": "Low",
            "line": 1322,
            "line_end": 1350,
            "message": "Reentrancy in MutiRewardPool.deposit(uint256,uint256) (MutiRewardPool.sol#1322-1350):\n\tExternal calls:\n\t- pool.lpToken.safeTransferFrom(address(msgSender()),address(poolVault),_amount) (MutiRewardPool.sol#1333)\n\tEvent emitted after the call(s):\n\t- Deposit(msgSender(),pid,lastStakingId,_amount) (MutiRewardPool.sol#1348)\n\t- Transfer(address(0),msgSender(),_amount) (MutiRewardPool.sol#1349)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "harvest",
            "impact": "Low",
            "line": 1376,
            "line_end": 1425,
            "message": "Reentrancy in MutiRewardPool.harvest(uint256) (MutiRewardPool.sol#1376-1425):\n\tExternal calls:\n\t- rewardToken0.safeTransfer(address(msgSender()),reward0) (MutiRewardPool.sol#1417)\n\t- rewardToken1.safeTransfer(address(msgSender()),reward1) (MutiRewardPool.sol#1421)\n\tEvent emitted after the call(s):\n\t- Harvest(msgSender(),staking.pid,_stakingId,reward0,reward1) (MutiRewardPool.sol#1424)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BasicMetaTransaction",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "executeMetaTransaction",
            "impact": "Low",
            "line": 969,
            "line_end": 981,
            "message": "Reentrancy in BasicMetaTransaction.executeMetaTransaction(address,bytes,bytes32,bytes32,uint8) (MutiRewardPool.sol#969-981):\n\tExternal calls:\n\t- (success,returnData) = address(this).call(abi.encodePacked(functionSignature,userAddress)) (MutiRewardPool.sol#976)\n\tEvent emitted after the call(s):\n\t- MetaTransactionExecuted(userAddress,msg.sender,functionSignature) (MutiRewardPool.sol#979)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "emergencyWithdraw",
            "impact": "Low",
            "line": 1453,
            "line_end": 1477,
            "message": "Reentrancy in MutiRewardPool.emergencyWithdraw(uint256) (MutiRewardPool.sol#1453-1477):\n\tExternal calls:\n\t- pool.lpToken.safeTransferFrom(address(poolVault),address(msgSender()),amount) (MutiRewardPool.sol#1473)\n\tEvent emitted after the call(s):\n\t- EmergencyWithdraw(msgSender(),staking.pid,_stakingId,amount) (MutiRewardPool.sol#1475)\n\t- Transfer(msgSender(),address(0),amount) (MutiRewardPool.sol#1476)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "donate",
            "impact": "Low",
            "line": 1500,
            "line_end": 1531,
            "message": "Reentrancy in MutiRewardPool.donate(IERC20,uint256) (MutiRewardPool.sol#1500-1531):\n\tExternal calls:\n\t- IERC20(token).safeTransferFrom(msgSender(),address(this),donateAmount) (MutiRewardPool.sol#1504)\n\tEvent emitted after the call(s):\n\t- Donate(msgSender(),pid,address(token),tokenReward.div(1e12),tokenReward.div(1e12)) (MutiRewardPool.sol#1529)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "withdraw",
            "impact": "Low",
            "line": 1428,
            "line_end": 1450,
            "message": "MutiRewardPool.withdraw(uint256) (MutiRewardPool.sol#1428-1450) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(block.timestamp.sub(staking.time) >= pool.duration,not time) (MutiRewardPool.sol#1434)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "updatePool",
            "impact": "Informational",
            "line": 1268,
            "line_end": 1311,
            "message": "MutiRewardPool.updatePool(uint256) (MutiRewardPool.sol#1268-1311) has costly operations inside a loop:\n\t- token1AdditionalRewardPerBlock = 0 (MutiRewardPool.sol#1306)\n",
            "name": "costly-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MutiRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Metatime/metatime-6fd2d5b132377b007c3baa79938a53132fd2f955/contracts/pools/MutiRewardPool.sol",
            "function": "updatePool",
            "impact": "Informational",
            "line": 1268,
            "line_end": 1311,
            "message": "MutiRewardPool.updatePool(uint256) (MutiRewardPool.sol#1268-1311) has costly operations inside a loop:\n\t- token0AdditionalRewardPerBlock = 0 (MutiRewardPool.sol#1291)\n",
            "name": "costly-loop",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}