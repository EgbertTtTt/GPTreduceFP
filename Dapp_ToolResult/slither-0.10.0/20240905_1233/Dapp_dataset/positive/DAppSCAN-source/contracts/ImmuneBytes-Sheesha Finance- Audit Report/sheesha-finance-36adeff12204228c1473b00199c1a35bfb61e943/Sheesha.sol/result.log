'solc --version' running
'solc /sb/Sheesha.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running
Compilation warnings/errors on /sb/Sheesha.sol:
Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> /sb/Sheesha.sol:543:5:
    |
543 |     constructor (string memory name_, string memory symbol_) public {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it "abstract" is sufficient.
   --> /sb/Sheesha.sol:852:5:
    |
852 |     constructor () internal {
    |     ^ (Relevant source part starts here and spans across multiple lines).



SHEESHA.constructor(address,address,address,address)._devAddress (../../sb/Sheesha.sol#914) lacks a zero-check on :
		- devAddress = _devAddress (../../sb/Sheesha.sol#915)
SHEESHA.constructor(address,address,address,address)._marketingAddress (../../sb/Sheesha.sol#914) lacks a zero-check on :
		- marketingAddress = _marketingAddress (../../sb/Sheesha.sol#916)
SHEESHA.constructor(address,address,address,address)._teamAddress (../../sb/Sheesha.sol#914) lacks a zero-check on :
		- teamAddress = _teamAddress (../../sb/Sheesha.sol#917)
SHEESHA.constructor(address,address,address,address)._reserveAddress (../../sb/Sheesha.sol#914) lacks a zero-check on :
		- reserveAddress = _reserveAddress (../../sb/Sheesha.sol#918)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Address.isContract(address) (../../sb/Sheesha.sol#26-35) uses assembly
	- INLINE ASM (../../sb/Sheesha.sol#33)
Address._verifyCallResult(bool,bytes,string) (../../sb/Sheesha.sol#171-188) uses assembly
	- INLINE ASM (../../sb/Sheesha.sol#180-183)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

Address._verifyCallResult(bool,bytes,string) (../../sb/Sheesha.sol#171-188) is never used and should be removed
Address.functionCall(address,bytes) (../../sb/Sheesha.sol#79-81) is never used and should be removed
Address.functionCall(address,bytes,string) (../../sb/Sheesha.sol#89-91) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sb/Sheesha.sol#104-106) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (../../sb/Sheesha.sol#114-121) is never used and should be removed
Address.functionDelegateCall(address,bytes) (../../sb/Sheesha.sol#153-155) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (../../sb/Sheesha.sol#163-169) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sb/Sheesha.sol#129-131) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sb/Sheesha.sol#139-145) is never used and should be removed
Address.isContract(address) (../../sb/Sheesha.sol#26-35) is never used and should be removed
Address.sendValue(address,uint256) (../../sb/Sheesha.sol#53-59) is never used and should be removed
Context._msgData() (../../sb/Sheesha.sol#206-209) is never used and should be removed
ERC20._setupDecimals(uint8) (../../sb/Sheesha.sol#775-777) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sb/Sheesha.sol#471-474) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sb/Sheesha.sol#433-436) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sb/Sheesha.sol#491-494) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sb/Sheesha.sol#305-309) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sb/Sheesha.sol#341-344) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sb/Sheesha.sol#351-354) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sb/Sheesha.sol#326-334) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sb/Sheesha.sol#316-319) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Pragma version0.7.6 (../../sb/Sheesha.sol#1) allows old versions
solc-0.7.6 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Address.sendValue(address,uint256) (../../sb/Sheesha.sol#53-59):
	- (success) = recipient.call{value: amount}() (../../sb/Sheesha.sol#57)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sb/Sheesha.sol#114-121):
	- (success,returndata) = target.call{value: value}(data) (../../sb/Sheesha.sol#119)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sb/Sheesha.sol#139-145):
	- (success,returndata) = target.staticcall(data) (../../sb/Sheesha.sol#143)
Low level call in Address.functionDelegateCall(address,bytes,string) (../../sb/Sheesha.sol#163-169):
	- (success,returndata) = target.delegatecall(data) (../../sb/Sheesha.sol#167)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Parameter SHEESHA.transferVaultRewards(address)._vaultAddress (../../sb/Sheesha.sol#927) is not in mixedCase
Parameter SHEESHA.transferVaultLPewards(address)._vaultLPAddress (../../sb/Sheesha.sol#932) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Redundant expression "this (../../sb/Sheesha.sol#207)" inContext (../../sb/Sheesha.sol#201-210)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements

SHEESHA.slitherConstructorConstantVariables() (../../sb/Sheesha.sol#896-935) uses literals with too many digits:
	- initialSupply = 100000e18 (../../sb/Sheesha.sol#900)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

SHEESHA.devAddress (../../sb/Sheesha.sol#901) should be immutable 
SHEESHA.marketingAddress (../../sb/Sheesha.sol#903) should be immutable 
SHEESHA.reserveAddress (../../sb/Sheesha.sol#904) should be immutable 
SHEESHA.teamAddress (../../sb/Sheesha.sol#902) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
/sb/Sheesha.sol analyzed (8 contracts with 93 detectors), 41 result(s) found
