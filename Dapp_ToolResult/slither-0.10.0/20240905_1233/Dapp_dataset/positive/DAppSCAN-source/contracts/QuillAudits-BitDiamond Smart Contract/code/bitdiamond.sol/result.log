'solc --version' running
'solc /sb/bitdiamond.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/sb' running

bitdiamond.allowance(address,address).owner (../../sb/bitdiamond.sol#512) shadows:
	- Ownable.owner() (../../sb/bitdiamond.sol#419-421) (function)
bitdiamond._approve(address,address,uint256).owner (../../sb/bitdiamond.sol#580) shadows:
	- Ownable.owner() (../../sb/bitdiamond.sol#419-421) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

bitdiamond._setTaxFee(uint256) (../../sb/bitdiamond.sol#704-706) should emit an event for: 
	- _tax_fee = taxFee (../../sb/bitdiamond.sol#705) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

Address.isContract(address) (../../sb/bitdiamond.sol#273-282) uses assembly
	- INLINE ASM (../../sb/bitdiamond.sol#280)
Address._functionCallWithValue(address,bytes,uint256,string) (../../sb/bitdiamond.sol#366-387) uses assembly
	- INLINE ASM (../../sb/bitdiamond.sol#379-382)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

Address._functionCallWithValue(address,bytes,uint256,string) (../../sb/bitdiamond.sol#366-387) is never used and should be removed
Address.functionCall(address,bytes) (../../sb/bitdiamond.sol#326-328) is never used and should be removed
Address.functionCall(address,bytes,string) (../../sb/bitdiamond.sol#336-338) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sb/bitdiamond.sol#351-353) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (../../sb/bitdiamond.sol#361-364) is never used and should be removed
Address.isContract(address) (../../sb/bitdiamond.sol#273-282) is never used and should be removed
Address.sendValue(address,uint256) (../../sb/bitdiamond.sol#300-306) is never used and should be removed
Context._msgData() (../../sb/bitdiamond.sol#16-19) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sb/bitdiamond.sol#230-232) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sb/bitdiamond.sol#246-249) is never used and should be removed
bitdiamond._getMaxTxAmount() (../../sb/bitdiamond.sol#700-702) is never used and should be removed
bitdiamond._getTaxFee() (../../sb/bitdiamond.sol#696-698) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

bitdiamond._rTotal (../../sb/bitdiamond.sol#474) is set pre-construction with a non-constant function or state variable:
	- (_MAX - (_MAX % _tTotal))
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state

Pragma version^0.8.4 (../../sb/bitdiamond.sol#1) allows old versions
solc-0.8.27 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Address.sendValue(address,uint256) (../../sb/bitdiamond.sol#300-306):
	- (success) = recipient.call{value: amount}() (../../sb/bitdiamond.sol#304)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (../../sb/bitdiamond.sol#366-387):
	- (success,returndata) = target.call{value: weiValue}(data) (../../sb/bitdiamond.sol#370)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract bitdiamond (../../sb/bitdiamond.sol#454-707) is not in CapWords
Function bitdiamond._setTaxFee(uint256) (../../sb/bitdiamond.sol#704-706) is not in mixedCase
Variable bitdiamond._tax_fee (../../sb/bitdiamond.sol#478) is not in mixedCase
Constant bitdiamond._max_txn_size (../../sb/bitdiamond.sol#479) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Redundant expression "this (../../sb/bitdiamond.sol#17)" inContext (../../sb/bitdiamond.sol#11-20)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements

Variable bitdiamond._transferBothExcluded(address,address,uint256).rTransferAmount (../../sb/bitdiamond.sol#636) is too similar to bitdiamond._getValues(uint256).tTransferAmount (../../sb/bitdiamond.sol#652)
Variable bitdiamond._transferBothExcluded(address,address,uint256).rTransferAmount (../../sb/bitdiamond.sol#636) is too similar to bitdiamond._transferStandard(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#610)
Variable bitdiamond._getRTransferAmount(uint256,uint256).rTransferAmount (../../sb/bitdiamond.sol#675) is too similar to bitdiamond._transferToExcluded(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#618)
Variable bitdiamond._transferStandard(address,address,uint256).rTransferAmount (../../sb/bitdiamond.sol#610) is too similar to bitdiamond._getValues(uint256).tTransferAmount (../../sb/bitdiamond.sol#652)
Variable bitdiamond._transferStandard(address,address,uint256).rTransferAmount (../../sb/bitdiamond.sol#610) is too similar to bitdiamond._transferStandard(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#610)
Variable bitdiamond.reflectionFromToken(uint256,bool).rTransferAmount (../../sb/bitdiamond.sol#560) is too similar to bitdiamond._getValues(uint256).tTransferAmount (../../sb/bitdiamond.sol#652)
Variable bitdiamond._transferBothExcluded(address,address,uint256).rTransferAmount (../../sb/bitdiamond.sol#636) is too similar to bitdiamond._transferFromExcluded(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#627)
Variable bitdiamond._transferBothExcluded(address,address,uint256).rTransferAmount (../../sb/bitdiamond.sol#636) is too similar to bitdiamond._transferBothExcluded(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#636)
Variable bitdiamond._transferFromExcluded(address,address,uint256).rTransferAmount (../../sb/bitdiamond.sol#627) is too similar to bitdiamond._getValues(uint256).tTransferAmount (../../sb/bitdiamond.sol#652)
Variable bitdiamond.reflectionFromToken(uint256,bool).rTransferAmount (../../sb/bitdiamond.sol#560) is too similar to bitdiamond._transferStandard(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#610)
Variable bitdiamond._transferStandard(address,address,uint256).rTransferAmount (../../sb/bitdiamond.sol#610) is too similar to bitdiamond._transferFromExcluded(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#627)
Variable bitdiamond._transferStandard(address,address,uint256).rTransferAmount (../../sb/bitdiamond.sol#610) is too similar to bitdiamond._transferBothExcluded(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#636)
Variable bitdiamond._transferFromExcluded(address,address,uint256).rTransferAmount (../../sb/bitdiamond.sol#627) is too similar to bitdiamond._transferStandard(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#610)
Variable bitdiamond.reflectionFromToken(uint256,bool).rTransferAmount (../../sb/bitdiamond.sol#560) is too similar to bitdiamond._transferFromExcluded(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#627)
Variable bitdiamond._getRTransferAmount(uint256,uint256).rTransferAmount (../../sb/bitdiamond.sol#675) is too similar to bitdiamond._getValues(uint256).tTransferAmount (../../sb/bitdiamond.sol#652)
Variable bitdiamond.reflectionFromToken(uint256,bool).rTransferAmount (../../sb/bitdiamond.sol#560) is too similar to bitdiamond._transferBothExcluded(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#636)
Variable bitdiamond._getRTransferAmount(uint256,uint256).rTransferAmount (../../sb/bitdiamond.sol#675) is too similar to bitdiamond._transferStandard(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#610)
Variable bitdiamond._transferFromExcluded(address,address,uint256).rTransferAmount (../../sb/bitdiamond.sol#627) is too similar to bitdiamond._transferFromExcluded(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#627)
Variable bitdiamond._transferFromExcluded(address,address,uint256).rTransferAmount (../../sb/bitdiamond.sol#627) is too similar to bitdiamond._transferBothExcluded(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#636)
Variable bitdiamond._getRTransferAmount(uint256,uint256).rTransferAmount (../../sb/bitdiamond.sol#675) is too similar to bitdiamond._transferBothExcluded(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#636)
Variable bitdiamond._getRTransferAmount(uint256,uint256).rTransferAmount (../../sb/bitdiamond.sol#675) is too similar to bitdiamond._transferFromExcluded(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#627)
Variable bitdiamond._transferFromExcluded(address,address,uint256).rTransferAmount (../../sb/bitdiamond.sol#627) is too similar to bitdiamond._transferToExcluded(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#618)
Variable bitdiamond._transferToExcluded(address,address,uint256).rTransferAmount (../../sb/bitdiamond.sol#618) is too similar to bitdiamond._getValues(uint256).tTransferAmount (../../sb/bitdiamond.sol#652)
Variable bitdiamond._transferStandard(address,address,uint256).rTransferAmount (../../sb/bitdiamond.sol#610) is too similar to bitdiamond._transferToExcluded(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#618)
Variable bitdiamond._getValues(uint256).rTransferAmount (../../sb/bitdiamond.sol#655) is too similar to bitdiamond._transferBothExcluded(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#636)
Variable bitdiamond._transferBothExcluded(address,address,uint256).rTransferAmount (../../sb/bitdiamond.sol#636) is too similar to bitdiamond._transferToExcluded(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#618)
Variable bitdiamond._getValues(uint256).rTransferAmount (../../sb/bitdiamond.sol#655) is too similar to bitdiamond._transferStandard(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#610)
Variable bitdiamond._transferToExcluded(address,address,uint256).rTransferAmount (../../sb/bitdiamond.sol#618) is too similar to bitdiamond._transferBothExcluded(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#636)
Variable bitdiamond._getValues(uint256).rTransferAmount (../../sb/bitdiamond.sol#655) is too similar to bitdiamond._transferFromExcluded(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#627)
Variable bitdiamond._transferToExcluded(address,address,uint256).rTransferAmount (../../sb/bitdiamond.sol#618) is too similar to bitdiamond._transferStandard(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#610)
Variable bitdiamond._getValues(uint256).rTransferAmount (../../sb/bitdiamond.sol#655) is too similar to bitdiamond._transferToExcluded(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#618)
Variable bitdiamond._transferToExcluded(address,address,uint256).rTransferAmount (../../sb/bitdiamond.sol#618) is too similar to bitdiamond._transferToExcluded(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#618)
Variable bitdiamond._transferToExcluded(address,address,uint256).rTransferAmount (../../sb/bitdiamond.sol#618) is too similar to bitdiamond._transferFromExcluded(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#627)
Variable bitdiamond._getValues(uint256).rTransferAmount (../../sb/bitdiamond.sol#655) is too similar to bitdiamond._getValues(uint256).tTransferAmount (../../sb/bitdiamond.sol#652)
Variable bitdiamond.reflectionFromToken(uint256,bool).rTransferAmount (../../sb/bitdiamond.sol#560) is too similar to bitdiamond._transferToExcluded(address,address,uint256).tTransferAmount (../../sb/bitdiamond.sol#618)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar

bitdiamond.slitherConstructorVariables() (../../sb/bitdiamond.sol#454-707) uses literals with too many digits:
	- _tTotal = 21000000 * _DECIMALFACTOR (../../sb/bitdiamond.sol#473)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

Loop condition i < _excluded.length (../../sb/bitdiamond.sol#687) should use cached array length instead of referencing `length` member of the storage array.
 Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cache-array-length

bitdiamond._tTotal (../../sb/bitdiamond.sol#473) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
/sb/bitdiamond.sol analyzed (6 contracts with 93 detectors), 65 result(s) found
