'solc --version' running
'solc /sb/TokenTranchePricing.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running
Compilation warnings/errors on /sb/TokenTranchePricing.sol:
/sb/TokenTranchePricing.sol:71:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/TokenTranchePricing.sol:134:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function TokenTranchePricing(uint[] init_tranches) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/TokenTranchePricing.sol:12:3: Warning: Function state mutability can be restricted to pure
  function mul(uint a, uint b) internal constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/TokenTranchePricing.sol:18:3: Warning: Function state mutability can be restricted to pure
  function div(uint a, uint b) internal constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/TokenTranchePricing.sol:25:3: Warning: Function state mutability can be restricted to pure
  function sub(uint a, uint b) internal constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/TokenTranchePricing.sol:30:3: Warning: Function state mutability can be restricted to pure
  function add(uint a, uint b) internal constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/TokenTranchePricing.sol:36:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/TokenTranchePricing.sol:40:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/TokenTranchePricing.sol:44:3: Warning: Function state mutability can be restricted to pure
  function max256(uint a, uint b) internal constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/TokenTranchePricing.sol:48:3: Warning: Function state mutability can be restricted to pure
  function min256(uint a, uint b) internal constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).


TokenTranchePricing (../../sb/TokenTranchePricing.sol#105-180) contract sets array length with a user-controlled value:
	- tranches.length = init_tranches.length / tranche_size (../../sb/TokenTranchePricing.sol#141)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Ownable.transferOwnership(address) (../../sb/TokenTranchePricing.sol#89-92) should emit an event for: 
	- owner = newOwner (../../sb/TokenTranchePricing.sol#91) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

SafeMath.add(uint256,uint256) (../../sb/TokenTranchePricing.sol#30-34) is never used and should be removed
SafeMath.div(uint256,uint256) (../../sb/TokenTranchePricing.sol#18-23) is never used and should be removed
SafeMath.max256(uint256,uint256) (../../sb/TokenTranchePricing.sol#44-46) is never used and should be removed
SafeMath.max64(uint64,uint64) (../../sb/TokenTranchePricing.sol#36-38) is never used and should be removed
SafeMath.min256(uint256,uint256) (../../sb/TokenTranchePricing.sol#48-50) is never used and should be removed
SafeMath.min64(uint64,uint64) (../../sb/TokenTranchePricing.sol#40-42) is never used and should be removed
SafeMath.mul(uint256,uint256) (../../sb/TokenTranchePricing.sol#12-16) is never used and should be removed
SafeMath.sub(uint256,uint256) (../../sb/TokenTranchePricing.sol#25-28) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Pragma version^0.4.15 (../../sb/TokenTranchePricing.sol#1) allows old versions
solc-0.4.26 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Constant TokenTranchePricing.amount_offset (../../sb/TokenTranchePricing.sol#124) is not in UPPER_CASE_WITH_UNDERSCORES
Constant TokenTranchePricing.start_offset (../../sb/TokenTranchePricing.sol#125) is not in UPPER_CASE_WITH_UNDERSCORES
Constant TokenTranchePricing.end_offset (../../sb/TokenTranchePricing.sol#126) is not in UPPER_CASE_WITH_UNDERSCORES
Constant TokenTranchePricing.price_offset (../../sb/TokenTranchePricing.sol#127) is not in UPPER_CASE_WITH_UNDERSCORES
Constant TokenTranchePricing.tranche_size (../../sb/TokenTranchePricing.sol#128) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Loop condition i < tranches.length (../../sb/TokenTranchePricing.sol#164) should use cached array length instead of referencing `length` member of the storage array.
 Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cache-array-length
/sb/TokenTranchePricing.sol analyzed (3 contracts with 93 detectors), 18 result(s) found
