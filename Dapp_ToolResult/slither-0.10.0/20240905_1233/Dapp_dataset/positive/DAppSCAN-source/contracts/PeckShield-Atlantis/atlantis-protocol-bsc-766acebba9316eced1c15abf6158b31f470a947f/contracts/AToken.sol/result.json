{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "AToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Atlantis/atlantis-protocol-bsc-766acebba9316eced1c15abf6158b31f470a947f/contracts/AToken.sol",
            "function": "liquidateBorrowInternal",
            "impact": "Medium",
            "line": 2126,
            "line_end": 2141,
            "message": "Reentrancy in AToken.liquidateBorrowInternal(address,uint256,ATokenInterface) (AToken.sol#2126-2141):\n\tExternal calls:\n\t- error = aTokenCollateral.accrueInterest() (AToken.sol#2133)\n\t- liquidateBorrowFresh(msg.sender,borrower,repayAmount,aTokenCollateral) (AToken.sol#2140)\n\t\t- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (AToken.sol#2260)\n\t\t- allowed = comptroller.liquidateBorrowAllowed(address(this),address(aTokenCollateral),liquidator,borrower,repayAmount) (AToken.sol#2154)\n\t\t- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (AToken.sol#2051)\n\t\t- seizeError = aTokenCollateral.seize(liquidator,borrower,seizeTokens) (AToken.sol#2207)\n\tState variables written after the call(s):\n\t- liquidateBorrowFresh(msg.sender,borrower,repayAmount,aTokenCollateral) (AToken.sol#2140)\n\t\t- totalBorrows = vars.totalBorrowsNew (AToken.sol#2106)\n\tATokenStorage.totalBorrows (AToken.sol#252) can be used in cross function reentrancies:\n\t- AToken.accrueInterest() (AToken.sol#1580-1658)\n\t- AToken.borrowRatePerBlock() (AToken.sol#1431-1433)\n\t- AToken.exchangeRateStoredInternal() (AToken.sol#1535-1565)\n\t- AToken.supplyRatePerBlock() (AToken.sol#1439-1441)\n\t- ATokenStorage.totalBorrows (AToken.sol#252)\n\t- liquidateBorrowFresh(msg.sender,borrower,repayAmount,aTokenCollateral) (AToken.sol#2140)\n\t\t- totalReserves = vars.totalReservesNew (AToken.sol#2303)\n\tATokenStorage.totalReserves (AToken.sol#257) can be used in cross function reentrancies:\n\t- AToken.accrueInterest() (AToken.sol#1580-1658)\n\t- AToken.borrowRatePerBlock() (AToken.sol#1431-1433)\n\t- AToken.exchangeRateStoredInternal() (AToken.sol#1535-1565)\n\t- AToken.supplyRatePerBlock() (AToken.sol#1439-1441)\n\t- ATokenStorage.totalReserves (AToken.sol#257)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Atlantis/atlantis-protocol-bsc-766acebba9316eced1c15abf6158b31f470a947f/contracts/AToken.sol",
            "function": "redeemFresh",
            "impact": "Medium",
            "line": 1810,
            "line_end": 1904,
            "message": "Reentrancy in AToken.redeemFresh(address,uint256,uint256) (AToken.sol#1810-1904):\n\tExternal calls:\n\t- allowed = comptroller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (AToken.sol#1850)\n\tState variables written after the call(s):\n\t- totalSupply = vars.totalSupplyNew (AToken.sol#1893)\n\tATokenStorage.totalSupply (AToken.sol#262) can be used in cross function reentrancies:\n\t- AToken.exchangeRateStoredInternal() (AToken.sol#1535-1565)\n\t- ATokenStorage.totalSupply (AToken.sol#262)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "ExponentialNoError",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Atlantis/atlantis-protocol-bsc-766acebba9316eced1c15abf6158b31f470a947f/contracts/AToken.sol",
            "function": "fraction",
            "impact": "Low",
            "line": 1084,
            "message": "Exponential.divScalarByExpTruncate(uint256,ExponentialNoError.Exp).fraction (AToken.sol#1084) shadows:\n\t- ExponentialNoError.fraction(uint256,uint256) (AToken.sol#961-963) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Atlantis/atlantis-protocol-bsc-766acebba9316eced1c15abf6158b31f470a947f/contracts/AToken.sol",
            "function": "initialize",
            "impact": "Low",
            "line": 1221,
            "line_end": 1252,
            "message": "AToken.initialize(ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (AToken.sol#1221-1252) should emit an event for: \n\t- initialExchangeRateMantissa = initialExchangeRateMantissa_ (AToken.sol#1231) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Atlantis/atlantis-protocol-bsc-766acebba9316eced1c15abf6158b31f470a947f/contracts/AToken.sol",
            "function": "transferTokens",
            "impact": "Low",
            "line": 1263,
            "line_end": 1323,
            "message": "Reentrancy in AToken.transferTokens(address,address,address,uint256) (AToken.sol#1263-1323):\n\tExternal calls:\n\t- allowed = comptroller.transferAllowed(address(this),src,dst,tokens) (AToken.sol#1265)\n\tState variables written after the call(s):\n\t- accountTokens[src] = sraTokensNew (AToken.sol#1308)\n\t- accountTokens[dst] = dstTokensNew (AToken.sol#1309)\n\t- transferAllowances[src][spender] = allowanceNew (AToken.sol#1313)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Atlantis/atlantis-protocol-bsc-766acebba9316eced1c15abf6158b31f470a947f/contracts/AToken.sol",
            "function": "mintFresh",
            "impact": "Low",
            "line": 1693,
            "line_end": 1758,
            "message": "Reentrancy in AToken.mintFresh(address,uint256) (AToken.sol#1693-1758):\n\tExternal calls:\n\t- allowed = comptroller.mintAllowed(address(this),minter,mintAmount) (AToken.sol#1695)\n\tState variables written after the call(s):\n\t- accountTokens[minter] = vars.accountTokensNew (AToken.sol#1747)\n\t- totalSupply = vars.totalSupplyNew (AToken.sol#1746)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Atlantis/atlantis-protocol-bsc-766acebba9316eced1c15abf6158b31f470a947f/contracts/AToken.sol",
            "function": "borrowFresh",
            "impact": "Low",
            "line": 1934,
            "line_end": 1998,
            "message": "Reentrancy in AToken.borrowFresh(address,uint256) (AToken.sol#1934-1998):\n\tExternal calls:\n\t- allowed = comptroller.borrowAllowed(address(this),borrower,borrowAmount) (AToken.sol#1936)\n\tState variables written after the call(s):\n\t- accountBorrows[borrower].principal = vars.accountBorrowsNew (AToken.sol#1986)\n\t- accountBorrows[borrower].interestIndex = borrowIndex (AToken.sol#1987)\n\t- totalBorrows = vars.totalBorrowsNew (AToken.sol#1988)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Atlantis/atlantis-protocol-bsc-766acebba9316eced1c15abf6158b31f470a947f/contracts/AToken.sol",
            "function": "seizeInternal",
            "impact": "Low",
            "line": 2258,
            "line_end": 2318,
            "message": "Reentrancy in AToken.seizeInternal(address,address,address,uint256) (AToken.sol#2258-2318):\n\tExternal calls:\n\t- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (AToken.sol#2260)\n\tState variables written after the call(s):\n\t- accountTokens[borrower] = vars.borrowerTokensNew (AToken.sol#2305)\n\t- accountTokens[liquidator] = vars.liquidatorTokensNew (AToken.sol#2306)\n\t- totalReserves = vars.totalReservesNew (AToken.sol#2303)\n\t- totalSupply = vars.totalSupplyNew (AToken.sol#2304)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Atlantis/atlantis-protocol-bsc-766acebba9316eced1c15abf6158b31f470a947f/contracts/AToken.sol",
            "function": "repayBorrowFresh",
            "impact": "Low",
            "line": 2049,
            "line_end": 2116,
            "message": "Reentrancy in AToken.repayBorrowFresh(address,address,uint256) (AToken.sol#2049-2116):\n\tExternal calls:\n\t- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (AToken.sol#2051)\n\tState variables written after the call(s):\n\t- accountBorrows[borrower].principal = vars.accountBorrowsNew (AToken.sol#2104)\n\t- accountBorrows[borrower].interestIndex = borrowIndex (AToken.sol#2105)\n\t- totalBorrows = vars.totalBorrowsNew (AToken.sol#2106)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Atlantis/atlantis-protocol-bsc-766acebba9316eced1c15abf6158b31f470a947f/contracts/AToken.sol",
            "function": "redeemFresh",
            "impact": "Low",
            "line": 1810,
            "line_end": 1904,
            "message": "Reentrancy in AToken.redeemFresh(address,uint256,uint256) (AToken.sol#1810-1904):\n\tExternal calls:\n\t- allowed = comptroller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (AToken.sol#1850)\n\tState variables written after the call(s):\n\t- accountTokens[redeemer] = vars.accountTokensNew (AToken.sol#1894)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Atlantis/atlantis-protocol-bsc-766acebba9316eced1c15abf6158b31f470a947f/contracts/AToken.sol",
            "function": "liquidateBorrowFresh",
            "impact": "Low",
            "line": 2152,
            "line_end": 2221,
            "message": "Reentrancy in AToken.liquidateBorrowFresh(address,address,uint256,ATokenInterface) (AToken.sol#2152-2221):\n\tExternal calls:\n\t- allowed = comptroller.liquidateBorrowAllowed(address(this),address(aTokenCollateral),liquidator,borrower,repayAmount) (AToken.sol#2154)\n\t- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (AToken.sol#2186)\n\t\t- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (AToken.sol#2051)\n\t- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (AToken.sol#2205)\n\t\t- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (AToken.sol#2260)\n\tEvent emitted after the call(s):\n\t- Failure(uint256(err),uint256(info),opaqueError) (AToken.sol#682)\n\t\t- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (AToken.sol#2205)\n\t- Failure(uint256(err),uint256(info),0) (AToken.sol#673)\n\t\t- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (AToken.sol#2205)\n\t- ReservesAdded(address(this),vars.protocolSeizeAmount,vars.totalReservesNew) (AToken.sol#2311)\n\t\t- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (AToken.sol#2205)\n\t- Transfer(borrower,liquidator,vars.liquidatorSeizeTokens) (AToken.sol#2309)\n\t\t- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (AToken.sol#2205)\n\t- Transfer(borrower,address(this),vars.protocolSeizeTokens) (AToken.sol#2310)\n\t\t- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (AToken.sol#2205)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Atlantis/atlantis-protocol-bsc-766acebba9316eced1c15abf6158b31f470a947f/contracts/AToken.sol",
            "function": "redeemFresh",
            "impact": "Low",
            "line": 1810,
            "line_end": 1904,
            "message": "Reentrancy in AToken.redeemFresh(address,uint256,uint256) (AToken.sol#1810-1904):\n\tExternal calls:\n\t- allowed = comptroller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (AToken.sol#1850)\n\tEvent emitted after the call(s):\n\t- Failure(uint256(err),uint256(info),opaqueError) (AToken.sol#682)\n\t\t- failOpaque(Error.MATH_ERROR,FailureInfo.REDEEM_NEW_TOTAL_SUPPLY_CALCULATION_FAILED,uint256(vars.mathErr)) (AToken.sol#1867)\n\t- Failure(uint256(err),uint256(info),0) (AToken.sol#673)\n\t\t- fail(Error.TOKEN_INSUFFICIENT_CASH,FailureInfo.REDEEM_TRANSFER_OUT_NOT_POSSIBLE) (AToken.sol#1877)\n\t- Failure(uint256(err),uint256(info),0) (AToken.sol#673)\n\t\t- fail(Error.MARKET_NOT_FRESH,FailureInfo.REDEEM_FRESHNESS_CHECK) (AToken.sol#1857)\n\t- Failure(uint256(err),uint256(info),opaqueError) (AToken.sol#682)\n\t\t- failOpaque(Error.MATH_ERROR,FailureInfo.REDEEM_NEW_ACCOUNT_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (AToken.sol#1872)\n\t- Failure(uint256(err),uint256(info),opaqueError) (AToken.sol#682)\n\t\t- failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.REDEEM_COMPTROLLER_REJECTION,allowed) (AToken.sol#1852)\n\t- Redeem(redeemer,vars.redeemAmount,vars.redeemTokens) (AToken.sol#1898)\n\t- Transfer(redeemer,address(this),vars.redeemTokens) (AToken.sol#1897)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Atlantis/atlantis-protocol-bsc-766acebba9316eced1c15abf6158b31f470a947f/contracts/AToken.sol",
            "function": "repayBorrowFresh",
            "impact": "Low",
            "line": 2049,
            "line_end": 2116,
            "message": "Reentrancy in AToken.repayBorrowFresh(address,address,uint256) (AToken.sol#2049-2116):\n\tExternal calls:\n\t- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (AToken.sol#2051)\n\tEvent emitted after the call(s):\n\t- Failure(uint256(err),uint256(info),opaqueError) (AToken.sol#682)\n\t\t- (failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.REPAY_BORROW_COMPTROLLER_REJECTION,allowed),0) (AToken.sol#2053)\n\t- Failure(uint256(err),uint256(info),opaqueError) (AToken.sol#682)\n\t\t- (failOpaque(Error.MATH_ERROR,FailureInfo.REPAY_BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)),0) (AToken.sol#2069)\n\t- Failure(uint256(err),uint256(info),0) (AToken.sol#673)\n\t\t- (fail(Error.MARKET_NOT_FRESH,FailureInfo.REPAY_BORROW_FRESHNESS_CHECK),0) (AToken.sol#2058)\n\t- RepayBorrow(payer,borrower,vars.actualRepayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (AToken.sol#2109)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Atlantis/atlantis-protocol-bsc-766acebba9316eced1c15abf6158b31f470a947f/contracts/AToken.sol",
            "function": "liquidateBorrowFresh",
            "impact": "Low",
            "line": 2152,
            "line_end": 2221,
            "message": "Reentrancy in AToken.liquidateBorrowFresh(address,address,uint256,ATokenInterface) (AToken.sol#2152-2221):\n\tExternal calls:\n\t- allowed = comptroller.liquidateBorrowAllowed(address(this),address(aTokenCollateral),liquidator,borrower,repayAmount) (AToken.sol#2154)\n\t- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (AToken.sol#2186)\n\t\t- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (AToken.sol#2051)\n\t- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (AToken.sol#2205)\n\t\t- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (AToken.sol#2260)\n\t- seizeError = aTokenCollateral.seize(liquidator,borrower,seizeTokens) (AToken.sol#2207)\n\tEvent emitted after the call(s):\n\t- LiquidateBorrow(liquidator,borrower,actualRepayAmount,address(aTokenCollateral),seizeTokens) (AToken.sol#2214)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Atlantis/atlantis-protocol-bsc-766acebba9316eced1c15abf6158b31f470a947f/contracts/AToken.sol",
            "function": "borrowFresh",
            "impact": "Low",
            "line": 1934,
            "line_end": 1998,
            "message": "Reentrancy in AToken.borrowFresh(address,uint256) (AToken.sol#1934-1998):\n\tExternal calls:\n\t- allowed = comptroller.borrowAllowed(address(this),borrower,borrowAmount) (AToken.sol#1936)\n\tEvent emitted after the call(s):\n\t- Borrow(borrower,borrowAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (AToken.sol#1991)\n\t- Failure(uint256(err),uint256(info),opaqueError) (AToken.sol#682)\n\t\t- failOpaque(Error.MATH_ERROR,FailureInfo.BORROW_NEW_ACCOUNT_BORROW_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (AToken.sol#1965)\n\t- Failure(uint256(err),uint256(info),opaqueError) (AToken.sol#682)\n\t\t- failOpaque(Error.MATH_ERROR,FailureInfo.BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (AToken.sol#1970)\n\t- Failure(uint256(err),uint256(info),0) (AToken.sol#673)\n\t\t- fail(Error.MARKET_NOT_FRESH,FailureInfo.BORROW_FRESHNESS_CHECK) (AToken.sol#1943)\n\t- Failure(uint256(err),uint256(info),0) (AToken.sol#673)\n\t\t- fail(Error.TOKEN_INSUFFICIENT_CASH,FailureInfo.BORROW_CASH_NOT_AVAILABLE) (AToken.sol#1948)\n\t- Failure(uint256(err),uint256(info),opaqueError) (AToken.sol#682)\n\t\t- failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.BORROW_COMPTROLLER_REJECTION,allowed) (AToken.sol#1938)\n\t- Failure(uint256(err),uint256(info),opaqueError) (AToken.sol#682)\n\t\t- failOpaque(Error.MATH_ERROR,FailureInfo.BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (AToken.sol#1960)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Atlantis/atlantis-protocol-bsc-766acebba9316eced1c15abf6158b31f470a947f/contracts/AToken.sol",
            "function": "liquidateBorrowFresh",
            "impact": "Low",
            "line": 2152,
            "line_end": 2221,
            "message": "Reentrancy in AToken.liquidateBorrowFresh(address,address,uint256,ATokenInterface) (AToken.sol#2152-2221):\n\tExternal calls:\n\t- allowed = comptroller.liquidateBorrowAllowed(address(this),address(aTokenCollateral),liquidator,borrower,repayAmount) (AToken.sol#2154)\n\t- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (AToken.sol#2186)\n\t\t- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (AToken.sol#2051)\n\tEvent emitted after the call(s):\n\t- Failure(uint256(err),uint256(info),0) (AToken.sol#673)\n\t\t- (fail(TokenErrorReporter.Error(repayBorrowError),FailureInfo.LIQUIDATE_REPAY_BORROW_FRESH_FAILED),0) (AToken.sol#2188)\n\t- Failure(uint256(err),uint256(info),0) (AToken.sol#673)\n\t\t- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (AToken.sol#2186)\n\t- Failure(uint256(err),uint256(info),opaqueError) (AToken.sol#682)\n\t\t- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (AToken.sol#2186)\n\t- RepayBorrow(payer,borrower,vars.actualRepayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (AToken.sol#2109)\n\t\t- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (AToken.sol#2186)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Atlantis/atlantis-protocol-bsc-766acebba9316eced1c15abf6158b31f470a947f/contracts/AToken.sol",
            "function": "liquidateBorrowFresh",
            "impact": "Low",
            "line": 2152,
            "line_end": 2221,
            "message": "Reentrancy in AToken.liquidateBorrowFresh(address,address,uint256,ATokenInterface) (AToken.sol#2152-2221):\n\tExternal calls:\n\t- allowed = comptroller.liquidateBorrowAllowed(address(this),address(aTokenCollateral),liquidator,borrower,repayAmount) (AToken.sol#2154)\n\tEvent emitted after the call(s):\n\t- Failure(uint256(err),uint256(info),0) (AToken.sol#673)\n\t\t- (fail(Error.INVALID_CLOSE_AMOUNT_REQUESTED,FailureInfo.LIQUIDATE_CLOSE_AMOUNT_IS_ZERO),0) (AToken.sol#2176)\n\t- Failure(uint256(err),uint256(info),0) (AToken.sol#673)\n\t\t- (fail(Error.INVALID_CLOSE_AMOUNT_REQUESTED,FailureInfo.LIQUIDATE_CLOSE_AMOUNT_IS_UINT_MAX),0) (AToken.sol#2181)\n\t- Failure(uint256(err),uint256(info),opaqueError) (AToken.sol#682)\n\t\t- (failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.LIQUIDATE_COMPTROLLER_REJECTION,allowed),0) (AToken.sol#2156)\n\t- Failure(uint256(err),uint256(info),0) (AToken.sol#673)\n\t\t- (fail(Error.MARKET_NOT_FRESH,FailureInfo.LIQUIDATE_COLLATERAL_FRESHNESS_CHECK),0) (AToken.sol#2166)\n\t- Failure(uint256(err),uint256(info),0) (AToken.sol#673)\n\t\t- (fail(Error.INVALID_ACCOUNT_PAIR,FailureInfo.LIQUIDATE_LIQUIDATOR_IS_BORROWER),0) (AToken.sol#2171)\n\t- Failure(uint256(err),uint256(info),0) (AToken.sol#673)\n\t\t- (fail(Error.MARKET_NOT_FRESH,FailureInfo.LIQUIDATE_FRESHNESS_CHECK),0) (AToken.sol#2161)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "AToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-Atlantis/atlantis-protocol-bsc-766acebba9316eced1c15abf6158b31f470a947f/contracts/AToken.sol",
            "function": "mintFresh",
            "impact": "Low",
            "line": 1693,
            "line_end": 1758,
            "message": "Reentrancy in AToken.mintFresh(address,uint256) (AToken.sol#1693-1758):\n\tExternal calls:\n\t- allowed = comptroller.mintAllowed(address(this),minter,mintAmount) (AToken.sol#1695)\n\tEvent emitted after the call(s):\n\t- Failure(uint256(err),uint256(info),opaqueError) (AToken.sol#682)\n\t\t- (failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.MINT_COMPTROLLER_REJECTION,allowed),0) (AToken.sol#1697)\n\t- Failure(uint256(err),uint256(info),opaqueError) (AToken.sol#682)\n\t\t- (failOpaque(Error.MATH_ERROR,FailureInfo.MINT_EXCHANGE_RATE_READ_FAILED,uint256(vars.mathErr)),0) (AToken.sol#1709)\n\t- Failure(uint256(err),uint256(info),0) (AToken.sol#673)\n\t\t- (fail(Error.MARKET_NOT_FRESH,FailureInfo.MINT_FRESHNESS_CHECK),0) (AToken.sol#1702)\n\t- Mint(minter,vars.actualMintAmount,vars.mintTokens) (AToken.sol#1750)\n\t- Transfer(address(this),minter,vars.mintTokens) (AToken.sol#1751)\n",
            "name": "reentrancy-events",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}