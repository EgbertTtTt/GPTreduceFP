'solc --version' running
'solc /sb/strategy-base.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running

StrategyBase._swapUniswap(address,address,uint256) (../../sb/strategy-base.sol#1408-1439) ignores return value by UniswapRouterV2(univ2Router2).swapExactTokensForTokens(_amount,0,path,address(this),now.add(60)) (../../sb/strategy-base.sol#1432-1438)
StrategyBase._swapUniswapWithPath(address[],uint256) (../../sb/strategy-base.sol#1442-1459) ignores return value by UniswapRouterV2(univ2Router2).swapExactTokensForTokens(_amount,0,path,address(this),now.add(60)) (../../sb/strategy-base.sol#1452-1458)
StrategyBase._swapSushiswap(address,address,uint256) (../../sb/strategy-base.sol#1462-1493) ignores return value by UniswapRouterV2(sushiRouter).swapExactTokensForTokens(_amount,0,path,address(this),now.add(60)) (../../sb/strategy-base.sol#1486-1492)
StrategyBase._swapSushiswapWithPath(address[],uint256) (../../sb/strategy-base.sol#1496-1513) ignores return value by UniswapRouterV2(sushiRouter).swapExactTokensForTokens(_amount,0,path,address(this),now.add(60)) (../../sb/strategy-base.sol#1506-1512)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

ERC20.constructor(string,string).name (../../sb/strategy-base.sol#445) shadows:
	- ERC20.name() (../../sb/strategy-base.sol#456-458) (function)
ERC20.constructor(string,string).symbol (../../sb/strategy-base.sol#445) shadows:
	- ERC20.symbol() (../../sb/strategy-base.sol#464-466) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

StrategyBase.setStrategist(address) (../../sb/strategy-base.sol#1295-1298) should emit an event for: 
	- strategist = _strategist (../../sb/strategy-base.sol#1297) 
StrategyBase.setController(address) (../../sb/strategy-base.sol#1300-1303) should emit an event for: 
	- controller = _controller (../../sb/strategy-base.sol#1302) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

StrategyBase.setPerformanceDevFee(uint256) (../../sb/strategy-base.sol#1283-1286) should emit an event for: 
	- performanceDevFee = _performanceDevFee (../../sb/strategy-base.sol#1285) 
StrategyBase.setPerformanceTreasuryFee(uint256) (../../sb/strategy-base.sol#1288-1293) should emit an event for: 
	- performanceTreasuryFee = _performanceTreasuryFee (../../sb/strategy-base.sol#1292) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

StrategyBase.constructor(address,address,address)._controller (../../sb/strategy-base.sol#1222) lacks a zero-check on :
		- controller = _controller (../../sb/strategy-base.sol#1229)
StrategyBase.setStrategist(address)._strategist (../../sb/strategy-base.sol#1295) lacks a zero-check on :
		- strategist = _strategist (../../sb/strategy-base.sol#1297)
StrategyBase.setController(address)._controller (../../sb/strategy-base.sol#1300) lacks a zero-check on :
		- controller = _controller (../../sb/strategy-base.sol#1302)
StrategyBase.setUniv2Router2(address)._univ2Router2 (../../sb/strategy-base.sol#1305) lacks a zero-check on :
		- univ2Router2 = _univ2Router2 (../../sb/strategy-base.sol#1307)
StrategyBase.setSushiRouter(address)._sushiRouter (../../sb/strategy-base.sol#1310) lacks a zero-check on :
		- sushiRouter = _sushiRouter (../../sb/strategy-base.sol#1312)
StrategyBase.setWETH(address)._weth (../../sb/strategy-base.sol#1315) lacks a zero-check on :
		- weth = _weth (../../sb/strategy-base.sol#1317)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Address.isContract(address) (../../sb/strategy-base.sol#280-289) uses assembly
	- INLINE ASM (../../sb/strategy-base.sol#287)
Address._functionCallWithValue(address,bytes,uint256,string) (../../sb/strategy-base.sol#373-394) uses assembly
	- INLINE ASM (../../sb/strategy-base.sol#386-389)
StrategyBase.execute(address,bytes) (../../sb/strategy-base.sol#1370-1404) uses assembly
	- INLINE ASM (../../sb/strategy-base.sol#1379-1403)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

Address.functionCall(address,bytes) (../../sb/strategy-base.sol#333-335) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sb/strategy-base.sol#358-360) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (../../sb/strategy-base.sol#368-371) is never used and should be removed
Address.sendValue(address,uint256) (../../sb/strategy-base.sol#307-313) is never used and should be removed
Context._msgData() (../../sb/strategy-base.sol#176-179) is never used and should be removed
ERC20._burn(address,uint256) (../../sb/strategy-base.sol#640-648) is never used and should be removed
ERC20._mint(address,uint256) (../../sb/strategy-base.sol#619-627) is never used and should be removed
ERC20._setupDecimals(uint8) (../../sb/strategy-base.sol#678-680) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sb/strategy-base.sol#727-736) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sb/strategy-base.sol#743-746) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sb/strategy-base.sol#738-741) is never used and should be removed
SafeERC20.safeTransferFrom(IERC20,address,address,uint256) (../../sb/strategy-base.sol#716-718) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sb/strategy-base.sol#139-141) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sb/strategy-base.sol#155-158) is never used and should be removed
StrategyBase._distributePerformanceFeesAndDeposit() (../../sb/strategy-base.sol#1515-1533) is never used and should be removed
StrategyBase._swapSushiswap(address,address,uint256) (../../sb/strategy-base.sol#1462-1493) is never used and should be removed
StrategyBase._swapSushiswapWithPath(address[],uint256) (../../sb/strategy-base.sol#1496-1513) is never used and should be removed
StrategyBase._swapUniswap(address,address,uint256) (../../sb/strategy-base.sol#1408-1439) is never used and should be removed
StrategyBase._swapUniswapWithPath(address[],uint256) (../../sb/strategy-base.sol#1442-1459) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Pragma version^0.6.7 (../../sb/strategy-base.sol#1) allows old versions
solc-0.6.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Address.sendValue(address,uint256) (../../sb/strategy-base.sol#307-313):
	- (success) = recipient.call{value: amount}() (../../sb/strategy-base.sol#311)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (../../sb/strategy-base.sol#373-394):
	- (success,returndata) = target.call{value: weiValue}(data) (../../sb/strategy-base.sol#377)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function IMasterchef.BONUS_MULTIPLIER() (../../sb/strategy-base.sol#877) is not in mixedCase
Function IUniswapV2Pair.DOMAIN_SEPARATOR() (../../sb/strategy-base.sol#1067) is not in mixedCase
Function IUniswapV2Pair.PERMIT_TYPEHASH() (../../sb/strategy-base.sol#1069) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (../../sb/strategy-base.sol#1100) is not in mixedCase
Parameter StrategyBase.whitelistHarvester(address)._harvester (../../sb/strategy-base.sol#1261) is not in mixedCase
Parameter StrategyBase.revokeHarvester(address)._harvester (../../sb/strategy-base.sol#1267) is not in mixedCase
Parameter StrategyBase.setWithdrawalDevFundFee(uint256)._withdrawalDevFundFee (../../sb/strategy-base.sol#1273) is not in mixedCase
Parameter StrategyBase.setWithdrawalTreasuryFee(uint256)._withdrawalTreasuryFee (../../sb/strategy-base.sol#1278) is not in mixedCase
Parameter StrategyBase.setPerformanceDevFee(uint256)._performanceDevFee (../../sb/strategy-base.sol#1283) is not in mixedCase
Parameter StrategyBase.setPerformanceTreasuryFee(uint256)._performanceTreasuryFee (../../sb/strategy-base.sol#1288) is not in mixedCase
Parameter StrategyBase.setStrategist(address)._strategist (../../sb/strategy-base.sol#1295) is not in mixedCase
Parameter StrategyBase.setController(address)._controller (../../sb/strategy-base.sol#1300) is not in mixedCase
Parameter StrategyBase.setUniv2Router2(address)._univ2Router2 (../../sb/strategy-base.sol#1305) is not in mixedCase
Parameter StrategyBase.setSushiRouter(address)._sushiRouter (../../sb/strategy-base.sol#1310) is not in mixedCase
Parameter StrategyBase.setWETH(address)._weth (../../sb/strategy-base.sol#1315) is not in mixedCase
Parameter StrategyBase.withdraw(uint256)._amount (../../sb/strategy-base.sol#1324) is not in mixedCase
Parameter StrategyBase.withdrawAll(address)._newStrategy (../../sb/strategy-base.sol#1350) is not in mixedCase
Parameter StrategyBase.execute(address,bytes)._target (../../sb/strategy-base.sol#1370) is not in mixedCase
Parameter StrategyBase.execute(address,bytes)._data (../../sb/strategy-base.sol#1370) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Redundant expression "this (../../sb/strategy-base.sol#177)" inContext (../../sb/strategy-base.sol#171-180)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements

Variable UniswapRouterV2.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (../../sb/strategy-base.sol#969) is too similar to UniswapRouterV2.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (../../sb/strategy-base.sol#970)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar

StrategyBase.slitherConstructorConstantVariables() (../../sb/strategy-base.sol#1184-1534) uses literals with too many digits:
	- withdrawalTreasuryMax = 100000 (../../sb/strategy-base.sol#1200)
StrategyBase.slitherConstructorConstantVariables() (../../sb/strategy-base.sol#1184-1534) uses literals with too many digits:
	- withdrawalDevFundMax = 100000 (../../sb/strategy-base.sol#1203)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

StrategyBase (../../sb/strategy-base.sol#1184-1534) does not implement functions:
	- StrategyBase._withdrawSome(uint256) (../../sb/strategy-base.sol#1364)
	- StrategyBase.balanceOfPool() (../../sb/strategy-base.sol#1251)
	- StrategyBase.deposit() (../../sb/strategy-base.sol#1321)
	- StrategyBase.getName() (../../sb/strategy-base.sol#1257)
	- StrategyBase.harvest() (../../sb/strategy-base.sol#1366)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unimplemented-functions

StrategyBase.lp (../../sb/strategy-base.sol#1206) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
/sb/strategy-base.sol analyzed (15 contracts with 93 detectors), 67 result(s) found
