'solc --version' running
'solc /sb/code.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/sb' running

Galeon.unlockTransferLimit() (../../sb/code.sol#591-598) compares to a boolean constant:
	-require(bool,string)(limitEnabled == true,Action can be done only once) (../../sb/code.sol#593)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality

Context._msgData() (../../sb/code.sol#24-26) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Pragma version^0.8.11 (../../sb/code.sol#1) allows old versions
solc-0.8.27 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Galeon.constructor() (../../sb/code.sol#582-589) uses literals with too many digits:
	- _mint(0xc0B3974C64ba269A0Ebd5DD698aC496Fcb817aa9,1056000000 * 10 ** decimals()) (../../sb/code.sol#584)
Galeon.constructor() (../../sb/code.sol#582-589) uses literals with too many digits:
	- ERC20Capped(4000000000 * 10 ** decimals()) (../../sb/code.sol#582)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
/sb/code.sol analyzed (7 contracts with 93 detectors), 6 result(s) found
