'solc --version' running
'solc /sb/Contract.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running
Compilation warnings/errors on /sb/Contract.sol:
/sb/Contract.sol:287:12: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    data = keccak256(_location, execID());
           ^----------------------------^
/sb/Contract.sol:448:11: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    val = keccak256(_field, execID());
          ^-------------------------^
/sb/Contract.sol:476:11: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    val = keccak256(_field, execID());
          ^-------------------------^


Contract.authorize(address) (../../sb/Contract.sol#66-103) is declared view but contains assembly code
Contract.initialize() (../../sb/Contract.sol#114-134) is declared view but contains assembly code
Contract.commit() (../../sb/Contract.sol#150-162) is declared view but contains assembly code
Contract.buffPtr() (../../sb/Contract.sol#178-180) is declared view but contains assembly code
Contract.freeMem() (../../sb/Contract.sol#183-185) is declared view but contains assembly code
Contract.currentAction() (../../sb/Contract.sol#188-193) is declared view but contains assembly code
Contract.startBuffer() (../../sb/Contract.sol#214-227) is declared view but contains assembly code
Contract.execID() (../../sb/Contract.sol#271-274) is declared view but contains assembly code
Contract.sender() (../../sb/Contract.sol#277-280) is declared view but contains assembly code
Contract.read(bytes32) (../../sb/Contract.sol#286-289) is declared view but contains assembly code
Contract.storing() (../../sb/Contract.sol#358-382) is declared view but contains assembly code
Contract.set(bytes32) (../../sb/Contract.sol#385-408) is declared view but contains assembly code
Contract.to(bytes32,bytes32) (../../sb/Contract.sol#411-426) is declared view but contains assembly code
Contract.increase(bytes32) (../../sb/Contract.sol#446-472) is declared view but contains assembly code
Contract.decrease(bytes32) (../../sb/Contract.sol#474-500) is declared view but contains assembly code
Contract.by(bytes32,uint256) (../../sb/Contract.sol#502-526) is declared view but contains assembly code
Contract.byMaximum(bytes32,uint256) (../../sb/Contract.sol#529-555) is declared view but contains assembly code
Contract.emitting() (../../sb/Contract.sol#559-582) is declared view but contains assembly code
Contract.log(bytes32) (../../sb/Contract.sol#584-617) is declared view but contains assembly code
Contract.log(bytes32[1],bytes32) (../../sb/Contract.sol#619-654) is declared view but contains assembly code
Contract.log(bytes32[2],bytes32) (../../sb/Contract.sol#656-692) is declared view but contains assembly code
Contract.log(bytes32[3],bytes32) (../../sb/Contract.sol#694-731) is declared view but contains assembly code
Contract.log(bytes32[4],bytes32) (../../sb/Contract.sol#733-771) is declared view but contains assembly code
Contract.paying() (../../sb/Contract.sol#775-798) is declared view but contains assembly code
Contract.pay(uint256) (../../sb/Contract.sol#801-824) is declared view but contains assembly code
Contract.toAcc(uint256,address) (../../sb/Contract.sol#827-842) is declared view but contains assembly code
Contract.expected() (../../sb/Contract.sol#845-847) is declared view but contains assembly code
Contract.emitted() (../../sb/Contract.sol#850-856) is declared view but contains assembly code
Contract.stored() (../../sb/Contract.sol#859-865) is declared view but contains assembly code
Contract.paid() (../../sb/Contract.sol#868-874) is declared view but contains assembly code
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#constant-functions-using-assembly-code

Contract.authorize(address) (../../sb/Contract.sol#66-103) uses assembly
	- INLINE ASM (../../sb/Contract.sol#72-86)
	- INLINE ASM (../../sb/Contract.sol#90-101)
Contract.initialize() (../../sb/Contract.sol#114-134) uses assembly
	- INLINE ASM (../../sb/Contract.sol#119-133)
Contract.commit() (../../sb/Contract.sol#150-162) uses assembly
	- INLINE ASM (../../sb/Contract.sol#155-162)
Contract.buffPtr() (../../sb/Contract.sol#178-180) uses assembly
	- INLINE ASM (../../sb/Contract.sol#179-180)
Contract.freeMem() (../../sb/Contract.sol#183-185) uses assembly
	- INLINE ASM (../../sb/Contract.sol#184-185)
Contract.currentAction() (../../sb/Contract.sol#188-193) uses assembly
	- INLINE ASM (../../sb/Contract.sol#192-193)
Contract.startBuffer() (../../sb/Contract.sol#214-227) uses assembly
	- INLINE ASM (../../sb/Contract.sol#215-227)
Contract.execID() (../../sb/Contract.sol#271-274) uses assembly
	- INLINE ASM (../../sb/Contract.sol#272-273)
Contract.sender() (../../sb/Contract.sol#277-280) uses assembly
	- INLINE ASM (../../sb/Contract.sol#278-279)
Contract.read(bytes32) (../../sb/Contract.sol#286-289) uses assembly
	- INLINE ASM (../../sb/Contract.sol#288-289)
Contract.storing() (../../sb/Contract.sol#358-382) uses assembly
	- INLINE ASM (../../sb/Contract.sol#360-382)
Contract.set(bytes32) (../../sb/Contract.sol#385-408) uses assembly
	- INLINE ASM (../../sb/Contract.sol#386-407)
Contract.to(bytes32,bytes32) (../../sb/Contract.sol#411-426) uses assembly
	- INLINE ASM (../../sb/Contract.sol#412-426)
Contract.increase(bytes32) (../../sb/Contract.sol#446-472) uses assembly
	- INLINE ASM (../../sb/Contract.sol#449-471)
Contract.decrease(bytes32) (../../sb/Contract.sol#474-500) uses assembly
	- INLINE ASM (../../sb/Contract.sol#477-499)
Contract.by(bytes32,uint256) (../../sb/Contract.sol#502-526) uses assembly
	- INLINE ASM (../../sb/Contract.sol#512-526)
Contract.byMaximum(bytes32,uint256) (../../sb/Contract.sol#529-555) uses assembly
	- INLINE ASM (../../sb/Contract.sol#541-555)
Contract.emitting() (../../sb/Contract.sol#559-582) uses assembly
	- INLINE ASM (../../sb/Contract.sol#561-582)
Contract.log(bytes32) (../../sb/Contract.sol#584-617) uses assembly
	- INLINE ASM (../../sb/Contract.sol#585-617)
Contract.log(bytes32[1],bytes32) (../../sb/Contract.sol#619-654) uses assembly
	- INLINE ASM (../../sb/Contract.sol#620-654)
Contract.log(bytes32[2],bytes32) (../../sb/Contract.sol#656-692) uses assembly
	- INLINE ASM (../../sb/Contract.sol#657-692)
Contract.log(bytes32[3],bytes32) (../../sb/Contract.sol#694-731) uses assembly
	- INLINE ASM (../../sb/Contract.sol#695-731)
Contract.log(bytes32[4],bytes32) (../../sb/Contract.sol#733-771) uses assembly
	- INLINE ASM (../../sb/Contract.sol#734-771)
Contract.paying() (../../sb/Contract.sol#775-798) uses assembly
	- INLINE ASM (../../sb/Contract.sol#777-798)
Contract.pay(uint256) (../../sb/Contract.sol#801-824) uses assembly
	- INLINE ASM (../../sb/Contract.sol#802-823)
Contract.toAcc(uint256,address) (../../sb/Contract.sol#827-842) uses assembly
	- INLINE ASM (../../sb/Contract.sol#828-842)
Contract.expected() (../../sb/Contract.sol#845-847) uses assembly
	- INLINE ASM (../../sb/Contract.sol#846-847)
Contract.emitted() (../../sb/Contract.sol#850-856) uses assembly
	- INLINE ASM (../../sb/Contract.sol#855-856)
Contract.stored() (../../sb/Contract.sol#859-865) uses assembly
	- INLINE ASM (../../sb/Contract.sol#864-865)
Contract.paid() (../../sb/Contract.sol#868-874) uses assembly
	- INLINE ASM (../../sb/Contract.sol#873-874)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

Contract.authorize(address) (../../sb/Contract.sol#66-103) is never used and should be removed
Contract.buffPtr() (../../sb/Contract.sol#178-180) is never used and should be removed
Contract.by(bytes32,uint256) (../../sb/Contract.sol#502-526) is never used and should be removed
Contract.byMaximum(bytes32,uint256) (../../sb/Contract.sol#529-555) is never used and should be removed
Contract.checks(function()) (../../sb/Contract.sol#138-140) is never used and should be removed
Contract.commit() (../../sb/Contract.sol#150-162) is never used and should be removed
Contract.currentAction() (../../sb/Contract.sol#188-193) is never used and should be removed
Contract.decrease(bytes32) (../../sb/Contract.sol#474-500) is never used and should be removed
Contract.emitted() (../../sb/Contract.sol#850-856) is never used and should be removed
Contract.emitting() (../../sb/Contract.sol#559-582) is never used and should be removed
Contract.execID() (../../sb/Contract.sol#271-274) is never used and should be removed
Contract.expected() (../../sb/Contract.sol#845-847) is never used and should be removed
Contract.freeMem() (../../sb/Contract.sol#183-185) is never used and should be removed
Contract.increase(bytes32) (../../sb/Contract.sol#446-472) is never used and should be removed
Contract.initialize() (../../sb/Contract.sol#114-134) is never used and should be removed
Contract.isEmitting() (../../sb/Contract.sol#202-205) is never used and should be removed
Contract.isPaying() (../../sb/Contract.sol#208-211) is never used and should be removed
Contract.isStoring() (../../sb/Contract.sol#196-199) is never used and should be removed
Contract.log(bytes32) (../../sb/Contract.sol#584-617) is never used and should be removed
Contract.log(bytes32[1],bytes32) (../../sb/Contract.sol#619-654) is never used and should be removed
Contract.log(bytes32[2],bytes32) (../../sb/Contract.sol#656-692) is never used and should be removed
Contract.log(bytes32[3],bytes32) (../../sb/Contract.sol#694-731) is never used and should be removed
Contract.log(bytes32[4],bytes32) (../../sb/Contract.sol#733-771) is never used and should be removed
Contract.none() (../../sb/Contract.sol#266) is never used and should be removed
Contract.paid() (../../sb/Contract.sol#868-874) is never used and should be removed
Contract.pay(uint256) (../../sb/Contract.sol#801-824) is never used and should be removed
Contract.paying() (../../sb/Contract.sol#775-798) is never used and should be removed
Contract.read(bytes32) (../../sb/Contract.sol#286-289) is never used and should be removed
Contract.sender() (../../sb/Contract.sol#277-280) is never used and should be removed
Contract.set(bytes32) (../../sb/Contract.sol#385-408) is never used and should be removed
Contract.startBuffer() (../../sb/Contract.sol#214-227) is never used and should be removed
Contract.stored() (../../sb/Contract.sol#859-865) is never used and should be removed
Contract.storing() (../../sb/Contract.sol#358-382) is never used and should be removed
Contract.to(bytes32,address) (../../sb/Contract.sol#434-436) is never used and should be removed
Contract.to(bytes32,bool) (../../sb/Contract.sol#439-444) is never used and should be removed
Contract.to(bytes32,bytes32) (../../sb/Contract.sol#411-426) is never used and should be removed
Contract.to(bytes32,uint256) (../../sb/Contract.sol#429-431) is never used and should be removed
Contract.toAcc(uint256,address) (../../sb/Contract.sol#827-842) is never used and should be removed
Contract.validEmitBuff() (../../sb/Contract.sol#242-251) is never used and should be removed
Contract.validEvent() (../../sb/Contract.sol#347-354) is never used and should be removed
Contract.validPayAmt() (../../sb/Contract.sol#337-344) is never used and should be removed
Contract.validPayBuff() (../../sb/Contract.sol#254-263) is never used and should be removed
Contract.validPayDest() (../../sb/Contract.sol#327-334) is never used and should be removed
Contract.validState() (../../sb/Contract.sol#167-175) is never used and should be removed
Contract.validStoreBuff() (../../sb/Contract.sol#230-239) is never used and should be removed
Contract.validStoreDest() (../../sb/Contract.sol#304-311) is never used and should be removed
Contract.validStoreVal() (../../sb/Contract.sol#314-324) is never used and should be removed
SafeMath.add(uint256,uint256) (../../sb/Contract.sol#36-40) is never used and should be removed
SafeMath.div(uint256,uint256) (../../sb/Contract.sol#21-23) is never used and should be removed
SafeMath.mul(uint256,uint256) (../../sb/Contract.sol#9-16) is never used and should be removed
SafeMath.sub(uint256,uint256) (../../sb/Contract.sol#28-31) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Pragma version^0.4.23 (../../sb/Contract.sol#1) allows old versions
solc-0.4.26 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter Contract.authorize(address)._script_exec (../../sb/Contract.sol#66) is not in mixedCase
Parameter Contract.checks(function())._check (../../sb/Contract.sol#144) is not in mixedCase
Parameter Contract.read(bytes32)._location (../../sb/Contract.sol#286) is not in mixedCase
Parameter Contract.set(bytes32)._field (../../sb/Contract.sol#385) is not in mixedCase
Parameter Contract.to(bytes32,uint256)._field (../../sb/Contract.sol#429) is not in mixedCase
Parameter Contract.to(bytes32,uint256)._val (../../sb/Contract.sol#429) is not in mixedCase
Parameter Contract.to(bytes32,address)._field (../../sb/Contract.sol#434) is not in mixedCase
Parameter Contract.to(bytes32,address)._val (../../sb/Contract.sol#434) is not in mixedCase
Parameter Contract.to(bytes32,bool)._field (../../sb/Contract.sol#439) is not in mixedCase
Parameter Contract.to(bytes32,bool)._val (../../sb/Contract.sol#439) is not in mixedCase
Parameter Contract.increase(bytes32)._field (../../sb/Contract.sol#446) is not in mixedCase
Parameter Contract.decrease(bytes32)._field (../../sb/Contract.sol#474) is not in mixedCase
Parameter Contract.by(bytes32,uint256)._val (../../sb/Contract.sol#502) is not in mixedCase
Parameter Contract.by(bytes32,uint256)._amt (../../sb/Contract.sol#502) is not in mixedCase
Parameter Contract.byMaximum(bytes32,uint256)._val (../../sb/Contract.sol#529) is not in mixedCase
Parameter Contract.byMaximum(bytes32,uint256)._amt (../../sb/Contract.sol#529) is not in mixedCase
Parameter Contract.pay(uint256)._amount (../../sb/Contract.sol#801) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Contract.THROWS (../../sb/Contract.sol#296) is never used in Contract (../../sb/Contract.sol#43-875)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
/sb/Contract.sol analyzed (2 contracts with 93 detectors), 131 result(s) found
