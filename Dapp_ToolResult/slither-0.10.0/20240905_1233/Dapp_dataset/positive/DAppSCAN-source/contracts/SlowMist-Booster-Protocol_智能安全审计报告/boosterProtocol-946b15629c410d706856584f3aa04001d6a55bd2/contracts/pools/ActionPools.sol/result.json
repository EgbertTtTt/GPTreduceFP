{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "safeTokenTransfer",
            "impact": "High",
            "line": 1365,
            "line_end": 1372,
            "message": "ActionPools.safeTokenTransfer(IERC20,address,uint256) (ActionPools.sol#1365-1372) ignores return value by _token.transfer(_to,value) (ActionPools.sol#1370)\n",
            "name": "unchecked-transfer",
            "check": "TP"
        },
        {
            "confidence": "High",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "receive",
            "impact": "Medium",
            "line": 1016,
            "line_end": 1373,
            "message": "Contract locking ether found:\n\tContract ActionPools (ActionPools.sol#1016-1373) has payable functions:\n\t - ActionPools.receive() (ActionPools.sol#1070-1072)\n\tBut does not have a function to withdraw the ether\n",
            "name": "locked-ether",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "_claim",
            "impact": "Medium",
            "line": 1325,
            "line_end": 1348,
            "message": "Reentrancy in ActionPools._claim(uint256,address) (ActionPools.sol#1325-1348):\n\tExternal calls:\n\t- updatePool(_pid) (ActionPools.sol#1326)\n\t\t- booToken.mint(address(this),poolReward) (ActionPools.sol#1206)\n\t\t- booToken.mint(boodev,poolReward.div(8)) (ActionPools.sol#1207)\n\tState variables written after the call(s):\n\t- pool.lastRewardClosed = safesub(pool.lastRewardClosed,value) (ActionPools.sol#1339)\n\tActionPools.poolInfo (ActionPools.sol#1041) can be used in cross function reentrancies:\n\t- ActionPools._claim(uint256,address) (ActionPools.sol#1325-1348)\n\t- ActionPools.add(address,uint256,address,uint256) (ActionPools.sol#1090-1110)\n\t- ActionPools.claimAll() (ActionPools.sol#1313-1319)\n\t- ActionPools.deposit(uint256,address,uint256,uint256) (ActionPools.sol#1282-1295)\n\t- ActionPools.getBlocksReward(uint256,uint256,uint256) (ActionPools.sol#1136-1156)\n\t- ActionPools.getPoolInfo(uint256) (ActionPools.sol#1078-1083)\n\t- ActionPools.massUpdatePools() (ActionPools.sol#1182-1187)\n\t- ActionPools.mintRewards(uint256) (ActionPools.sol#1266-1279)\n\t- ActionPools.onAcionClaim(uint256,address) (ActionPools.sol#1235-1246)\n\t- ActionPools.onAcionUpdate(uint256) (ActionPools.sol#1253-1264)\n\t- ActionPools.pendingRewards(uint256,address) (ActionPools.sol#1159-1167)\n\t- ActionPools.poolInfo (ActionPools.sol#1041)\n\t- ActionPools.poolLength() (ActionPools.sol#1074-1076)\n\t- ActionPools.setAutoClaim(uint256,bool) (ActionPools.sol#1121-1123)\n\t- ActionPools.setAutoUpdate(uint256,bool) (ActionPools.sol#1117-1119)\n\t- ActionPools.setRewardMaxPerBlock(uint256,uint256) (ActionPools.sol#1113-1115)\n\t- ActionPools.totalRewards(uint256,address,uint256,uint256) (ActionPools.sol#1169-1179)\n\t- ActionPools.updatePool(uint256) (ActionPools.sol#1190-1213)\n\t- ActionPools.withdraw(uint256,address,uint256,uint256) (ActionPools.sol#1298-1311)\n\t- pool.poolTotalRewards = safesub(pool.poolTotalRewards,value) (ActionPools.sol#1340)\n\tActionPools.poolInfo (ActionPools.sol#1041) can be used in cross function reentrancies:\n\t- ActionPools._claim(uint256,address) (ActionPools.sol#1325-1348)\n\t- ActionPools.add(address,uint256,address,uint256) (ActionPools.sol#1090-1110)\n\t- ActionPools.claimAll() (ActionPools.sol#1313-1319)\n\t- ActionPools.deposit(uint256,address,uint256,uint256) (ActionPools.sol#1282-1295)\n\t- ActionPools.getBlocksReward(uint256,uint256,uint256) (ActionPools.sol#1136-1156)\n\t- ActionPools.getPoolInfo(uint256) (ActionPools.sol#1078-1083)\n\t- ActionPools.massUpdatePools() (ActionPools.sol#1182-1187)\n\t- ActionPools.mintRewards(uint256) (ActionPools.sol#1266-1279)\n\t- ActionPools.onAcionClaim(uint256,address) (ActionPools.sol#1235-1246)\n\t- ActionPools.onAcionUpdate(uint256) (ActionPools.sol#1253-1264)\n\t- ActionPools.pendingRewards(uint256,address) (ActionPools.sol#1159-1167)\n\t- ActionPools.poolInfo (ActionPools.sol#1041)\n\t- ActionPools.poolLength() (ActionPools.sol#1074-1076)\n\t- ActionPools.setAutoClaim(uint256,bool) (ActionPools.sol#1121-1123)\n\t- ActionPools.setAutoUpdate(uint256,bool) (ActionPools.sol#1117-1119)\n\t- ActionPools.setRewardMaxPerBlock(uint256,uint256) (ActionPools.sol#1113-1115)\n\t- ActionPools.totalRewards(uint256,address,uint256,uint256) (ActionPools.sol#1169-1179)\n\t- ActionPools.updatePool(uint256) (ActionPools.sol#1190-1213)\n\t- ActionPools.withdraw(uint256,address,uint256,uint256) (ActionPools.sol#1298-1311)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "mintRewards",
            "impact": "Medium",
            "line": 1266,
            "line_end": 1279,
            "message": "Reentrancy in ActionPools.mintRewards(uint256) (ActionPools.sol#1266-1279):\n\tExternal calls:\n\t- updatePool(_pid) (ActionPools.sol#1267)\n\t\t- booToken.mint(address(this),poolReward) (ActionPools.sol#1206)\n\t\t- booToken.mint(boodev,poolReward.div(8)) (ActionPools.sol#1207)\n\tState variables written after the call(s):\n\t- pool.poolTotalRewards = pool.poolTotalRewards.add(mint) (ActionPools.sol#1276)\n\tActionPools.poolInfo (ActionPools.sol#1041) can be used in cross function reentrancies:\n\t- ActionPools._claim(uint256,address) (ActionPools.sol#1325-1348)\n\t- ActionPools.add(address,uint256,address,uint256) (ActionPools.sol#1090-1110)\n\t- ActionPools.claimAll() (ActionPools.sol#1313-1319)\n\t- ActionPools.deposit(uint256,address,uint256,uint256) (ActionPools.sol#1282-1295)\n\t- ActionPools.getBlocksReward(uint256,uint256,uint256) (ActionPools.sol#1136-1156)\n\t- ActionPools.getPoolInfo(uint256) (ActionPools.sol#1078-1083)\n\t- ActionPools.massUpdatePools() (ActionPools.sol#1182-1187)\n\t- ActionPools.mintRewards(uint256) (ActionPools.sol#1266-1279)\n\t- ActionPools.onAcionClaim(uint256,address) (ActionPools.sol#1235-1246)\n\t- ActionPools.onAcionUpdate(uint256) (ActionPools.sol#1253-1264)\n\t- ActionPools.pendingRewards(uint256,address) (ActionPools.sol#1159-1167)\n\t- ActionPools.poolInfo (ActionPools.sol#1041)\n\t- ActionPools.poolLength() (ActionPools.sol#1074-1076)\n\t- ActionPools.setAutoClaim(uint256,bool) (ActionPools.sol#1121-1123)\n\t- ActionPools.setAutoUpdate(uint256,bool) (ActionPools.sol#1117-1119)\n\t- ActionPools.setRewardMaxPerBlock(uint256,uint256) (ActionPools.sol#1113-1115)\n\t- ActionPools.totalRewards(uint256,address,uint256,uint256) (ActionPools.sol#1169-1179)\n\t- ActionPools.updatePool(uint256) (ActionPools.sol#1190-1213)\n\t- ActionPools.withdraw(uint256,address,uint256,uint256) (ActionPools.sol#1298-1311)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "updatePool",
            "impact": "Medium",
            "line": 1190,
            "line_end": 1213,
            "message": "Reentrancy in ActionPools.updatePool(uint256) (ActionPools.sol#1190-1213):\n\tExternal calls:\n\t- booToken.mint(address(this),poolReward) (ActionPools.sol#1206)\n\t- booToken.mint(boodev,poolReward.div(8)) (ActionPools.sol#1207)\n\tState variables written after the call(s):\n\t- pool.lastRewardClosed = pool.lastRewardClosed.add(poolReward) (ActionPools.sol#1209)\n\tActionPools.poolInfo (ActionPools.sol#1041) can be used in cross function reentrancies:\n\t- ActionPools._claim(uint256,address) (ActionPools.sol#1325-1348)\n\t- ActionPools.add(address,uint256,address,uint256) (ActionPools.sol#1090-1110)\n\t- ActionPools.claimAll() (ActionPools.sol#1313-1319)\n\t- ActionPools.deposit(uint256,address,uint256,uint256) (ActionPools.sol#1282-1295)\n\t- ActionPools.getBlocksReward(uint256,uint256,uint256) (ActionPools.sol#1136-1156)\n\t- ActionPools.getPoolInfo(uint256) (ActionPools.sol#1078-1083)\n\t- ActionPools.massUpdatePools() (ActionPools.sol#1182-1187)\n\t- ActionPools.mintRewards(uint256) (ActionPools.sol#1266-1279)\n\t- ActionPools.onAcionClaim(uint256,address) (ActionPools.sol#1235-1246)\n\t- ActionPools.onAcionUpdate(uint256) (ActionPools.sol#1253-1264)\n\t- ActionPools.pendingRewards(uint256,address) (ActionPools.sol#1159-1167)\n\t- ActionPools.poolInfo (ActionPools.sol#1041)\n\t- ActionPools.poolLength() (ActionPools.sol#1074-1076)\n\t- ActionPools.setAutoClaim(uint256,bool) (ActionPools.sol#1121-1123)\n\t- ActionPools.setAutoUpdate(uint256,bool) (ActionPools.sol#1117-1119)\n\t- ActionPools.setRewardMaxPerBlock(uint256,uint256) (ActionPools.sol#1113-1115)\n\t- ActionPools.totalRewards(uint256,address,uint256,uint256) (ActionPools.sol#1169-1179)\n\t- ActionPools.updatePool(uint256) (ActionPools.sol#1190-1213)\n\t- ActionPools.withdraw(uint256,address,uint256,uint256) (ActionPools.sol#1298-1311)\n\t- pool.accRewardPerShare = pool.accRewardPerShare.add(poolReward.mul(1e18).div(poolTotalAmount)) (ActionPools.sol#1210)\n\tActionPools.poolInfo (ActionPools.sol#1041) can be used in cross function reentrancies:\n\t- ActionPools._claim(uint256,address) (ActionPools.sol#1325-1348)\n\t- ActionPools.add(address,uint256,address,uint256) (ActionPools.sol#1090-1110)\n\t- ActionPools.claimAll() (ActionPools.sol#1313-1319)\n\t- ActionPools.deposit(uint256,address,uint256,uint256) (ActionPools.sol#1282-1295)\n\t- ActionPools.getBlocksReward(uint256,uint256,uint256) (ActionPools.sol#1136-1156)\n\t- ActionPools.getPoolInfo(uint256) (ActionPools.sol#1078-1083)\n\t- ActionPools.massUpdatePools() (ActionPools.sol#1182-1187)\n\t- ActionPools.mintRewards(uint256) (ActionPools.sol#1266-1279)\n\t- ActionPools.onAcionClaim(uint256,address) (ActionPools.sol#1235-1246)\n\t- ActionPools.onAcionUpdate(uint256) (ActionPools.sol#1253-1264)\n\t- ActionPools.pendingRewards(uint256,address) (ActionPools.sol#1159-1167)\n\t- ActionPools.poolInfo (ActionPools.sol#1041)\n\t- ActionPools.poolLength() (ActionPools.sol#1074-1076)\n\t- ActionPools.setAutoClaim(uint256,bool) (ActionPools.sol#1121-1123)\n\t- ActionPools.setAutoUpdate(uint256,bool) (ActionPools.sol#1117-1119)\n\t- ActionPools.setRewardMaxPerBlock(uint256,uint256) (ActionPools.sol#1113-1115)\n\t- ActionPools.totalRewards(uint256,address,uint256,uint256) (ActionPools.sol#1169-1179)\n\t- ActionPools.updatePool(uint256) (ActionPools.sol#1190-1213)\n\t- ActionPools.withdraw(uint256,address,uint256,uint256) (ActionPools.sol#1298-1311)\n\t- pool.lastRewardBlock = block.number (ActionPools.sol#1212)\n\tActionPools.poolInfo (ActionPools.sol#1041) can be used in cross function reentrancies:\n\t- ActionPools._claim(uint256,address) (ActionPools.sol#1325-1348)\n\t- ActionPools.add(address,uint256,address,uint256) (ActionPools.sol#1090-1110)\n\t- ActionPools.claimAll() (ActionPools.sol#1313-1319)\n\t- ActionPools.deposit(uint256,address,uint256,uint256) (ActionPools.sol#1282-1295)\n\t- ActionPools.getBlocksReward(uint256,uint256,uint256) (ActionPools.sol#1136-1156)\n\t- ActionPools.getPoolInfo(uint256) (ActionPools.sol#1078-1083)\n\t- ActionPools.massUpdatePools() (ActionPools.sol#1182-1187)\n\t- ActionPools.mintRewards(uint256) (ActionPools.sol#1266-1279)\n\t- ActionPools.onAcionClaim(uint256,address) (ActionPools.sol#1235-1246)\n\t- ActionPools.onAcionUpdate(uint256) (ActionPools.sol#1253-1264)\n\t- ActionPools.pendingRewards(uint256,address) (ActionPools.sol#1159-1167)\n\t- ActionPools.poolInfo (ActionPools.sol#1041)\n\t- ActionPools.poolLength() (ActionPools.sol#1074-1076)\n\t- ActionPools.setAutoClaim(uint256,bool) (ActionPools.sol#1121-1123)\n\t- ActionPools.setAutoUpdate(uint256,bool) (ActionPools.sol#1117-1119)\n\t- ActionPools.setRewardMaxPerBlock(uint256,uint256) (ActionPools.sol#1113-1115)\n\t- ActionPools.totalRewards(uint256,address,uint256,uint256) (ActionPools.sol#1169-1179)\n\t- ActionPools.updatePool(uint256) (ActionPools.sol#1190-1213)\n\t- ActionPools.withdraw(uint256,address,uint256,uint256) (ActionPools.sol#1298-1311)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "updatePool",
            "impact": "Medium",
            "line": 1190,
            "line_end": 1213,
            "message": "ActionPools.updatePool(uint256) (ActionPools.sol#1190-1213) ignores return value by (poolTotalAmount) = IActionTrigger(pool.callFrom).getATPoolInfo(pool.callId) (ActionPools.sol#1196)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "_claim",
            "impact": "Medium",
            "line": 1325,
            "line_end": 1348,
            "message": "ActionPools._claim(uint256,address) (ActionPools.sol#1325-1348) ignores return value by (poolTotalAmount) = IActionTrigger(pool.callFrom).getATPoolInfo(pool.callId) (ActionPools.sol#1335)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "pendingRewards",
            "impact": "Medium",
            "line": 1159,
            "line_end": 1167,
            "message": "ActionPools.pendingRewards(uint256,address) (ActionPools.sol#1159-1167) ignores return value by (poolTotalAmount) = IActionTrigger(pool.callFrom).getATPoolInfo(pool.callId) (ActionPools.sol#1163)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "deposit",
            "impact": "Medium",
            "line": 1282,
            "line_end": 1295,
            "message": "ActionPools.deposit(uint256,address,uint256,uint256) (ActionPools.sol#1282-1295) ignores return value by (poolTotalAmount) = IActionTrigger(pool.callFrom).getATPoolInfo(pool.callId) (ActionPools.sol#1286)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "withdraw",
            "impact": "Medium",
            "line": 1298,
            "line_end": 1311,
            "message": "ActionPools.withdraw(uint256,address,uint256,uint256) (ActionPools.sol#1298-1311) ignores return value by (poolTotalAmount) = IActionTrigger(pool.callFrom).getATPoolInfo(pool.callId) (ActionPools.sol#1302)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "add",
            "impact": "Medium",
            "line": 1090,
            "line_end": 1110,
            "message": "ActionPools.add(address,uint256,address,uint256) (ActionPools.sol#1090-1110) ignores return value by (lpToken,totalAmount) = IActionTrigger(_callFrom).getATPoolInfo(_callId) (ActionPools.sol#1093-1094)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "impact": "Low",
            "line": 991,
            "message": "BOOToken.constructor(uint256)._totalSupply (ActionPools.sol#991) shadows:\n\t- ERC20._totalSupply (ActionPools.sol#681) (state variable)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "updatePool",
            "impact": "Low",
            "line": 1190,
            "line_end": 1213,
            "message": "ActionPools.updatePool(uint256) (ActionPools.sol#1190-1213) has external calls inside a loop: (poolTotalAmount) = IActionTrigger(pool.callFrom).getATPoolInfo(pool.callId) (ActionPools.sol#1196)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "updatePool",
            "impact": "Low",
            "line": 1190,
            "line_end": 1213,
            "message": "ActionPools.updatePool(uint256) (ActionPools.sol#1190-1213) has external calls inside a loop: booToken.mint(boodev,poolReward.div(8)) (ActionPools.sol#1207)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "deposit",
            "impact": "Low",
            "line": 1282,
            "line_end": 1295,
            "message": "ActionPools.deposit(uint256,address,uint256,uint256) (ActionPools.sol#1282-1295) has external calls inside a loop: (poolTotalAmount) = IActionTrigger(pool.callFrom).getATPoolInfo(pool.callId) (ActionPools.sol#1286)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "_claim",
            "impact": "Low",
            "line": 1325,
            "line_end": 1348,
            "message": "ActionPools._claim(uint256,address) (ActionPools.sol#1325-1348) has external calls inside a loop: userAmount = IActionTrigger(pool.callFrom).getATUserAmount(pool.callId,_account) (ActionPools.sol#1336)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "_claim",
            "impact": "Low",
            "line": 1325,
            "line_end": 1348,
            "message": "ActionPools._claim(uint256,address) (ActionPools.sol#1325-1348) has external calls inside a loop: (poolTotalAmount) = IActionTrigger(pool.callFrom).getATPoolInfo(pool.callId) (ActionPools.sol#1335)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "pendingRewards",
            "impact": "Low",
            "line": 1159,
            "line_end": 1167,
            "message": "ActionPools.pendingRewards(uint256,address) (ActionPools.sol#1159-1167) has external calls inside a loop: userAmount = IActionTrigger(pool.callFrom).getATUserAmount(pool.callId,_account) (ActionPools.sol#1162)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "withdraw",
            "impact": "Low",
            "line": 1298,
            "line_end": 1311,
            "message": "ActionPools.withdraw(uint256,address,uint256,uint256) (ActionPools.sol#1298-1311) has external calls inside a loop: (poolTotalAmount) = IActionTrigger(pool.callFrom).getATPoolInfo(pool.callId) (ActionPools.sol#1302)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "safeTokenTransfer",
            "impact": "Low",
            "line": 1365,
            "line_end": 1372,
            "message": "ActionPools.safeTokenTransfer(IERC20,address,uint256) (ActionPools.sol#1365-1372) has external calls inside a loop: _token.transfer(_to,value) (ActionPools.sol#1370)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "updatePool",
            "impact": "Low",
            "line": 1190,
            "line_end": 1213,
            "message": "ActionPools.updatePool(uint256) (ActionPools.sol#1190-1213) has external calls inside a loop: booToken.mint(address(this),poolReward) (ActionPools.sol#1206)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "pendingRewards",
            "impact": "Low",
            "line": 1159,
            "line_end": 1167,
            "message": "ActionPools.pendingRewards(uint256,address) (ActionPools.sol#1159-1167) has external calls inside a loop: (poolTotalAmount) = IActionTrigger(pool.callFrom).getATPoolInfo(pool.callId) (ActionPools.sol#1163)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "getBlocksReward",
            "impact": "Low",
            "line": 1136,
            "line_end": 1156,
            "message": "ActionPools.getBlocksReward(uint256,uint256,uint256) (ActionPools.sol#1136-1156) has external calls inside a loop: balance = pool.rewardToken.balanceOf(address(this)) (ActionPools.sol#1139)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "safeTokenTransfer",
            "impact": "Low",
            "line": 1365,
            "line_end": 1372,
            "message": "ActionPools.safeTokenTransfer(IERC20,address,uint256) (ActionPools.sol#1365-1372) has external calls inside a loop: balance = _token.balanceOf(address(this)) (ActionPools.sol#1366)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "mintRewards",
            "impact": "Low",
            "line": 1266,
            "line_end": 1279,
            "message": "Reentrancy in ActionPools.mintRewards(uint256) (ActionPools.sol#1266-1279):\n\tExternal calls:\n\t- updatePool(_pid) (ActionPools.sol#1267)\n\t\t- booToken.mint(address(this),poolReward) (ActionPools.sol#1206)\n\t\t- booToken.mint(boodev,poolReward.div(8)) (ActionPools.sol#1207)\n\tState variables written after the call(s):\n\t- tokenTotalRewards[rewardToken] = balance (ActionPools.sol#1277)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "deposit",
            "impact": "Low",
            "line": 1282,
            "line_end": 1295,
            "message": "Reentrancy in ActionPools.deposit(uint256,address,uint256,uint256) (ActionPools.sol#1282-1295):\n\tExternal calls:\n\t- updatePool(_pid) (ActionPools.sol#1283)\n\t\t- booToken.mint(address(this),poolReward) (ActionPools.sol#1206)\n\t\t- booToken.mint(boodev,poolReward.div(8)) (ActionPools.sol#1207)\n\tState variables written after the call(s):\n\t- user.rewardRemain = totalRewards(_pid,_account,_fromAmount,totalAmountOld).add(user.rewardRemain).sub(user.rewardDebt) (ActionPools.sol#1289-1291)\n\t- user.rewardDebt = totalRewards(_pid,_account,_toAmount,poolTotalAmount) (ActionPools.sol#1293)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "_claim",
            "impact": "Low",
            "line": 1325,
            "line_end": 1348,
            "message": "Reentrancy in ActionPools._claim(uint256,address) (ActionPools.sol#1325-1348):\n\tExternal calls:\n\t- updatePool(_pid) (ActionPools.sol#1326)\n\t\t- booToken.mint(address(this),poolReward) (ActionPools.sol#1206)\n\t\t- booToken.mint(boodev,poolReward.div(8)) (ActionPools.sol#1207)\n\tState variables written after the call(s):\n\t- tokenTotalRewards[rewardToken] = safesub(tokenTotalRewards[rewardToken],value) (ActionPools.sol#1342)\n\t- userInfo[_pid][_account].rewardRemain = 0 (ActionPools.sol#1330)\n\t- userInfo[_pid][_account].rewardDebt = totalRewards(_pid,_account,userAmount,poolTotalAmount) (ActionPools.sol#1337)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "withdraw",
            "impact": "Low",
            "line": 1298,
            "line_end": 1311,
            "message": "Reentrancy in ActionPools.withdraw(uint256,address,uint256,uint256) (ActionPools.sol#1298-1311):\n\tExternal calls:\n\t- updatePool(_pid) (ActionPools.sol#1299)\n\t\t- booToken.mint(address(this),poolReward) (ActionPools.sol#1206)\n\t\t- booToken.mint(boodev,poolReward.div(8)) (ActionPools.sol#1207)\n\tState variables written after the call(s):\n\t- user.rewardRemain = totalRewards(_pid,_account,_fromAmount,totalAmountOld).add(user.rewardRemain).sub(user.rewardDebt) (ActionPools.sol#1305-1307)\n\t- user.rewardDebt = totalRewards(_pid,_account,_toAmount,poolTotalAmount) (ActionPools.sol#1309)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "withdraw",
            "impact": "Low",
            "line": 1298,
            "line_end": 1311,
            "message": "Reentrancy in ActionPools.withdraw(uint256,address,uint256,uint256) (ActionPools.sol#1298-1311):\n\tExternal calls:\n\t- updatePool(_pid) (ActionPools.sol#1299)\n\t\t- booToken.mint(address(this),poolReward) (ActionPools.sol#1206)\n\t\t- booToken.mint(boodev,poolReward.div(8)) (ActionPools.sol#1207)\n\tEvent emitted after the call(s):\n\t- ActionWithdraw(_account,_pid,_fromAmount,_toAmount) (ActionPools.sol#1310)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "_claim",
            "impact": "Low",
            "line": 1325,
            "line_end": 1348,
            "message": "Reentrancy in ActionPools._claim(uint256,address) (ActionPools.sol#1325-1348):\n\tExternal calls:\n\t- updatePool(_pid) (ActionPools.sol#1326)\n\t\t- booToken.mint(address(this),poolReward) (ActionPools.sol#1206)\n\t\t- booToken.mint(boodev,poolReward.div(8)) (ActionPools.sol#1207)\n\t- value = safeTokenTransfer(pool.rewardToken,_account,value) (ActionPools.sol#1344)\n\t\t- _token.transfer(_to,value) (ActionPools.sol#1370)\n\tEvent emitted after the call(s):\n\t- ActionClaim(_account,_pid,value) (ActionPools.sol#1347)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ActionPools",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/SlowMist-Booster-Protocol_\u667a\u80fd\u5b89\u5168\u5ba1\u8ba1\u62a5\u544a/boosterProtocol-946b15629c410d706856584f3aa04001d6a55bd2/contracts/pools/ActionPools.sol",
            "function": "deposit",
            "impact": "Low",
            "line": 1282,
            "line_end": 1295,
            "message": "Reentrancy in ActionPools.deposit(uint256,address,uint256,uint256) (ActionPools.sol#1282-1295):\n\tExternal calls:\n\t- updatePool(_pid) (ActionPools.sol#1283)\n\t\t- booToken.mint(address(this),poolReward) (ActionPools.sol#1206)\n\t\t- booToken.mint(boodev,poolReward.div(8)) (ActionPools.sol#1207)\n\tEvent emitted after the call(s):\n\t- ActionDeposit(_account,_pid,_fromAmount,_toAmount) (ActionPools.sol#1294)\n",
            "name": "reentrancy-events",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}