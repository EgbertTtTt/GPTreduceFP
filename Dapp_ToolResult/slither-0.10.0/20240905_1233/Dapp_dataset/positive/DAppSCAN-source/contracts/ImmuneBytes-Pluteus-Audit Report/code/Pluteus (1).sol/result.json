{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "Pluteus",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol",
            "function": "_transfer",
            "impact": "High",
            "line": 1067,
            "line_end": 1103,
            "message": "Reentrancy in Pluteus._transfer(address,address,uint256) (Pluteus (1).sol#1067-1103):\n\tExternal calls:\n\t- swapAndLiquify(contractTokenBalance) (Pluteus (1).sol#1093)\n\t\t- pancakeswapV2Router.addLiquidityBNB{value: bnbAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (Pluteus (1).sol#1142-1149)\n\t\t- pancakeswapV2Router.swapExactTokensForBNBSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (Pluteus (1).sol#1122-1128)\n\tExternal calls sending eth:\n\t- swapAndLiquify(contractTokenBalance) (Pluteus (1).sol#1093)\n\t\t- pancakeswapV2Router.addLiquidityBNB{value: bnbAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (Pluteus (1).sol#1142-1149)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount,takeFee) (Pluteus (1).sol#1102)\n\t\t- _rOwned[address(this)] = _rOwned[address(this)].add(rLiquidity) (Pluteus (1).sol#1016)\n\t\t- _rOwned[PLUTEUS_ADDRESS] = _rOwned[PLUTEUS_ADDRESS] + rPluteus (Pluteus (1).sol#860)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (Pluteus (1).sol#1172)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (Pluteus (1).sol#1182)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (Pluteus (1).sol#925)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (Pluteus (1).sol#1173)\n\t\t- _rOwned[sender] = _rOwned[sender].sub(rAmount) (Pluteus (1).sol#1194)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (Pluteus (1).sol#1195)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (Pluteus (1).sol#1184)\n\t\t- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (Pluteus (1).sol#927)\n\tPluteus._rOwned (Pluteus (1).sol#685) can be used in cross function reentrancies:\n\t- Pluteus._getCurrentSupply() (Pluteus (1).sol#1001-1011)\n\t- Pluteus._sharePluteus(uint256) (Pluteus (1).sol#857-863)\n\t- Pluteus._takeLiquidity(uint256) (Pluteus (1).sol#1013-1019)\n\t- Pluteus._transferBothExcluded(address,address,uint256) (Pluteus (1).sol#922-932)\n\t- Pluteus._transferFromExcluded(address,address,uint256) (Pluteus (1).sol#1191-1200)\n\t- Pluteus._transferStandard(address,address,uint256) (Pluteus (1).sol#1170-1178)\n\t- Pluteus._transferToExcluded(address,address,uint256) (Pluteus (1).sol#1180-1189)\n\t- Pluteus.balanceOf(address) (Pluteus (1).sol#772-775)\n\t- Pluteus.constructor() (Pluteus (1).sol#737-754)\n\t- Pluteus.deliver(uint256) (Pluteus (1).sol#848-855)\n\t- Pluteus.excludeFromReward(address) (Pluteus (1).sol#900-907)\n\t- Pluteus.releaseTimelockedFunds(address,uint256) (Pluteus (1).sol#823-828)\n\t- _tokenTransfer(from,to,amount,takeFee) (Pluteus (1).sol#1102)\n\t\t- _rTotal = _rTotal.sub(rFee) (Pluteus (1).sol#969)\n\tPluteus._rTotal (Pluteus (1).sol#696) can be used in cross function reentrancies:\n\t- Pluteus._getCurrentSupply() (Pluteus (1).sol#1001-1011)\n\t- Pluteus._reflectFee(uint256,uint256) (Pluteus (1).sol#968-971)\n\t- Pluteus.constructor() (Pluteus (1).sol#737-754)\n\t- Pluteus.deliver(uint256) (Pluteus (1).sol#848-855)\n\t- Pluteus.tokenFromReflection(uint256) (Pluteus (1).sol#894-898)\n\t- _tokenTransfer(from,to,amount,takeFee) (Pluteus (1).sol#1102)\n\t\t- _tOwned[address(this)] = _tOwned[address(this)].add(tLiquidity) (Pluteus (1).sol#1018)\n\t\t- _tOwned[PLUTEUS_ADDRESS] = _tOwned[PLUTEUS_ADDRESS] + tPluteus (Pluteus (1).sol#862)\n\t\t- _tOwned[sender] = _tOwned[sender].sub(tAmount) (Pluteus (1).sol#1193)\n\t\t- _tOwned[sender] = _tOwned[sender].sub(tAmount) (Pluteus (1).sol#924)\n\t\t- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (Pluteus (1).sol#1183)\n\t\t- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (Pluteus (1).sol#926)\n\tPluteus._tOwned (Pluteus (1).sol#686) can be used in cross function reentrancies:\n\t- Pluteus._getCurrentSupply() (Pluteus (1).sol#1001-1011)\n\t- Pluteus._sharePluteus(uint256) (Pluteus (1).sol#857-863)\n\t- Pluteus._takeLiquidity(uint256) (Pluteus (1).sol#1013-1019)\n\t- Pluteus._transferBothExcluded(address,address,uint256) (Pluteus (1).sol#922-932)\n\t- Pluteus._transferFromExcluded(address,address,uint256) (Pluteus (1).sol#1191-1200)\n\t- Pluteus._transferToExcluded(address,address,uint256) (Pluteus (1).sol#1180-1189)\n\t- Pluteus.balanceOf(address) (Pluteus (1).sol#772-775)\n\t- Pluteus.burnToken(uint256,address) (Pluteus (1).sol#865-877)\n\t- Pluteus.excludeFromReward(address) (Pluteus (1).sol#900-907)\n\t- Pluteus.includeInReward(address) (Pluteus (1).sol#909-920)\n",
            "name": "reentrancy-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Pluteus",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol",
            "function": "addLiquidity",
            "impact": "Medium",
            "line": 1137,
            "line_end": 1150,
            "message": "Pluteus.addLiquidity(uint256,uint256) (Pluteus (1).sol#1137-1150) ignores return value by pancakeswapV2Router.addLiquidityBNB{value: bnbAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (Pluteus (1).sol#1142-1149)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "Ownable",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol",
            "function": "owner",
            "impact": "Low",
            "line": 1059,
            "message": "Pluteus._approve(address,address,uint256).owner (Pluteus (1).sol#1059) shadows:\n\t- Ownable.owner() (Pluteus (1).sol#419-421) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "Ownable",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol",
            "function": "owner",
            "impact": "Low",
            "line": 782,
            "message": "Pluteus.allowance(address,address).owner (Pluteus (1).sol#782) shadows:\n\t- Ownable.owner() (Pluteus (1).sol#419-421) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Pluteus",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol",
            "function": "setTaxFeePercent",
            "impact": "Low",
            "line": 942,
            "line_end": 944,
            "message": "Pluteus.setTaxFeePercent(uint256) (Pluteus (1).sol#942-944) should emit an event for: \n\t- _taxFee = taxFee (Pluteus (1).sol#943) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Pluteus",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol",
            "function": "setLiquidityFeePercent",
            "impact": "Low",
            "line": 946,
            "line_end": 948,
            "message": "Pluteus.setLiquidityFeePercent(uint256) (Pluteus (1).sol#946-948) should emit an event for: \n\t- _liquidityFee = liquidityFee (Pluteus (1).sol#947) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Pluteus",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol",
            "function": "setMaxTxPercent",
            "impact": "Low",
            "line": 954,
            "line_end": 958,
            "message": "Pluteus.setMaxTxPercent(uint256) (Pluteus (1).sol#954-958) should emit an event for: \n\t- _maxTxAmount = _tTotal.mul(maxTxPercent).div(10 ** 2) (Pluteus (1).sol#955-957) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Pluteus",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol",
            "function": "setPluteusFundPercent",
            "impact": "Low",
            "line": 950,
            "line_end": 952,
            "message": "Pluteus.setPluteusFundPercent(uint256) (Pluteus (1).sol#950-952) should emit an event for: \n\t- _pluteusFund = pluteusFund (Pluteus (1).sol#951) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Pluteus",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol",
            "function": "swapAndLiquify",
            "impact": "Low",
            "line": 1105,
            "line_end": 1113,
            "message": "Reentrancy in Pluteus.swapAndLiquify(uint256) (Pluteus (1).sol#1105-1113):\n\tExternal calls:\n\t- swapTokensForBnb(half) (Pluteus (1).sol#1109)\n\t\t- pancakeswapV2Router.swapExactTokensForBNBSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (Pluteus (1).sol#1122-1128)\n\t- addLiquidity(otherHalf,newBalance) (Pluteus (1).sol#1111)\n\t\t- pancakeswapV2Router.addLiquidityBNB{value: bnbAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (Pluteus (1).sol#1142-1149)\n\tExternal calls sending eth:\n\t- addLiquidity(otherHalf,newBalance) (Pluteus (1).sol#1111)\n\t\t- pancakeswapV2Router.addLiquidityBNB{value: bnbAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (Pluteus (1).sol#1142-1149)\n\tState variables written after the call(s):\n\t- addLiquidity(otherHalf,newBalance) (Pluteus (1).sol#1111)\n\t\t- _allowances[owner][spender] = amount (Pluteus (1).sol#1063)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Pluteus",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol",
            "function": "transferFrom",
            "impact": "Low",
            "line": 802,
            "line_end": 816,
            "message": "Reentrancy in Pluteus.transferFrom(address,address,uint256) (Pluteus (1).sol#802-816):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (Pluteus (1).sol#813)\n\t\t- pancakeswapV2Router.addLiquidityBNB{value: bnbAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (Pluteus (1).sol#1142-1149)\n\t\t- pancakeswapV2Router.swapExactTokensForBNBSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (Pluteus (1).sol#1122-1128)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (Pluteus (1).sol#813)\n\t\t- pancakeswapV2Router.addLiquidityBNB{value: bnbAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (Pluteus (1).sol#1142-1149)\n\tState variables written after the call(s):\n\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (Pluteus (1).sol#814)\n\t\t- _allowances[owner][spender] = amount (Pluteus (1).sol#1063)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Pluteus",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol",
            "function": "_transfer",
            "impact": "Low",
            "line": 1067,
            "line_end": 1103,
            "message": "Reentrancy in Pluteus._transfer(address,address,uint256) (Pluteus (1).sol#1067-1103):\n\tExternal calls:\n\t- swapAndLiquify(contractTokenBalance) (Pluteus (1).sol#1093)\n\t\t- pancakeswapV2Router.addLiquidityBNB{value: bnbAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (Pluteus (1).sol#1142-1149)\n\t\t- pancakeswapV2Router.swapExactTokensForBNBSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (Pluteus (1).sol#1122-1128)\n\tExternal calls sending eth:\n\t- swapAndLiquify(contractTokenBalance) (Pluteus (1).sol#1093)\n\t\t- pancakeswapV2Router.addLiquidityBNB{value: bnbAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (Pluteus (1).sol#1142-1149)\n\tState variables written after the call(s):\n\t- _tokenTransfer(from,to,amount,takeFee) (Pluteus (1).sol#1102)\n\t\t- _liquidityFee = _previousLiquidityFee (Pluteus (1).sol#1051)\n\t\t- _liquidityFee = 0 (Pluteus (1).sol#1045)\n\t- _tokenTransfer(from,to,amount,takeFee) (Pluteus (1).sol#1102)\n\t\t- _pluteusFund = _previousPluteusFund (Pluteus (1).sol#1052)\n\t\t- _pluteusFund = 0 (Pluteus (1).sol#1046)\n\t- _tokenTransfer(from,to,amount,takeFee) (Pluteus (1).sol#1102)\n\t\t- _previousLiquidityFee = _liquidityFee (Pluteus (1).sol#1041)\n\t- _tokenTransfer(from,to,amount,takeFee) (Pluteus (1).sol#1102)\n\t\t- _previousPluteusFund = _pluteusFund (Pluteus (1).sol#1042)\n\t- _tokenTransfer(from,to,amount,takeFee) (Pluteus (1).sol#1102)\n\t\t- _previousTaxFee = _taxFee (Pluteus (1).sol#1040)\n\t- _tokenTransfer(from,to,amount,takeFee) (Pluteus (1).sol#1102)\n\t\t- _tFeeTotal = _tFeeTotal.add(tFee) (Pluteus (1).sol#970)\n\t- _tokenTransfer(from,to,amount,takeFee) (Pluteus (1).sol#1102)\n\t\t- _taxFee = _previousTaxFee (Pluteus (1).sol#1050)\n\t\t- _taxFee = 0 (Pluteus (1).sol#1044)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Pluteus",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol",
            "function": "transferFrom",
            "impact": "Low",
            "line": 802,
            "line_end": 816,
            "message": "Reentrancy in Pluteus.transferFrom(address,address,uint256) (Pluteus (1).sol#802-816):\n\tExternal calls:\n\t- _transfer(sender,recipient,amount) (Pluteus (1).sol#813)\n\t\t- pancakeswapV2Router.addLiquidityBNB{value: bnbAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (Pluteus (1).sol#1142-1149)\n\t\t- pancakeswapV2Router.swapExactTokensForBNBSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (Pluteus (1).sol#1122-1128)\n\tExternal calls sending eth:\n\t- _transfer(sender,recipient,amount) (Pluteus (1).sol#813)\n\t\t- pancakeswapV2Router.addLiquidityBNB{value: bnbAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (Pluteus (1).sol#1142-1149)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (Pluteus (1).sol#1064)\n\t\t- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (Pluteus (1).sol#814)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Pluteus",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol",
            "function": "_transfer",
            "impact": "Low",
            "line": 1067,
            "line_end": 1103,
            "message": "Reentrancy in Pluteus._transfer(address,address,uint256) (Pluteus (1).sol#1067-1103):\n\tExternal calls:\n\t- swapAndLiquify(contractTokenBalance) (Pluteus (1).sol#1093)\n\t\t- pancakeswapV2Router.addLiquidityBNB{value: bnbAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (Pluteus (1).sol#1142-1149)\n\t\t- pancakeswapV2Router.swapExactTokensForBNBSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (Pluteus (1).sol#1122-1128)\n\tExternal calls sending eth:\n\t- swapAndLiquify(contractTokenBalance) (Pluteus (1).sol#1093)\n\t\t- pancakeswapV2Router.addLiquidityBNB{value: bnbAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (Pluteus (1).sol#1142-1149)\n\tEvent emitted after the call(s):\n\t- Transfer(sender,recipient,tTransferAmount) (Pluteus (1).sol#1177)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (Pluteus (1).sol#1102)\n\t- Transfer(sender,recipient,tTransferAmount) (Pluteus (1).sol#1188)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (Pluteus (1).sol#1102)\n\t- Transfer(sender,recipient,tTransferAmount) (Pluteus (1).sol#1199)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (Pluteus (1).sol#1102)\n\t- Transfer(sender,recipient,tTransferAmount) (Pluteus (1).sol#931)\n\t\t- _tokenTransfer(from,to,amount,takeFee) (Pluteus (1).sol#1102)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Pluteus",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol",
            "function": "swapAndLiquify",
            "impact": "Low",
            "line": 1105,
            "line_end": 1113,
            "message": "Reentrancy in Pluteus.swapAndLiquify(uint256) (Pluteus (1).sol#1105-1113):\n\tExternal calls:\n\t- swapTokensForBnb(half) (Pluteus (1).sol#1109)\n\t\t- pancakeswapV2Router.swapExactTokensForBNBSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (Pluteus (1).sol#1122-1128)\n\t- addLiquidity(otherHalf,newBalance) (Pluteus (1).sol#1111)\n\t\t- pancakeswapV2Router.addLiquidityBNB{value: bnbAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (Pluteus (1).sol#1142-1149)\n\tExternal calls sending eth:\n\t- addLiquidity(otherHalf,newBalance) (Pluteus (1).sol#1111)\n\t\t- pancakeswapV2Router.addLiquidityBNB{value: bnbAmount}(address(this),tokenAmount,0,0,address(this),block.timestamp) (Pluteus (1).sol#1142-1149)\n\tEvent emitted after the call(s):\n\t- Approval(owner,spender,amount) (Pluteus (1).sol#1064)\n\t\t- addLiquidity(otherHalf,newBalance) (Pluteus (1).sol#1111)\n\t- SwapAndLiquify(half,newBalance,otherHalf) (Pluteus (1).sol#1112)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "TokenTimelock",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol",
            "function": "release",
            "impact": "Low",
            "line": 1244,
            "line_end": 1252,
            "message": "TokenTimelock.release() (Pluteus (1).sol#1244-1252) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(block.timestamp >= _releaseTime,TokenTimelock: current time is before release time) (Pluteus (1).sol#1246)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Pluteus",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol",
            "function": "transferFrom",
            "impact": "Low",
            "line": 802,
            "line_end": 816,
            "message": "Pluteus.transferFrom(address,address,uint256) (Pluteus (1).sol#802-816) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(! isContract(recipient),Pluteus funds can only be cashed out to EOAs) (Pluteus (1).sol#804)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Pluteus",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol",
            "function": "addLiquidity",
            "impact": "Low",
            "line": 1137,
            "line_end": 1150,
            "message": "Pluteus.addLiquidity(uint256,uint256) (Pluteus (1).sol#1137-1150) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(block.timestamp >= liquidityReleaseTime,Liquidity funds locked) (Pluteus (1).sol#1140)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "TokenTimelock",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol",
            "function": "constructor",
            "impact": "Low",
            "line": 1224,
            "line_end": 1230,
            "message": "TokenTimelock.constructor(address,address,uint256) (Pluteus (1).sol#1224-1230) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(releaseTime_ > block.timestamp,TokenTimelock: release time is before current time) (Pluteus (1).sol#1226)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Ownable",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol",
            "function": "unlock",
            "impact": "Low",
            "line": 467,
            "line_end": 472,
            "message": "Ownable.unlock() (Pluteus (1).sol#467-472) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(block.timestamp > _lockTime,Contract is locked until 7 days) (Pluteus (1).sol#469)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Pluteus",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol",
            "function": "_transfer",
            "impact": "Low",
            "line": 1067,
            "line_end": 1103,
            "message": "Pluteus._transfer(address,address,uint256) (Pluteus (1).sol#1067-1103) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(to != address(0),ERC20: transfer to the zero address) (Pluteus (1).sol#1073)\n\t- from != owner() && to != owner() (Pluteus (1).sol#1075)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Pluteus",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol",
            "function": "includeInReward",
            "impact": "Informational",
            "line": 909,
            "line_end": 920,
            "message": "Pluteus.includeInReward(address) (Pluteus (1).sol#909-920) has costly operations inside a loop:\n\t- _excluded.pop() (Pluteus (1).sol#916)\n",
            "name": "costly-loop",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol",
            "impact": "Informational",
            "line": 705,
            "message": "Pluteus._previousTaxFee (Pluteus (1).sol#705) is set pre-construction with a non-constant function or state variable:\n\t- _taxFee\n",
            "name": "function-init-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol",
            "impact": "Informational",
            "line": 708,
            "message": "Pluteus._previousLiquidityFee (Pluteus (1).sol#708) is set pre-construction with a non-constant function or state variable:\n\t- _liquidityFee\n",
            "name": "function-init-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol",
            "impact": "Informational",
            "line": 696,
            "message": "Pluteus._rTotal (Pluteus (1).sol#696) is set pre-construction with a non-constant function or state variable:\n\t- (MAX - (MAX % _tTotal))\n",
            "name": "function-init-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol",
            "impact": "Informational",
            "line": 711,
            "message": "Pluteus._previousPluteusFund (Pluteus (1).sol#711) is set pre-construction with a non-constant function or state variable:\n\t- _pluteusFund\n",
            "name": "function-init-state",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Pluteus",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Pluteus-Audit Report/code/Pluteus (1).sol",
            "function": "withdrawLeftoverBnb",
            "impact": "Informational",
            "line": 1212,
            "line_end": 1216,
            "message": "Reentrancy in Pluteus.withdrawLeftoverBnb(address) (Pluteus (1).sol#1212-1216):\n\tExternal calls:\n\t- address(to).transfer(leftover) (Pluteus (1).sol#1214)\n\tEvent emitted after the call(s):\n\t- LeftoverCashed(to,leftover) (Pluteus (1).sol#1215)\n",
            "name": "reentrancy-unlimited-gas",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}