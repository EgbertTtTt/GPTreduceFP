{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/contracts/CToken.sol",
            "function": "liquidateBorrowInternal",
            "impact": "Medium",
            "line": 1536,
            "line_end": 1551,
            "message": "Reentrancy in CToken.liquidateBorrowInternal(address,uint256,CTokenInterface) (CToken.sol#1536-1551):\n\tExternal calls:\n\t- error = cTokenCollateral.accrueInterest() (CToken.sol#1543)\n\t- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral) (CToken.sol#1550)\n\t\t- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (CToken.sol#1563)\n\t\t- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (CToken.sol#1644)\n\t\t- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (CToken.sol#1481)\n\t\t- require(bool,string)(cTokenCollateral.seize(liquidator,borrower,seizeTokens) == NO_ERROR,token seizure failed) (CToken.sol#1611)\n\tState variables written after the call(s):\n\t- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral) (CToken.sol#1550)\n\t\t- totalBorrows = totalBorrowsNew (CToken.sol#1521)\n\tCTokenStorage.totalBorrows (CToken.sol#375) can be used in cross function reentrancies:\n\t- CToken.accrueInterest() (CToken.sol#1139-1191)\n\t- CToken.borrowRatePerBlock() (CToken.sol#1019-1021)\n\t- CToken.exchangeRateStoredInternal() (CToken.sol#1105-1124)\n\t- CToken.supplyRatePerBlock() (CToken.sol#1027-1029)\n\t- CTokenStorage.totalBorrows (CToken.sol#375)\n\t- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral) (CToken.sol#1550)\n\t\t- totalReserves = totalReservesNew (CToken.sol#1671)\n\tCTokenStorage.totalReserves (CToken.sol#380) can be used in cross function reentrancies:\n\t- CToken.accrueInterest() (CToken.sol#1139-1191)\n\t- CToken.borrowRatePerBlock() (CToken.sol#1019-1021)\n\t- CToken.exchangeRateStoredInternal() (CToken.sol#1105-1124)\n\t- CToken.supplyRatePerBlock() (CToken.sol#1027-1029)\n\t- CTokenStorage.totalReserves (CToken.sol#380)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/contracts/CToken.sol",
            "function": "redeemFresh",
            "impact": "Medium",
            "line": 1304,
            "line_end": 1373,
            "message": "Reentrancy in CToken.redeemFresh(address,uint256,uint256) (CToken.sol#1304-1373):\n\tExternal calls:\n\t- allowed = comptroller.redeemAllowed(address(this),redeemer,redeemTokens) (CToken.sol#1332)\n\tState variables written after the call(s):\n\t- totalSupply = totalSupply - redeemTokens (CToken.sol#1356)\n\tCTokenStorage.totalSupply (CToken.sol#385) can be used in cross function reentrancies:\n\t- CToken.exchangeRateStoredInternal() (CToken.sol#1105-1124)\n\t- CTokenStorage.totalSupply (CToken.sol#385)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/contracts/CToken.sol",
            "function": "initialize",
            "impact": "Low",
            "line": 838,
            "line_end": 869,
            "message": "CToken.initialize(ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (CToken.sol#838-869) should emit an event for: \n\t- initialExchangeRateMantissa = initialExchangeRateMantissa_ (CToken.sol#848) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/contracts/CToken.sol",
            "function": "transferTokens",
            "impact": "Low",
            "line": 880,
            "line_end": 924,
            "message": "Reentrancy in CToken.transferTokens(address,address,address,uint256) (CToken.sol#880-924):\n\tExternal calls:\n\t- allowed = comptroller.transferAllowed(address(this),src,dst,tokens) (CToken.sol#882)\n\tState variables written after the call(s):\n\t- accountTokens[src] = srcTokensNew (CToken.sol#909)\n\t- accountTokens[dst] = dstTokensNew (CToken.sol#910)\n\t- transferAllowances[src][spender] = allowanceNew (CToken.sol#914)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/contracts/CToken.sol",
            "function": "mintFresh",
            "impact": "Low",
            "line": 1214,
            "line_end": 1265,
            "message": "Reentrancy in CToken.mintFresh(address,uint256) (CToken.sol#1214-1265):\n\tExternal calls:\n\t- allowed = comptroller.mintAllowed(address(this),minter,mintAmount) (CToken.sol#1216)\n\tState variables written after the call(s):\n\t- accountTokens[minter] = accountTokens[minter] + mintTokens (CToken.sol#1256)\n\t- totalSupply = totalSupply + mintTokens (CToken.sol#1255)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/contracts/CToken.sol",
            "function": "redeemFresh",
            "impact": "Low",
            "line": 1304,
            "line_end": 1373,
            "message": "Reentrancy in CToken.redeemFresh(address,uint256,uint256) (CToken.sol#1304-1373):\n\tExternal calls:\n\t- allowed = comptroller.redeemAllowed(address(this),redeemer,redeemTokens) (CToken.sol#1332)\n\tState variables written after the call(s):\n\t- accountTokens[redeemer] = accountTokens[redeemer] - redeemTokens (CToken.sol#1357)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/contracts/CToken.sol",
            "function": "seizeInternal",
            "impact": "Low",
            "line": 1642,
            "line_end": 1680,
            "message": "Reentrancy in CToken.seizeInternal(address,address,address,uint256) (CToken.sol#1642-1680):\n\tExternal calls:\n\t- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (CToken.sol#1644)\n\tState variables written after the call(s):\n\t- accountTokens[borrower] = accountTokens[borrower] - seizeTokens (CToken.sol#1673)\n\t- accountTokens[liquidator] = accountTokens[liquidator] + liquidatorSeizeTokens (CToken.sol#1674)\n\t- totalReserves = totalReservesNew (CToken.sol#1671)\n\t- totalSupply = totalSupply - protocolSeizeTokens (CToken.sol#1672)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/contracts/CToken.sol",
            "function": "repayBorrowFresh",
            "impact": "Low",
            "line": 1479,
            "line_end": 1527,
            "message": "Reentrancy in CToken.repayBorrowFresh(address,address,uint256) (CToken.sol#1479-1527):\n\tExternal calls:\n\t- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (CToken.sol#1481)\n\tState variables written after the call(s):\n\t- accountBorrows[borrower].principal = accountBorrowsNew (CToken.sol#1519)\n\t- accountBorrows[borrower].interestIndex = borrowIndex (CToken.sol#1520)\n\t- totalBorrows = totalBorrowsNew (CToken.sol#1521)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/contracts/CToken.sol",
            "function": "borrowFresh",
            "impact": "Low",
            "line": 1393,
            "line_end": 1441,
            "message": "Reentrancy in CToken.borrowFresh(address,uint256) (CToken.sol#1393-1441):\n\tExternal calls:\n\t- allowed = comptroller.borrowAllowed(address(this),borrower,borrowAmount) (CToken.sol#1395)\n\tState variables written after the call(s):\n\t- accountBorrows[borrower].principal = accountBorrowsNew (CToken.sol#1427)\n\t- accountBorrows[borrower].interestIndex = borrowIndex (CToken.sol#1428)\n\t- totalBorrows = totalBorrowsNew (CToken.sol#1429)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/contracts/CToken.sol",
            "function": "liquidateBorrowFresh",
            "impact": "Low",
            "line": 1561,
            "line_end": 1616,
            "message": "Reentrancy in CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface) (CToken.sol#1561-1616):\n\tExternal calls:\n\t- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (CToken.sol#1563)\n\t- actualRepayAmount = repayBorrowFresh(liquidator,borrower,repayAmount) (CToken.sol#1594)\n\t\t- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (CToken.sol#1481)\n\t- seizeInternal(address(this),liquidator,borrower,seizeTokens) (CToken.sol#1609)\n\t\t- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (CToken.sol#1644)\n\tEvent emitted after the call(s):\n\t- ReservesAdded(address(this),protocolSeizeAmount,totalReservesNew) (CToken.sol#1679)\n\t\t- seizeInternal(address(this),liquidator,borrower,seizeTokens) (CToken.sol#1609)\n\t- Transfer(borrower,liquidator,liquidatorSeizeTokens) (CToken.sol#1677)\n\t\t- seizeInternal(address(this),liquidator,borrower,seizeTokens) (CToken.sol#1609)\n\t- Transfer(borrower,address(this),protocolSeizeTokens) (CToken.sol#1678)\n\t\t- seizeInternal(address(this),liquidator,borrower,seizeTokens) (CToken.sol#1609)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/contracts/CToken.sol",
            "function": "mintFresh",
            "impact": "Low",
            "line": 1214,
            "line_end": 1265,
            "message": "Reentrancy in CToken.mintFresh(address,uint256) (CToken.sol#1214-1265):\n\tExternal calls:\n\t- allowed = comptroller.mintAllowed(address(this),minter,mintAmount) (CToken.sol#1216)\n\tEvent emitted after the call(s):\n\t- Mint(minter,actualMintAmount,mintTokens) (CToken.sol#1259)\n\t- Transfer(address(this),minter,mintTokens) (CToken.sol#1260)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/contracts/CToken.sol",
            "function": "liquidateBorrowFresh",
            "impact": "Low",
            "line": 1561,
            "line_end": 1616,
            "message": "Reentrancy in CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface) (CToken.sol#1561-1616):\n\tExternal calls:\n\t- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (CToken.sol#1563)\n\t- actualRepayAmount = repayBorrowFresh(liquidator,borrower,repayAmount) (CToken.sol#1594)\n\t\t- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (CToken.sol#1481)\n\tEvent emitted after the call(s):\n\t- RepayBorrow(payer,borrower,actualRepayAmount,accountBorrowsNew,totalBorrowsNew) (CToken.sol#1524)\n\t\t- actualRepayAmount = repayBorrowFresh(liquidator,borrower,repayAmount) (CToken.sol#1594)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/contracts/CToken.sol",
            "function": "redeemFresh",
            "impact": "Low",
            "line": 1304,
            "line_end": 1373,
            "message": "Reentrancy in CToken.redeemFresh(address,uint256,uint256) (CToken.sol#1304-1373):\n\tExternal calls:\n\t- allowed = comptroller.redeemAllowed(address(this),redeemer,redeemTokens) (CToken.sol#1332)\n\tEvent emitted after the call(s):\n\t- Redeem(redeemer,redeemAmount,redeemTokens) (CToken.sol#1369)\n\t- Transfer(redeemer,address(this),redeemTokens) (CToken.sol#1368)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/contracts/CToken.sol",
            "function": "borrowFresh",
            "impact": "Low",
            "line": 1393,
            "line_end": 1441,
            "message": "Reentrancy in CToken.borrowFresh(address,uint256) (CToken.sol#1393-1441):\n\tExternal calls:\n\t- allowed = comptroller.borrowAllowed(address(this),borrower,borrowAmount) (CToken.sol#1395)\n\tEvent emitted after the call(s):\n\t- Borrow(borrower,borrowAmount,accountBorrowsNew,totalBorrowsNew) (CToken.sol#1440)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/contracts/CToken.sol",
            "function": "liquidateBorrowFresh",
            "impact": "Low",
            "line": 1561,
            "line_end": 1616,
            "message": "Reentrancy in CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface) (CToken.sol#1561-1616):\n\tExternal calls:\n\t- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (CToken.sol#1563)\n\t- actualRepayAmount = repayBorrowFresh(liquidator,borrower,repayAmount) (CToken.sol#1594)\n\t\t- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (CToken.sol#1481)\n\t- seizeInternal(address(this),liquidator,borrower,seizeTokens) (CToken.sol#1609)\n\t\t- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (CToken.sol#1644)\n\t- require(bool,string)(cTokenCollateral.seize(liquidator,borrower,seizeTokens) == NO_ERROR,token seizure failed) (CToken.sol#1611)\n\tEvent emitted after the call(s):\n\t- LiquidateBorrow(liquidator,borrower,actualRepayAmount,address(cTokenCollateral),seizeTokens) (CToken.sol#1615)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "CToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/contracts/CToken.sol",
            "function": "repayBorrowFresh",
            "impact": "Low",
            "line": 1479,
            "line_end": 1527,
            "message": "Reentrancy in CToken.repayBorrowFresh(address,address,uint256) (CToken.sol#1479-1527):\n\tExternal calls:\n\t- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (CToken.sol#1481)\n\tEvent emitted after the call(s):\n\t- RepayBorrow(payer,borrower,actualRepayAmount,accountBorrowsNew,totalBorrowsNew) (CToken.sol#1524)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Chainsecurity-Compound  cToken unredacted/compound-protocol-4a54ec5c55b66ea67d44b76f3056f0ed7229db8c/contracts/CToken.sol",
            "impact": "Informational",
            "line": 664,
            "message": "ExponentialNoError.halfExpScale (CToken.sol#664) is never used in CToken (CToken.sol#828-2013)\n",
            "name": "unused-state",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}