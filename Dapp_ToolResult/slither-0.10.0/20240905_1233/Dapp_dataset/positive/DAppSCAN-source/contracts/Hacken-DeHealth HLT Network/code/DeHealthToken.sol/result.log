'solc --version' running
'solc /sb/DeHealthToken.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/sb' running

DeHealthToken.__loadBalances(address[],uint256[])._balances (../../sb/DeHealthToken.sol#1079) shadows:
	- ERC20Upgradeable._balances (../../sb/DeHealthToken.sol#292) (state variable)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

DeHealthToken.setGuardContract(address)._guardContract (../../sb/DeHealthToken.sol#1066) lacks a zero-check on :
		- guardContract = _guardContract (../../sb/DeHealthToken.sol#1067)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

ERC20Upgradeable._premint(address,uint256) (../../sb/DeHealthToken.sol#525-530) has costly operations inside a loop:
	- _totalSupply += amount (../../sb/DeHealthToken.sol#527)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop

AccessControlUpgradeable.__AccessControl_init() (../../sb/DeHealthToken.sol#837-841) is never used and should be removed
AccessControlUpgradeable._setRoleAdmin(bytes32,bytes32) (../../sb/DeHealthToken.sol#1014-1018) is never used and should be removed
ContextUpgradeable.__Context_init() (../../sb/DeHealthToken.sol#251-253) is never used and should be removed
ContextUpgradeable._msgData() (../../sb/DeHealthToken.sol#261-263) is never used and should be removed
ERC165Upgradeable.__ERC165_init() (../../sb/DeHealthToken.sol#768-770) is never used and should be removed
ERC20Upgradeable.__ERC20_init(string,string) (../../sb/DeHealthToken.sol#310-313) is never used and should be removed
ERC20Upgradeable._burn(address,uint256) (../../sb/DeHealthToken.sol#543-558) is never used and should be removed
ERC20Upgradeable._mint(address,uint256) (../../sb/DeHealthToken.sol#513-523) is never used and should be removed
PausableUpgradeable.__Pausable_init() (../../sb/DeHealthToken.sol#652-655) is never used and should be removed
StringsUpgradeable.toHexString(uint256) (../../sb/DeHealthToken.sol#107-118) is never used and should be removed
StringsUpgradeable.toString(uint256) (../../sb/DeHealthToken.sol#82-102) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Pragma version^0.8.0 (../../sb/DeHealthToken.sol#1) allows old versions
solc-0.8.27 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Function ContextUpgradeable.__Context_init() (../../sb/DeHealthToken.sol#251-253) is not in mixedCase
Function ContextUpgradeable.__Context_init_unchained() (../../sb/DeHealthToken.sol#255-256) is not in mixedCase
Variable ContextUpgradeable.__gap (../../sb/DeHealthToken.sol#264) is not in mixedCase
Function ERC20Upgradeable.__ERC20_init(string,string) (../../sb/DeHealthToken.sol#310-313) is not in mixedCase
Function ERC20Upgradeable.__ERC20_init_unchained(string,string) (../../sb/DeHealthToken.sol#315-318) is not in mixedCase
Variable ERC20Upgradeable.__gap (../../sb/DeHealthToken.sol#624) is not in mixedCase
Function PausableUpgradeable.__Pausable_init() (../../sb/DeHealthToken.sol#652-655) is not in mixedCase
Function PausableUpgradeable.__Pausable_init_unchained() (../../sb/DeHealthToken.sol#657-659) is not in mixedCase
Variable PausableUpgradeable.__gap (../../sb/DeHealthToken.sol#715) is not in mixedCase
Function ERC20PausableUpgradeable.__ERC20Pausable_init() (../../sb/DeHealthToken.sol#726-730) is not in mixedCase
Function ERC20PausableUpgradeable.__ERC20Pausable_init_unchained() (../../sb/DeHealthToken.sol#732-733) is not in mixedCase
Variable ERC20PausableUpgradeable.__gap (../../sb/DeHealthToken.sol#750) is not in mixedCase
Function ERC165Upgradeable.__ERC165_init() (../../sb/DeHealthToken.sol#768-770) is not in mixedCase
Function ERC165Upgradeable.__ERC165_init_unchained() (../../sb/DeHealthToken.sol#772-773) is not in mixedCase
Variable ERC165Upgradeable.__gap (../../sb/DeHealthToken.sol#780) is not in mixedCase
Function AccessControlUpgradeable.__AccessControl_init() (../../sb/DeHealthToken.sol#837-841) is not in mixedCase
Function AccessControlUpgradeable.__AccessControl_init_unchained() (../../sb/DeHealthToken.sol#843-844) is not in mixedCase
Variable AccessControlUpgradeable.__gap (../../sb/DeHealthToken.sol#1033) is not in mixedCase
Parameter DeHealthToken.initialize(address)._admin (../../sb/DeHealthToken.sol#1045) is not in mixedCase
Parameter DeHealthToken.setGuardContract(address)._guardContract (../../sb/DeHealthToken.sol#1066) is not in mixedCase
Function DeHealthToken.__loadBalances(address[],uint256[]) (../../sb/DeHealthToken.sol#1079-1088) is not in mixedCase
Parameter DeHealthToken.__loadBalances(address[],uint256[])._address (../../sb/DeHealthToken.sol#1079) is not in mixedCase
Parameter DeHealthToken.__loadBalances(address[],uint256[])._balances (../../sb/DeHealthToken.sol#1079) is not in mixedCase
Function DeHealthToken.__activate() (../../sb/DeHealthToken.sol#1090-1094) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

DeHealthToken.__activate() (../../sb/DeHealthToken.sol#1090-1094) uses literals with too many digits:
	- _premint(msg.sender,(1000000000 * (10 ** uint256(decimals())) - loadedBalance)) (../../sb/DeHealthToken.sol#1092)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
/sb/DeHealthToken.sol analyzed (14 contracts with 93 detectors), 41 result(s) found
