{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "BorrowerOperations",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinspect-Liquity Audit/dev-dd7f59b980e7dab1cebc84c017db3a2c4caa522c/packages/contracts/contracts/BorrowerOperations.sol",
            "function": "openTrove",
            "impact": "Medium",
            "line": 3208,
            "line_end": 3262,
            "message": "BorrowerOperations.openTrove(uint256,uint256,address,address) (BorrowerOperations.sol#3208-3262) ignores return value by contractsCache.troveManager.increaseTroveColl(msg.sender,msg.value) (BorrowerOperations.sol#3244)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BorrowerOperations",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinspect-Liquity Audit/dev-dd7f59b980e7dab1cebc84c017db3a2c4caa522c/packages/contracts/contracts/BorrowerOperations.sol",
            "function": "openTrove",
            "impact": "Medium",
            "line": 3208,
            "line_end": 3262,
            "message": "BorrowerOperations.openTrove(uint256,uint256,address,address) (BorrowerOperations.sol#3208-3262) ignores return value by contractsCache.troveManager.increaseTroveDebt(msg.sender,vars.compositeDebt) (BorrowerOperations.sol#3245)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BorrowerOperations",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinspect-Liquity Audit/dev-dd7f59b980e7dab1cebc84c017db3a2c4caa522c/packages/contracts/contracts/BorrowerOperations.sol",
            "function": "openTrove",
            "impact": "Low",
            "line": 3208,
            "line_end": 3262,
            "message": "Reentrancy in BorrowerOperations.openTrove(uint256,uint256,address,address) (BorrowerOperations.sol#3208-3262):\n\tExternal calls:\n\t- vars.price = priceFeed.fetchPrice() (BorrowerOperations.sol#3212)\n\t- vars.LUSDFee = _triggerBorrowingFee(contractsCache.troveManager,contractsCache.lusdToken,_LUSDAmount,_maxFeePercentage) (BorrowerOperations.sol#3222)\n\t\t- _troveManager.decayBaseRateFromBorrowing() (BorrowerOperations.sol#3417)\n\t\t- lqtyStaking.increaseF_LUSD(LUSDFee) (BorrowerOperations.sol#3423)\n\t\t- _lusdToken.mint(lqtyStakingAddress,LUSDFee) (BorrowerOperations.sol#3424)\n\t- contractsCache.troveManager.setTroveStatus(msg.sender,1) (BorrowerOperations.sol#3243)\n\t- contractsCache.troveManager.increaseTroveColl(msg.sender,msg.value) (BorrowerOperations.sol#3244)\n\t- contractsCache.troveManager.increaseTroveDebt(msg.sender,vars.compositeDebt) (BorrowerOperations.sol#3245)\n\t- contractsCache.troveManager.updateTroveRewardSnapshots(msg.sender) (BorrowerOperations.sol#3247)\n\t- vars.stake = contractsCache.troveManager.updateStakeAndTotalStakes(msg.sender) (BorrowerOperations.sol#3248)\n\t- sortedTroves.insert(msg.sender,vars.NICR,_upperHint,_lowerHint) (BorrowerOperations.sol#3250)\n\t- vars.arrayIndex = contractsCache.troveManager.addTroveOwnerToArray(msg.sender) (BorrowerOperations.sol#3251)\n\tEvent emitted after the call(s):\n\t- TroveCreated(msg.sender,vars.arrayIndex) (BorrowerOperations.sol#3252)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BorrowerOperations",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinspect-Liquity Audit/dev-dd7f59b980e7dab1cebc84c017db3a2c4caa522c/packages/contracts/contracts/BorrowerOperations.sol",
            "function": "openTrove",
            "impact": "Low",
            "line": 3208,
            "line_end": 3262,
            "message": "Reentrancy in BorrowerOperations.openTrove(uint256,uint256,address,address) (BorrowerOperations.sol#3208-3262):\n\tExternal calls:\n\t- vars.price = priceFeed.fetchPrice() (BorrowerOperations.sol#3212)\n\t- vars.LUSDFee = _triggerBorrowingFee(contractsCache.troveManager,contractsCache.lusdToken,_LUSDAmount,_maxFeePercentage) (BorrowerOperations.sol#3222)\n\t\t- _troveManager.decayBaseRateFromBorrowing() (BorrowerOperations.sol#3417)\n\t\t- lqtyStaking.increaseF_LUSD(LUSDFee) (BorrowerOperations.sol#3423)\n\t\t- _lusdToken.mint(lqtyStakingAddress,LUSDFee) (BorrowerOperations.sol#3424)\n\t- contractsCache.troveManager.setTroveStatus(msg.sender,1) (BorrowerOperations.sol#3243)\n\t- contractsCache.troveManager.increaseTroveColl(msg.sender,msg.value) (BorrowerOperations.sol#3244)\n\t- contractsCache.troveManager.increaseTroveDebt(msg.sender,vars.compositeDebt) (BorrowerOperations.sol#3245)\n\t- contractsCache.troveManager.updateTroveRewardSnapshots(msg.sender) (BorrowerOperations.sol#3247)\n\t- vars.stake = contractsCache.troveManager.updateStakeAndTotalStakes(msg.sender) (BorrowerOperations.sol#3248)\n\t- sortedTroves.insert(msg.sender,vars.NICR,_upperHint,_lowerHint) (BorrowerOperations.sol#3250)\n\t- vars.arrayIndex = contractsCache.troveManager.addTroveOwnerToArray(msg.sender) (BorrowerOperations.sol#3251)\n\t- _activePoolAddColl(contractsCache.activePool,msg.value) (BorrowerOperations.sol#3255)\n\t\t- (success) = address(_activePool).call{value: _amount}() (BorrowerOperations.sol#3500)\n\t- _withdrawLUSD(contractsCache.activePool,contractsCache.lusdToken,msg.sender,_LUSDAmount,vars.netDebt) (BorrowerOperations.sol#3256)\n\t\t- _activePool.increaseLUSDDebt(_netDebtIncrease) (BorrowerOperations.sol#3506)\n\t\t- _lusdToken.mint(_account,_LUSDAmount) (BorrowerOperations.sol#3507)\n\t- _withdrawLUSD(contractsCache.activePool,contractsCache.lusdToken,gasPoolAddress,LUSD_GAS_COMPENSATION,LUSD_GAS_COMPENSATION) (BorrowerOperations.sol#3258)\n\t\t- _activePool.increaseLUSDDebt(_netDebtIncrease) (BorrowerOperations.sol#3506)\n\t\t- _lusdToken.mint(_account,_LUSDAmount) (BorrowerOperations.sol#3507)\n\tExternal calls sending eth:\n\t- _activePoolAddColl(contractsCache.activePool,msg.value) (BorrowerOperations.sol#3255)\n\t\t- (success) = address(_activePool).call{value: _amount}() (BorrowerOperations.sol#3500)\n\tEvent emitted after the call(s):\n\t- LUSDBorrowingFeePaid(msg.sender,vars.LUSDFee) (BorrowerOperations.sol#3261)\n\t- TroveUpdated(msg.sender,vars.compositeDebt,msg.value,vars.stake,BorrowerOperation.openTrove) (BorrowerOperations.sol#3260)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BorrowerOperations",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinspect-Liquity Audit/dev-dd7f59b980e7dab1cebc84c017db3a2c4caa522c/packages/contracts/contracts/BorrowerOperations.sol",
            "function": "closeTrove",
            "impact": "Low",
            "line": 3374,
            "line_end": 3404,
            "message": "Reentrancy in BorrowerOperations.closeTrove() (BorrowerOperations.sol#3374-3404):\n\tExternal calls:\n\t- price = priceFeed.fetchPrice() (BorrowerOperations.sol#3380)\n\t- troveManagerCached.applyPendingRewards(msg.sender) (BorrowerOperations.sol#3383)\n\t- troveManagerCached.removeStake(msg.sender) (BorrowerOperations.sol#3393)\n\t- troveManagerCached.closeTrove(msg.sender) (BorrowerOperations.sol#3394)\n\tEvent emitted after the call(s):\n\t- TroveUpdated(msg.sender,0,0,0,BorrowerOperation.closeTrove) (BorrowerOperations.sol#3396)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "BorrowerOperations",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinspect-Liquity Audit/dev-dd7f59b980e7dab1cebc84c017db3a2c4caa522c/packages/contracts/contracts/BorrowerOperations.sol",
            "function": "_adjustTrove",
            "impact": "Low",
            "line": 3301,
            "line_end": 3371,
            "message": "Reentrancy in BorrowerOperations._adjustTrove(address,uint256,uint256,bool,address,address,uint256) (BorrowerOperations.sol#3301-3371):\n\tExternal calls:\n\t- vars.price = priceFeed.fetchPrice() (BorrowerOperations.sol#3305)\n\t- contractsCache.troveManager.applyPendingRewards(_borrower) (BorrowerOperations.sol#3319)\n\t- vars.LUSDFee = _triggerBorrowingFee(contractsCache.troveManager,contractsCache.lusdToken,_LUSDChange,_maxFeePercentage) (BorrowerOperations.sol#3328)\n\t\t- _troveManager.decayBaseRateFromBorrowing() (BorrowerOperations.sol#3417)\n\t\t- lqtyStaking.increaseF_LUSD(LUSDFee) (BorrowerOperations.sol#3423)\n\t\t- _lusdToken.mint(lqtyStakingAddress,LUSDFee) (BorrowerOperations.sol#3424)\n\t- (vars.newColl,vars.newDebt) = _updateTroveFromAdjustment(contractsCache.troveManager,_borrower,vars.collChange,vars.isCollIncrease,vars.netDebtChange,_isDebtIncrease) (BorrowerOperations.sol#3350)\n\t\t- newColl = _troveManager.increaseTroveColl(_borrower,_collChange) (BorrowerOperations.sol#3464-3465)\n\t\t- newColl = _troveManager.decreaseTroveColl(_borrower,_collChange) (BorrowerOperations.sol#3464-3465)\n\t\t- newDebt = _troveManager.increaseTroveDebt(_borrower,_debtChange) (BorrowerOperations.sol#3466-3467)\n\t\t- newDebt = _troveManager.decreaseTroveDebt(_borrower,_debtChange) (BorrowerOperations.sol#3466-3467)\n\t- vars.stake = contractsCache.troveManager.updateStakeAndTotalStakes(_borrower) (BorrowerOperations.sol#3351)\n\t- sortedTroves.reInsert(_borrower,newNICR,_upperHint,_lowerHint) (BorrowerOperations.sol#3355)\n\tEvent emitted after the call(s):\n\t- LUSDBorrowingFeePaid(msg.sender,vars.LUSDFee) (BorrowerOperations.sol#3358)\n\t- TroveUpdated(_borrower,vars.newDebt,vars.newColl,vars.stake,BorrowerOperation.adjustTrove) (BorrowerOperations.sol#3357)\n",
            "name": "reentrancy-events",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}