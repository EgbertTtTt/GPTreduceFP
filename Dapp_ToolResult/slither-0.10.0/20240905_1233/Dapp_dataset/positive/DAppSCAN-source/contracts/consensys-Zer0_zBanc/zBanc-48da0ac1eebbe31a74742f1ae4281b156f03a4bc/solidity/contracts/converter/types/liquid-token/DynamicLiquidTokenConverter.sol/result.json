{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "LiquidTokenConverter",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol",
            "function": "sell",
            "impact": "High",
            "line": 1389,
            "line_end": 1422,
            "message": "LiquidTokenConverter.sell(uint256,address,address) (DynamicLiquidTokenConverter.sol#1389-1422) sends eth to arbitrary user\n\tDangerous calls:\n\t- _beneficiary.transfer(amount) (DynamicLiquidTokenConverter.sol#1414)\n",
            "name": "arbitrary-send-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "DynamicLiquidTokenConverter",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol",
            "function": "reduceWeight",
            "impact": "High",
            "line": 1545,
            "line_end": 1577,
            "message": "Reentrancy in DynamicLiquidTokenConverter.reduceWeight(IERC20Token) (DynamicLiquidTokenConverter.sol#1545-1577):\n\tExternal calls:\n\t- safeTransfer(_reserveToken,msg.sender,balance) (DynamicLiquidTokenConverter.sol#1572)\n\t\t- (success,data) = address(_token).call(abi.encodeWithSelector(TRANSFER_FUNC_SELECTOR,_to,_value)) (DynamicLiquidTokenConverter.sol#463)\n\tExternal calls sending eth:\n\t- msg.sender.transfer(balance) (DynamicLiquidTokenConverter.sol#1570)\n\tState variables written after the call(s):\n\t- syncReserveBalance(_reserveToken) (DynamicLiquidTokenConverter.sol#1574)\n\t\t- reserves[_reserveToken].balance = address(this).balance (DynamicLiquidTokenConverter.sol#1048)\n\t\t- reserves[_reserveToken].balance = _reserveToken.balanceOf(address(this)) (DynamicLiquidTokenConverter.sol#1050)\n\tConverterBase.reserves (DynamicLiquidTokenConverter.sol#588) can be used in cross function reentrancies:\n\t- ConverterBase._validReserve(IERC20Token) (DynamicLiquidTokenConverter.sol#698-700)\n\t- ConverterBase.addReserve(IERC20Token,uint32) (DynamicLiquidTokenConverter.sol#910-931)\n\t- ConverterBase.connectors(IERC20Token) (DynamicLiquidTokenConverter.sol#1112-1115)\n\t- LiquidTokenConverter.doConvert(IERC20Token,IERC20Token,uint256,address,address) (DynamicLiquidTokenConverter.sol#1248-1275)\n\t- DynamicLiquidTokenConverter.getMarketCap(IERC20Token) (DynamicLiquidTokenConverter.sol#1579-1586)\n\t- ConverterBase.hasETHReserve() (DynamicLiquidTokenConverter.sol#973-975)\n\t- LiquidTokenConverter.purchaseTargetAmount(uint256) (DynamicLiquidTokenConverter.sol#1285-1308)\n\t- ConverterBase.receive() (DynamicLiquidTokenConverter.sol#739-743)\n\t- DynamicLiquidTokenConverter.reduceWeight(IERC20Token) (DynamicLiquidTokenConverter.sol#1545-1577)\n\t- ConverterBase.reserveBalance(IERC20Token) (DynamicLiquidTokenConverter.sol#958-966)\n\t- ConverterBase.reserveWeight(IERC20Token) (DynamicLiquidTokenConverter.sol#941-948)\n\t- ConverterBase.reserves (DynamicLiquidTokenConverter.sol#588)\n\t- LiquidTokenConverter.saleTargetAmount(uint256) (DynamicLiquidTokenConverter.sol#1318-1342)\n\t- LiquidTokenConverter.sell(uint256,address,address) (DynamicLiquidTokenConverter.sol#1389-1422)\n\t- ConverterBase.syncReserveBalance(IERC20Token) (DynamicLiquidTokenConverter.sol#1046-1051)\n\t- LiquidTokenConverter.targetAmountAndFee(IERC20Token,IERC20Token,uint256) (DynamicLiquidTokenConverter.sol#1226-1234)\n\t- ConverterBase.withdrawTokens(IERC20Token,address,uint256) (DynamicLiquidTokenConverter.sol#858-875)\n",
            "name": "reentrancy-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ConverterBase",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol",
            "function": "upgrade",
            "impact": "Medium",
            "line": 882,
            "line_end": 891,
            "message": "Reentrancy in ConverterBase.upgrade() (DynamicLiquidTokenConverter.sol#882-891):\n\tExternal calls:\n\t- converterUpgrader.upgrade(version) (DynamicLiquidTokenConverter.sol#889)\n\tState variables written after the call(s):\n\t- acceptOwnership() (DynamicLiquidTokenConverter.sol#890)\n\t\t- owner = newOwner (DynamicLiquidTokenConverter.sol#192)\n\tOwned.owner (DynamicLiquidTokenConverter.sol#145) can be used in cross function reentrancies:\n\t- Owned._ownerOnly() (DynamicLiquidTokenConverter.sol#170-172)\n\t- Owned.acceptOwnership() (DynamicLiquidTokenConverter.sol#189-194)\n\t- Owned.owner (DynamicLiquidTokenConverter.sol#145)\n\t- Owned.transferOwnership(address) (DynamicLiquidTokenConverter.sol#181-184)\n\t- ContractRegistryClient.updateRegistry() (DynamicLiquidTokenConverter.sol#291-309)\n\t- ConverterBase.withdrawETH(address) (DynamicLiquidTokenConverter.sol#753-769)\n\t- ConverterBase.withdrawTokens(IERC20Token,address,uint256) (DynamicLiquidTokenConverter.sol#858-875)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ConverterBase",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol",
            "function": "withdrawTokens",
            "impact": "Medium",
            "line": 858,
            "line_end": 875,
            "message": "Reentrancy in ConverterBase.withdrawTokens(IERC20Token,address,uint256) (DynamicLiquidTokenConverter.sol#858-875):\n\tExternal calls:\n\t- super.withdrawTokens(_token,_to,_amount) (DynamicLiquidTokenConverter.sol#870)\n\t\t- (success,data) = address(_token).call(abi.encodeWithSelector(TRANSFER_FUNC_SELECTOR,_to,_value)) (DynamicLiquidTokenConverter.sol#463)\n\tState variables written after the call(s):\n\t- syncReserveBalance(_token) (DynamicLiquidTokenConverter.sol#874)\n\t\t- reserves[_reserveToken].balance = address(this).balance (DynamicLiquidTokenConverter.sol#1048)\n\t\t- reserves[_reserveToken].balance = _reserveToken.balanceOf(address(this)) (DynamicLiquidTokenConverter.sol#1050)\n\tConverterBase.reserves (DynamicLiquidTokenConverter.sol#588) can be used in cross function reentrancies:\n\t- ConverterBase._validReserve(IERC20Token) (DynamicLiquidTokenConverter.sol#698-700)\n\t- ConverterBase.addReserve(IERC20Token,uint32) (DynamicLiquidTokenConverter.sol#910-931)\n\t- ConverterBase.connectors(IERC20Token) (DynamicLiquidTokenConverter.sol#1112-1115)\n\t- ConverterBase.hasETHReserve() (DynamicLiquidTokenConverter.sol#973-975)\n\t- ConverterBase.receive() (DynamicLiquidTokenConverter.sol#739-743)\n\t- ConverterBase.reserveBalance(IERC20Token) (DynamicLiquidTokenConverter.sol#958-966)\n\t- ConverterBase.reserveWeight(IERC20Token) (DynamicLiquidTokenConverter.sol#941-948)\n\t- ConverterBase.reserves (DynamicLiquidTokenConverter.sol#588)\n\t- ConverterBase.syncReserveBalance(IERC20Token) (DynamicLiquidTokenConverter.sol#1046-1051)\n\t- ConverterBase.withdrawTokens(IERC20Token,address,uint256) (DynamicLiquidTokenConverter.sol#858-875)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LiquidTokenConverter",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol",
            "function": "sell",
            "impact": "Medium",
            "line": 1389,
            "line_end": 1422,
            "message": "Reentrancy in LiquidTokenConverter.sell(uint256,address,address) (DynamicLiquidTokenConverter.sol#1389-1422):\n\tExternal calls:\n\t- IDSToken(address(anchor)).destroy(address(this),_amount) (DynamicLiquidTokenConverter.sol#1407)\n\tState variables written after the call(s):\n\t- reserves[reserveToken].balance = reserves[reserveToken].balance.sub(amount) (DynamicLiquidTokenConverter.sol#1410)\n\tConverterBase.reserves (DynamicLiquidTokenConverter.sol#588) can be used in cross function reentrancies:\n\t- ConverterBase._validReserve(IERC20Token) (DynamicLiquidTokenConverter.sol#698-700)\n\t- ConverterBase.addReserve(IERC20Token,uint32) (DynamicLiquidTokenConverter.sol#910-931)\n\t- ConverterBase.connectors(IERC20Token) (DynamicLiquidTokenConverter.sol#1112-1115)\n\t- LiquidTokenConverter.doConvert(IERC20Token,IERC20Token,uint256,address,address) (DynamicLiquidTokenConverter.sol#1248-1275)\n\t- ConverterBase.hasETHReserve() (DynamicLiquidTokenConverter.sol#973-975)\n\t- LiquidTokenConverter.purchaseTargetAmount(uint256) (DynamicLiquidTokenConverter.sol#1285-1308)\n\t- ConverterBase.receive() (DynamicLiquidTokenConverter.sol#739-743)\n\t- ConverterBase.reserveBalance(IERC20Token) (DynamicLiquidTokenConverter.sol#958-966)\n\t- ConverterBase.reserveWeight(IERC20Token) (DynamicLiquidTokenConverter.sol#941-948)\n\t- ConverterBase.reserves (DynamicLiquidTokenConverter.sol#588)\n\t- LiquidTokenConverter.saleTargetAmount(uint256) (DynamicLiquidTokenConverter.sol#1318-1342)\n\t- LiquidTokenConverter.sell(uint256,address,address) (DynamicLiquidTokenConverter.sol#1389-1422)\n\t- ConverterBase.syncReserveBalance(IERC20Token) (DynamicLiquidTokenConverter.sol#1046-1051)\n\t- LiquidTokenConverter.targetAmountAndFee(IERC20Token,IERC20Token,uint256) (DynamicLiquidTokenConverter.sol#1226-1234)\n\t- ConverterBase.withdrawTokens(IERC20Token,address,uint256) (DynamicLiquidTokenConverter.sol#858-875)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "ConverterBase",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol",
            "function": "reserveWeight",
            "impact": "Low",
            "line": 1271,
            "message": "LiquidTokenConverter.doConvert(IERC20Token,IERC20Token,uint256,address,address).reserveWeight (DynamicLiquidTokenConverter.sol#1271) shadows:\n\t- ConverterBase.reserveWeight(IERC20Token) (DynamicLiquidTokenConverter.sol#941-948) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ConverterBase",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol",
            "function": "acceptAnchorOwnership",
            "impact": "Low",
            "line": 829,
            "line_end": 834,
            "message": "Reentrancy in ConverterBase.acceptAnchorOwnership() (DynamicLiquidTokenConverter.sol#829-834):\n\tExternal calls:\n\t- anchor.acceptOwnership() (DynamicLiquidTokenConverter.sol#832)\n\tState variables written after the call(s):\n\t- syncReserveBalances() (DynamicLiquidTokenConverter.sol#833)\n\t\t- reserves[_reserveToken].balance = address(this).balance (DynamicLiquidTokenConverter.sol#1048)\n\t\t- reserves[_reserveToken].balance = _reserveToken.balanceOf(address(this)) (DynamicLiquidTokenConverter.sol#1050)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ConverterBase",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol",
            "function": "upgrade",
            "impact": "Low",
            "line": 882,
            "line_end": 891,
            "message": "Reentrancy in ConverterBase.upgrade() (DynamicLiquidTokenConverter.sol#882-891):\n\tExternal calls:\n\t- converterUpgrader.upgrade(version) (DynamicLiquidTokenConverter.sol#889)\n\tState variables written after the call(s):\n\t- acceptOwnership() (DynamicLiquidTokenConverter.sol#890)\n\t\t- newOwner = address(0) (DynamicLiquidTokenConverter.sol#193)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ConverterBase",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol",
            "function": "upgrade",
            "impact": "Low",
            "line": 882,
            "line_end": 891,
            "message": "Reentrancy in ConverterBase.upgrade() (DynamicLiquidTokenConverter.sol#882-891):\n\tExternal calls:\n\t- converterUpgrader.upgrade(version) (DynamicLiquidTokenConverter.sol#889)\n\tEvent emitted after the call(s):\n\t- OwnerUpdate(owner,newOwner) (DynamicLiquidTokenConverter.sol#191)\n\t\t- acceptOwnership() (DynamicLiquidTokenConverter.sol#890)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "DynamicLiquidTokenConverter",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol",
            "function": "reduceWeight",
            "impact": "Low",
            "line": 1545,
            "line_end": 1577,
            "message": "Reentrancy in DynamicLiquidTokenConverter.reduceWeight(IERC20Token) (DynamicLiquidTokenConverter.sol#1545-1577):\n\tExternal calls:\n\t- safeTransfer(_reserveToken,msg.sender,balance) (DynamicLiquidTokenConverter.sol#1572)\n\t\t- (success,data) = address(_token).call(abi.encodeWithSelector(TRANSFER_FUNC_SELECTOR,_to,_value)) (DynamicLiquidTokenConverter.sol#463)\n\tExternal calls sending eth:\n\t- msg.sender.transfer(balance) (DynamicLiquidTokenConverter.sol#1570)\n\tEvent emitted after the call(s):\n\t- ReserveTokenWeightUpdate(oldWeight,weight,percentage,reserve.balance) (DynamicLiquidTokenConverter.sol#1576)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LiquidTokenConverter",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol",
            "function": "buy",
            "impact": "Low",
            "line": 1353,
            "line_end": 1378,
            "message": "Reentrancy in LiquidTokenConverter.buy(uint256,address,address) (DynamicLiquidTokenConverter.sol#1353-1378):\n\tExternal calls:\n\t- IDSToken(address(anchor)).issue(_beneficiary,amount) (DynamicLiquidTokenConverter.sol#1372)\n\tEvent emitted after the call(s):\n\t- Conversion(_sourceToken,_targetToken,_trader,_amount,_returnAmount,int256(_feeAmount)) (DynamicLiquidTokenConverter.sol#1085)\n\t\t- dispatchConversionEvent(reserveToken,IDSToken(address(anchor)),_trader,_amount,amount,fee) (DynamicLiquidTokenConverter.sol#1375)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LiquidTokenConverter",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol",
            "function": "doConvert",
            "impact": "Low",
            "line": 1248,
            "line_end": 1275,
            "message": "Reentrancy in LiquidTokenConverter.doConvert(IERC20Token,IERC20Token,uint256,address,address) (DynamicLiquidTokenConverter.sol#1248-1275):\n\tExternal calls:\n\t- targetAmount = buy(_amount,_trader,_beneficiary) (DynamicLiquidTokenConverter.sol#1258)\n\t\t- IDSToken(address(anchor)).issue(_beneficiary,amount) (DynamicLiquidTokenConverter.sol#1372)\n\t- targetAmount = sell(_amount,_trader,_beneficiary) (DynamicLiquidTokenConverter.sol#1262)\n\t\t- (success,data) = address(_token).call(abi.encodeWithSelector(TRANSFER_FUNC_SELECTOR,_to,_value)) (DynamicLiquidTokenConverter.sol#463)\n\t\t- IDSToken(address(anchor)).destroy(address(this),_amount) (DynamicLiquidTokenConverter.sol#1407)\n\tExternal calls sending eth:\n\t- targetAmount = sell(_amount,_trader,_beneficiary) (DynamicLiquidTokenConverter.sol#1262)\n\t\t- _beneficiary.transfer(amount) (DynamicLiquidTokenConverter.sol#1414)\n\tEvent emitted after the call(s):\n\t- TokenRateUpdate(IDSToken(address(anchor)),reserveToken,reserveBalance(reserveToken).mul(PPM_RESOLUTION),totalSupply.mul(reserveWeight)) (DynamicLiquidTokenConverter.sol#1272)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LiquidTokenConverter",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol",
            "function": "acceptAnchorOwnership",
            "impact": "Low",
            "line": 1195,
            "line_end": 1199,
            "message": "Reentrancy in LiquidTokenConverter.acceptAnchorOwnership() (DynamicLiquidTokenConverter.sol#1195-1199):\n\tExternal calls:\n\t- super.acceptAnchorOwnership() (DynamicLiquidTokenConverter.sol#1196)\n\t\t- anchor.acceptOwnership() (DynamicLiquidTokenConverter.sol#832)\n\tEvent emitted after the call(s):\n\t- Activation(converterType(),anchor,true) (DynamicLiquidTokenConverter.sol#1198)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LiquidTokenConverter",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol",
            "function": "sell",
            "impact": "Low",
            "line": 1389,
            "line_end": 1422,
            "message": "Reentrancy in LiquidTokenConverter.sell(uint256,address,address) (DynamicLiquidTokenConverter.sol#1389-1422):\n\tExternal calls:\n\t- IDSToken(address(anchor)).destroy(address(this),_amount) (DynamicLiquidTokenConverter.sol#1407)\n\t- safeTransfer(reserveToken,_beneficiary,amount) (DynamicLiquidTokenConverter.sol#1416)\n\t\t- (success,data) = address(_token).call(abi.encodeWithSelector(TRANSFER_FUNC_SELECTOR,_to,_value)) (DynamicLiquidTokenConverter.sol#463)\n\tExternal calls sending eth:\n\t- _beneficiary.transfer(amount) (DynamicLiquidTokenConverter.sol#1414)\n\tEvent emitted after the call(s):\n\t- Conversion(_sourceToken,_targetToken,_trader,_amount,_returnAmount,int256(_feeAmount)) (DynamicLiquidTokenConverter.sol#1085)\n\t\t- dispatchConversionEvent(IDSToken(address(anchor)),reserveToken,_trader,_amount,amount,fee) (DynamicLiquidTokenConverter.sol#1419)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ConverterBase",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol",
            "function": "withdrawETH",
            "impact": "Informational",
            "line": 753,
            "line_end": 769,
            "message": "Reentrancy in ConverterBase.withdrawETH(address) (DynamicLiquidTokenConverter.sol#753-769):\n\tExternal calls:\n\t- _to.transfer(address(this).balance) (DynamicLiquidTokenConverter.sol#765)\n\tState variables written after the call(s):\n\t- syncReserveBalance(ETH_RESERVE_ADDRESS) (DynamicLiquidTokenConverter.sol#768)\n\t\t- reserves[_reserveToken].balance = address(this).balance (DynamicLiquidTokenConverter.sol#1048)\n\t\t- reserves[_reserveToken].balance = _reserveToken.balanceOf(address(this)) (DynamicLiquidTokenConverter.sol#1050)\n",
            "name": "reentrancy-unlimited-gas",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LiquidTokenConverter",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol",
            "function": "doConvert",
            "impact": "Informational",
            "line": 1248,
            "line_end": 1275,
            "message": "Reentrancy in LiquidTokenConverter.doConvert(IERC20Token,IERC20Token,uint256,address,address) (DynamicLiquidTokenConverter.sol#1248-1275):\n\tExternal calls:\n\t- targetAmount = sell(_amount,_trader,_beneficiary) (DynamicLiquidTokenConverter.sol#1262)\n\t\t- _beneficiary.transfer(amount) (DynamicLiquidTokenConverter.sol#1414)\n\tEvent emitted after the call(s):\n\t- TokenRateUpdate(IDSToken(address(anchor)),reserveToken,reserveBalance(reserveToken).mul(PPM_RESOLUTION),totalSupply.mul(reserveWeight)) (DynamicLiquidTokenConverter.sol#1272)\n",
            "name": "reentrancy-unlimited-gas",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "LiquidTokenConverter",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol",
            "function": "sell",
            "impact": "Informational",
            "line": 1389,
            "line_end": 1422,
            "message": "Reentrancy in LiquidTokenConverter.sell(uint256,address,address) (DynamicLiquidTokenConverter.sol#1389-1422):\n\tExternal calls:\n\t- _beneficiary.transfer(amount) (DynamicLiquidTokenConverter.sol#1414)\n\tEvent emitted after the call(s):\n\t- Conversion(_sourceToken,_targetToken,_trader,_amount,_returnAmount,int256(_feeAmount)) (DynamicLiquidTokenConverter.sol#1085)\n\t\t- dispatchConversionEvent(IDSToken(address(anchor)),reserveToken,_trader,_amount,amount,fee) (DynamicLiquidTokenConverter.sol#1419)\n",
            "name": "reentrancy-unlimited-gas",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "DynamicLiquidTokenConverter",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol",
            "function": "reduceWeight",
            "impact": "Informational",
            "line": 1545,
            "line_end": 1577,
            "message": "Reentrancy in DynamicLiquidTokenConverter.reduceWeight(IERC20Token) (DynamicLiquidTokenConverter.sol#1545-1577):\n\tExternal calls:\n\t- msg.sender.transfer(balance) (DynamicLiquidTokenConverter.sol#1570)\n\tState variables written after the call(s):\n\t- syncReserveBalance(_reserveToken) (DynamicLiquidTokenConverter.sol#1574)\n\t\t- reserves[_reserveToken].balance = address(this).balance (DynamicLiquidTokenConverter.sol#1048)\n\t\t- reserves[_reserveToken].balance = _reserveToken.balanceOf(address(this)) (DynamicLiquidTokenConverter.sol#1050)\n\tEvent emitted after the call(s):\n\t- ReserveTokenWeightUpdate(oldWeight,weight,percentage,reserve.balance) (DynamicLiquidTokenConverter.sol#1576)\n",
            "name": "reentrancy-unlimited-gas",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol",
            "impact": "Informational",
            "line": 252,
            "message": "ContractRegistryClient.CONVERTER_REGISTRY (DynamicLiquidTokenConverter.sol#252) is never used in DynamicLiquidTokenConverter (DynamicLiquidTokenConverter.sol#1436-1587)\n",
            "name": "unused-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol",
            "impact": "Informational",
            "line": 250,
            "message": "ContractRegistryClient.CONVERSION_PATH_FINDER (DynamicLiquidTokenConverter.sol#250) is never used in DynamicLiquidTokenConverter (DynamicLiquidTokenConverter.sol#1436-1587)\n",
            "name": "unused-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol",
            "impact": "Informational",
            "line": 253,
            "message": "ContractRegistryClient.CONVERTER_REGISTRY_DATA (DynamicLiquidTokenConverter.sol#253) is never used in DynamicLiquidTokenConverter (DynamicLiquidTokenConverter.sol#1436-1587)\n",
            "name": "unused-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol",
            "impact": "Informational",
            "line": 255,
            "message": "ContractRegistryClient.BANCOR_X (DynamicLiquidTokenConverter.sol#255) is never used in DynamicLiquidTokenConverter (DynamicLiquidTokenConverter.sol#1436-1587)\n",
            "name": "unused-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol",
            "impact": "Informational",
            "line": 254,
            "message": "ContractRegistryClient.BNT_TOKEN (DynamicLiquidTokenConverter.sol#254) is never used in DynamicLiquidTokenConverter (DynamicLiquidTokenConverter.sol#1436-1587)\n",
            "name": "unused-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol",
            "impact": "Informational",
            "line": 249,
            "message": "ContractRegistryClient.CONVERTER_FACTORY (DynamicLiquidTokenConverter.sol#249) is never used in DynamicLiquidTokenConverter (DynamicLiquidTokenConverter.sol#1436-1587)\n",
            "name": "unused-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol",
            "impact": "Informational",
            "line": 256,
            "message": "ContractRegistryClient.BANCOR_X_UPGRADER (DynamicLiquidTokenConverter.sol#256) is never used in DynamicLiquidTokenConverter (DynamicLiquidTokenConverter.sol#1436-1587)\n",
            "name": "unused-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/consensys-Zer0_zBanc/zBanc-48da0ac1eebbe31a74742f1ae4281b156f03a4bc/solidity/contracts/converter/types/liquid-token/DynamicLiquidTokenConverter.sol",
            "impact": "Informational",
            "line": 257,
            "message": "ContractRegistryClient.CHAINLINK_ORACLE_WHITELIST (DynamicLiquidTokenConverter.sol#257) is never used in DynamicLiquidTokenConverter (DynamicLiquidTokenConverter.sol#1436-1587)\n",
            "name": "unused-state",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}