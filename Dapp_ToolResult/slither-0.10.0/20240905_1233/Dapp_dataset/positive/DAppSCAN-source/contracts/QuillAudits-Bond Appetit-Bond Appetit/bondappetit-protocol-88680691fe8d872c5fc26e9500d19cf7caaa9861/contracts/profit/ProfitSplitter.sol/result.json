{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "ProfitSplitter",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-88680691fe8d872c5fc26e9500d19cf7caaa9861/contracts/profit/ProfitSplitter.sol",
            "function": "_payToBudget",
            "impact": "High",
            "line": 1706,
            "line_end": 1744,
            "message": "ProfitSplitter._payToBudget() (ProfitSplitter.sol#1706-1744) sends eth to arbitrary user\n\tDangerous calls:\n\t- budget.transfer(amount) (ProfitSplitter.sol#1740)\n",
            "name": "arbitrary-send-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ProfitSplitter",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-88680691fe8d872c5fc26e9500d19cf7caaa9861/contracts/profit/ProfitSplitter.sol",
            "function": "changeIncoming",
            "impact": "High",
            "line": 1642,
            "line_end": 1651,
            "message": "Reentrancy in ProfitSplitter.changeIncoming(address,address) (ProfitSplitter.sol#1642-1651):\n\tExternal calls:\n\t- transfer(_recipient,balance) (ProfitSplitter.sol#1647)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (ProfitSplitter.sol#857)\n\t\t- incoming.safeTransfer(_recipient,amount) (ProfitSplitter.sol#1633)\n\t\t- (success,returndata) = target.call{value: value}(data) (ProfitSplitter.sol#725)\n\tExternal calls sending eth:\n\t- transfer(_recipient,balance) (ProfitSplitter.sol#1647)\n\t\t- (success,returndata) = target.call{value: value}(data) (ProfitSplitter.sol#725)\n\tState variables written after the call(s):\n\t- incoming = ERC20(_incoming) (ProfitSplitter.sol#1649)\n\tProfitSplitter.incoming (ProfitSplitter.sol#1553) can be used in cross function reentrancies:\n\t- ProfitSplitter._payToBudget() (ProfitSplitter.sol#1706-1744)\n\t- ProfitSplitter._payToRecipients() (ProfitSplitter.sol#1750-1765)\n\t- ProfitSplitter.changeIncoming(address,address) (ProfitSplitter.sol#1642-1651)\n\t- ProfitSplitter.constructor(address,address) (ProfitSplitter.sol#1600-1603)\n\t- ProfitSplitter.incoming (ProfitSplitter.sol#1553)\n\t- ProfitSplitter.split(uint256) (ProfitSplitter.sol#1771-1778)\n\t- ProfitSplitter.transfer(address,uint256) (ProfitSplitter.sol#1630-1635)\n",
            "name": "reentrancy-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ProfitSplitter",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-88680691fe8d872c5fc26e9500d19cf7caaa9861/contracts/profit/ProfitSplitter.sol",
            "function": "_payToBudget",
            "impact": "Medium",
            "line": 1706,
            "line_end": 1744,
            "message": "ProfitSplitter._payToBudget() (ProfitSplitter.sol#1706-1744) ignores return value by uniswapRouter.swapExactTokensForETH(splitterIncomingBalance,amountsOut[1],path,address(this),block.timestamp) (ProfitSplitter.sol#1736)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ProfitSplitter",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-88680691fe8d872c5fc26e9500d19cf7caaa9861/contracts/profit/ProfitSplitter.sol",
            "function": "removeRecipient",
            "impact": "Medium",
            "line": 1681,
            "line_end": 1687,
            "message": "ProfitSplitter.removeRecipient(address) (ProfitSplitter.sol#1681-1687) ignores return value by recipientsIndex.remove(recipient) (ProfitSplitter.sol#1684)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ProfitSplitter",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-88680691fe8d872c5fc26e9500d19cf7caaa9861/contracts/profit/ProfitSplitter.sol",
            "function": "addRecipient",
            "impact": "Medium",
            "line": 1668,
            "line_end": 1675,
            "message": "ProfitSplitter.addRecipient(address,uint256) (ProfitSplitter.sol#1668-1675) ignores return value by recipientsIndex.add(recipient) (ProfitSplitter.sol#1672)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ProfitSplitter",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-88680691fe8d872c5fc26e9500d19cf7caaa9861/contracts/profit/ProfitSplitter.sol",
            "function": "_payToBudget",
            "impact": "Medium",
            "line": 1706,
            "line_end": 1744,
            "message": "ProfitSplitter._payToBudget() (ProfitSplitter.sol#1706-1744) ignores return value by uniswapRouter.swapTokensForExactETH(amountOut,amountsIn[0],path,address(this),block.timestamp) (ProfitSplitter.sol#1727)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ProfitSplitter",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-88680691fe8d872c5fc26e9500d19cf7caaa9861/contracts/profit/ProfitSplitter.sol",
            "function": "changeIncoming",
            "impact": "Low",
            "line": 1642,
            "line_end": 1651,
            "message": "Reentrancy in ProfitSplitter.changeIncoming(address,address) (ProfitSplitter.sol#1642-1651):\n\tExternal calls:\n\t- transfer(_recipient,balance) (ProfitSplitter.sol#1647)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (ProfitSplitter.sol#857)\n\t\t- incoming.safeTransfer(_recipient,amount) (ProfitSplitter.sol#1633)\n\t\t- (success,returndata) = target.call{value: value}(data) (ProfitSplitter.sol#725)\n\tExternal calls sending eth:\n\t- transfer(_recipient,balance) (ProfitSplitter.sol#1647)\n\t\t- (success,returndata) = target.call{value: value}(data) (ProfitSplitter.sol#725)\n\tEvent emitted after the call(s):\n\t- IncomingChanged(_incoming) (ProfitSplitter.sol#1650)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ProfitSplitter",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-88680691fe8d872c5fc26e9500d19cf7caaa9861/contracts/profit/ProfitSplitter.sol",
            "function": "_payToBudget",
            "impact": "Low",
            "line": 1706,
            "line_end": 1744,
            "message": "Reentrancy in ProfitSplitter._payToBudget() (ProfitSplitter.sol#1706-1744):\n\tExternal calls:\n\t- incoming.safeApprove(address(uniswapRouter),amountsIn[0]) (ProfitSplitter.sol#1726)\n\t- uniswapRouter.swapTokensForExactETH(amountOut,amountsIn[0],path,address(this),block.timestamp) (ProfitSplitter.sol#1727)\n\t- incoming.safeApprove(address(uniswapRouter),splitterIncomingBalance) (ProfitSplitter.sol#1735)\n\t- uniswapRouter.swapExactTokensForETH(splitterIncomingBalance,amountsOut[1],path,address(this),block.timestamp) (ProfitSplitter.sol#1736)\n\tExternal calls sending eth:\n\t- budget.transfer(amount) (ProfitSplitter.sol#1740)\n\tEvent emitted after the call(s):\n\t- PayToBudget(budget,amount) (ProfitSplitter.sol#1741)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ProfitSplitter",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-88680691fe8d872c5fc26e9500d19cf7caaa9861/contracts/profit/ProfitSplitter.sol",
            "function": "split",
            "impact": "Low",
            "line": 1771,
            "line_end": 1778,
            "message": "Reentrancy in ProfitSplitter.split(uint256) (ProfitSplitter.sol#1771-1778):\n\tExternal calls:\n\t- incoming.safeTransferFrom(msg.sender,address(this),amount) (ProfitSplitter.sol#1773)\n\t- _payToBudget() (ProfitSplitter.sol#1776)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (ProfitSplitter.sol#857)\n\t\t- (success,returndata) = target.call{value: value}(data) (ProfitSplitter.sol#725)\n\t\t- incoming.safeApprove(address(uniswapRouter),amountsIn[0]) (ProfitSplitter.sol#1726)\n\t\t- uniswapRouter.swapTokensForExactETH(amountOut,amountsIn[0],path,address(this),block.timestamp) (ProfitSplitter.sol#1727)\n\t\t- incoming.safeApprove(address(uniswapRouter),splitterIncomingBalance) (ProfitSplitter.sol#1735)\n\t\t- uniswapRouter.swapExactTokensForETH(splitterIncomingBalance,amountsOut[1],path,address(this),block.timestamp) (ProfitSplitter.sol#1736)\n\tExternal calls sending eth:\n\t- _payToBudget() (ProfitSplitter.sol#1776)\n\t\t- (success,returndata) = target.call{value: value}(data) (ProfitSplitter.sol#725)\n\t\t- budget.transfer(amount) (ProfitSplitter.sol#1740)\n\tEvent emitted after the call(s):\n\t- PayToBudget(budget,amount) (ProfitSplitter.sol#1741)\n\t\t- _payToBudget() (ProfitSplitter.sol#1776)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ProfitSplitter",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-88680691fe8d872c5fc26e9500d19cf7caaa9861/contracts/profit/ProfitSplitter.sol",
            "function": "transfer",
            "impact": "Low",
            "line": 1630,
            "line_end": 1635,
            "message": "Reentrancy in ProfitSplitter.transfer(address,uint256) (ProfitSplitter.sol#1630-1635):\n\tExternal calls:\n\t- incoming.safeTransfer(_recipient,amount) (ProfitSplitter.sol#1633)\n\tEvent emitted after the call(s):\n\t- Transfer(_recipient,amount) (ProfitSplitter.sol#1634)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ProfitSplitter",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-88680691fe8d872c5fc26e9500d19cf7caaa9861/contracts/profit/ProfitSplitter.sol",
            "function": "split",
            "impact": "Low",
            "line": 1771,
            "line_end": 1778,
            "message": "Reentrancy in ProfitSplitter.split(uint256) (ProfitSplitter.sol#1771-1778):\n\tExternal calls:\n\t- incoming.safeTransferFrom(msg.sender,address(this),amount) (ProfitSplitter.sol#1773)\n\t- _payToBudget() (ProfitSplitter.sol#1776)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (ProfitSplitter.sol#857)\n\t\t- (success,returndata) = target.call{value: value}(data) (ProfitSplitter.sol#725)\n\t\t- incoming.safeApprove(address(uniswapRouter),amountsIn[0]) (ProfitSplitter.sol#1726)\n\t\t- uniswapRouter.swapTokensForExactETH(amountOut,amountsIn[0],path,address(this),block.timestamp) (ProfitSplitter.sol#1727)\n\t\t- incoming.safeApprove(address(uniswapRouter),splitterIncomingBalance) (ProfitSplitter.sol#1735)\n\t\t- uniswapRouter.swapExactTokensForETH(splitterIncomingBalance,amountsOut[1],path,address(this),block.timestamp) (ProfitSplitter.sol#1736)\n\t- _payToRecipients() (ProfitSplitter.sol#1777)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (ProfitSplitter.sol#857)\n\t\t- (success,returndata) = target.call{value: value}(data) (ProfitSplitter.sol#725)\n\t\t- incoming.safeTransfer(recipient,amount) (ProfitSplitter.sol#1759)\n\tExternal calls sending eth:\n\t- _payToBudget() (ProfitSplitter.sol#1776)\n\t\t- (success,returndata) = target.call{value: value}(data) (ProfitSplitter.sol#725)\n\t\t- budget.transfer(amount) (ProfitSplitter.sol#1740)\n\t- _payToRecipients() (ProfitSplitter.sol#1777)\n\t\t- (success,returndata) = target.call{value: value}(data) (ProfitSplitter.sol#725)\n\tEvent emitted after the call(s):\n\t- PayToRecipient(recipient,amount) (ProfitSplitter.sol#1761)\n\t\t- _payToRecipients() (ProfitSplitter.sol#1777)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ProfitSplitter",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-88680691fe8d872c5fc26e9500d19cf7caaa9861/contracts/profit/ProfitSplitter.sol",
            "function": "_payToRecipients",
            "impact": "Low",
            "line": 1750,
            "line_end": 1765,
            "message": "Reentrancy in ProfitSplitter._payToRecipients() (ProfitSplitter.sol#1750-1765):\n\tExternal calls:\n\t- incoming.safeTransfer(recipient,amount) (ProfitSplitter.sol#1759)\n\tEvent emitted after the call(s):\n\t- PayToRecipient(recipient,amount) (ProfitSplitter.sol#1761)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ProfitSplitter",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-88680691fe8d872c5fc26e9500d19cf7caaa9861/contracts/profit/ProfitSplitter.sol",
            "function": "split",
            "impact": "Informational",
            "line": 1771,
            "line_end": 1778,
            "message": "Reentrancy in ProfitSplitter.split(uint256) (ProfitSplitter.sol#1771-1778):\n\tExternal calls:\n\t- _payToBudget() (ProfitSplitter.sol#1776)\n\t\t- budget.transfer(amount) (ProfitSplitter.sol#1740)\n\tExternal calls sending eth:\n\t- _payToBudget() (ProfitSplitter.sol#1776)\n\t\t- (success,returndata) = target.call{value: value}(data) (ProfitSplitter.sol#725)\n\t\t- budget.transfer(amount) (ProfitSplitter.sol#1740)\n\t- _payToRecipients() (ProfitSplitter.sol#1777)\n\t\t- (success,returndata) = target.call{value: value}(data) (ProfitSplitter.sol#725)\n\tEvent emitted after the call(s):\n\t- PayToRecipient(recipient,amount) (ProfitSplitter.sol#1761)\n\t\t- _payToRecipients() (ProfitSplitter.sol#1777)\n",
            "name": "reentrancy-unlimited-gas",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ProfitSplitter",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-88680691fe8d872c5fc26e9500d19cf7caaa9861/contracts/profit/ProfitSplitter.sol",
            "function": "_payToBudget",
            "impact": "Informational",
            "line": 1706,
            "line_end": 1744,
            "message": "Reentrancy in ProfitSplitter._payToBudget() (ProfitSplitter.sol#1706-1744):\n\tExternal calls:\n\t- budget.transfer(amount) (ProfitSplitter.sol#1740)\n\tEvent emitted after the call(s):\n\t- PayToBudget(budget,amount) (ProfitSplitter.sol#1741)\n",
            "name": "reentrancy-unlimited-gas",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}