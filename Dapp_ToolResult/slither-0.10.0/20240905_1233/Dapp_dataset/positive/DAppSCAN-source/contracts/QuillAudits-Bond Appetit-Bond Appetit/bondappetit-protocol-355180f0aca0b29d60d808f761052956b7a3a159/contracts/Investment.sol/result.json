{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "Investment",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-355180f0aca0b29d60d808f761052956b7a3a159/contracts/Investment.sol",
            "function": "invest",
            "impact": "Medium",
            "line": 2139,
            "line_end": 2158,
            "message": "Investment.invest(address,uint256) (Investment.sol#2139-2158) ignores return value by governanceToken.transferLock(_msgSender(),reward,governanceTokenLockDate) (Investment.sol#2154)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Investment",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-355180f0aca0b29d60d808f761052956b7a3a159/contracts/Investment.sol",
            "function": "investETH",
            "impact": "Medium",
            "line": 2163,
            "line_end": 2180,
            "message": "Investment.investETH() (Investment.sol#2163-2180) ignores return value by governanceToken.transferLock(_msgSender(),reward,governanceTokenLockDate) (Investment.sol#2176)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Investment",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-355180f0aca0b29d60d808f761052956b7a3a159/contracts/Investment.sol",
            "function": "invest",
            "impact": "Medium",
            "line": 2139,
            "line_end": 2158,
            "message": "Investment.invest(address,uint256) (Investment.sol#2139-2158) ignores return value by uniswapRouter.swapExactTokensForTokens(amount,amountOut,_path(token),address(this),block.timestamp) (Investment.sol#2151)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Investment",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-355180f0aca0b29d60d808f761052956b7a3a159/contracts/Investment.sol",
            "function": "investETH",
            "impact": "Medium",
            "line": 2163,
            "line_end": 2180,
            "message": "Investment.investETH() (Investment.sol#2163-2180) ignores return value by uniswapRouter.swapExactETHForTokens{value: msg.value}(amountOut,_path(token),address(this),block.timestamp) (Investment.sol#2173)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Investment",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-355180f0aca0b29d60d808f761052956b7a3a159/contracts/Investment.sol",
            "function": "invest",
            "impact": "Low",
            "line": 2139,
            "line_end": 2158,
            "message": "Reentrancy in Investment.invest(address,uint256) (Investment.sol#2139-2158):\n\tExternal calls:\n\t- ERC20(token).safeTransferFrom(_msgSender(),address(this),amount) (Investment.sol#2143)\n\t- ERC20(token).safeApprove(address(uniswapRouter),amount) (Investment.sol#2150)\n\t- uniswapRouter.swapExactTokensForTokens(amount,amountOut,_path(token),address(this),block.timestamp) (Investment.sol#2151)\n\t- governanceToken.transferLock(_msgSender(),reward,governanceTokenLockDate) (Investment.sol#2154)\n\tEvent emitted after the call(s):\n\t- Invested(_msgSender(),token,amount,reward) (Investment.sol#2156)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Investment",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-355180f0aca0b29d60d808f761052956b7a3a159/contracts/Investment.sol",
            "function": "withdraw",
            "impact": "Low",
            "line": 2186,
            "line_end": 2193,
            "message": "Reentrancy in Investment.withdraw(address) (Investment.sol#2186-2193):\n\tExternal calls:\n\t- cumulative.safeTransfer(recipient,balance) (Investment.sol#2190)\n\tEvent emitted after the call(s):\n\t- Withdrawal(recipient,address(cumulative),balance) (Investment.sol#2192)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Investment",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-355180f0aca0b29d60d808f761052956b7a3a159/contracts/Investment.sol",
            "function": "investETH",
            "impact": "Low",
            "line": 2163,
            "line_end": 2180,
            "message": "Reentrancy in Investment.investETH() (Investment.sol#2163-2180):\n\tExternal calls:\n\t- uniswapRouter.swapExactETHForTokens{value: msg.value}(amountOut,_path(token),address(this),block.timestamp) (Investment.sol#2173)\n\t- governanceToken.transferLock(_msgSender(),reward,governanceTokenLockDate) (Investment.sol#2176)\n\tExternal calls sending eth:\n\t- uniswapRouter.swapExactETHForTokens{value: msg.value}(amountOut,_path(token),address(this),block.timestamp) (Investment.sol#2173)\n\tEvent emitted after the call(s):\n\t- Invested(_msgSender(),token,msg.value,reward) (Investment.sol#2178)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "GovernanceToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-355180f0aca0b29d60d808f761052956b7a3a159/contracts/Investment.sol",
            "function": "_transferTokens",
            "impact": "Low",
            "line": 1843,
            "line_end": 1859,
            "message": "GovernanceToken._transferTokens(address,address,uint96) (Investment.sol#1843-1859) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- locking[src].date > block.timestamp && locking[src].amount > 0 && balances[src] < locking[src].amount (Investment.sol#1852)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "GovernanceToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/QuillAudits-Bond Appetit-Bond Appetit/bondappetit-protocol-355180f0aca0b29d60d808f761052956b7a3a159/contracts/Investment.sol",
            "function": "delegateBySig",
            "impact": "Low",
            "line": 1764,
            "line_end": 1780,
            "message": "GovernanceToken.delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32) (Investment.sol#1764-1780) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(now <= expiry,GovernanceToken::delegateBySig: signature expired) (Investment.sol#1778)\n",
            "name": "timestamp",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}