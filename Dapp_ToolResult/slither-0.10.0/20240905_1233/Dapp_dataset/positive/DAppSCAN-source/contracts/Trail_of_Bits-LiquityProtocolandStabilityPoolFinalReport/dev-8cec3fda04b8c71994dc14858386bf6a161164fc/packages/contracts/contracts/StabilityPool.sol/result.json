{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "_sendETHGainToDepositor",
            "impact": "High",
            "line": 3611,
            "line_end": 3620,
            "message": "StabilityPool._sendETHGainToDepositor(uint256) (StabilityPool.sol#3611-3620) sends eth to arbitrary user\n\tDangerous calls:\n\t- (success) = msg.sender.call{value: _amount}() (StabilityPool.sol#3618)\n",
            "name": "arbitrary-send-eth",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "LiquityBase",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "getEntireSystemColl",
            "impact": "High",
            "line": 2710,
            "message": "LiquityBase.defaultPool (StabilityPool.sol#2710) is never initialized. It is used in:\n\t- LiquityBase.getEntireSystemColl() (StabilityPool.sol#2730-2735)\n\t- LiquityBase.getEntireSystemDebt() (StabilityPool.sol#2737-2742)\n",
            "name": "uninitialized-state",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "withdrawETHGainToTrove",
            "impact": "Medium",
            "line": 3211,
            "line_end": 3247,
            "message": "Reentrancy in StabilityPool.withdrawETHGainToTrove(address,address) (StabilityPool.sol#3211-3247):\n\tExternal calls:\n\t- _triggerLQTYIssuance() (StabilityPool.sol#3217)\n\t\t- LQTYIssuance = communityIssuance.issueLQTY() (StabilityPool.sol#3252)\n\t- _payOutLQTYGains(msg.sender,frontEnd) (StabilityPool.sol#3226)\n\t\t- communityIssuance.sendLQTY(_frontEnd,frontEndLQTYGain) (StabilityPool.sol#3707)\n\t\t- communityIssuance.sendLQTY(_depositor,depositorLQTYGain) (StabilityPool.sol#3713)\n\tState variables written after the call(s):\n\t- _updateDepositAndSnapshots(msg.sender,compoundedLUSDDeposit) (StabilityPool.sol#3234)\n\t\t- delete depositSnapshots[_depositor] (StabilityPool.sol#3656)\n\t\t- depositSnapshots[_depositor].P = currentP (StabilityPool.sol#3669)\n\t\t- depositSnapshots[_depositor].S = currentS (StabilityPool.sol#3670)\n\t\t- depositSnapshots[_depositor].G = currentG (StabilityPool.sol#3671)\n\t\t- depositSnapshots[_depositor].scale = currentScaleCached (StabilityPool.sol#3672)\n\t\t- depositSnapshots[_depositor].epoch = currentEpochCached (StabilityPool.sol#3673)\n\tStabilityPool.depositSnapshots (StabilityPool.sol#3017) can be used in cross function reentrancies:\n\t- StabilityPool._updateDepositAndSnapshots(address,uint256) (StabilityPool.sol#3651-3676)\n\t- StabilityPool.depositSnapshots (StabilityPool.sol#3017)\n\t- StabilityPool.getCompoundedLUSDDeposit(address) (StabilityPool.sol#3529-3537)\n\t- StabilityPool.getDepositorETHGain(address) (StabilityPool.sol#3429-3438)\n\t- StabilityPool.getDepositorLQTYGain(address) (StabilityPool.sol#3465-3483)\n\t- _updateDepositAndSnapshots(msg.sender,compoundedLUSDDeposit) (StabilityPool.sol#3234)\n\t\t- deposits[_depositor].initialValue = _newValue (StabilityPool.sol#3652)\n\t\t- delete deposits[_depositor].frontEndTag (StabilityPool.sol#3655)\n\tStabilityPool.deposits (StabilityPool.sol#3016) can be used in cross function reentrancies:\n\t- StabilityPool._requireUserHasNoDeposit(address) (StabilityPool.sol#3738-3741)\n\t- StabilityPool._setFrontEndTag(address,address) (StabilityPool.sol#3646-3648)\n\t- StabilityPool._updateDepositAndSnapshots(address,uint256) (StabilityPool.sol#3651-3676)\n\t- StabilityPool.deposits (StabilityPool.sol#3016)\n\t- StabilityPool.getCompoundedLUSDDeposit(address) (StabilityPool.sol#3529-3537)\n\t- StabilityPool.getDepositorETHGain(address) (StabilityPool.sol#3429-3438)\n\t- StabilityPool.getDepositorLQTYGain(address) (StabilityPool.sol#3465-3483)\n\t- StabilityPool.provideToSP(uint256,address) (StabilityPool.sol#3124-3157)\n\t- StabilityPool.withdrawETHGainToTrove(address,address) (StabilityPool.sol#3211-3247)\n\t- StabilityPool.withdrawFromSP(uint256) (StabilityPool.sol#3169-3202)\n\t- _updateFrontEndStakeAndSnapshots(frontEnd,newFrontEndStake) (StabilityPool.sol#3231)\n\t\t- delete frontEndSnapshots[_frontEnd] (StabilityPool.sol#3682)\n\t\t- frontEndSnapshots[_frontEnd].P = currentP (StabilityPool.sol#3695)\n\t\t- frontEndSnapshots[_frontEnd].G = currentG (StabilityPool.sol#3696)\n\t\t- frontEndSnapshots[_frontEnd].scale = currentScaleCached (StabilityPool.sol#3697)\n\t\t- frontEndSnapshots[_frontEnd].epoch = currentEpochCached (StabilityPool.sol#3698)\n\tStabilityPool.frontEndSnapshots (StabilityPool.sol#3021) can be used in cross function reentrancies:\n\t- StabilityPool._updateFrontEndStakeAndSnapshots(address,uint256) (StabilityPool.sol#3678-3701)\n\t- StabilityPool.frontEndSnapshots (StabilityPool.sol#3021)\n\t- StabilityPool.getCompoundedFrontEndStake(address) (StabilityPool.sol#3546-3554)\n\t- StabilityPool.getFrontEndLQTYGain(address) (StabilityPool.sol#3491-3502)\n\t- _updateFrontEndStakeAndSnapshots(frontEnd,newFrontEndStake) (StabilityPool.sol#3231)\n\t\t- frontEndStakes[_frontEnd] = _newValue (StabilityPool.sol#3679)\n\tStabilityPool.frontEndStakes (StabilityPool.sol#3020) can be used in cross function reentrancies:\n\t- StabilityPool._updateFrontEndStakeAndSnapshots(address,uint256) (StabilityPool.sol#3678-3701)\n\t- StabilityPool.frontEndStakes (StabilityPool.sol#3020)\n\t- StabilityPool.getCompoundedFrontEndStake(address) (StabilityPool.sol#3546-3554)\n\t- StabilityPool.getFrontEndLQTYGain(address) (StabilityPool.sol#3491-3502)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "provideToSP",
            "impact": "Medium",
            "line": 3124,
            "line_end": 3157,
            "message": "Reentrancy in StabilityPool.provideToSP(uint256,address) (StabilityPool.sol#3124-3157):\n\tExternal calls:\n\t- _triggerLQTYIssuance() (StabilityPool.sol#3131)\n\t\t- LQTYIssuance = communityIssuance.issueLQTY() (StabilityPool.sol#3252)\n\t- _payOutLQTYGains(msg.sender,frontEnd) (StabilityPool.sol#3140)\n\t\t- communityIssuance.sendLQTY(_frontEnd,frontEndLQTYGain) (StabilityPool.sol#3707)\n\t\t- communityIssuance.sendLQTY(_depositor,depositorLQTYGain) (StabilityPool.sol#3713)\n\tState variables written after the call(s):\n\t- _updateFrontEndStakeAndSnapshots(frontEnd,newFrontEndStake) (StabilityPool.sol#3145)\n\t\t- delete frontEndSnapshots[_frontEnd] (StabilityPool.sol#3682)\n\t\t- frontEndSnapshots[_frontEnd].P = currentP (StabilityPool.sol#3695)\n\t\t- frontEndSnapshots[_frontEnd].G = currentG (StabilityPool.sol#3696)\n\t\t- frontEndSnapshots[_frontEnd].scale = currentScaleCached (StabilityPool.sol#3697)\n\t\t- frontEndSnapshots[_frontEnd].epoch = currentEpochCached (StabilityPool.sol#3698)\n\tStabilityPool.frontEndSnapshots (StabilityPool.sol#3021) can be used in cross function reentrancies:\n\t- StabilityPool._updateFrontEndStakeAndSnapshots(address,uint256) (StabilityPool.sol#3678-3701)\n\t- StabilityPool.frontEndSnapshots (StabilityPool.sol#3021)\n\t- StabilityPool.getCompoundedFrontEndStake(address) (StabilityPool.sol#3546-3554)\n\t- StabilityPool.getFrontEndLQTYGain(address) (StabilityPool.sol#3491-3502)\n\t- _updateFrontEndStakeAndSnapshots(frontEnd,newFrontEndStake) (StabilityPool.sol#3145)\n\t\t- frontEndStakes[_frontEnd] = _newValue (StabilityPool.sol#3679)\n\tStabilityPool.frontEndStakes (StabilityPool.sol#3020) can be used in cross function reentrancies:\n\t- StabilityPool._updateFrontEndStakeAndSnapshots(address,uint256) (StabilityPool.sol#3678-3701)\n\t- StabilityPool.frontEndStakes (StabilityPool.sol#3020)\n\t- StabilityPool.getCompoundedFrontEndStake(address) (StabilityPool.sol#3546-3554)\n\t- StabilityPool.getFrontEndLQTYGain(address) (StabilityPool.sol#3491-3502)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "provideToSP",
            "impact": "Medium",
            "line": 3124,
            "line_end": 3157,
            "message": "Reentrancy in StabilityPool.provideToSP(uint256,address) (StabilityPool.sol#3124-3157):\n\tExternal calls:\n\t- _triggerLQTYIssuance() (StabilityPool.sol#3131)\n\t\t- LQTYIssuance = communityIssuance.issueLQTY() (StabilityPool.sol#3252)\n\t- _payOutLQTYGains(msg.sender,frontEnd) (StabilityPool.sol#3140)\n\t\t- communityIssuance.sendLQTY(_frontEnd,frontEndLQTYGain) (StabilityPool.sol#3707)\n\t\t- communityIssuance.sendLQTY(_depositor,depositorLQTYGain) (StabilityPool.sol#3713)\n\t- _sendLUSDtoStabilityPool(msg.sender,_amount) (StabilityPool.sol#3148)\n\t\t- lusdToken.sendToPool(_address,address(this),_amount) (StabilityPool.sol#3605)\n\tState variables written after the call(s):\n\t- _updateDepositAndSnapshots(msg.sender,newDeposit) (StabilityPool.sol#3151)\n\t\t- delete depositSnapshots[_depositor] (StabilityPool.sol#3656)\n\t\t- depositSnapshots[_depositor].P = currentP (StabilityPool.sol#3669)\n\t\t- depositSnapshots[_depositor].S = currentS (StabilityPool.sol#3670)\n\t\t- depositSnapshots[_depositor].G = currentG (StabilityPool.sol#3671)\n\t\t- depositSnapshots[_depositor].scale = currentScaleCached (StabilityPool.sol#3672)\n\t\t- depositSnapshots[_depositor].epoch = currentEpochCached (StabilityPool.sol#3673)\n\tStabilityPool.depositSnapshots (StabilityPool.sol#3017) can be used in cross function reentrancies:\n\t- StabilityPool._updateDepositAndSnapshots(address,uint256) (StabilityPool.sol#3651-3676)\n\t- StabilityPool.depositSnapshots (StabilityPool.sol#3017)\n\t- StabilityPool.getCompoundedLUSDDeposit(address) (StabilityPool.sol#3529-3537)\n\t- StabilityPool.getDepositorETHGain(address) (StabilityPool.sol#3429-3438)\n\t- StabilityPool.getDepositorLQTYGain(address) (StabilityPool.sol#3465-3483)\n\t- _updateDepositAndSnapshots(msg.sender,newDeposit) (StabilityPool.sol#3151)\n\t\t- deposits[_depositor].initialValue = _newValue (StabilityPool.sol#3652)\n\t\t- delete deposits[_depositor].frontEndTag (StabilityPool.sol#3655)\n\tStabilityPool.deposits (StabilityPool.sol#3016) can be used in cross function reentrancies:\n\t- StabilityPool._requireUserHasNoDeposit(address) (StabilityPool.sol#3738-3741)\n\t- StabilityPool._setFrontEndTag(address,address) (StabilityPool.sol#3646-3648)\n\t- StabilityPool._updateDepositAndSnapshots(address,uint256) (StabilityPool.sol#3651-3676)\n\t- StabilityPool.deposits (StabilityPool.sol#3016)\n\t- StabilityPool.getCompoundedLUSDDeposit(address) (StabilityPool.sol#3529-3537)\n\t- StabilityPool.getDepositorETHGain(address) (StabilityPool.sol#3429-3438)\n\t- StabilityPool.getDepositorLQTYGain(address) (StabilityPool.sol#3465-3483)\n\t- StabilityPool.provideToSP(uint256,address) (StabilityPool.sol#3124-3157)\n\t- StabilityPool.withdrawETHGainToTrove(address,address) (StabilityPool.sol#3211-3247)\n\t- StabilityPool.withdrawFromSP(uint256) (StabilityPool.sol#3169-3202)\n\t- _sendLUSDtoStabilityPool(msg.sender,_amount) (StabilityPool.sol#3148)\n\t\t- totalLUSDDeposits = newTotalLUSDDeposits (StabilityPool.sol#3607)\n\tStabilityPool.totalLUSDDeposits (StabilityPool.sol#2994) can be used in cross function reentrancies:\n\t- StabilityPool._decreaseLUSD(uint256) (StabilityPool.sol#3416-3420)\n\t- StabilityPool._sendLUSDtoStabilityPool(address,uint256) (StabilityPool.sol#3604-3609)\n\t- StabilityPool._updateG(uint256) (StabilityPool.sol#3256-3271)\n\t- StabilityPool.getTotalLUSDDeposits() (StabilityPool.sol#3110-3112)\n\t- StabilityPool.offset(uint256,uint256) (StabilityPool.sol#3300-3313)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "withdrawFromSP",
            "impact": "Medium",
            "line": 3169,
            "line_end": 3202,
            "message": "Reentrancy in StabilityPool.withdrawFromSP(uint256) (StabilityPool.sol#3169-3202):\n\tExternal calls:\n\t- _requireNoUnderCollateralizedTroves() (StabilityPool.sol#3170)\n\t\t- price = priceFeed.fetchPrice() (StabilityPool.sol#3728)\n\t- _triggerLQTYIssuance() (StabilityPool.sol#3174)\n\t\t- LQTYIssuance = communityIssuance.issueLQTY() (StabilityPool.sol#3252)\n\t- _payOutLQTYGains(msg.sender,frontEnd) (StabilityPool.sol#3184)\n\t\t- communityIssuance.sendLQTY(_frontEnd,frontEndLQTYGain) (StabilityPool.sol#3707)\n\t\t- communityIssuance.sendLQTY(_depositor,depositorLQTYGain) (StabilityPool.sol#3713)\n\tState variables written after the call(s):\n\t- _updateFrontEndStakeAndSnapshots(frontEnd,newFrontEndStake) (StabilityPool.sol#3189)\n\t\t- delete frontEndSnapshots[_frontEnd] (StabilityPool.sol#3682)\n\t\t- frontEndSnapshots[_frontEnd].P = currentP (StabilityPool.sol#3695)\n\t\t- frontEndSnapshots[_frontEnd].G = currentG (StabilityPool.sol#3696)\n\t\t- frontEndSnapshots[_frontEnd].scale = currentScaleCached (StabilityPool.sol#3697)\n\t\t- frontEndSnapshots[_frontEnd].epoch = currentEpochCached (StabilityPool.sol#3698)\n\tStabilityPool.frontEndSnapshots (StabilityPool.sol#3021) can be used in cross function reentrancies:\n\t- StabilityPool._updateFrontEndStakeAndSnapshots(address,uint256) (StabilityPool.sol#3678-3701)\n\t- StabilityPool.frontEndSnapshots (StabilityPool.sol#3021)\n\t- StabilityPool.getCompoundedFrontEndStake(address) (StabilityPool.sol#3546-3554)\n\t- StabilityPool.getFrontEndLQTYGain(address) (StabilityPool.sol#3491-3502)\n\t- _updateFrontEndStakeAndSnapshots(frontEnd,newFrontEndStake) (StabilityPool.sol#3189)\n\t\t- frontEndStakes[_frontEnd] = _newValue (StabilityPool.sol#3679)\n\tStabilityPool.frontEndStakes (StabilityPool.sol#3020) can be used in cross function reentrancies:\n\t- StabilityPool._updateFrontEndStakeAndSnapshots(address,uint256) (StabilityPool.sol#3678-3701)\n\t- StabilityPool.frontEndStakes (StabilityPool.sol#3020)\n\t- StabilityPool.getCompoundedFrontEndStake(address) (StabilityPool.sol#3546-3554)\n\t- StabilityPool.getFrontEndLQTYGain(address) (StabilityPool.sol#3491-3502)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "provideToSP",
            "impact": "Medium",
            "line": 3124,
            "line_end": 3157,
            "message": "Reentrancy in StabilityPool.provideToSP(uint256,address) (StabilityPool.sol#3124-3157):\n\tExternal calls:\n\t- _triggerLQTYIssuance() (StabilityPool.sol#3131)\n\t\t- LQTYIssuance = communityIssuance.issueLQTY() (StabilityPool.sol#3252)\n\tState variables written after the call(s):\n\t- _setFrontEndTag(msg.sender,_frontEndTag) (StabilityPool.sol#3133)\n\t\t- deposits[_depositor].frontEndTag = _frontEndTag (StabilityPool.sol#3647)\n\tStabilityPool.deposits (StabilityPool.sol#3016) can be used in cross function reentrancies:\n\t- StabilityPool._requireUserHasNoDeposit(address) (StabilityPool.sol#3738-3741)\n\t- StabilityPool._setFrontEndTag(address,address) (StabilityPool.sol#3646-3648)\n\t- StabilityPool._updateDepositAndSnapshots(address,uint256) (StabilityPool.sol#3651-3676)\n\t- StabilityPool.deposits (StabilityPool.sol#3016)\n\t- StabilityPool.getCompoundedLUSDDeposit(address) (StabilityPool.sol#3529-3537)\n\t- StabilityPool.getDepositorETHGain(address) (StabilityPool.sol#3429-3438)\n\t- StabilityPool.getDepositorLQTYGain(address) (StabilityPool.sol#3465-3483)\n\t- StabilityPool.provideToSP(uint256,address) (StabilityPool.sol#3124-3157)\n\t- StabilityPool.withdrawETHGainToTrove(address,address) (StabilityPool.sol#3211-3247)\n\t- StabilityPool.withdrawFromSP(uint256) (StabilityPool.sol#3169-3202)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "offset",
            "impact": "Medium",
            "line": 3300,
            "line_end": 3313,
            "message": "Reentrancy in StabilityPool.offset(uint256,uint256) (StabilityPool.sol#3300-3313):\n\tExternal calls:\n\t- _triggerLQTYIssuance() (StabilityPool.sol#3305)\n\t\t- LQTYIssuance = communityIssuance.issueLQTY() (StabilityPool.sol#3252)\n\tState variables written after the call(s):\n\t- _updateRewardSumAndProduct(ETHGainPerUnitStaked,LUSDLossPerUnitStaked) (StabilityPool.sol#3310)\n\t\t- P = newP (StabilityPool.sol#3401)\n\tStabilityPool.P (StabilityPool.sol#3029) can be used in cross function reentrancies:\n\t- StabilityPool.P (StabilityPool.sol#3029)\n\t- StabilityPool._getCompoundedStakeFromSnapshots(uint256,StabilityPool.Snapshots) (StabilityPool.sol#3557-3599)\n\t- StabilityPool._updateDepositAndSnapshots(address,uint256) (StabilityPool.sol#3651-3676)\n\t- StabilityPool._updateFrontEndStakeAndSnapshots(address,uint256) (StabilityPool.sol#3678-3701)\n\t- StabilityPool._updateG(uint256) (StabilityPool.sol#3256-3271)\n\t- StabilityPool._updateRewardSumAndProduct(uint256,uint256) (StabilityPool.sol#3360-3403)\n\t- _updateRewardSumAndProduct(ETHGainPerUnitStaked,LUSDLossPerUnitStaked) (StabilityPool.sol#3310)\n\t\t- currentEpoch = currentEpochCached.add(1) (StabilityPool.sol#3389)\n\tStabilityPool.currentEpoch (StabilityPool.sol#3035) can be used in cross function reentrancies:\n\t- StabilityPool._getCompoundedStakeFromSnapshots(uint256,StabilityPool.Snapshots) (StabilityPool.sol#3557-3599)\n\t- StabilityPool._updateDepositAndSnapshots(address,uint256) (StabilityPool.sol#3651-3676)\n\t- StabilityPool._updateFrontEndStakeAndSnapshots(address,uint256) (StabilityPool.sol#3678-3701)\n\t- StabilityPool._updateG(uint256) (StabilityPool.sol#3256-3271)\n\t- StabilityPool._updateRewardSumAndProduct(uint256,uint256) (StabilityPool.sol#3360-3403)\n\t- StabilityPool.currentEpoch (StabilityPool.sol#3035)\n\t- _updateRewardSumAndProduct(ETHGainPerUnitStaked,LUSDLossPerUnitStaked) (StabilityPool.sol#3310)\n\t\t- currentScale = 0 (StabilityPool.sol#3390)\n\t\t- currentScale = currentScaleCached.add(1) (StabilityPool.sol#3396)\n\tStabilityPool.currentScale (StabilityPool.sol#3032) can be used in cross function reentrancies:\n\t- StabilityPool._getCompoundedStakeFromSnapshots(uint256,StabilityPool.Snapshots) (StabilityPool.sol#3557-3599)\n\t- StabilityPool._updateDepositAndSnapshots(address,uint256) (StabilityPool.sol#3651-3676)\n\t- StabilityPool._updateFrontEndStakeAndSnapshots(address,uint256) (StabilityPool.sol#3678-3701)\n\t- StabilityPool._updateG(uint256) (StabilityPool.sol#3256-3271)\n\t- StabilityPool._updateRewardSumAndProduct(uint256,uint256) (StabilityPool.sol#3360-3403)\n\t- StabilityPool.currentScale (StabilityPool.sol#3032)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "withdrawFromSP",
            "impact": "Medium",
            "line": 3169,
            "line_end": 3202,
            "message": "Reentrancy in StabilityPool.withdrawFromSP(uint256) (StabilityPool.sol#3169-3202):\n\tExternal calls:\n\t- _requireNoUnderCollateralizedTroves() (StabilityPool.sol#3170)\n\t\t- price = priceFeed.fetchPrice() (StabilityPool.sol#3728)\n\t- _triggerLQTYIssuance() (StabilityPool.sol#3174)\n\t\t- LQTYIssuance = communityIssuance.issueLQTY() (StabilityPool.sol#3252)\n\t- _payOutLQTYGains(msg.sender,frontEnd) (StabilityPool.sol#3184)\n\t\t- communityIssuance.sendLQTY(_frontEnd,frontEndLQTYGain) (StabilityPool.sol#3707)\n\t\t- communityIssuance.sendLQTY(_depositor,depositorLQTYGain) (StabilityPool.sol#3713)\n\t- _sendLUSDToDepositor(msg.sender,LUSDtoWithdraw) (StabilityPool.sol#3192)\n\t\t- lusdToken.returnFromPool(address(this),_depositor,LUSDWithdrawal) (StabilityPool.sol#3626)\n\tState variables written after the call(s):\n\t- _updateDepositAndSnapshots(msg.sender,newDeposit) (StabilityPool.sol#3196)\n\t\t- delete depositSnapshots[_depositor] (StabilityPool.sol#3656)\n\t\t- depositSnapshots[_depositor].P = currentP (StabilityPool.sol#3669)\n\t\t- depositSnapshots[_depositor].S = currentS (StabilityPool.sol#3670)\n\t\t- depositSnapshots[_depositor].G = currentG (StabilityPool.sol#3671)\n\t\t- depositSnapshots[_depositor].scale = currentScaleCached (StabilityPool.sol#3672)\n\t\t- depositSnapshots[_depositor].epoch = currentEpochCached (StabilityPool.sol#3673)\n\tStabilityPool.depositSnapshots (StabilityPool.sol#3017) can be used in cross function reentrancies:\n\t- StabilityPool._updateDepositAndSnapshots(address,uint256) (StabilityPool.sol#3651-3676)\n\t- StabilityPool.depositSnapshots (StabilityPool.sol#3017)\n\t- StabilityPool.getCompoundedLUSDDeposit(address) (StabilityPool.sol#3529-3537)\n\t- StabilityPool.getDepositorETHGain(address) (StabilityPool.sol#3429-3438)\n\t- StabilityPool.getDepositorLQTYGain(address) (StabilityPool.sol#3465-3483)\n\t- _updateDepositAndSnapshots(msg.sender,newDeposit) (StabilityPool.sol#3196)\n\t\t- deposits[_depositor].initialValue = _newValue (StabilityPool.sol#3652)\n\t\t- delete deposits[_depositor].frontEndTag (StabilityPool.sol#3655)\n\tStabilityPool.deposits (StabilityPool.sol#3016) can be used in cross function reentrancies:\n\t- StabilityPool._requireUserHasNoDeposit(address) (StabilityPool.sol#3738-3741)\n\t- StabilityPool._setFrontEndTag(address,address) (StabilityPool.sol#3646-3648)\n\t- StabilityPool._updateDepositAndSnapshots(address,uint256) (StabilityPool.sol#3651-3676)\n\t- StabilityPool.deposits (StabilityPool.sol#3016)\n\t- StabilityPool.getCompoundedLUSDDeposit(address) (StabilityPool.sol#3529-3537)\n\t- StabilityPool.getDepositorETHGain(address) (StabilityPool.sol#3429-3438)\n\t- StabilityPool.getDepositorLQTYGain(address) (StabilityPool.sol#3465-3483)\n\t- StabilityPool.provideToSP(uint256,address) (StabilityPool.sol#3124-3157)\n\t- StabilityPool.withdrawETHGainToTrove(address,address) (StabilityPool.sol#3211-3247)\n\t- StabilityPool.withdrawFromSP(uint256) (StabilityPool.sol#3169-3202)\n\t- _sendLUSDToDepositor(msg.sender,LUSDtoWithdraw) (StabilityPool.sol#3192)\n\t\t- totalLUSDDeposits = newTotalLUSDDeposits (StabilityPool.sol#3418)\n\tStabilityPool.totalLUSDDeposits (StabilityPool.sol#2994) can be used in cross function reentrancies:\n\t- StabilityPool._decreaseLUSD(uint256) (StabilityPool.sol#3416-3420)\n\t- StabilityPool._sendLUSDtoStabilityPool(address,uint256) (StabilityPool.sol#3604-3609)\n\t- StabilityPool._updateG(uint256) (StabilityPool.sol#3256-3271)\n\t- StabilityPool.getTotalLUSDDeposits() (StabilityPool.sol#3110-3112)\n\t- StabilityPool.offset(uint256,uint256) (StabilityPool.sol#3300-3313)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "offset",
            "impact": "Medium",
            "line": 3300,
            "line_end": 3313,
            "message": "Reentrancy in StabilityPool.offset(uint256,uint256) (StabilityPool.sol#3300-3313):\n\tExternal calls:\n\t- _triggerLQTYIssuance() (StabilityPool.sol#3305)\n\t\t- LQTYIssuance = communityIssuance.issueLQTY() (StabilityPool.sol#3252)\n\t- _moveOffsetCollAndDebt(_collToAdd,_debtToOffset) (StabilityPool.sol#3312)\n\t\t- activePool.decreaseLUSDDebt(_debtToOffset) (StabilityPool.sol#3407)\n\t\t- lusdToken.burn(address(this),_debtToOffset) (StabilityPool.sol#3411)\n\t\t- activePool.sendETH(address(this),_collToAdd) (StabilityPool.sol#3413)\n\tState variables written after the call(s):\n\t- _moveOffsetCollAndDebt(_collToAdd,_debtToOffset) (StabilityPool.sol#3312)\n\t\t- totalLUSDDeposits = newTotalLUSDDeposits (StabilityPool.sol#3418)\n\tStabilityPool.totalLUSDDeposits (StabilityPool.sol#2994) can be used in cross function reentrancies:\n\t- StabilityPool._decreaseLUSD(uint256) (StabilityPool.sol#3416-3420)\n\t- StabilityPool._sendLUSDtoStabilityPool(address,uint256) (StabilityPool.sol#3604-3609)\n\t- StabilityPool._updateG(uint256) (StabilityPool.sol#3256-3271)\n\t- StabilityPool.getTotalLUSDDeposits() (StabilityPool.sol#3110-3112)\n\t- StabilityPool.offset(uint256,uint256) (StabilityPool.sol#3300-3313)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "receive",
            "impact": "Low",
            "line": 3771,
            "line_end": 3774,
            "message": "StabilityPool.receive() (StabilityPool.sol#3771-3774) should emit an event for: \n\t- ETH = ETH.add(msg.value) (StabilityPool.sol#3773) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "_sendLUSDtoStabilityPool",
            "impact": "Low",
            "line": 3604,
            "line_end": 3609,
            "message": "Reentrancy in StabilityPool._sendLUSDtoStabilityPool(address,uint256) (StabilityPool.sol#3604-3609):\n\tExternal calls:\n\t- lusdToken.sendToPool(_address,address(this),_amount) (StabilityPool.sol#3605)\n\tState variables written after the call(s):\n\t- totalLUSDDeposits = newTotalLUSDDeposits (StabilityPool.sol#3607)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "_triggerLQTYIssuance",
            "impact": "Low",
            "line": 3251,
            "line_end": 3254,
            "message": "Reentrancy in StabilityPool._triggerLQTYIssuance() (StabilityPool.sol#3251-3254):\n\tExternal calls:\n\t- LQTYIssuance = communityIssuance.issueLQTY() (StabilityPool.sol#3252)\n\tState variables written after the call(s):\n\t- _updateG(LQTYIssuance) (StabilityPool.sol#3253)\n\t\t- epochToScaleToG[currentEpoch][currentScale] = epochToScaleToG[currentEpoch][currentScale].add(marginalLQTYGain) (StabilityPool.sol#3270)\n\t- _updateG(LQTYIssuance) (StabilityPool.sol#3253)\n\t\t- lastLQTYError = LQTYNumerator.sub(LQTYPerUnitStaked.mul(_totalLUSDDeposits)) (StabilityPool.sol#3288)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "withdrawETHGainToTrove",
            "impact": "Low",
            "line": 3211,
            "line_end": 3247,
            "message": "Reentrancy in StabilityPool.withdrawETHGainToTrove(address,address) (StabilityPool.sol#3211-3247):\n\tExternal calls:\n\t- _triggerLQTYIssuance() (StabilityPool.sol#3217)\n\t\t- LQTYIssuance = communityIssuance.issueLQTY() (StabilityPool.sol#3252)\n\t- _payOutLQTYGains(msg.sender,frontEnd) (StabilityPool.sol#3226)\n\t\t- communityIssuance.sendLQTY(_frontEnd,frontEndLQTYGain) (StabilityPool.sol#3707)\n\t\t- communityIssuance.sendLQTY(_depositor,depositorLQTYGain) (StabilityPool.sol#3713)\n\tState variables written after the call(s):\n\t- ETH = ETH.sub(depositorETHGain) (StabilityPool.sol#3242)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "_moveOffsetCollAndDebt",
            "impact": "Low",
            "line": 3405,
            "line_end": 3414,
            "message": "Reentrancy in StabilityPool._moveOffsetCollAndDebt(uint256,uint256) (StabilityPool.sol#3405-3414):\n\tExternal calls:\n\t- activePool.decreaseLUSDDebt(_debtToOffset) (StabilityPool.sol#3407)\n\tState variables written after the call(s):\n\t- _decreaseLUSD(_debtToOffset) (StabilityPool.sol#3408)\n\t\t- totalLUSDDeposits = newTotalLUSDDeposits (StabilityPool.sol#3418)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "offset",
            "impact": "Low",
            "line": 3300,
            "line_end": 3313,
            "message": "Reentrancy in StabilityPool.offset(uint256,uint256) (StabilityPool.sol#3300-3313):\n\tExternal calls:\n\t- _triggerLQTYIssuance() (StabilityPool.sol#3305)\n\t\t- LQTYIssuance = communityIssuance.issueLQTY() (StabilityPool.sol#3252)\n\tState variables written after the call(s):\n\t- _updateRewardSumAndProduct(ETHGainPerUnitStaked,LUSDLossPerUnitStaked) (StabilityPool.sol#3310)\n\t\t- epochToScaleToSum[currentEpochCached][currentScaleCached] = newS (StabilityPool.sol#3384)\n\t- (ETHGainPerUnitStaked,LUSDLossPerUnitStaked) = _computeRewardsPerUnitStaked(_collToAdd,_debtToOffset,totalLUSD) (StabilityPool.sol#3307-3308)\n\t\t- lastETHError_Offset = ETHNumerator.sub(ETHGainPerUnitStaked.mul(_totalLUSDDeposits)) (StabilityPool.sol#3354)\n\t- (ETHGainPerUnitStaked,LUSDLossPerUnitStaked) = _computeRewardsPerUnitStaked(_collToAdd,_debtToOffset,totalLUSD) (StabilityPool.sol#3307-3308)\n\t\t- lastLUSDLossError_Offset = 0 (StabilityPool.sol#3342)\n\t\t- lastLUSDLossError_Offset = (LUSDLossPerUnitStaked.mul(_totalLUSDDeposits)).sub(LUSDLossNumerator) (StabilityPool.sol#3350)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "_sendLUSDToDepositor",
            "impact": "Low",
            "line": 3623,
            "line_end": 3628,
            "message": "Reentrancy in StabilityPool._sendLUSDToDepositor(address,uint256) (StabilityPool.sol#3623-3628):\n\tExternal calls:\n\t- lusdToken.returnFromPool(address(this),_depositor,LUSDWithdrawal) (StabilityPool.sol#3626)\n\tState variables written after the call(s):\n\t- _decreaseLUSD(LUSDWithdrawal) (StabilityPool.sol#3627)\n\t\t- totalLUSDDeposits = newTotalLUSDDeposits (StabilityPool.sol#3418)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "withdrawFromSP",
            "impact": "Low",
            "line": 3169,
            "line_end": 3202,
            "message": "Reentrancy in StabilityPool.withdrawFromSP(uint256) (StabilityPool.sol#3169-3202):\n\tExternal calls:\n\t- _requireNoUnderCollateralizedTroves() (StabilityPool.sol#3170)\n\t\t- price = priceFeed.fetchPrice() (StabilityPool.sol#3728)\n\t- _triggerLQTYIssuance() (StabilityPool.sol#3174)\n\t\t- LQTYIssuance = communityIssuance.issueLQTY() (StabilityPool.sol#3252)\n\t- _payOutLQTYGains(msg.sender,frontEnd) (StabilityPool.sol#3184)\n\t\t- communityIssuance.sendLQTY(_frontEnd,frontEndLQTYGain) (StabilityPool.sol#3707)\n\t\t- communityIssuance.sendLQTY(_depositor,depositorLQTYGain) (StabilityPool.sol#3713)\n\tEvent emitted after the call(s):\n\t- FrontEndSnapshotUpdated(_frontEnd,0,0) (StabilityPool.sol#3683)\n\t\t- _updateFrontEndStakeAndSnapshots(frontEnd,newFrontEndStake) (StabilityPool.sol#3189)\n\t- FrontEndSnapshotUpdated(_frontEnd,currentP,currentG) (StabilityPool.sol#3700)\n\t\t- _updateFrontEndStakeAndSnapshots(frontEnd,newFrontEndStake) (StabilityPool.sol#3189)\n\t- FrontEndStakeChanged(frontEnd,newFrontEndStake,msg.sender) (StabilityPool.sol#3190)\n\t- LQTYPaidToDepositor(_depositor,depositorLQTYGain) (StabilityPool.sol#3714)\n\t\t- _payOutLQTYGains(msg.sender,frontEnd) (StabilityPool.sol#3184)\n\t- LQTYPaidToFrontEnd(_frontEnd,frontEndLQTYGain) (StabilityPool.sol#3708)\n\t\t- _payOutLQTYGains(msg.sender,frontEnd) (StabilityPool.sol#3184)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "withdrawFromSP",
            "impact": "Low",
            "line": 3169,
            "line_end": 3202,
            "message": "Reentrancy in StabilityPool.withdrawFromSP(uint256) (StabilityPool.sol#3169-3202):\n\tExternal calls:\n\t- _requireNoUnderCollateralizedTroves() (StabilityPool.sol#3170)\n\t\t- price = priceFeed.fetchPrice() (StabilityPool.sol#3728)\n\t- _triggerLQTYIssuance() (StabilityPool.sol#3174)\n\t\t- LQTYIssuance = communityIssuance.issueLQTY() (StabilityPool.sol#3252)\n\t- _payOutLQTYGains(msg.sender,frontEnd) (StabilityPool.sol#3184)\n\t\t- communityIssuance.sendLQTY(_frontEnd,frontEndLQTYGain) (StabilityPool.sol#3707)\n\t\t- communityIssuance.sendLQTY(_depositor,depositorLQTYGain) (StabilityPool.sol#3713)\n\t- _sendLUSDToDepositor(msg.sender,LUSDtoWithdraw) (StabilityPool.sol#3192)\n\t\t- lusdToken.returnFromPool(address(this),_depositor,LUSDWithdrawal) (StabilityPool.sol#3626)\n\t- _sendETHGainToDepositor(depositorETHGain) (StabilityPool.sol#3201)\n\t\t- (success) = msg.sender.call{value: _amount}() (StabilityPool.sol#3618)\n\tExternal calls sending eth:\n\t- _sendETHGainToDepositor(depositorETHGain) (StabilityPool.sol#3201)\n\t\t- (success) = msg.sender.call{value: _amount}() (StabilityPool.sol#3618)\n\tEvent emitted after the call(s):\n\t- ETHBalanceUpdated(newETH) (StabilityPool.sol#3615)\n\t\t- _sendETHGainToDepositor(depositorETHGain) (StabilityPool.sol#3201)\n\t- EtherSent(msg.sender,_amount) (StabilityPool.sol#3616)\n\t\t- _sendETHGainToDepositor(depositorETHGain) (StabilityPool.sol#3201)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "_sendLUSDtoStabilityPool",
            "impact": "Low",
            "line": 3604,
            "line_end": 3609,
            "message": "Reentrancy in StabilityPool._sendLUSDtoStabilityPool(address,uint256) (StabilityPool.sol#3604-3609):\n\tExternal calls:\n\t- lusdToken.sendToPool(_address,address(this),_amount) (StabilityPool.sol#3605)\n\tEvent emitted after the call(s):\n\t- LUSDBalanceUpdated(newTotalLUSDDeposits) (StabilityPool.sol#3608)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "_sendLUSDToDepositor",
            "impact": "Low",
            "line": 3623,
            "line_end": 3628,
            "message": "Reentrancy in StabilityPool._sendLUSDToDepositor(address,uint256) (StabilityPool.sol#3623-3628):\n\tExternal calls:\n\t- lusdToken.returnFromPool(address(this),_depositor,LUSDWithdrawal) (StabilityPool.sol#3626)\n\tEvent emitted after the call(s):\n\t- LUSDBalanceUpdated(newTotalLUSDDeposits) (StabilityPool.sol#3419)\n\t\t- _decreaseLUSD(LUSDWithdrawal) (StabilityPool.sol#3627)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "provideToSP",
            "impact": "Low",
            "line": 3124,
            "line_end": 3157,
            "message": "Reentrancy in StabilityPool.provideToSP(uint256,address) (StabilityPool.sol#3124-3157):\n\tExternal calls:\n\t- _triggerLQTYIssuance() (StabilityPool.sol#3131)\n\t\t- LQTYIssuance = communityIssuance.issueLQTY() (StabilityPool.sol#3252)\n\t- _payOutLQTYGains(msg.sender,frontEnd) (StabilityPool.sol#3140)\n\t\t- communityIssuance.sendLQTY(_frontEnd,frontEndLQTYGain) (StabilityPool.sol#3707)\n\t\t- communityIssuance.sendLQTY(_depositor,depositorLQTYGain) (StabilityPool.sol#3713)\n\tEvent emitted after the call(s):\n\t- FrontEndSnapshotUpdated(_frontEnd,0,0) (StabilityPool.sol#3683)\n\t\t- _updateFrontEndStakeAndSnapshots(frontEnd,newFrontEndStake) (StabilityPool.sol#3145)\n\t- FrontEndSnapshotUpdated(_frontEnd,currentP,currentG) (StabilityPool.sol#3700)\n\t\t- _updateFrontEndStakeAndSnapshots(frontEnd,newFrontEndStake) (StabilityPool.sol#3145)\n\t- FrontEndStakeChanged(frontEnd,newFrontEndStake,msg.sender) (StabilityPool.sol#3146)\n\t- LQTYPaidToDepositor(_depositor,depositorLQTYGain) (StabilityPool.sol#3714)\n\t\t- _payOutLQTYGains(msg.sender,frontEnd) (StabilityPool.sol#3140)\n\t- LQTYPaidToFrontEnd(_frontEnd,frontEndLQTYGain) (StabilityPool.sol#3708)\n\t\t- _payOutLQTYGains(msg.sender,frontEnd) (StabilityPool.sol#3140)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "withdrawETHGainToTrove",
            "impact": "Low",
            "line": 3211,
            "line_end": 3247,
            "message": "Reentrancy in StabilityPool.withdrawETHGainToTrove(address,address) (StabilityPool.sol#3211-3247):\n\tExternal calls:\n\t- _triggerLQTYIssuance() (StabilityPool.sol#3217)\n\t\t- LQTYIssuance = communityIssuance.issueLQTY() (StabilityPool.sol#3252)\n\t- _payOutLQTYGains(msg.sender,frontEnd) (StabilityPool.sol#3226)\n\t\t- communityIssuance.sendLQTY(_frontEnd,frontEndLQTYGain) (StabilityPool.sol#3707)\n\t\t- communityIssuance.sendLQTY(_depositor,depositorLQTYGain) (StabilityPool.sol#3713)\n\tEvent emitted after the call(s):\n\t- DepositSnapshotUpdated(_depositor,0,0,0) (StabilityPool.sol#3657)\n\t\t- _updateDepositAndSnapshots(msg.sender,compoundedLUSDDeposit) (StabilityPool.sol#3234)\n\t- DepositSnapshotUpdated(_depositor,currentP,currentS,currentG) (StabilityPool.sol#3675)\n\t\t- _updateDepositAndSnapshots(msg.sender,compoundedLUSDDeposit) (StabilityPool.sol#3234)\n\t- ETHBalanceUpdated(ETH) (StabilityPool.sol#3243)\n\t- ETHGainWithdrawn(msg.sender,depositorETHGain,LUSDLoss) (StabilityPool.sol#3239)\n\t- EtherSent(msg.sender,depositorETHGain) (StabilityPool.sol#3244)\n\t- FrontEndSnapshotUpdated(_frontEnd,0,0) (StabilityPool.sol#3683)\n\t\t- _updateFrontEndStakeAndSnapshots(frontEnd,newFrontEndStake) (StabilityPool.sol#3231)\n\t- FrontEndSnapshotUpdated(_frontEnd,currentP,currentG) (StabilityPool.sol#3700)\n\t\t- _updateFrontEndStakeAndSnapshots(frontEnd,newFrontEndStake) (StabilityPool.sol#3231)\n\t- FrontEndStakeChanged(frontEnd,newFrontEndStake,msg.sender) (StabilityPool.sol#3232)\n\t- LQTYPaidToDepositor(_depositor,depositorLQTYGain) (StabilityPool.sol#3714)\n\t\t- _payOutLQTYGains(msg.sender,frontEnd) (StabilityPool.sol#3226)\n\t- LQTYPaidToFrontEnd(_frontEnd,frontEndLQTYGain) (StabilityPool.sol#3708)\n\t\t- _payOutLQTYGains(msg.sender,frontEnd) (StabilityPool.sol#3226)\n\t- UserDepositChanged(msg.sender,compoundedLUSDDeposit) (StabilityPool.sol#3240)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "_payOutLQTYGains",
            "impact": "Low",
            "line": 3703,
            "line_end": 3715,
            "message": "Reentrancy in StabilityPool._payOutLQTYGains(address,address) (StabilityPool.sol#3703-3715):\n\tExternal calls:\n\t- communityIssuance.sendLQTY(_frontEnd,frontEndLQTYGain) (StabilityPool.sol#3707)\n\t- communityIssuance.sendLQTY(_depositor,depositorLQTYGain) (StabilityPool.sol#3713)\n\tEvent emitted after the call(s):\n\t- LQTYPaidToDepositor(_depositor,depositorLQTYGain) (StabilityPool.sol#3714)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "provideToSP",
            "impact": "Low",
            "line": 3124,
            "line_end": 3157,
            "message": "Reentrancy in StabilityPool.provideToSP(uint256,address) (StabilityPool.sol#3124-3157):\n\tExternal calls:\n\t- _triggerLQTYIssuance() (StabilityPool.sol#3131)\n\t\t- LQTYIssuance = communityIssuance.issueLQTY() (StabilityPool.sol#3252)\n\t- _payOutLQTYGains(msg.sender,frontEnd) (StabilityPool.sol#3140)\n\t\t- communityIssuance.sendLQTY(_frontEnd,frontEndLQTYGain) (StabilityPool.sol#3707)\n\t\t- communityIssuance.sendLQTY(_depositor,depositorLQTYGain) (StabilityPool.sol#3713)\n\t- _sendLUSDtoStabilityPool(msg.sender,_amount) (StabilityPool.sol#3148)\n\t\t- lusdToken.sendToPool(_address,address(this),_amount) (StabilityPool.sol#3605)\n\t- _sendETHGainToDepositor(depositorETHGain) (StabilityPool.sol#3156)\n\t\t- (success) = msg.sender.call{value: _amount}() (StabilityPool.sol#3618)\n\tExternal calls sending eth:\n\t- _sendETHGainToDepositor(depositorETHGain) (StabilityPool.sol#3156)\n\t\t- (success) = msg.sender.call{value: _amount}() (StabilityPool.sol#3618)\n\tEvent emitted after the call(s):\n\t- ETHBalanceUpdated(newETH) (StabilityPool.sol#3615)\n\t\t- _sendETHGainToDepositor(depositorETHGain) (StabilityPool.sol#3156)\n\t- EtherSent(msg.sender,_amount) (StabilityPool.sol#3616)\n\t\t- _sendETHGainToDepositor(depositorETHGain) (StabilityPool.sol#3156)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "offset",
            "impact": "Low",
            "line": 3300,
            "line_end": 3313,
            "message": "Reentrancy in StabilityPool.offset(uint256,uint256) (StabilityPool.sol#3300-3313):\n\tExternal calls:\n\t- _triggerLQTYIssuance() (StabilityPool.sol#3305)\n\t\t- LQTYIssuance = communityIssuance.issueLQTY() (StabilityPool.sol#3252)\n\tEvent emitted after the call(s):\n\t- P_Updated(newP) (StabilityPool.sol#3402)\n\t\t- _updateRewardSumAndProduct(ETHGainPerUnitStaked,LUSDLossPerUnitStaked) (StabilityPool.sol#3310)\n\t- S_Updated(newS) (StabilityPool.sol#3385)\n\t\t- _updateRewardSumAndProduct(ETHGainPerUnitStaked,LUSDLossPerUnitStaked) (StabilityPool.sol#3310)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "_moveOffsetCollAndDebt",
            "impact": "Low",
            "line": 3405,
            "line_end": 3414,
            "message": "Reentrancy in StabilityPool._moveOffsetCollAndDebt(uint256,uint256) (StabilityPool.sol#3405-3414):\n\tExternal calls:\n\t- activePool.decreaseLUSDDebt(_debtToOffset) (StabilityPool.sol#3407)\n\tEvent emitted after the call(s):\n\t- LUSDBalanceUpdated(newTotalLUSDDeposits) (StabilityPool.sol#3419)\n\t\t- _decreaseLUSD(_debtToOffset) (StabilityPool.sol#3408)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "_payOutLQTYGains",
            "impact": "Low",
            "line": 3703,
            "line_end": 3715,
            "message": "Reentrancy in StabilityPool._payOutLQTYGains(address,address) (StabilityPool.sol#3703-3715):\n\tExternal calls:\n\t- communityIssuance.sendLQTY(_frontEnd,frontEndLQTYGain) (StabilityPool.sol#3707)\n\tEvent emitted after the call(s):\n\t- LQTYPaidToFrontEnd(_frontEnd,frontEndLQTYGain) (StabilityPool.sol#3708)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "offset",
            "impact": "Low",
            "line": 3300,
            "line_end": 3313,
            "message": "Reentrancy in StabilityPool.offset(uint256,uint256) (StabilityPool.sol#3300-3313):\n\tExternal calls:\n\t- _triggerLQTYIssuance() (StabilityPool.sol#3305)\n\t\t- LQTYIssuance = communityIssuance.issueLQTY() (StabilityPool.sol#3252)\n\t- _moveOffsetCollAndDebt(_collToAdd,_debtToOffset) (StabilityPool.sol#3312)\n\t\t- activePool.decreaseLUSDDebt(_debtToOffset) (StabilityPool.sol#3407)\n\t\t- lusdToken.burn(address(this),_debtToOffset) (StabilityPool.sol#3411)\n\t\t- activePool.sendETH(address(this),_collToAdd) (StabilityPool.sol#3413)\n\tEvent emitted after the call(s):\n\t- LUSDBalanceUpdated(newTotalLUSDDeposits) (StabilityPool.sol#3419)\n\t\t- _moveOffsetCollAndDebt(_collToAdd,_debtToOffset) (StabilityPool.sol#3312)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "provideToSP",
            "impact": "Low",
            "line": 3124,
            "line_end": 3157,
            "message": "Reentrancy in StabilityPool.provideToSP(uint256,address) (StabilityPool.sol#3124-3157):\n\tExternal calls:\n\t- _triggerLQTYIssuance() (StabilityPool.sol#3131)\n\t\t- LQTYIssuance = communityIssuance.issueLQTY() (StabilityPool.sol#3252)\n\t- _payOutLQTYGains(msg.sender,frontEnd) (StabilityPool.sol#3140)\n\t\t- communityIssuance.sendLQTY(_frontEnd,frontEndLQTYGain) (StabilityPool.sol#3707)\n\t\t- communityIssuance.sendLQTY(_depositor,depositorLQTYGain) (StabilityPool.sol#3713)\n\t- _sendLUSDtoStabilityPool(msg.sender,_amount) (StabilityPool.sol#3148)\n\t\t- lusdToken.sendToPool(_address,address(this),_amount) (StabilityPool.sol#3605)\n\tEvent emitted after the call(s):\n\t- DepositSnapshotUpdated(_depositor,0,0,0) (StabilityPool.sol#3657)\n\t\t- _updateDepositAndSnapshots(msg.sender,newDeposit) (StabilityPool.sol#3151)\n\t- DepositSnapshotUpdated(_depositor,currentP,currentS,currentG) (StabilityPool.sol#3675)\n\t\t- _updateDepositAndSnapshots(msg.sender,newDeposit) (StabilityPool.sol#3151)\n\t- ETHGainWithdrawn(msg.sender,depositorETHGain,LUSDLoss) (StabilityPool.sol#3154)\n\t- LUSDBalanceUpdated(newTotalLUSDDeposits) (StabilityPool.sol#3608)\n\t\t- _sendLUSDtoStabilityPool(msg.sender,_amount) (StabilityPool.sol#3148)\n\t- UserDepositChanged(msg.sender,newDeposit) (StabilityPool.sol#3152)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "StabilityPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Trail_of_Bits-LiquityProtocolandStabilityPoolFinalReport/dev-8cec3fda04b8c71994dc14858386bf6a161164fc/packages/contracts/contracts/StabilityPool.sol",
            "function": "withdrawFromSP",
            "impact": "Low",
            "line": 3169,
            "line_end": 3202,
            "message": "Reentrancy in StabilityPool.withdrawFromSP(uint256) (StabilityPool.sol#3169-3202):\n\tExternal calls:\n\t- _requireNoUnderCollateralizedTroves() (StabilityPool.sol#3170)\n\t\t- price = priceFeed.fetchPrice() (StabilityPool.sol#3728)\n\t- _triggerLQTYIssuance() (StabilityPool.sol#3174)\n\t\t- LQTYIssuance = communityIssuance.issueLQTY() (StabilityPool.sol#3252)\n\t- _payOutLQTYGains(msg.sender,frontEnd) (StabilityPool.sol#3184)\n\t\t- communityIssuance.sendLQTY(_frontEnd,frontEndLQTYGain) (StabilityPool.sol#3707)\n\t\t- communityIssuance.sendLQTY(_depositor,depositorLQTYGain) (StabilityPool.sol#3713)\n\t- _sendLUSDToDepositor(msg.sender,LUSDtoWithdraw) (StabilityPool.sol#3192)\n\t\t- lusdToken.returnFromPool(address(this),_depositor,LUSDWithdrawal) (StabilityPool.sol#3626)\n\tEvent emitted after the call(s):\n\t- DepositSnapshotUpdated(_depositor,0,0,0) (StabilityPool.sol#3657)\n\t\t- _updateDepositAndSnapshots(msg.sender,newDeposit) (StabilityPool.sol#3196)\n\t- DepositSnapshotUpdated(_depositor,currentP,currentS,currentG) (StabilityPool.sol#3675)\n\t\t- _updateDepositAndSnapshots(msg.sender,newDeposit) (StabilityPool.sol#3196)\n\t- ETHGainWithdrawn(msg.sender,depositorETHGain,LUSDLoss) (StabilityPool.sol#3199)\n\t- LUSDBalanceUpdated(newTotalLUSDDeposits) (StabilityPool.sol#3419)\n\t\t- _sendLUSDToDepositor(msg.sender,LUSDtoWithdraw) (StabilityPool.sol#3192)\n\t- UserDepositChanged(msg.sender,newDeposit) (StabilityPool.sol#3197)\n",
            "name": "reentrancy-events",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}