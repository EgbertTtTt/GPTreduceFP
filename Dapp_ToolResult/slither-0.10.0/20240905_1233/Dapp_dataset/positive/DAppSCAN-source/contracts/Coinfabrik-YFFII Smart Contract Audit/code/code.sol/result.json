{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "Controller",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinfabrik-YFFII Smart Contract Audit/code/code.sol",
            "function": "setStrategy",
            "impact": "Medium",
            "line": 229,
            "line_end": 238,
            "message": "Reentrancy in Controller.setStrategy(address,address) (code.sol#229-238):\n\tExternal calls:\n\t- Strategy(_current).withdrawAll() (code.sol#235)\n\tState variables written after the call(s):\n\t- strategies[_token] = _strategy (code.sol#237)\n\tController.strategies (code.sol#168) can be used in cross function reentrancies:\n\t- Controller.balanceOf(address) (code.sol#254-256)\n\t- Controller.earn(address,uint256) (code.sol#240-252)\n\t- Controller.setStrategy(address,address) (code.sol#229-238)\n\t- Controller.strategies (code.sol#168)\n\t- Controller.withdraw(address,uint256) (code.sol#306-309)\n\t- Controller.withdrawAll(address) (code.sol#258-261)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Controller",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinfabrik-YFFII Smart Contract Audit/code/code.sol",
            "function": "yearn",
            "impact": "Medium",
            "line": 280,
            "line_end": 304,
            "message": "Controller.yearn(address,address,uint256) (code.sol#280-304) ignores return value by OneSplitAudit(onesplit).swap(_token,_want,_amount,_expected,_distribution,0) (code.sol#295)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Controller",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinfabrik-YFFII Smart Contract Audit/code/code.sol",
            "function": "setStrategy",
            "impact": "Medium",
            "line": 229,
            "line_end": 238,
            "message": "Controller.setStrategy(address,address) (code.sol#229-238) ignores return value by Strategy(_current).withdrawAll() (code.sol#235)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Controller",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinfabrik-YFFII Smart Contract Audit/code/code.sol",
            "function": "getExpectedReturn",
            "impact": "Medium",
            "line": 273,
            "line_end": 277,
            "message": "Controller.getExpectedReturn(address,address,uint256) (code.sol#273-277) ignores return value by (expected,None) = OneSplitAudit(onesplit).getExpectedReturn(_token,_want,_balance,parts,0) (code.sol#276)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Controller",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinfabrik-YFFII Smart Contract Audit/code/code.sol",
            "function": "withdrawAll",
            "impact": "Medium",
            "line": 258,
            "line_end": 261,
            "message": "Controller.withdrawAll(address) (code.sol#258-261) ignores return value by Strategy(strategies[_token]).withdrawAll() (code.sol#260)\n",
            "name": "unused-return",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}