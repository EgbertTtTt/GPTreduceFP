{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Bird Money-Final Audit Report/bird-farm-contracts-dfd2502b73c8f54c9081682c3eb070fcd3c00629/contracts/MasterChef.sol",
            "function": "safeRewardTokenTransfer",
            "impact": "High",
            "line": 1236,
            "line_end": 1247,
            "message": "MasterChef.safeRewardTokenTransfer(address,uint256) (MasterChef.sol#1236-1247) ignores return value by rewardToken.transfer(_to,_amount) (MasterChef.sol#1244)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Bird Money-Final Audit Report/bird-farm-contracts-dfd2502b73c8f54c9081682c3eb070fcd3c00629/contracts/MasterChef.sol",
            "function": "depositRewardTokens",
            "impact": "High",
            "line": 1261,
            "line_end": 1263,
            "message": "MasterChef.depositRewardTokens(uint256) (MasterChef.sol#1261-1263) ignores return value by rewardToken.transferFrom(msg.sender,address(this),_amount) (MasterChef.sol#1262)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Bird Money-Final Audit Report/bird-farm-contracts-dfd2502b73c8f54c9081682c3eb070fcd3c00629/contracts/MasterChef.sol",
            "function": "withdrawRewardTokens",
            "impact": "High",
            "line": 1265,
            "line_end": 1267,
            "message": "MasterChef.withdrawRewardTokens(uint256) (MasterChef.sol#1265-1267) ignores return value by rewardToken.transfer(msg.sender,_amount) (MasterChef.sol#1266)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Bird Money-Final Audit Report/bird-farm-contracts-dfd2502b73c8f54c9081682c3eb070fcd3c00629/contracts/MasterChef.sol",
            "function": "safeRewardTokenTransfer",
            "impact": "High",
            "line": 1236,
            "line_end": 1247,
            "message": "MasterChef.safeRewardTokenTransfer(address,uint256) (MasterChef.sol#1236-1247) ignores return value by rewardToken.transfer(_to,rewardTokenBal) (MasterChef.sol#1242)\n",
            "name": "unchecked-transfer",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Bird Money-Final Audit Report/bird-farm-contracts-dfd2502b73c8f54c9081682c3eb070fcd3c00629/contracts/MasterChef.sol",
            "function": "deposit",
            "impact": "Medium",
            "line": 1178,
            "line_end": 1201,
            "message": "Reentrancy in MasterChef.deposit(uint256,uint256) (MasterChef.sol#1178-1201):\n\tExternal calls:\n\t- safeRewardTokenTransfer(msg.sender,pending) (MasterChef.sol#1188)\n\t\t- rewardToken.transfer(_to,rewardTokenBal) (MasterChef.sol#1242)\n\t\t- rewardToken.transfer(_to,_amount) (MasterChef.sol#1244)\n\t- pool.lpToken.safeTransferFrom(address(msg.sender),address(this),_amount) (MasterChef.sol#1190-1194)\n\tState variables written after the call(s):\n\t- user.unstakeTime = now + unstakeFrozenTime (MasterChef.sol#1195)\n\tMasterChef.userInfo (MasterChef.sol#979) can be used in cross function reentrancies:\n\t- MasterChef.deposit(uint256,uint256) (MasterChef.sol#1178-1201)\n\t- MasterChef.emergencyWithdraw(uint256) (MasterChef.sol#1226-1233)\n\t- MasterChef.pendingRewardToken(uint256,address) (MasterChef.sol#1119-1143)\n\t- MasterChef.userInfo (MasterChef.sol#979)\n\t- MasterChef.withdraw(uint256,uint256) (MasterChef.sol#1204-1223)\n\t- user.amount = user.amount.add(_amount) (MasterChef.sol#1196)\n\tMasterChef.userInfo (MasterChef.sol#979) can be used in cross function reentrancies:\n\t- MasterChef.deposit(uint256,uint256) (MasterChef.sol#1178-1201)\n\t- MasterChef.emergencyWithdraw(uint256) (MasterChef.sol#1226-1233)\n\t- MasterChef.pendingRewardToken(uint256,address) (MasterChef.sol#1119-1143)\n\t- MasterChef.userInfo (MasterChef.sol#979)\n\t- MasterChef.withdraw(uint256,uint256) (MasterChef.sol#1204-1223)\n\t- user.rewardDebt = user.amount.mul(pool.accRewardTokenPerShare).div(1e12) (MasterChef.sol#1197-1199)\n\tMasterChef.userInfo (MasterChef.sol#979) can be used in cross function reentrancies:\n\t- MasterChef.deposit(uint256,uint256) (MasterChef.sol#1178-1201)\n\t- MasterChef.emergencyWithdraw(uint256) (MasterChef.sol#1226-1233)\n\t- MasterChef.pendingRewardToken(uint256,address) (MasterChef.sol#1119-1143)\n\t- MasterChef.userInfo (MasterChef.sol#979)\n\t- MasterChef.withdraw(uint256,uint256) (MasterChef.sol#1204-1223)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Bird Money-Final Audit Report/bird-farm-contracts-dfd2502b73c8f54c9081682c3eb070fcd3c00629/contracts/MasterChef.sol",
            "function": "withdraw",
            "impact": "Medium",
            "line": 1204,
            "line_end": 1223,
            "message": "Reentrancy in MasterChef.withdraw(uint256,uint256) (MasterChef.sol#1204-1223):\n\tExternal calls:\n\t- safeRewardTokenTransfer(msg.sender,pending) (MasterChef.sol#1215)\n\t\t- rewardToken.transfer(_to,rewardTokenBal) (MasterChef.sol#1242)\n\t\t- rewardToken.transfer(_to,_amount) (MasterChef.sol#1244)\n\tState variables written after the call(s):\n\t- user.amount = user.amount.sub(_amount) (MasterChef.sol#1216)\n\tMasterChef.userInfo (MasterChef.sol#979) can be used in cross function reentrancies:\n\t- MasterChef.deposit(uint256,uint256) (MasterChef.sol#1178-1201)\n\t- MasterChef.emergencyWithdraw(uint256) (MasterChef.sol#1226-1233)\n\t- MasterChef.pendingRewardToken(uint256,address) (MasterChef.sol#1119-1143)\n\t- MasterChef.userInfo (MasterChef.sol#979)\n\t- MasterChef.withdraw(uint256,uint256) (MasterChef.sol#1204-1223)\n\t- user.rewardDebt = user.amount.mul(pool.accRewardTokenPerShare).div(1e12) (MasterChef.sol#1217-1219)\n\tMasterChef.userInfo (MasterChef.sol#979) can be used in cross function reentrancies:\n\t- MasterChef.deposit(uint256,uint256) (MasterChef.sol#1178-1201)\n\t- MasterChef.emergencyWithdraw(uint256) (MasterChef.sol#1226-1233)\n\t- MasterChef.pendingRewardToken(uint256,address) (MasterChef.sol#1119-1143)\n\t- MasterChef.userInfo (MasterChef.sol#979)\n\t- MasterChef.withdraw(uint256,uint256) (MasterChef.sol#1204-1223)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Bird Money-Final Audit Report/bird-farm-contracts-dfd2502b73c8f54c9081682c3eb070fcd3c00629/contracts/MasterChef.sol",
            "function": "emergencyWithdraw",
            "impact": "Medium",
            "line": 1226,
            "line_end": 1233,
            "message": "Reentrancy in MasterChef.emergencyWithdraw(uint256) (MasterChef.sol#1226-1233):\n\tExternal calls:\n\t- pool.lpToken.safeTransfer(address(msg.sender),user.amount) (MasterChef.sol#1229)\n\tState variables written after the call(s):\n\t- user.amount = 0 (MasterChef.sol#1231)\n\tMasterChef.userInfo (MasterChef.sol#979) can be used in cross function reentrancies:\n\t- MasterChef.deposit(uint256,uint256) (MasterChef.sol#1178-1201)\n\t- MasterChef.emergencyWithdraw(uint256) (MasterChef.sol#1226-1233)\n\t- MasterChef.pendingRewardToken(uint256,address) (MasterChef.sol#1119-1143)\n\t- MasterChef.userInfo (MasterChef.sol#979)\n\t- MasterChef.withdraw(uint256,uint256) (MasterChef.sol#1204-1223)\n\t- user.rewardDebt = 0 (MasterChef.sol#1232)\n\tMasterChef.userInfo (MasterChef.sol#979) can be used in cross function reentrancies:\n\t- MasterChef.deposit(uint256,uint256) (MasterChef.sol#1178-1201)\n\t- MasterChef.emergencyWithdraw(uint256) (MasterChef.sol#1226-1233)\n\t- MasterChef.pendingRewardToken(uint256,address) (MasterChef.sol#1119-1143)\n\t- MasterChef.userInfo (MasterChef.sol#979)\n\t- MasterChef.withdraw(uint256,uint256) (MasterChef.sol#1204-1223)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Bird Money-Final Audit Report/bird-farm-contracts-dfd2502b73c8f54c9081682c3eb070fcd3c00629/contracts/MasterChef.sol",
            "function": "set",
            "impact": "Low",
            "line": 1086,
            "line_end": 1098,
            "message": "MasterChef.set(uint256,uint256,bool) (MasterChef.sol#1086-1098) should emit an event for: \n\t- totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) (MasterChef.sol#1094-1096) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Bird Money-Final Audit Report/bird-farm-contracts-dfd2502b73c8f54c9081682c3eb070fcd3c00629/contracts/MasterChef.sol",
            "function": "setStartRewardBlock",
            "impact": "Low",
            "line": 1046,
            "line_end": 1048,
            "message": "MasterChef.setStartRewardBlock(uint256) (MasterChef.sol#1046-1048) should emit an event for: \n\t- startRewardBlock = _startRewardBlock (MasterChef.sol#1047) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Bird Money-Final Audit Report/bird-farm-contracts-dfd2502b73c8f54c9081682c3eb070fcd3c00629/contracts/MasterChef.sol",
            "function": "setRewardTokenPerBlock",
            "impact": "Low",
            "line": 1039,
            "line_end": 1044,
            "message": "MasterChef.setRewardTokenPerBlock(uint256) (MasterChef.sol#1039-1044) should emit an event for: \n\t- rewardTokenPerBlock = _rewardTokenPerBlock (MasterChef.sol#1043) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Bird Money-Final Audit Report/bird-farm-contracts-dfd2502b73c8f54c9081682c3eb070fcd3c00629/contracts/MasterChef.sol",
            "function": "setBonusEndBlock",
            "impact": "Low",
            "line": 1054,
            "line_end": 1056,
            "message": "MasterChef.setBonusEndBlock(uint256) (MasterChef.sol#1054-1056) should emit an event for: \n\t- bonusEndBlock = _bonusEndBlock (MasterChef.sol#1055) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Bird Money-Final Audit Report/bird-farm-contracts-dfd2502b73c8f54c9081682c3eb070fcd3c00629/contracts/MasterChef.sol",
            "function": "add",
            "impact": "Low",
            "line": 1064,
            "line_end": 1083,
            "message": "MasterChef.add(uint256,IERC20,bool) (MasterChef.sol#1064-1083) should emit an event for: \n\t- totalAllocPoint = totalAllocPoint.add(_allocPoint) (MasterChef.sol#1074) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Bird Money-Final Audit Report/bird-farm-contracts-dfd2502b73c8f54c9081682c3eb070fcd3c00629/contracts/MasterChef.sol",
            "function": "setEndRewardBlock",
            "impact": "Low",
            "line": 1050,
            "line_end": 1052,
            "message": "MasterChef.setEndRewardBlock(uint256) (MasterChef.sol#1050-1052) should emit an event for: \n\t- endRewardBlock = _endRewardBlock (MasterChef.sol#1051) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Bird Money-Final Audit Report/bird-farm-contracts-dfd2502b73c8f54c9081682c3eb070fcd3c00629/contracts/MasterChef.sol",
            "function": "setAll",
            "impact": "Low",
            "line": 1015,
            "line_end": 1029,
            "message": "MasterChef.setAll(IERC20,uint256,uint256,uint256,uint256,uint256) (MasterChef.sol#1015-1029) should emit an event for: \n\t- rewardTokenPerBlock = _rewardTokenPerBlock (MasterChef.sol#1024) \n\t- startRewardBlock = _startRewardBlock (MasterChef.sol#1025) \n\t- endRewardBlock = _endRewardBlock (MasterChef.sol#1026) \n\t- bonusEndBlock = _bonusEndBlock (MasterChef.sol#1027) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Bird Money-Final Audit Report/bird-farm-contracts-dfd2502b73c8f54c9081682c3eb070fcd3c00629/contracts/MasterChef.sol",
            "function": "updatePool",
            "impact": "Low",
            "line": 1154,
            "line_end": 1175,
            "message": "MasterChef.updatePool(uint256) (MasterChef.sol#1154-1175) has external calls inside a loop: lpSupply = pool.lpToken.balanceOf(address(this)) (MasterChef.sol#1159)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Bird Money-Final Audit Report/bird-farm-contracts-dfd2502b73c8f54c9081682c3eb070fcd3c00629/contracts/MasterChef.sol",
            "function": "emergencyWithdraw",
            "impact": "Low",
            "line": 1226,
            "line_end": 1233,
            "message": "Reentrancy in MasterChef.emergencyWithdraw(uint256) (MasterChef.sol#1226-1233):\n\tExternal calls:\n\t- pool.lpToken.safeTransfer(address(msg.sender),user.amount) (MasterChef.sol#1229)\n\tEvent emitted after the call(s):\n\t- EmergencyWithdraw(msg.sender,_pid,user.amount) (MasterChef.sol#1230)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Bird Money-Final Audit Report/bird-farm-contracts-dfd2502b73c8f54c9081682c3eb070fcd3c00629/contracts/MasterChef.sol",
            "function": "withdraw",
            "impact": "Low",
            "line": 1204,
            "line_end": 1223,
            "message": "Reentrancy in MasterChef.withdraw(uint256,uint256) (MasterChef.sol#1204-1223):\n\tExternal calls:\n\t- safeRewardTokenTransfer(msg.sender,pending) (MasterChef.sol#1215)\n\t\t- rewardToken.transfer(_to,rewardTokenBal) (MasterChef.sol#1242)\n\t\t- rewardToken.transfer(_to,_amount) (MasterChef.sol#1244)\n\t- pool.lpToken.safeTransfer(address(msg.sender),_amount) (MasterChef.sol#1220)\n\tEvent emitted after the call(s):\n\t- Withdraw(msg.sender,_pid,_amount) (MasterChef.sol#1221)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Bird Money-Final Audit Report/bird-farm-contracts-dfd2502b73c8f54c9081682c3eb070fcd3c00629/contracts/MasterChef.sol",
            "function": "deposit",
            "impact": "Low",
            "line": 1178,
            "line_end": 1201,
            "message": "Reentrancy in MasterChef.deposit(uint256,uint256) (MasterChef.sol#1178-1201):\n\tExternal calls:\n\t- safeRewardTokenTransfer(msg.sender,pending) (MasterChef.sol#1188)\n\t\t- rewardToken.transfer(_to,rewardTokenBal) (MasterChef.sol#1242)\n\t\t- rewardToken.transfer(_to,_amount) (MasterChef.sol#1244)\n\t- pool.lpToken.safeTransferFrom(address(msg.sender),address(this),_amount) (MasterChef.sol#1190-1194)\n\tEvent emitted after the call(s):\n\t- Deposit(msg.sender,_pid,_amount) (MasterChef.sol#1200)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Bird Money-Final Audit Report/bird-farm-contracts-dfd2502b73c8f54c9081682c3eb070fcd3c00629/contracts/MasterChef.sol",
            "function": "deposit",
            "impact": "Low",
            "line": 1178,
            "line_end": 1201,
            "message": "MasterChef.deposit(uint256,uint256) (MasterChef.sol#1178-1201) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- now > user.unstakeTime (MasterChef.sol#1187)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/ImmuneBytes-Bird Money-Final Audit Report/bird-farm-contracts-dfd2502b73c8f54c9081682c3eb070fcd3c00629/contracts/MasterChef.sol",
            "function": "withdraw",
            "impact": "Low",
            "line": 1204,
            "line_end": 1223,
            "message": "MasterChef.withdraw(uint256,uint256) (MasterChef.sol#1204-1223) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- now > user.unstakeTime (MasterChef.sol#1209)\n",
            "name": "timestamp",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}