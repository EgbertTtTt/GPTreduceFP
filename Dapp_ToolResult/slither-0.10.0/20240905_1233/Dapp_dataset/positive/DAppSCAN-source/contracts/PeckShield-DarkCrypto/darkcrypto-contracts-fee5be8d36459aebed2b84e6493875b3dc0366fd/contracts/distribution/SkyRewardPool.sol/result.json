{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "SkyRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DarkCrypto/darkcrypto-contracts-fee5be8d36459aebed2b84e6493875b3dc0366fd/contracts/distribution/SkyRewardPool.sol",
            "function": "withdraw",
            "impact": "High",
            "line": 752,
            "line_end": 769,
            "message": "Reentrancy in SkyRewardPool.withdraw(uint256,uint256) (SkyRewardPool.sol#752-769):\n\tExternal calls:\n\t- safeSkyTransfer(_sender,_pending) (SkyRewardPool.sol#760)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (SkyRewardPool.sol#536)\n\t\t- sky.safeTransfer(_to,_skyBal) (SkyRewardPool.sol#800)\n\t\t- sky.safeTransfer(_to,_amount) (SkyRewardPool.sol#802)\n\t\t- (success,returndata) = target.call{value: value}(data) (SkyRewardPool.sol#404)\n\tExternal calls sending eth:\n\t- safeSkyTransfer(_sender,_pending) (SkyRewardPool.sol#760)\n\t\t- (success,returndata) = target.call{value: value}(data) (SkyRewardPool.sol#404)\n\tState variables written after the call(s):\n\t- user.amount = user.amount.sub(_amount) (SkyRewardPool.sol#764)\n\tSkyRewardPool.userInfo (SkyRewardPool.sol#574) can be used in cross function reentrancies:\n\t- SkyRewardPool.deposit(uint256,uint256) (SkyRewardPool.sol#730-748)\n\t- SkyRewardPool.emergencyWithdraw(uint256) (SkyRewardPool.sol#785-793)\n\t- SkyRewardPool.harvestAllRewards() (SkyRewardPool.sol#775-782)\n\t- SkyRewardPool.pendingReward(uint256,address) (SkyRewardPool.sol#685-696)\n\t- SkyRewardPool.userInfo (SkyRewardPool.sol#574)\n\t- SkyRewardPool.withdraw(uint256,uint256) (SkyRewardPool.sol#752-769)\n\t- SkyRewardPool.withdrawAll(uint256) (SkyRewardPool.sol#771-773)\n",
            "name": "reentrancy-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SkyRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DarkCrypto/darkcrypto-contracts-fee5be8d36459aebed2b84e6493875b3dc0366fd/contracts/distribution/SkyRewardPool.sol",
            "function": "deposit",
            "impact": "High",
            "line": 730,
            "line_end": 748,
            "message": "Reentrancy in SkyRewardPool.deposit(uint256,uint256) (SkyRewardPool.sol#730-748):\n\tExternal calls:\n\t- safeSkyTransfer(_sender,_pending) (SkyRewardPool.sol#738)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (SkyRewardPool.sol#536)\n\t\t- sky.safeTransfer(_to,_skyBal) (SkyRewardPool.sol#800)\n\t\t- sky.safeTransfer(_to,_amount) (SkyRewardPool.sol#802)\n\t\t- (success,returndata) = target.call{value: value}(data) (SkyRewardPool.sol#404)\n\t- pool.token.safeTransferFrom(_sender,address(this),_amount) (SkyRewardPool.sol#743)\n\tExternal calls sending eth:\n\t- safeSkyTransfer(_sender,_pending) (SkyRewardPool.sol#738)\n\t\t- (success,returndata) = target.call{value: value}(data) (SkyRewardPool.sol#404)\n\tState variables written after the call(s):\n\t- user.amount = user.amount.add(_amount) (SkyRewardPool.sol#744)\n\tSkyRewardPool.userInfo (SkyRewardPool.sol#574) can be used in cross function reentrancies:\n\t- SkyRewardPool.deposit(uint256,uint256) (SkyRewardPool.sol#730-748)\n\t- SkyRewardPool.emergencyWithdraw(uint256) (SkyRewardPool.sol#785-793)\n\t- SkyRewardPool.harvestAllRewards() (SkyRewardPool.sol#775-782)\n\t- SkyRewardPool.pendingReward(uint256,address) (SkyRewardPool.sol#685-696)\n\t- SkyRewardPool.userInfo (SkyRewardPool.sol#574)\n\t- SkyRewardPool.withdraw(uint256,uint256) (SkyRewardPool.sol#752-769)\n\t- SkyRewardPool.withdrawAll(uint256) (SkyRewardPool.sol#771-773)\n",
            "name": "reentrancy-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SkyRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DarkCrypto/darkcrypto-contracts-fee5be8d36459aebed2b84e6493875b3dc0366fd/contracts/distribution/SkyRewardPool.sol",
            "function": "deposit",
            "impact": "High",
            "line": 730,
            "line_end": 748,
            "message": "Reentrancy in SkyRewardPool.deposit(uint256,uint256) (SkyRewardPool.sol#730-748):\n\tExternal calls:\n\t- safeSkyTransfer(_sender,_pending) (SkyRewardPool.sol#738)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (SkyRewardPool.sol#536)\n\t\t- sky.safeTransfer(_to,_skyBal) (SkyRewardPool.sol#800)\n\t\t- (success,returndata) = target.call{value: value}(data) (SkyRewardPool.sol#404)\n\t\t- sky.safeTransfer(_to,_amount) (SkyRewardPool.sol#802)\n\t- pool.token.safeTransferFrom(_sender,address(this),_amount) (SkyRewardPool.sol#743)\n\tExternal calls sending eth:\n\t- safeSkyTransfer(_sender,_pending) (SkyRewardPool.sol#738)\n\t\t- (success,returndata) = target.call{value: value}(data) (SkyRewardPool.sol#404)\n\tState variables written after the call(s):\n\t- user.rewardDebt = user.amount.mul(pool.accSkyPerShare).div(1e18) (SkyRewardPool.sol#746)\n\tSkyRewardPool.userInfo (SkyRewardPool.sol#574) can be used in cross function reentrancies:\n\t- SkyRewardPool.deposit(uint256,uint256) (SkyRewardPool.sol#730-748)\n\t- SkyRewardPool.emergencyWithdraw(uint256) (SkyRewardPool.sol#785-793)\n\t- SkyRewardPool.harvestAllRewards() (SkyRewardPool.sol#775-782)\n\t- SkyRewardPool.pendingReward(uint256,address) (SkyRewardPool.sol#685-696)\n\t- SkyRewardPool.userInfo (SkyRewardPool.sol#574)\n\t- SkyRewardPool.withdraw(uint256,uint256) (SkyRewardPool.sol#752-769)\n\t- SkyRewardPool.withdrawAll(uint256) (SkyRewardPool.sol#771-773)\n",
            "name": "reentrancy-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SkyRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DarkCrypto/darkcrypto-contracts-fee5be8d36459aebed2b84e6493875b3dc0366fd/contracts/distribution/SkyRewardPool.sol",
            "function": "withdraw",
            "impact": "High",
            "line": 752,
            "line_end": 769,
            "message": "Reentrancy in SkyRewardPool.withdraw(uint256,uint256) (SkyRewardPool.sol#752-769):\n\tExternal calls:\n\t- safeSkyTransfer(_sender,_pending) (SkyRewardPool.sol#760)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (SkyRewardPool.sol#536)\n\t\t- sky.safeTransfer(_to,_skyBal) (SkyRewardPool.sol#800)\n\t\t- (success,returndata) = target.call{value: value}(data) (SkyRewardPool.sol#404)\n\t\t- sky.safeTransfer(_to,_amount) (SkyRewardPool.sol#802)\n\t- pool.token.safeTransfer(_sender,_amount) (SkyRewardPool.sol#765)\n\tExternal calls sending eth:\n\t- safeSkyTransfer(_sender,_pending) (SkyRewardPool.sol#760)\n\t\t- (success,returndata) = target.call{value: value}(data) (SkyRewardPool.sol#404)\n\tState variables written after the call(s):\n\t- user.rewardDebt = user.amount.mul(pool.accSkyPerShare).div(1e18) (SkyRewardPool.sol#767)\n\tSkyRewardPool.userInfo (SkyRewardPool.sol#574) can be used in cross function reentrancies:\n\t- SkyRewardPool.deposit(uint256,uint256) (SkyRewardPool.sol#730-748)\n\t- SkyRewardPool.emergencyWithdraw(uint256) (SkyRewardPool.sol#785-793)\n\t- SkyRewardPool.harvestAllRewards() (SkyRewardPool.sol#775-782)\n\t- SkyRewardPool.pendingReward(uint256,address) (SkyRewardPool.sol#685-696)\n\t- SkyRewardPool.userInfo (SkyRewardPool.sol#574)\n\t- SkyRewardPool.withdraw(uint256,uint256) (SkyRewardPool.sol#752-769)\n\t- SkyRewardPool.withdrawAll(uint256) (SkyRewardPool.sol#771-773)\n",
            "name": "reentrancy-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SkyRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DarkCrypto/darkcrypto-contracts-fee5be8d36459aebed2b84e6493875b3dc0366fd/contracts/distribution/SkyRewardPool.sol",
            "function": "add",
            "impact": "Low",
            "line": 618,
            "line_end": 656,
            "message": "SkyRewardPool.add(uint256,IERC20,bool,uint256) (SkyRewardPool.sol#618-656) should emit an event for: \n\t- totalAllocPoint = totalAllocPoint.add(_allocPoint) (SkyRewardPool.sol#654) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SkyRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DarkCrypto/darkcrypto-contracts-fee5be8d36459aebed2b84e6493875b3dc0366fd/contracts/distribution/SkyRewardPool.sol",
            "function": "set",
            "impact": "Low",
            "line": 659,
            "line_end": 668,
            "message": "SkyRewardPool.set(uint256,uint256) (SkyRewardPool.sol#659-668) should emit an event for: \n\t- totalAllocPoint = totalAllocPoint.sub(pool.allocPoint).add(_allocPoint) (SkyRewardPool.sol#663-665) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SkyRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DarkCrypto/darkcrypto-contracts-fee5be8d36459aebed2b84e6493875b3dc0366fd/contracts/distribution/SkyRewardPool.sol",
            "function": "safeSkyTransfer",
            "impact": "Low",
            "line": 796,
            "line_end": 805,
            "message": "SkyRewardPool.safeSkyTransfer(address,uint256) (SkyRewardPool.sol#796-805) has external calls inside a loop: _skyBal = sky.balanceOf(address(this)) (SkyRewardPool.sol#797)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SkyRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DarkCrypto/darkcrypto-contracts-fee5be8d36459aebed2b84e6493875b3dc0366fd/contracts/distribution/SkyRewardPool.sol",
            "function": "updatePool",
            "impact": "Low",
            "line": 707,
            "line_end": 727,
            "message": "SkyRewardPool.updatePool(uint256) (SkyRewardPool.sol#707-727) has external calls inside a loop: tokenSupply = pool.token.balanceOf(address(this)) (SkyRewardPool.sol#712)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "Address",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DarkCrypto/darkcrypto-contracts-fee5be8d36459aebed2b84e6493875b3dc0366fd/contracts/distribution/SkyRewardPool.sol",
            "function": "functionCallWithValue",
            "impact": "Low",
            "line": 399,
            "line_end": 406,
            "message": "Address.functionCallWithValue(address,bytes,uint256,string) (SkyRewardPool.sol#399-406) has external calls inside a loop: (success,returndata) = target.call{value: value}(data) (SkyRewardPool.sol#404)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SkyRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DarkCrypto/darkcrypto-contracts-fee5be8d36459aebed2b84e6493875b3dc0366fd/contracts/distribution/SkyRewardPool.sol",
            "function": "withdraw",
            "impact": "Low",
            "line": 752,
            "line_end": 769,
            "message": "Reentrancy in SkyRewardPool.withdraw(uint256,uint256) (SkyRewardPool.sol#752-769):\n\tExternal calls:\n\t- safeSkyTransfer(_sender,_pending) (SkyRewardPool.sol#760)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (SkyRewardPool.sol#536)\n\t\t- sky.safeTransfer(_to,_skyBal) (SkyRewardPool.sol#800)\n\t\t- sky.safeTransfer(_to,_amount) (SkyRewardPool.sol#802)\n\t\t- (success,returndata) = target.call{value: value}(data) (SkyRewardPool.sol#404)\n\tExternal calls sending eth:\n\t- safeSkyTransfer(_sender,_pending) (SkyRewardPool.sol#760)\n\t\t- (success,returndata) = target.call{value: value}(data) (SkyRewardPool.sol#404)\n\tEvent emitted after the call(s):\n\t- RewardPaid(_sender,_pending) (SkyRewardPool.sol#761)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SkyRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DarkCrypto/darkcrypto-contracts-fee5be8d36459aebed2b84e6493875b3dc0366fd/contracts/distribution/SkyRewardPool.sol",
            "function": "deposit",
            "impact": "Low",
            "line": 730,
            "line_end": 748,
            "message": "Reentrancy in SkyRewardPool.deposit(uint256,uint256) (SkyRewardPool.sol#730-748):\n\tExternal calls:\n\t- safeSkyTransfer(_sender,_pending) (SkyRewardPool.sol#738)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (SkyRewardPool.sol#536)\n\t\t- sky.safeTransfer(_to,_skyBal) (SkyRewardPool.sol#800)\n\t\t- sky.safeTransfer(_to,_amount) (SkyRewardPool.sol#802)\n\t\t- (success,returndata) = target.call{value: value}(data) (SkyRewardPool.sol#404)\n\tExternal calls sending eth:\n\t- safeSkyTransfer(_sender,_pending) (SkyRewardPool.sol#738)\n\t\t- (success,returndata) = target.call{value: value}(data) (SkyRewardPool.sol#404)\n\tEvent emitted after the call(s):\n\t- RewardPaid(_sender,_pending) (SkyRewardPool.sol#739)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SkyRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DarkCrypto/darkcrypto-contracts-fee5be8d36459aebed2b84e6493875b3dc0366fd/contracts/distribution/SkyRewardPool.sol",
            "function": "withdraw",
            "impact": "Low",
            "line": 752,
            "line_end": 769,
            "message": "Reentrancy in SkyRewardPool.withdraw(uint256,uint256) (SkyRewardPool.sol#752-769):\n\tExternal calls:\n\t- safeSkyTransfer(_sender,_pending) (SkyRewardPool.sol#760)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (SkyRewardPool.sol#536)\n\t\t- sky.safeTransfer(_to,_skyBal) (SkyRewardPool.sol#800)\n\t\t- (success,returndata) = target.call{value: value}(data) (SkyRewardPool.sol#404)\n\t\t- sky.safeTransfer(_to,_amount) (SkyRewardPool.sol#802)\n\t- pool.token.safeTransfer(_sender,_amount) (SkyRewardPool.sol#765)\n\tExternal calls sending eth:\n\t- safeSkyTransfer(_sender,_pending) (SkyRewardPool.sol#760)\n\t\t- (success,returndata) = target.call{value: value}(data) (SkyRewardPool.sol#404)\n\tEvent emitted after the call(s):\n\t- Withdraw(_sender,_pid,_amount) (SkyRewardPool.sol#768)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SkyRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DarkCrypto/darkcrypto-contracts-fee5be8d36459aebed2b84e6493875b3dc0366fd/contracts/distribution/SkyRewardPool.sol",
            "function": "emergencyWithdraw",
            "impact": "Low",
            "line": 785,
            "line_end": 793,
            "message": "Reentrancy in SkyRewardPool.emergencyWithdraw(uint256) (SkyRewardPool.sol#785-793):\n\tExternal calls:\n\t- pool.token.safeTransfer(msg.sender,_amount) (SkyRewardPool.sol#791)\n\tEvent emitted after the call(s):\n\t- EmergencyWithdraw(msg.sender,_pid,_amount) (SkyRewardPool.sol#792)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SkyRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DarkCrypto/darkcrypto-contracts-fee5be8d36459aebed2b84e6493875b3dc0366fd/contracts/distribution/SkyRewardPool.sol",
            "function": "deposit",
            "impact": "Low",
            "line": 730,
            "line_end": 748,
            "message": "Reentrancy in SkyRewardPool.deposit(uint256,uint256) (SkyRewardPool.sol#730-748):\n\tExternal calls:\n\t- safeSkyTransfer(_sender,_pending) (SkyRewardPool.sol#738)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (SkyRewardPool.sol#536)\n\t\t- sky.safeTransfer(_to,_skyBal) (SkyRewardPool.sol#800)\n\t\t- (success,returndata) = target.call{value: value}(data) (SkyRewardPool.sol#404)\n\t\t- sky.safeTransfer(_to,_amount) (SkyRewardPool.sol#802)\n\t- pool.token.safeTransferFrom(_sender,address(this),_amount) (SkyRewardPool.sol#743)\n\tExternal calls sending eth:\n\t- safeSkyTransfer(_sender,_pending) (SkyRewardPool.sol#738)\n\t\t- (success,returndata) = target.call{value: value}(data) (SkyRewardPool.sol#404)\n\tEvent emitted after the call(s):\n\t- Deposit(_sender,_pid,_amount) (SkyRewardPool.sol#747)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SkyRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DarkCrypto/darkcrypto-contracts-fee5be8d36459aebed2b84e6493875b3dc0366fd/contracts/distribution/SkyRewardPool.sol",
            "function": "massUpdatePools",
            "impact": "Low",
            "line": 699,
            "line_end": 704,
            "message": "SkyRewardPool.massUpdatePools() (SkyRewardPool.sol#699-704) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- pid < length (SkyRewardPool.sol#701)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SkyRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DarkCrypto/darkcrypto-contracts-fee5be8d36459aebed2b84e6493875b3dc0366fd/contracts/distribution/SkyRewardPool.sol",
            "function": "harvestAllRewards",
            "impact": "Low",
            "line": 775,
            "line_end": 782,
            "message": "SkyRewardPool.harvestAllRewards() (SkyRewardPool.sol#775-782) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- pid < length (SkyRewardPool.sol#777)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SkyRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DarkCrypto/darkcrypto-contracts-fee5be8d36459aebed2b84e6493875b3dc0366fd/contracts/distribution/SkyRewardPool.sol",
            "function": "checkPoolDuplicate",
            "impact": "Low",
            "line": 610,
            "line_end": 615,
            "message": "SkyRewardPool.checkPoolDuplicate(IERC20) (SkyRewardPool.sol#610-615) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- pid < length (SkyRewardPool.sol#612)\n\t- require(bool,string)(poolInfo[pid].token != _token,SkyRewardPool: existing pool?) (SkyRewardPool.sol#613)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SkyRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DarkCrypto/darkcrypto-contracts-fee5be8d36459aebed2b84e6493875b3dc0366fd/contracts/distribution/SkyRewardPool.sol",
            "function": "add",
            "impact": "Low",
            "line": 618,
            "line_end": 656,
            "message": "SkyRewardPool.add(uint256,IERC20,bool,uint256) (SkyRewardPool.sol#618-656) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp < poolStartTime (SkyRewardPool.sol#628)\n\t- _lastRewardTime == 0 (SkyRewardPool.sol#630)\n\t- _lastRewardTime < poolStartTime (SkyRewardPool.sol#633)\n\t- _lastRewardTime == 0 || _lastRewardTime < block.timestamp (SkyRewardPool.sol#639)\n\t- _isStarted = (_lastRewardTime <= poolStartTime) || (_lastRewardTime <= block.timestamp) (SkyRewardPool.sol#643-645)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SkyRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DarkCrypto/darkcrypto-contracts-fee5be8d36459aebed2b84e6493875b3dc0366fd/contracts/distribution/SkyRewardPool.sol",
            "function": "governanceRecoverUnsupported",
            "impact": "Low",
            "line": 811,
            "line_end": 822,
            "message": "SkyRewardPool.governanceRecoverUnsupported(IERC20,uint256,address) (SkyRewardPool.sol#811-822) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp < poolEndTime + 7776000 (SkyRewardPool.sol#812)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SkyRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DarkCrypto/darkcrypto-contracts-fee5be8d36459aebed2b84e6493875b3dc0366fd/contracts/distribution/SkyRewardPool.sol",
            "function": "updatePool",
            "impact": "Low",
            "line": 707,
            "line_end": 727,
            "message": "SkyRewardPool.updatePool(uint256) (SkyRewardPool.sol#707-727) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp <= pool.lastRewardTime (SkyRewardPool.sol#709)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SkyRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DarkCrypto/darkcrypto-contracts-fee5be8d36459aebed2b84e6493875b3dc0366fd/contracts/distribution/SkyRewardPool.sol",
            "function": "pendingReward",
            "impact": "Low",
            "line": 685,
            "line_end": 696,
            "message": "SkyRewardPool.pendingReward(uint256,address) (SkyRewardPool.sol#685-696) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp > pool.lastRewardTime && tokenSupply != 0 (SkyRewardPool.sol#690)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SkyRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DarkCrypto/darkcrypto-contracts-fee5be8d36459aebed2b84e6493875b3dc0366fd/contracts/distribution/SkyRewardPool.sol",
            "function": "getGeneratedReward",
            "impact": "Low",
            "line": 671,
            "line_end": 682,
            "message": "SkyRewardPool.getGeneratedReward(uint256,uint256) (SkyRewardPool.sol#671-682) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- _fromTime >= _toTime (SkyRewardPool.sol#672)\n\t- _toTime >= poolEndTime (SkyRewardPool.sol#673)\n\t- _toTime <= poolStartTime (SkyRewardPool.sol#678)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SkyRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DarkCrypto/darkcrypto-contracts-fee5be8d36459aebed2b84e6493875b3dc0366fd/contracts/distribution/SkyRewardPool.sol",
            "function": "constructor",
            "impact": "Low",
            "line": 594,
            "line_end": 603,
            "message": "SkyRewardPool.constructor(address,uint256) (SkyRewardPool.sol#594-603) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(block.timestamp < _poolStartTime,late) (SkyRewardPool.sol#598)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "SkyRewardPool",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DarkCrypto/darkcrypto-contracts-fee5be8d36459aebed2b84e6493875b3dc0366fd/contracts/distribution/SkyRewardPool.sol",
            "function": "updatePool",
            "impact": "Informational",
            "line": 707,
            "line_end": 727,
            "message": "SkyRewardPool.updatePool(uint256) (SkyRewardPool.sol#707-727) has costly operations inside a loop:\n\t- totalAllocPoint = totalAllocPoint.add(pool.allocPoint) (SkyRewardPool.sol#719)\n",
            "name": "costly-loop",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}