'solc --version' running
'solc /sb/ProjectKudos.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running
Compilation warnings/errors on /sb/ProjectKudos.sol:
/sb/ProjectKudos.sol:86:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ProjectKudos() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos.sol:107:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (user.kudosLimit > 0) throw;
                                 ^---^
/sb/ProjectKudos.sol:131:58: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (giver.kudosGiven + kudos > giver.kudosLimit) throw;
                                                         ^---^
/sb/ProjectKudos.sol:162:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            grantReason != GrantReason.Twitter) throw;
                                                ^---^
/sb/ProjectKudos.sol:167:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (user.isJudge) throw;
                          ^---^
/sb/ProjectKudos.sol:170:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (user.grant[reason]) throw;
                                ^---^
/sb/ProjectKudos.sol:317:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (bytes(str).length > 32) throw;
                                    ^---^
/sb/ProjectKudos.sol:333:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now < votePeriod.start) throw;
                                    ^---^
/sb/ProjectKudos.sol:334:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (now >= votePeriod.end) throw;
                                   ^---^
/sb/ProjectKudos.sol:342:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/sb/ProjectKudos.sol:206:57: Warning: This declaration shadows an existing declaration.
    function getProjectKudosByUsers(string projectCode, address[] users) constant returns(uint[]) {
                                                        ^-------------^
/sb/ProjectKudos.sol:63:5: The shadowed declaration is here:
    mapping(address => UserInfo) users;
    ^--------------------------------^

/sb/ProjectKudos.sol:227:66: Warning: This declaration shadows an existing declaration.
    function getKudosPerProject(address giver) constant returns (bytes32[] projects, uint[] kudos) {
                                                                 ^----------------^
/sb/ProjectKudos.sol:70:5: The shadowed declaration is here:
    mapping(bytes32 => ProjectInfo) projects;
    ^--------------------------------------^

/sb/ProjectKudos.sol:105:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        UserInfo user = users[userAddres];
        ^-----------^
/sb/ProjectKudos.sol:129:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        UserInfo giver = users[msg.sender];
        ^------------^
/sb/ProjectKudos.sol:134:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        ProjectInfo project = projects[code];
        ^-----------------^
/sb/ProjectKudos.sol:157:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        UserInfo user = users[userToGrant];
        ^-----------^
/sb/ProjectKudos.sol:193:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        ProjectInfo project = projects[code];
        ^-----------------^
/sb/ProjectKudos.sol:208:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        ProjectInfo project = projects[code];
        ^-----------------^
/sb/ProjectKudos.sol:228:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        UserIndex idx = usersIndex[giver];
        ^-----------^
/sb/ProjectKudos.sol:240:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        UserInfo user = users[addr];
        ^-----------^
/sb/ProjectKudos.sol:251:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        UserInfo user = users[addr];
        ^-----------^
/sb/ProjectKudos.sol:268:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        UserIndex idx = usersIndex[msg.sender];
        ^-----------^
/sb/ProjectKudos.sol:143:26: Warning: "sha3" has been deprecated in favour of "keccak256"
        Vote(msg.sender, sha3(projectCode), kudos);
                         ^---------------^
/sb/ProjectKudos.sol:143:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        Vote(msg.sender, sha3(projectCode), kudos);
                         ^---------------^
/sb/ProjectKudos.sol:143:26: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        Vote(msg.sender, sha3(projectCode), kudos);
                         ^---------------^
/sb/ProjectKudos.sol:143:9: Warning: Invoking events without "emit" prefix is deprecated.
        Vote(msg.sender, sha3(projectCode), kudos);
        ^----------------------------------------^
/sb/ProjectKudos.sol:86:5: Warning: No visibility specified. Defaulting to "public". 
    function ProjectKudos() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos.sol:103:5: Warning: No visibility specified. Defaulting to "public". 
    function register(address userAddres, bool isJudge) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos.sol:127:5: Warning: No visibility specified. Defaulting to "public". 
    function giveKudos(string projectCode, uint kudos) duringVote {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos.sol:155:5: Warning: No visibility specified. Defaulting to "public". 
    function grantKudos(address userToGrant, uint reason) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos.sol:191:5: Warning: No visibility specified. Defaulting to "public". 
    function getProjectKudos(string projectCode) constant returns(uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos.sol:206:5: Warning: No visibility specified. Defaulting to "public". 
    function getProjectKudosByUsers(string projectCode, address[] users) constant returns(uint[]) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos.sol:227:5: Warning: No visibility specified. Defaulting to "public". 
    function getKudosPerProject(address giver) constant returns (bytes32[] projects, uint[] kudos) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos.sol:239:5: Warning: No visibility specified. Defaulting to "public". 
    function getKudosLeft(address addr) constant returns(uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos.sol:250:5: Warning: No visibility specified. Defaulting to "public". 
    function getKudosGiven(address addr) constant returns(uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos.sol:192:24: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        bytes32 code = strToBytes(projectCode);
                       ^---------------------^
/sb/ProjectKudos.sol:207:24: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        bytes32 code = strToBytes(projectCode);
                       ^---------------------^
/sb/ProjectKudos.sol:289:5: Warning: Function state mutability can be restricted to pure
    function grantUintToReason(uint reason) private returns (GrantReason result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos.sol:301:5: Warning: Function state mutability can be restricted to pure
    function grantReasonToUint(GrantReason reason) private returns (uint result) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/ProjectKudos.sol:315:5: Warning: Function state mutability can be restricted to pure
    function strToBytes(string str) private returns (bytes32 ret) {
    ^ (Relevant source part starts here and spans across multiple lines).


ProjectKudos.getProjectKudosByUsers(string,address[]).users (../../sb/ProjectKudos.sol#206) shadows:
	- ProjectKudos.users (../../sb/ProjectKudos.sol#63) (state variable)
ProjectKudos.getKudosPerProject(address).projects (../../sb/ProjectKudos.sol#227) shadows:
	- ProjectKudos.projects (../../sb/ProjectKudos.sol#70) (state variable)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

ProjectKudos.strToBytes(string) (../../sb/ProjectKudos.sol#315-322) uses assembly
	- INLINE ASM (../../sb/ProjectKudos.sol#319-322)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

ProjectKudos.grantReasonToUint(ProjectKudos.GrantReason) (../../sb/ProjectKudos.sol#301-305) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Deprecated standard detected THROW (../../sb/ProjectKudos.sol#107):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/ProjectKudos.sol#131):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected Vote(msg.sender,sha3()(projectCode),kudos) (../../sb/ProjectKudos.sol#143):
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected THROW (../../sb/ProjectKudos.sol#162):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/ProjectKudos.sol#167):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/ProjectKudos.sol#170):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/ProjectKudos.sol#317):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/ProjectKudos.sol#333):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/ProjectKudos.sol#334):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/ProjectKudos.sol#342):
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.0 (../../sb/ProjectKudos.sol#1) allows old versions
solc-0.4.26 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Variable ProjectKudos.KUDOS_LIMIT_JUDGE (../../sb/ProjectKudos.sol#15) is not in mixedCase
Variable ProjectKudos.KUDOS_LIMIT_USER (../../sb/ProjectKudos.sol#18) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

ProjectKudos.KUDOS_LIMIT_JUDGE (../../sb/ProjectKudos.sol#15) should be constant 
ProjectKudos.KUDOS_LIMIT_USER (../../sb/ProjectKudos.sol#18) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

giveKudos(string,uint256) should be declared external:
	- ProjectKudos.giveKudos(string,uint256) (../../sb/ProjectKudos.sol#127-144)
getProjectKudos(string) should be declared external:
	- ProjectKudos.getProjectKudos(string) (../../sb/ProjectKudos.sol#191-195)
getProjectKudosByUsers(string,address[]) should be declared external:
	- ProjectKudos.getProjectKudosByUsers(string,address[]) (../../sb/ProjectKudos.sol#206-216)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
/sb/ProjectKudos.sol analyzed (1 contracts with 93 detectors), 23 result(s) found
