{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "VCTreasuryV1",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-StackerVC/StackerVC_VentureFund001-3cfb98b21f4731dfd62993feb7c7d1540837f59b/contracts/Treasury/VCTreasuryV1.sol",
            "function": "stakeToPause",
            "impact": "Low",
            "line": 1228,
            "line_end": 1239,
            "message": "VCTreasuryV1.stakeToPause(uint256) (VCTreasuryV1.sol#1228-1239) should emit an event for: \n\t- totalStakedToPause = totalStakedToPause.add(_amount) (VCTreasuryV1.sol#1236) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "VCTreasuryV1",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-StackerVC/StackerVC_VentureFund001-3cfb98b21f4731dfd62993feb7c7d1540837f59b/contracts/Treasury/VCTreasuryV1.sol",
            "function": "unstakeToPause",
            "impact": "Low",
            "line": 1256,
            "line_end": 1267,
            "message": "VCTreasuryV1.unstakeToPause(uint256) (VCTreasuryV1.sol#1256-1267) should emit an event for: \n\t- totalStakedToPause = totalStakedToPause.sub(_amount) (VCTreasuryV1.sol#1264) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "VCTreasuryV1",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-StackerVC/StackerVC_VentureFund001-3cfb98b21f4731dfd62993feb7c7d1540837f59b/contracts/Treasury/VCTreasuryV1.sol",
            "function": "stakeToKill",
            "impact": "Low",
            "line": 1243,
            "line_end": 1254,
            "message": "VCTreasuryV1.stakeToKill(uint256) (VCTreasuryV1.sol#1243-1254) should emit an event for: \n\t- totalStakedToKill = totalStakedToKill.add(_amount) (VCTreasuryV1.sol#1251) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "VCTreasuryV1",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-StackerVC/StackerVC_VentureFund001-3cfb98b21f4731dfd62993feb7c7d1540837f59b/contracts/Treasury/VCTreasuryV1.sol",
            "function": "unstakeToKill",
            "impact": "Low",
            "line": 1269,
            "line_end": 1280,
            "message": "VCTreasuryV1.unstakeToKill(uint256) (VCTreasuryV1.sol#1269-1280) should emit an event for: \n\t- totalStakedToKill = totalStakedToKill.sub(_amount) (VCTreasuryV1.sol#1277) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "VCTreasuryV1",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-StackerVC/StackerVC_VentureFund001-3cfb98b21f4731dfd62993feb7c7d1540837f59b/contracts/Treasury/VCTreasuryV1.sol",
            "function": "startFund",
            "impact": "Low",
            "line": 1087,
            "line_end": 1100,
            "message": "VCTreasuryV1.startFund() (VCTreasuryV1.sol#1087-1100) should emit an event for: \n\t- maxInvestment = msg.value.div(max).mul(investmentCap) (VCTreasuryV1.sol#1097) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "VCTreasuryV1",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-StackerVC/StackerVC_VentureFund001-3cfb98b21f4731dfd62993feb7c7d1540837f59b/contracts/Treasury/VCTreasuryV1.sol",
            "function": "claim",
            "impact": "Low",
            "line": 1347,
            "line_end": 1379,
            "message": "VCTreasuryV1.claim(address[]) (VCTreasuryV1.sol#1347-1379) has external calls inside a loop: _proportionToken = IERC20(_tokens[i]).balanceOf(address(this)).mul(_proportionE18).div(1e18) (VCTreasuryV1.sol#1376)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "VCTreasuryV1",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-StackerVC/StackerVC_VentureFund001-3cfb98b21f4731dfd62993feb7c7d1540837f59b/contracts/Treasury/VCTreasuryV1.sol",
            "function": "investExecute",
            "impact": "Low",
            "line": 1141,
            "line_end": 1165,
            "message": "Reentrancy in VCTreasuryV1.investExecute(uint256,uint256) (VCTreasuryV1.sol#1141-1165):\n\tExternal calls:\n\t- IERC20(_buy.tokenAccept).safeTransferFrom(msg.sender,address(this),_amount) (VCTreasuryV1.sol#1156)\n\tState variables written after the call(s):\n\t- boughtTokens[_buy.tokenAccept] = true (VCTreasuryV1.sol#1160)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "VCTreasuryV1",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-StackerVC/StackerVC_VentureFund001-3cfb98b21f4731dfd62993feb7c7d1540837f59b/contracts/Treasury/VCTreasuryV1.sol",
            "function": "devestExecute",
            "impact": "Low",
            "line": 1202,
            "line_end": 1223,
            "message": "Reentrancy in VCTreasuryV1.devestExecute(uint256) (VCTreasuryV1.sol#1202-1223):\n\tExternal calls:\n\t- IERC20(_sell.tokenSell).safeTransfer(msg.sender,_sell.amountOut) (VCTreasuryV1.sol#1217)\n\tState variables written after the call(s):\n\t- boughtTokens[_sell.tokenSell] = false (VCTreasuryV1.sol#1221)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "VCTreasuryV1",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-StackerVC/StackerVC_VentureFund001-3cfb98b21f4731dfd62993feb7c7d1540837f59b/contracts/Treasury/VCTreasuryV1.sol",
            "function": "devestExecute",
            "impact": "Low",
            "line": 1202,
            "line_end": 1223,
            "message": "VCTreasuryV1.devestExecute(uint256) (VCTreasuryV1.sol#1202-1223) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(block.timestamp > _sell.vetoTime,TREASURYV1: time < vetoTime) (VCTreasuryV1.sol#1210)\n\t- require(bool,string)(block.timestamp <= _sell.maxTime,TREASURYV1: time > maxTime) (VCTreasuryV1.sol#1211)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "VCTreasuryV1",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-StackerVC/StackerVC_VentureFund001-3cfb98b21f4731dfd62993feb7c7d1540837f59b/contracts/Treasury/VCTreasuryV1.sol",
            "function": "_updateInvestmentUtilization",
            "impact": "Low",
            "line": 1382,
            "line_end": 1388,
            "message": "VCTreasuryV1._updateInvestmentUtilization(uint256) (VCTreasuryV1.sol#1382-1388) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(proposedUtilization <= maxInvestment,TREASURYV1: utilization > maxInvestment) (VCTreasuryV1.sol#1384)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "VCTreasuryV1",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-StackerVC/StackerVC_VentureFund001-3cfb98b21f4731dfd62993feb7c7d1540837f59b/contracts/Treasury/VCTreasuryV1.sol",
            "function": "_checkCloseTime",
            "impact": "Low",
            "line": 1318,
            "line_end": 1322,
            "message": "VCTreasuryV1._checkCloseTime() (VCTreasuryV1.sol#1318-1322) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp >= fundCloseTime && currentState != FundStates.setup (VCTreasuryV1.sol#1319)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "VCTreasuryV1",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-StackerVC/StackerVC_VentureFund001-3cfb98b21f4731dfd62993feb7c7d1540837f59b/contracts/Treasury/VCTreasuryV1.sol",
            "function": "investExecute",
            "impact": "Low",
            "line": 1141,
            "line_end": 1165,
            "message": "VCTreasuryV1.investExecute(uint256,uint256) (VCTreasuryV1.sol#1141-1165) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(block.timestamp <= _buy.maxTime,TREASURYV1: time > maxTime) (VCTreasuryV1.sol#1150)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "VCTreasuryV1",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-StackerVC/StackerVC_VentureFund001-3cfb98b21f4731dfd62993feb7c7d1540837f59b/contracts/Treasury/VCTreasuryV1.sol",
            "function": "getUtilization",
            "impact": "Low",
            "line": 1391,
            "line_end": 1401,
            "message": "VCTreasuryV1.getUtilization(uint256) (VCTreasuryV1.sol#1391-1401) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- _lastInvestTimeDiff >= THIRTY_DAYS (VCTreasuryV1.sol#1393)\n",
            "name": "timestamp",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "ERC20",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-StackerVC/StackerVC_VentureFund001-3cfb98b21f4731dfd62993feb7c7d1540837f59b/contracts/Treasury/VCTreasuryV1.sol",
            "function": "_mint",
            "impact": "Informational",
            "line": 531,
            "line_end": 539,
            "message": "ERC20._mint(address,uint256) (VCTreasuryV1.sol#531-539) has costly operations inside a loop:\n\t- _totalSupply = _totalSupply.add(amount) (VCTreasuryV1.sol#536)\n",
            "name": "costly-loop",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}