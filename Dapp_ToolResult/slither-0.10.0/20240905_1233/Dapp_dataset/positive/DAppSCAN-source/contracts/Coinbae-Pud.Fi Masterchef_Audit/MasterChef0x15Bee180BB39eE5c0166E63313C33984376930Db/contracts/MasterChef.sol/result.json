{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol",
            "function": "safePudTransfer",
            "impact": "High",
            "line": 1444,
            "line_end": 1451,
            "message": "MasterChef.safePudTransfer(address,uint256) (MasterChef.sol#1444-1451) ignores return value by pud.transfer(_to,_amount) (MasterChef.sol#1449)\n",
            "name": "unchecked-transfer",
            "check": "TP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol",
            "function": "safePudTransfer",
            "impact": "High",
            "line": 1444,
            "line_end": 1451,
            "message": "MasterChef.safePudTransfer(address,uint256) (MasterChef.sol#1444-1451) ignores return value by pud.transfer(_to,pudBal) (MasterChef.sol#1447)\n",
            "name": "unchecked-transfer",
            "check": "TP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol",
            "function": "setPoolStrategy",
            "impact": "Medium",
            "line": 1495,
            "line_end": 1500,
            "message": "Reentrancy in MasterChef.setPoolStrategy(uint256,address) (MasterChef.sol#1495-1500):\n\tExternal calls:\n\t- IStrategy(pool.strategy).harvest() (MasterChef.sol#1497)\n\t- IStrategy(pool.strategy).withdrawAll(_strategy) (MasterChef.sol#1498)\n\tState variables written after the call(s):\n\t- pool.strategy = _strategy (MasterChef.sol#1499)\n\tMasterChef.poolInfo (MasterChef.sol#1175) can be used in cross function reentrancies:\n\t- MasterChef.add(uint256,IERC20,bool,address) (MasterChef.sol#1216-1238)\n\t- MasterChef.balance(uint256) (MasterChef.sol#1489-1492)\n\t- MasterChef.deposit(uint256,uint256) (MasterChef.sol#1340-1379)\n\t- MasterChef.emergencyWithdraw(uint256) (MasterChef.sol#1421-1440)\n\t- MasterChef.massUpdatePools() (MasterChef.sol#1301-1306)\n\t- MasterChef.pendingPud(uint256,address) (MasterChef.sol#1275-1298)\n\t- MasterChef.poolInfo (MasterChef.sol#1175)\n\t- MasterChef.poolLength() (MasterChef.sol#1209-1211)\n\t- MasterChef.set(uint256,uint256,bool) (MasterChef.sol#1242-1254)\n\t- MasterChef.setPoolStrategy(uint256,address) (MasterChef.sol#1495-1500)\n\t- MasterChef.setStartBlock(uint256) (MasterChef.sol#1470-1477)\n\t- MasterChef.updatePool(uint256) (MasterChef.sol#1309-1336)\n\t- MasterChef.withdraw(uint256,uint256) (MasterChef.sol#1383-1417)\n",
            "name": "reentrancy-no-eth",
            "check": "TP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol",
            "function": "withdraw",
            "impact": "Medium",
            "line": 1383,
            "line_end": 1417,
            "message": "Reentrancy in MasterChef.withdraw(uint256,uint256) (MasterChef.sol#1383-1417):\n\tExternal calls:\n\t- updatePool(_pid) (MasterChef.sol#1388)\n\t\t- pud.mint(devaddr,pudReward.div(devFundDivRate)) (MasterChef.sol#1328)\n\t\t- pud.mint(address(this),pudReward) (MasterChef.sol#1329)\n\t- safePudTransfer(msg.sender,pending) (MasterChef.sol#1396)\n\t\t- pud.transfer(_to,pudBal) (MasterChef.sol#1447)\n\t\t- pud.transfer(_to,_amount) (MasterChef.sol#1449)\n\tState variables written after the call(s):\n\t- pool.totalShares = pool.totalShares.sub(_shares) (MasterChef.sol#1399)\n\tMasterChef.poolInfo (MasterChef.sol#1175) can be used in cross function reentrancies:\n\t- MasterChef.add(uint256,IERC20,bool,address) (MasterChef.sol#1216-1238)\n\t- MasterChef.balance(uint256) (MasterChef.sol#1489-1492)\n\t- MasterChef.deposit(uint256,uint256) (MasterChef.sol#1340-1379)\n\t- MasterChef.emergencyWithdraw(uint256) (MasterChef.sol#1421-1440)\n\t- MasterChef.massUpdatePools() (MasterChef.sol#1301-1306)\n\t- MasterChef.pendingPud(uint256,address) (MasterChef.sol#1275-1298)\n\t- MasterChef.poolInfo (MasterChef.sol#1175)\n\t- MasterChef.poolLength() (MasterChef.sol#1209-1211)\n\t- MasterChef.set(uint256,uint256,bool) (MasterChef.sol#1242-1254)\n\t- MasterChef.setPoolStrategy(uint256,address) (MasterChef.sol#1495-1500)\n\t- MasterChef.setStartBlock(uint256) (MasterChef.sol#1470-1477)\n\t- MasterChef.updatePool(uint256) (MasterChef.sol#1309-1336)\n\t- MasterChef.withdraw(uint256,uint256) (MasterChef.sol#1383-1417)\n\t- user.shares = user.shares.sub(_shares) (MasterChef.sol#1397)\n\tMasterChef.userInfo (MasterChef.sol#1177) can be used in cross function reentrancies:\n\t- MasterChef.deposit(uint256,uint256) (MasterChef.sol#1340-1379)\n\t- MasterChef.emergencyWithdraw(uint256) (MasterChef.sol#1421-1440)\n\t- MasterChef.pendingPud(uint256,address) (MasterChef.sol#1275-1298)\n\t- MasterChef.userInfo (MasterChef.sol#1177)\n\t- MasterChef.withdraw(uint256,uint256) (MasterChef.sol#1383-1417)\n\t- user.rewardDebt = user.shares.mul(pool.accPudPerShare).div(1e12) (MasterChef.sol#1398)\n\tMasterChef.userInfo (MasterChef.sol#1177) can be used in cross function reentrancies:\n\t- MasterChef.deposit(uint256,uint256) (MasterChef.sol#1340-1379)\n\t- MasterChef.emergencyWithdraw(uint256) (MasterChef.sol#1421-1440)\n\t- MasterChef.pendingPud(uint256,address) (MasterChef.sol#1275-1298)\n\t- MasterChef.userInfo (MasterChef.sol#1177)\n\t- MasterChef.withdraw(uint256,uint256) (MasterChef.sol#1383-1417)\n",
            "name": "reentrancy-no-eth",
            "check": "TP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol",
            "function": "set",
            "impact": "Medium",
            "line": 1242,
            "line_end": 1254,
            "message": "Reentrancy in MasterChef.set(uint256,uint256,bool) (MasterChef.sol#1242-1254):\n\tExternal calls:\n\t- massUpdatePools() (MasterChef.sol#1248)\n\t\t- pud.mint(devaddr,pudReward.div(devFundDivRate)) (MasterChef.sol#1328)\n\t\t- pud.mint(address(this),pudReward) (MasterChef.sol#1329)\n\tState variables written after the call(s):\n\t- poolInfo[_pid].allocPoint = _allocPoint (MasterChef.sol#1253)\n\tMasterChef.poolInfo (MasterChef.sol#1175) can be used in cross function reentrancies:\n\t- MasterChef.add(uint256,IERC20,bool,address) (MasterChef.sol#1216-1238)\n\t- MasterChef.balance(uint256) (MasterChef.sol#1489-1492)\n\t- MasterChef.deposit(uint256,uint256) (MasterChef.sol#1340-1379)\n\t- MasterChef.emergencyWithdraw(uint256) (MasterChef.sol#1421-1440)\n\t- MasterChef.massUpdatePools() (MasterChef.sol#1301-1306)\n\t- MasterChef.pendingPud(uint256,address) (MasterChef.sol#1275-1298)\n\t- MasterChef.poolInfo (MasterChef.sol#1175)\n\t- MasterChef.poolLength() (MasterChef.sol#1209-1211)\n\t- MasterChef.set(uint256,uint256,bool) (MasterChef.sol#1242-1254)\n\t- MasterChef.setPoolStrategy(uint256,address) (MasterChef.sol#1495-1500)\n\t- MasterChef.setStartBlock(uint256) (MasterChef.sol#1470-1477)\n\t- MasterChef.updatePool(uint256) (MasterChef.sol#1309-1336)\n\t- MasterChef.withdraw(uint256,uint256) (MasterChef.sol#1383-1417)\n\t- totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) (MasterChef.sol#1250-1252)\n\tMasterChef.totalAllocPoint (MasterChef.sol#1179) can be used in cross function reentrancies:\n\t- MasterChef.add(uint256,IERC20,bool,address) (MasterChef.sol#1216-1238)\n\t- MasterChef.pendingPud(uint256,address) (MasterChef.sol#1275-1298)\n\t- MasterChef.set(uint256,uint256,bool) (MasterChef.sol#1242-1254)\n\t- MasterChef.totalAllocPoint (MasterChef.sol#1179)\n\t- MasterChef.updatePool(uint256) (MasterChef.sol#1309-1336)\n",
            "name": "reentrancy-no-eth",
            "check": "TP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol",
            "function": "emergencyWithdraw",
            "impact": "Medium",
            "line": 1421,
            "line_end": 1440,
            "message": "Reentrancy in MasterChef.emergencyWithdraw(uint256) (MasterChef.sol#1421-1440):\n\tExternal calls:\n\t- IStrategy(pool.strategy).withdraw(r) (MasterChef.sol#1429)\n\t- pool.lpToken.safeTransfer(address(msg.sender),r) (MasterChef.sol#1436)\n\tState variables written after the call(s):\n\t- user.shares = 0 (MasterChef.sol#1438)\n\tMasterChef.userInfo (MasterChef.sol#1177) can be used in cross function reentrancies:\n\t- MasterChef.deposit(uint256,uint256) (MasterChef.sol#1340-1379)\n\t- MasterChef.emergencyWithdraw(uint256) (MasterChef.sol#1421-1440)\n\t- MasterChef.pendingPud(uint256,address) (MasterChef.sol#1275-1298)\n\t- MasterChef.userInfo (MasterChef.sol#1177)\n\t- MasterChef.withdraw(uint256,uint256) (MasterChef.sol#1383-1417)\n\t- user.rewardDebt = 0 (MasterChef.sol#1439)\n\tMasterChef.userInfo (MasterChef.sol#1177) can be used in cross function reentrancies:\n\t- MasterChef.deposit(uint256,uint256) (MasterChef.sol#1340-1379)\n\t- MasterChef.emergencyWithdraw(uint256) (MasterChef.sol#1421-1440)\n\t- MasterChef.pendingPud(uint256,address) (MasterChef.sol#1275-1298)\n\t- MasterChef.userInfo (MasterChef.sol#1177)\n\t- MasterChef.withdraw(uint256,uint256) (MasterChef.sol#1383-1417)\n",
            "name": "reentrancy-no-eth",
            "check": "TP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol",
            "function": "updatePool",
            "impact": "Medium",
            "line": 1309,
            "line_end": 1336,
            "message": "Reentrancy in MasterChef.updatePool(uint256) (MasterChef.sol#1309-1336):\n\tExternal calls:\n\t- pud.mint(devaddr,pudReward.div(devFundDivRate)) (MasterChef.sol#1328)\n\t- pud.mint(address(this),pudReward) (MasterChef.sol#1329)\n\tState variables written after the call(s):\n\t- pool.accPudPerShare = pool.accPudPerShare.add(pudReward.mul(1e12).div(lpSupply)) (MasterChef.sol#1332-1334)\n\tMasterChef.poolInfo (MasterChef.sol#1175) can be used in cross function reentrancies:\n\t- MasterChef.add(uint256,IERC20,bool,address) (MasterChef.sol#1216-1238)\n\t- MasterChef.balance(uint256) (MasterChef.sol#1489-1492)\n\t- MasterChef.deposit(uint256,uint256) (MasterChef.sol#1340-1379)\n\t- MasterChef.emergencyWithdraw(uint256) (MasterChef.sol#1421-1440)\n\t- MasterChef.massUpdatePools() (MasterChef.sol#1301-1306)\n\t- MasterChef.pendingPud(uint256,address) (MasterChef.sol#1275-1298)\n\t- MasterChef.poolInfo (MasterChef.sol#1175)\n\t- MasterChef.poolLength() (MasterChef.sol#1209-1211)\n\t- MasterChef.set(uint256,uint256,bool) (MasterChef.sol#1242-1254)\n\t- MasterChef.setPoolStrategy(uint256,address) (MasterChef.sol#1495-1500)\n\t- MasterChef.setStartBlock(uint256) (MasterChef.sol#1470-1477)\n\t- MasterChef.updatePool(uint256) (MasterChef.sol#1309-1336)\n\t- MasterChef.withdraw(uint256,uint256) (MasterChef.sol#1383-1417)\n\t- pool.lastRewardBlock = block.number (MasterChef.sol#1335)\n\tMasterChef.poolInfo (MasterChef.sol#1175) can be used in cross function reentrancies:\n\t- MasterChef.add(uint256,IERC20,bool,address) (MasterChef.sol#1216-1238)\n\t- MasterChef.balance(uint256) (MasterChef.sol#1489-1492)\n\t- MasterChef.deposit(uint256,uint256) (MasterChef.sol#1340-1379)\n\t- MasterChef.emergencyWithdraw(uint256) (MasterChef.sol#1421-1440)\n\t- MasterChef.massUpdatePools() (MasterChef.sol#1301-1306)\n\t- MasterChef.pendingPud(uint256,address) (MasterChef.sol#1275-1298)\n\t- MasterChef.poolInfo (MasterChef.sol#1175)\n\t- MasterChef.poolLength() (MasterChef.sol#1209-1211)\n\t- MasterChef.set(uint256,uint256,bool) (MasterChef.sol#1242-1254)\n\t- MasterChef.setPoolStrategy(uint256,address) (MasterChef.sol#1495-1500)\n\t- MasterChef.setStartBlock(uint256) (MasterChef.sol#1470-1477)\n\t- MasterChef.updatePool(uint256) (MasterChef.sol#1309-1336)\n\t- MasterChef.withdraw(uint256,uint256) (MasterChef.sol#1383-1417)\n",
            "name": "reentrancy-no-eth",
            "check": "TP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol",
            "function": "add",
            "impact": "Medium",
            "line": 1216,
            "line_end": 1238,
            "message": "Reentrancy in MasterChef.add(uint256,IERC20,bool,address) (MasterChef.sol#1216-1238):\n\tExternal calls:\n\t- massUpdatePools() (MasterChef.sol#1223)\n\t\t- pud.mint(devaddr,pudReward.div(devFundDivRate)) (MasterChef.sol#1328)\n\t\t- pud.mint(address(this),pudReward) (MasterChef.sol#1329)\n\tState variables written after the call(s):\n\t- poolInfo.push(PoolInfo({lpToken:_lpToken,allocPoint:_allocPoint,lastRewardBlock:lastRewardBlock,accPudPerShare:0,strategy:_strategy,totalShares:0})) (MasterChef.sol#1228-1237)\n\tMasterChef.poolInfo (MasterChef.sol#1175) can be used in cross function reentrancies:\n\t- MasterChef.add(uint256,IERC20,bool,address) (MasterChef.sol#1216-1238)\n\t- MasterChef.balance(uint256) (MasterChef.sol#1489-1492)\n\t- MasterChef.deposit(uint256,uint256) (MasterChef.sol#1340-1379)\n\t- MasterChef.emergencyWithdraw(uint256) (MasterChef.sol#1421-1440)\n\t- MasterChef.massUpdatePools() (MasterChef.sol#1301-1306)\n\t- MasterChef.pendingPud(uint256,address) (MasterChef.sol#1275-1298)\n\t- MasterChef.poolInfo (MasterChef.sol#1175)\n\t- MasterChef.poolLength() (MasterChef.sol#1209-1211)\n\t- MasterChef.set(uint256,uint256,bool) (MasterChef.sol#1242-1254)\n\t- MasterChef.setPoolStrategy(uint256,address) (MasterChef.sol#1495-1500)\n\t- MasterChef.setStartBlock(uint256) (MasterChef.sol#1470-1477)\n\t- MasterChef.updatePool(uint256) (MasterChef.sol#1309-1336)\n\t- MasterChef.withdraw(uint256,uint256) (MasterChef.sol#1383-1417)\n\t- totalAllocPoint = totalAllocPoint.add(_allocPoint) (MasterChef.sol#1227)\n\tMasterChef.totalAllocPoint (MasterChef.sol#1179) can be used in cross function reentrancies:\n\t- MasterChef.add(uint256,IERC20,bool,address) (MasterChef.sol#1216-1238)\n\t- MasterChef.pendingPud(uint256,address) (MasterChef.sol#1275-1298)\n\t- MasterChef.set(uint256,uint256,bool) (MasterChef.sol#1242-1254)\n\t- MasterChef.totalAllocPoint (MasterChef.sol#1179)\n\t- MasterChef.updatePool(uint256) (MasterChef.sol#1309-1336)\n",
            "name": "reentrancy-no-eth",
            "check": "TP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol",
            "function": "deposit",
            "impact": "Medium",
            "line": 1340,
            "line_end": 1379,
            "message": "Reentrancy in MasterChef.deposit(uint256,uint256) (MasterChef.sol#1340-1379):\n\tExternal calls:\n\t- updatePool(_pid) (MasterChef.sol#1344)\n\t\t- pud.mint(devaddr,pudReward.div(devFundDivRate)) (MasterChef.sol#1328)\n\t\t- pud.mint(address(this),pudReward) (MasterChef.sol#1329)\n\t- safePudTransfer(msg.sender,pending) (MasterChef.sol#1350)\n\t\t- pud.transfer(_to,pudBal) (MasterChef.sol#1447)\n\t\t- pud.transfer(_to,_amount) (MasterChef.sol#1449)\n\t- pool.lpToken.safeTransferFrom(address(msg.sender),pool.strategy,_amount) (MasterChef.sol#1358-1362)\n\tState variables written after the call(s):\n\t- pool.totalShares = pool.totalShares.add(shares) (MasterChef.sol#1376)\n\tMasterChef.poolInfo (MasterChef.sol#1175) can be used in cross function reentrancies:\n\t- MasterChef.add(uint256,IERC20,bool,address) (MasterChef.sol#1216-1238)\n\t- MasterChef.balance(uint256) (MasterChef.sol#1489-1492)\n\t- MasterChef.deposit(uint256,uint256) (MasterChef.sol#1340-1379)\n\t- MasterChef.emergencyWithdraw(uint256) (MasterChef.sol#1421-1440)\n\t- MasterChef.massUpdatePools() (MasterChef.sol#1301-1306)\n\t- MasterChef.pendingPud(uint256,address) (MasterChef.sol#1275-1298)\n\t- MasterChef.poolInfo (MasterChef.sol#1175)\n\t- MasterChef.poolLength() (MasterChef.sol#1209-1211)\n\t- MasterChef.set(uint256,uint256,bool) (MasterChef.sol#1242-1254)\n\t- MasterChef.setPoolStrategy(uint256,address) (MasterChef.sol#1495-1500)\n\t- MasterChef.setStartBlock(uint256) (MasterChef.sol#1470-1477)\n\t- MasterChef.updatePool(uint256) (MasterChef.sol#1309-1336)\n\t- MasterChef.withdraw(uint256,uint256) (MasterChef.sol#1383-1417)\n\t- user.shares = user.shares.add(shares) (MasterChef.sol#1374)\n\tMasterChef.userInfo (MasterChef.sol#1177) can be used in cross function reentrancies:\n\t- MasterChef.deposit(uint256,uint256) (MasterChef.sol#1340-1379)\n\t- MasterChef.emergencyWithdraw(uint256) (MasterChef.sol#1421-1440)\n\t- MasterChef.pendingPud(uint256,address) (MasterChef.sol#1275-1298)\n\t- MasterChef.userInfo (MasterChef.sol#1177)\n\t- MasterChef.withdraw(uint256,uint256) (MasterChef.sol#1383-1417)\n\t- user.rewardDebt = user.shares.mul(pool.accPudPerShare).div(1e12) (MasterChef.sol#1375)\n\tMasterChef.userInfo (MasterChef.sol#1177) can be used in cross function reentrancies:\n\t- MasterChef.deposit(uint256,uint256) (MasterChef.sol#1340-1379)\n\t- MasterChef.emergencyWithdraw(uint256) (MasterChef.sol#1421-1440)\n\t- MasterChef.pendingPud(uint256,address) (MasterChef.sol#1275-1298)\n\t- MasterChef.userInfo (MasterChef.sol#1177)\n\t- MasterChef.withdraw(uint256,uint256) (MasterChef.sol#1383-1417)\n",
            "name": "reentrancy-no-eth",
            "check": "TP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol",
            "function": "setPoolStrategy",
            "impact": "Medium",
            "line": 1495,
            "line_end": 1500,
            "message": "MasterChef.setPoolStrategy(uint256,address) (MasterChef.sol#1495-1500) ignores return value by IStrategy(pool.strategy).withdrawAll(_strategy) (MasterChef.sol#1498)\n",
            "name": "unused-return",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "ERC20",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol",
            "function": "name",
            "impact": "Low",
            "line": 685,
            "message": "ERC20.constructor(string,string).name (MasterChef.sol#685) shadows:\n\t- ERC20.name() (MasterChef.sol#696-698) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "ERC20",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol",
            "function": "symbol",
            "impact": "Low",
            "line": 685,
            "message": "ERC20.constructor(string,string).symbol (MasterChef.sol#685) shadows:\n\t- ERC20.symbol() (MasterChef.sol#704-706) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol",
            "function": "setBonusEndBlock",
            "impact": "Low",
            "line": 1479,
            "line_end": 1481,
            "message": "MasterChef.setBonusEndBlock(uint256) (MasterChef.sol#1479-1481) should emit an event for: \n\t- bonusEndBlock = _bonusEndBlock (MasterChef.sol#1480) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol",
            "function": "add",
            "impact": "Low",
            "line": 1216,
            "line_end": 1238,
            "message": "MasterChef.add(uint256,IERC20,bool,address) (MasterChef.sol#1216-1238) should emit an event for: \n\t- totalAllocPoint = totalAllocPoint.add(_allocPoint) (MasterChef.sol#1227) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol",
            "function": "setPudPerBlock",
            "impact": "Low",
            "line": 1464,
            "line_end": 1468,
            "message": "MasterChef.setPudPerBlock(uint256) (MasterChef.sol#1464-1468) should emit an event for: \n\t- pudPerBlock = _pudPerBlock (MasterChef.sol#1467) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol",
            "function": "setDevFundDivRate",
            "impact": "Low",
            "line": 1483,
            "line_end": 1486,
            "message": "MasterChef.setDevFundDivRate(uint256) (MasterChef.sol#1483-1486) should emit an event for: \n\t- devFundDivRate = _devFundDivRate (MasterChef.sol#1485) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol",
            "function": "set",
            "impact": "Low",
            "line": 1242,
            "line_end": 1254,
            "message": "MasterChef.set(uint256,uint256,bool) (MasterChef.sol#1242-1254) should emit an event for: \n\t- totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) (MasterChef.sol#1250-1252) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol",
            "function": "updatePool",
            "impact": "Low",
            "line": 1309,
            "line_end": 1336,
            "message": "MasterChef.updatePool(uint256) (MasterChef.sol#1309-1336) has external calls inside a loop: pud.mint(address(this),pudReward) (MasterChef.sol#1329)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol",
            "function": "updatePool",
            "impact": "Low",
            "line": 1309,
            "line_end": 1336,
            "message": "MasterChef.updatePool(uint256) (MasterChef.sol#1309-1336) has external calls inside a loop: pud.mint(devaddr,pudReward.div(devFundDivRate)) (MasterChef.sol#1328)\n",
            "name": "calls-loop",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol",
            "function": "withdraw",
            "impact": "Low",
            "line": 1383,
            "line_end": 1417,
            "message": "Reentrancy in MasterChef.withdraw(uint256,uint256) (MasterChef.sol#1383-1417):\n\tExternal calls:\n\t- updatePool(_pid) (MasterChef.sol#1388)\n\t\t- pud.mint(devaddr,pudReward.div(devFundDivRate)) (MasterChef.sol#1328)\n\t\t- pud.mint(address(this),pudReward) (MasterChef.sol#1329)\n\t- safePudTransfer(msg.sender,pending) (MasterChef.sol#1396)\n\t\t- pud.transfer(_to,pudBal) (MasterChef.sol#1447)\n\t\t- pud.transfer(_to,_amount) (MasterChef.sol#1449)\n\t- IStrategy(pool.strategy).withdraw(r) (MasterChef.sol#1405)\n\t- pool.lpToken.safeTransfer(address(msg.sender),r) (MasterChef.sol#1412)\n\tEvent emitted after the call(s):\n\t- Withdraw(msg.sender,_pid,r) (MasterChef.sol#1416)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol",
            "function": "emergencyWithdraw",
            "impact": "Low",
            "line": 1421,
            "line_end": 1440,
            "message": "Reentrancy in MasterChef.emergencyWithdraw(uint256) (MasterChef.sol#1421-1440):\n\tExternal calls:\n\t- IStrategy(pool.strategy).withdraw(r) (MasterChef.sol#1429)\n\t- pool.lpToken.safeTransfer(address(msg.sender),r) (MasterChef.sol#1436)\n\tEvent emitted after the call(s):\n\t- EmergencyWithdraw(msg.sender,_pid,user.shares) (MasterChef.sol#1437)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "MasterChef",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/Coinbae-Pud.Fi Masterchef_Audit/MasterChef0x15Bee180BB39eE5c0166E63313C33984376930Db/contracts/MasterChef.sol",
            "function": "deposit",
            "impact": "Low",
            "line": 1340,
            "line_end": 1379,
            "message": "Reentrancy in MasterChef.deposit(uint256,uint256) (MasterChef.sol#1340-1379):\n\tExternal calls:\n\t- updatePool(_pid) (MasterChef.sol#1344)\n\t\t- pud.mint(devaddr,pudReward.div(devFundDivRate)) (MasterChef.sol#1328)\n\t\t- pud.mint(address(this),pudReward) (MasterChef.sol#1329)\n\t- safePudTransfer(msg.sender,pending) (MasterChef.sol#1350)\n\t\t- pud.transfer(_to,pudBal) (MasterChef.sol#1447)\n\t\t- pud.transfer(_to,_amount) (MasterChef.sol#1449)\n\t- pool.lpToken.safeTransferFrom(address(msg.sender),pool.strategy,_amount) (MasterChef.sol#1358-1362)\n\tEvent emitted after the call(s):\n\t- Deposit(msg.sender,_pid,_amount) (MasterChef.sol#1378)\n",
            "name": "reentrancy-events",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}