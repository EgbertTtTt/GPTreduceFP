{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "confidence": "Medium",
            "contract": "vDSGToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DSG/core-6f607f77698936e132e4e9b5cb4d75580636d919/contracts/token/vDSGToken.sol",
            "function": "transferFrom",
            "impact": "Medium",
            "line": 1233,
            "line_end": 1243,
            "message": "Reentrancy in vDSGToken.transferFrom(address,address,uint256) (vDSGToken.sol#1233-1243):\n\tExternal calls:\n\t- _updateAlpha() (vDSGToken.sol#1239)\n\t\t- IDsgToken(_dsgToken).mint(address(this),curDistribution) (vDSGToken.sol#1359)\n\tState variables written after the call(s):\n\t- _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(vDsgAmount) (vDSGToken.sol#1241)\n\tvDSGToken._allowed (vDSGToken.sol#997) can be used in cross function reentrancies:\n\t- vDSGToken.allowance(address,address) (vDSGToken.sol#1245-1247)\n\t- vDSGToken.approve(address,uint256) (vDSGToken.sol#1227-1231)\n\t- vDSGToken.transferFrom(address,address,uint256) (vDSGToken.sol#1233-1243)\n\t- _transfer(from,to,vDsgAmount) (vDSGToken.sol#1240)\n\t\t- _totalStakingPower = _totalStakingPower.add(stakingPower).add(superiorIncreSP) (vDSGToken.sol#1379)\n\t\t- _totalStakingPower = _totalStakingPower.sub(stakingPower).sub(superiorDecreSP).sub(userCreditSP) (vDSGToken.sol#1424)\n\tvDSGToken._totalStakingPower (vDSGToken.sol#1020) can be used in cross function reentrancies:\n\t- vDSGToken._mint(vDSGToken.UserInfo,uint256) (vDSGToken.sol#1367-1380)\n\t- vDSGToken._redeem(vDSGToken.UserInfo,uint256) (vDSGToken.sol#1382-1425)\n\t- vDSGToken._totalStakingPower (vDSGToken.sol#1020)\n\t- vDSGToken.donate(uint256) (vDSGToken.sol#1189-1197)\n\t- vDSGToken.getLatestAlpha() (vDSGToken.sol#1251-1262)\n\t- vDSGToken.redeem(uint256,bool) (vDSGToken.sol#1150-1187)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "vDSGToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DSG/core-6f607f77698936e132e4e9b5cb4d75580636d919/contracts/token/vDSGToken.sol",
            "function": "redeem",
            "impact": "Medium",
            "line": 1150,
            "line_end": 1187,
            "message": "Reentrancy in vDSGToken.redeem(uint256,bool) (vDSGToken.sol#1150-1187):\n\tExternal calls:\n\t- _updateAlpha() (vDSGToken.sol#1151)\n\t\t- IDsgToken(_dsgToken).mint(address(this),curDistribution) (vDSGToken.sol#1359)\n\tState variables written after the call(s):\n\t- _redeem(user,stakingPower) (vDSGToken.sol#1165)\n\t\t- _totalStakingPower = _totalStakingPower.sub(stakingPower).sub(superiorDecreSP).sub(userCreditSP) (vDSGToken.sol#1424)\n\tvDSGToken._totalStakingPower (vDSGToken.sol#1020) can be used in cross function reentrancies:\n\t- vDSGToken._mint(vDSGToken.UserInfo,uint256) (vDSGToken.sol#1367-1380)\n\t- vDSGToken._redeem(vDSGToken.UserInfo,uint256) (vDSGToken.sol#1382-1425)\n\t- vDSGToken._totalStakingPower (vDSGToken.sol#1020)\n\t- vDSGToken.donate(uint256) (vDSGToken.sol#1189-1197)\n\t- vDSGToken.getLatestAlpha() (vDSGToken.sol#1251-1262)\n\t- vDSGToken.redeem(uint256,bool) (vDSGToken.sol#1150-1187)\n\t- _redeem(user,stakingPower) (vDSGToken.sol#1165)\n\t\t- superior.creditDebt = 0 (vDSGToken.sol#1406)\n\t\t- superior.creditDebt = superior.creditDebt.sub(superiorDecreCredit) (vDSGToken.sol#1408)\n\t\t- superior.credit = 0 (vDSGToken.sol#1415)\n\t\t- superior.stakingPower = uint128(uint256(superior.stakingPower).sub(creditSP)) (vDSGToken.sol#1416)\n\t\t- superior.credit = uint128(uint256(superior.credit).sub(superiorDecreCredit)) (vDSGToken.sol#1418-1420)\n\t\t- superior.stakingPower = uint128(uint256(superior.stakingPower).sub(superiorDecreSP)) (vDSGToken.sol#1421)\n\tvDSGToken.userInfo (vDSGToken.sol#1021) can be used in cross function reentrancies:\n\t- vDSGToken._mint(vDSGToken.UserInfo,uint256) (vDSGToken.sol#1367-1380)\n\t- vDSGToken._redeem(vDSGToken.UserInfo,uint256) (vDSGToken.sol#1382-1425)\n\t- vDSGToken._transfer(address,address,uint256) (vDSGToken.sol#1427-1445)\n\t- vDSGToken.dsgBalanceOf(address) (vDSGToken.sol#1268-1277)\n\t- vDSGToken.getSuperior(address) (vDSGToken.sol#1344-1346)\n\t- vDSGToken.mint(uint256,address) (vDSGToken.sol#1114-1148)\n\t- vDSGToken.redeem(uint256,bool) (vDSGToken.sol#1150-1187)\n\t- vDSGToken.userInfo (vDSGToken.sol#1021)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "vDSGToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DSG/core-6f607f77698936e132e4e9b5cb4d75580636d919/contracts/token/vDSGToken.sol",
            "function": "transfer",
            "impact": "Medium",
            "line": 1221,
            "line_end": 1225,
            "message": "Reentrancy in vDSGToken.transfer(address,uint256) (vDSGToken.sol#1221-1225):\n\tExternal calls:\n\t- _updateAlpha() (vDSGToken.sol#1222)\n\t\t- IDsgToken(_dsgToken).mint(address(this),curDistribution) (vDSGToken.sol#1359)\n\tState variables written after the call(s):\n\t- _transfer(msg.sender,to,vDsgAmount) (vDSGToken.sol#1223)\n\t\t- _totalStakingPower = _totalStakingPower.add(stakingPower).add(superiorIncreSP) (vDSGToken.sol#1379)\n\t\t- _totalStakingPower = _totalStakingPower.sub(stakingPower).sub(superiorDecreSP).sub(userCreditSP) (vDSGToken.sol#1424)\n\tvDSGToken._totalStakingPower (vDSGToken.sol#1020) can be used in cross function reentrancies:\n\t- vDSGToken._mint(vDSGToken.UserInfo,uint256) (vDSGToken.sol#1367-1380)\n\t- vDSGToken._redeem(vDSGToken.UserInfo,uint256) (vDSGToken.sol#1382-1425)\n\t- vDSGToken._totalStakingPower (vDSGToken.sol#1020)\n\t- vDSGToken.donate(uint256) (vDSGToken.sol#1189-1197)\n\t- vDSGToken.getLatestAlpha() (vDSGToken.sol#1251-1262)\n\t- vDSGToken.redeem(uint256,bool) (vDSGToken.sol#1150-1187)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "vDSGToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DSG/core-6f607f77698936e132e4e9b5cb4d75580636d919/contracts/token/vDSGToken.sol",
            "function": "changePerReward",
            "impact": "Medium",
            "line": 1080,
            "line_end": 1084,
            "message": "Reentrancy in vDSGToken.changePerReward(uint256) (vDSGToken.sol#1080-1084):\n\tExternal calls:\n\t- _updateAlpha() (vDSGToken.sol#1081)\n\t\t- IDsgToken(_dsgToken).mint(address(this),curDistribution) (vDSGToken.sol#1359)\n\tState variables written after the call(s):\n\t- _dsgPerBlock = dsgPerBlock (vDSGToken.sol#1082)\n\tvDSGToken._dsgPerBlock (vDSGToken.sol#1008) can be used in cross function reentrancies:\n\t- vDSGToken._dsgPerBlock (vDSGToken.sol#1008)\n\t- vDSGToken.changePerReward(uint256) (vDSGToken.sol#1080-1084)\n\t- vDSGToken.getLatestAlpha() (vDSGToken.sol#1251-1262)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "vDSGToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DSG/core-6f607f77698936e132e4e9b5cb4d75580636d919/contracts/token/vDSGToken.sol",
            "function": "redeem",
            "impact": "Medium",
            "line": 1150,
            "line_end": 1187,
            "message": "Reentrancy in vDSGToken.redeem(uint256,bool) (vDSGToken.sol#1150-1187):\n\tExternal calls:\n\t- _updateAlpha() (vDSGToken.sol#1151)\n\t\t- IDsgToken(_dsgToken).mint(address(this),curDistribution) (vDSGToken.sol#1359)\n\t- IERC20(_dsgToken).safeTransfer(msg.sender,dsgReceive) (vDSGToken.sol#1169)\n\t- IDsgToken(_dsgToken).burn(burnDsgAmount) (vDSGToken.sol#1172)\n\t- IERC20(_dsgToken).safeTransfer(_dsgReserve,reserveAmount) (vDSGToken.sol#1175)\n\tState variables written after the call(s):\n\t- alpha = uint112(uint256(alpha).add(DecimalMath.divFloor(withdrawFeeAmount,_totalStakingPower))) (vDSGToken.sol#1179-1183)\n\tvDSGToken.alpha (vDSGToken.sol#1015) can be used in cross function reentrancies:\n\t- vDSGToken._mint(vDSGToken.UserInfo,uint256) (vDSGToken.sol#1367-1380)\n\t- vDSGToken._redeem(vDSGToken.UserInfo,uint256) (vDSGToken.sol#1382-1425)\n\t- vDSGToken._transfer(address,address,uint256) (vDSGToken.sol#1427-1445)\n\t- vDSGToken._updateAlpha() (vDSGToken.sol#1350-1365)\n\t- vDSGToken.alpha (vDSGToken.sol#1015)\n\t- vDSGToken.donate(uint256) (vDSGToken.sol#1189-1197)\n\t- vDSGToken.getLatestAlpha() (vDSGToken.sol#1251-1262)\n\t- vDSGToken.mint(uint256,address) (vDSGToken.sol#1114-1148)\n\t- vDSGToken.redeem(uint256,bool) (vDSGToken.sol#1150-1187)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "vDSGToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DSG/core-6f607f77698936e132e4e9b5cb4d75580636d919/contracts/token/vDSGToken.sol",
            "function": "mint",
            "impact": "Medium",
            "line": 1114,
            "line_end": 1148,
            "message": "Reentrancy in vDSGToken.mint(uint256,address) (vDSGToken.sol#1114-1148):\n\tExternal calls:\n\t- _updateAlpha() (vDSGToken.sol#1139)\n\t\t- IDsgToken(_dsgToken).mint(address(this),curDistribution) (vDSGToken.sol#1359)\n\t- IERC20(_dsgToken).safeTransferFrom(msg.sender,address(this),dsgAmount) (vDSGToken.sol#1141)\n\tState variables written after the call(s):\n\t- _mint(user,newStakingPower) (vDSGToken.sol#1145)\n\t\t- _totalStakingPower = _totalStakingPower.add(stakingPower).add(superiorIncreSP) (vDSGToken.sol#1379)\n\tvDSGToken._totalStakingPower (vDSGToken.sol#1020) can be used in cross function reentrancies:\n\t- vDSGToken._mint(vDSGToken.UserInfo,uint256) (vDSGToken.sol#1367-1380)\n\t- vDSGToken._redeem(vDSGToken.UserInfo,uint256) (vDSGToken.sol#1382-1425)\n\t- vDSGToken._totalStakingPower (vDSGToken.sol#1020)\n\t- vDSGToken.donate(uint256) (vDSGToken.sol#1189-1197)\n\t- vDSGToken.getLatestAlpha() (vDSGToken.sol#1251-1262)\n\t- vDSGToken.redeem(uint256,bool) (vDSGToken.sol#1150-1187)\n\t- _mint(user,newStakingPower) (vDSGToken.sol#1145)\n\t\t- superior.stakingPower = uint128(uint256(superior.stakingPower).add(superiorIncreSP)) (vDSGToken.sol#1376)\n\t\t- superior.credit = uint128(uint256(superior.credit).add(superiorIncreCredit)) (vDSGToken.sol#1377)\n\tvDSGToken.userInfo (vDSGToken.sol#1021) can be used in cross function reentrancies:\n\t- vDSGToken._mint(vDSGToken.UserInfo,uint256) (vDSGToken.sol#1367-1380)\n\t- vDSGToken._redeem(vDSGToken.UserInfo,uint256) (vDSGToken.sol#1382-1425)\n\t- vDSGToken._transfer(address,address,uint256) (vDSGToken.sol#1427-1445)\n\t- vDSGToken.dsgBalanceOf(address) (vDSGToken.sol#1268-1277)\n\t- vDSGToken.getSuperior(address) (vDSGToken.sol#1344-1346)\n\t- vDSGToken.mint(uint256,address) (vDSGToken.sol#1114-1148)\n\t- vDSGToken.redeem(uint256,bool) (vDSGToken.sol#1150-1187)\n\t- vDSGToken.userInfo (vDSGToken.sol#1021)\n",
            "name": "reentrancy-no-eth",
            "check": "FP"
        },
        {
            "confidence": "High",
            "contract": "Ownable",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DSG/core-6f607f77698936e132e4e9b5cb4d75580636d919/contracts/token/vDSGToken.sol",
            "function": "owner",
            "impact": "Low",
            "line": 1245,
            "message": "vDSGToken.allowance(address,address).owner (vDSGToken.sol#1245) shadows:\n\t- Ownable.owner() (vDSGToken.sol#894-896) (function)\n",
            "name": "shadowing-local",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "vDSGToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DSG/core-6f607f77698936e132e4e9b5cb4d75580636d919/contracts/token/vDSGToken.sol",
            "function": "setMintLimitRatio",
            "impact": "Low",
            "line": 1320,
            "line_end": 1326,
            "message": "vDSGToken.setMintLimitRatio(uint256,uint256) (vDSGToken.sol#1320-1326) should emit an event for: \n\t- _MIN_MINT_RATIO_ = min (vDSGToken.sol#1324) \n\t- _MAX_MINT_RATIO_ = max (vDSGToken.sol#1325) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "vDSGToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DSG/core-6f607f77698936e132e4e9b5cb4d75580636d919/contracts/token/vDSGToken.sol",
            "function": "updateDSGFeeReserveRatio",
            "impact": "Low",
            "line": 1091,
            "line_end": 1093,
            "message": "vDSGToken.updateDSGFeeReserveRatio(uint256) (vDSGToken.sol#1091-1093) should emit an event for: \n\t- _dsgFeeReserveRatio = dsgFeeReserve (vDSGToken.sol#1092) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "vDSGToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DSG/core-6f607f77698936e132e4e9b5cb4d75580636d919/contracts/token/vDSGToken.sol",
            "function": "setRatioValue",
            "impact": "Low",
            "line": 1313,
            "line_end": 1318,
            "message": "vDSGToken.setRatioValue(uint256,uint256) (vDSGToken.sol#1313-1318) should emit an event for: \n\t- _MIN_PENALTY_RATIO_ = min (vDSGToken.sol#1316) \n\t- _MAX_PENALTY_RATIO_ = max (vDSGToken.sol#1317) \n",
            "name": "events-maths",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "vDSGToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DSG/core-6f607f77698936e132e4e9b5cb4d75580636d919/contracts/token/vDSGToken.sol",
            "function": "_updateAlpha",
            "impact": "Low",
            "line": 1350,
            "line_end": 1365,
            "message": "Reentrancy in vDSGToken._updateAlpha() (vDSGToken.sol#1350-1365):\n\tExternal calls:\n\t- IDsgToken(_dsgToken).mint(address(this),curDistribution) (vDSGToken.sol#1359)\n\tState variables written after the call(s):\n\t- _totalBlockReward = _totalBlockReward.add(curDistribution) (vDSGToken.sol#1361)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "vDSGToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DSG/core-6f607f77698936e132e4e9b5cb4d75580636d919/contracts/token/vDSGToken.sol",
            "function": "transfer",
            "impact": "Low",
            "line": 1221,
            "line_end": 1225,
            "message": "Reentrancy in vDSGToken.transfer(address,uint256) (vDSGToken.sol#1221-1225):\n\tExternal calls:\n\t- _updateAlpha() (vDSGToken.sol#1222)\n\t\t- IDsgToken(_dsgToken).mint(address(this),curDistribution) (vDSGToken.sol#1359)\n\tState variables written after the call(s):\n\t- _transfer(msg.sender,to,vDsgAmount) (vDSGToken.sol#1223)\n\t\t- superior.stakingPower = uint128(uint256(superior.stakingPower).add(superiorIncreSP)) (vDSGToken.sol#1376)\n\t\t- superior.credit = uint128(uint256(superior.credit).add(superiorIncreCredit)) (vDSGToken.sol#1377)\n\t\t- superior.creditDebt = 0 (vDSGToken.sol#1406)\n\t\t- superior.creditDebt = superior.creditDebt.sub(superiorDecreCredit) (vDSGToken.sol#1408)\n\t\t- superior.credit = 0 (vDSGToken.sol#1415)\n\t\t- superior.stakingPower = uint128(uint256(superior.stakingPower).sub(creditSP)) (vDSGToken.sol#1416)\n\t\t- superior.credit = uint128(uint256(superior.credit).sub(superiorDecreCredit)) (vDSGToken.sol#1418-1420)\n\t\t- superior.stakingPower = uint128(uint256(superior.stakingPower).sub(superiorDecreSP)) (vDSGToken.sol#1421)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "vDSGToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DSG/core-6f607f77698936e132e4e9b5cb4d75580636d919/contracts/token/vDSGToken.sol",
            "function": "transferFrom",
            "impact": "Low",
            "line": 1233,
            "line_end": 1243,
            "message": "Reentrancy in vDSGToken.transferFrom(address,address,uint256) (vDSGToken.sol#1233-1243):\n\tExternal calls:\n\t- _updateAlpha() (vDSGToken.sol#1239)\n\t\t- IDsgToken(_dsgToken).mint(address(this),curDistribution) (vDSGToken.sol#1359)\n\tState variables written after the call(s):\n\t- _transfer(from,to,vDsgAmount) (vDSGToken.sol#1240)\n\t\t- superior.stakingPower = uint128(uint256(superior.stakingPower).add(superiorIncreSP)) (vDSGToken.sol#1376)\n\t\t- superior.credit = uint128(uint256(superior.credit).add(superiorIncreCredit)) (vDSGToken.sol#1377)\n\t\t- superior.creditDebt = 0 (vDSGToken.sol#1406)\n\t\t- superior.creditDebt = superior.creditDebt.sub(superiorDecreCredit) (vDSGToken.sol#1408)\n\t\t- superior.credit = 0 (vDSGToken.sol#1415)\n\t\t- superior.stakingPower = uint128(uint256(superior.stakingPower).sub(creditSP)) (vDSGToken.sol#1416)\n\t\t- superior.credit = uint128(uint256(superior.credit).sub(superiorDecreCredit)) (vDSGToken.sol#1418-1420)\n\t\t- superior.stakingPower = uint128(uint256(superior.stakingPower).sub(superiorDecreSP)) (vDSGToken.sol#1421)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "vDSGToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DSG/core-6f607f77698936e132e4e9b5cb4d75580636d919/contracts/token/vDSGToken.sol",
            "function": "donate",
            "impact": "Low",
            "line": 1189,
            "line_end": 1197,
            "message": "Reentrancy in vDSGToken.donate(uint256) (vDSGToken.sol#1189-1197):\n\tExternal calls:\n\t- IERC20(_dsgToken).safeTransferFrom(msg.sender,address(this),dsgAmount) (vDSGToken.sol#1191)\n\tState variables written after the call(s):\n\t- alpha = uint112(uint256(alpha).add(DecimalMath.divFloor(dsgAmount,_totalStakingPower))) (vDSGToken.sol#1193-1195)\n",
            "name": "reentrancy-benign",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "vDSGToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DSG/core-6f607f77698936e132e4e9b5cb4d75580636d919/contracts/token/vDSGToken.sol",
            "function": "redeem",
            "impact": "Low",
            "line": 1150,
            "line_end": 1187,
            "message": "Reentrancy in vDSGToken.redeem(uint256,bool) (vDSGToken.sol#1150-1187):\n\tExternal calls:\n\t- _updateAlpha() (vDSGToken.sol#1151)\n\t\t- IDsgToken(_dsgToken).mint(address(this),curDistribution) (vDSGToken.sol#1359)\n\t- IERC20(_dsgToken).safeTransfer(msg.sender,dsgReceive) (vDSGToken.sol#1169)\n\t- IDsgToken(_dsgToken).burn(burnDsgAmount) (vDSGToken.sol#1172)\n\t- IERC20(_dsgToken).safeTransfer(_dsgReserve,reserveAmount) (vDSGToken.sol#1175)\n\tEvent emitted after the call(s):\n\t- RedeemVDSG(msg.sender,dsgReceive,burnDsgAmount,withdrawFeeAmount,reserveAmount) (vDSGToken.sol#1186)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "vDSGToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DSG/core-6f607f77698936e132e4e9b5cb4d75580636d919/contracts/token/vDSGToken.sol",
            "function": "transferFrom",
            "impact": "Low",
            "line": 1233,
            "line_end": 1243,
            "message": "Reentrancy in vDSGToken.transferFrom(address,address,uint256) (vDSGToken.sol#1233-1243):\n\tExternal calls:\n\t- _updateAlpha() (vDSGToken.sol#1239)\n\t\t- IDsgToken(_dsgToken).mint(address(this),curDistribution) (vDSGToken.sol#1359)\n\tEvent emitted after the call(s):\n\t- Transfer(from,to,vDsgAmount) (vDSGToken.sol#1444)\n\t\t- _transfer(from,to,vDsgAmount) (vDSGToken.sol#1240)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "vDSGToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DSG/core-6f607f77698936e132e4e9b5cb4d75580636d919/contracts/token/vDSGToken.sol",
            "function": "changePerReward",
            "impact": "Low",
            "line": 1080,
            "line_end": 1084,
            "message": "Reentrancy in vDSGToken.changePerReward(uint256) (vDSGToken.sol#1080-1084):\n\tExternal calls:\n\t- _updateAlpha() (vDSGToken.sol#1081)\n\t\t- IDsgToken(_dsgToken).mint(address(this),curDistribution) (vDSGToken.sol#1359)\n\tEvent emitted after the call(s):\n\t- ChangePerReward(dsgPerBlock) (vDSGToken.sol#1083)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "vDSGToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DSG/core-6f607f77698936e132e4e9b5cb4d75580636d919/contracts/token/vDSGToken.sol",
            "function": "transfer",
            "impact": "Low",
            "line": 1221,
            "line_end": 1225,
            "message": "Reentrancy in vDSGToken.transfer(address,uint256) (vDSGToken.sol#1221-1225):\n\tExternal calls:\n\t- _updateAlpha() (vDSGToken.sol#1222)\n\t\t- IDsgToken(_dsgToken).mint(address(this),curDistribution) (vDSGToken.sol#1359)\n\tEvent emitted after the call(s):\n\t- Transfer(from,to,vDsgAmount) (vDSGToken.sol#1444)\n\t\t- _transfer(msg.sender,to,vDsgAmount) (vDSGToken.sol#1223)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "vDSGToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DSG/core-6f607f77698936e132e4e9b5cb4d75580636d919/contracts/token/vDSGToken.sol",
            "function": "donate",
            "impact": "Low",
            "line": 1189,
            "line_end": 1197,
            "message": "Reentrancy in vDSGToken.donate(uint256) (vDSGToken.sol#1189-1197):\n\tExternal calls:\n\t- IERC20(_dsgToken).safeTransferFrom(msg.sender,address(this),dsgAmount) (vDSGToken.sol#1191)\n\tEvent emitted after the call(s):\n\t- DonateDSG(msg.sender,dsgAmount) (vDSGToken.sol#1196)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "vDSGToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DSG/core-6f607f77698936e132e4e9b5cb4d75580636d919/contracts/token/vDSGToken.sol",
            "function": "_updateAlpha",
            "impact": "Low",
            "line": 1350,
            "line_end": 1365,
            "message": "Reentrancy in vDSGToken._updateAlpha() (vDSGToken.sol#1350-1365):\n\tExternal calls:\n\t- IDsgToken(_dsgToken).mint(address(this),curDistribution) (vDSGToken.sol#1359)\n\tEvent emitted after the call(s):\n\t- PreDeposit(curDistribution) (vDSGToken.sol#1362)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "Medium",
            "contract": "vDSGToken",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DSG/core-6f607f77698936e132e4e9b5cb4d75580636d919/contracts/token/vDSGToken.sol",
            "function": "mint",
            "impact": "Low",
            "line": 1114,
            "line_end": 1148,
            "message": "Reentrancy in vDSGToken.mint(uint256,address) (vDSGToken.sol#1114-1148):\n\tExternal calls:\n\t- _updateAlpha() (vDSGToken.sol#1139)\n\t\t- IDsgToken(_dsgToken).mint(address(this),curDistribution) (vDSGToken.sol#1359)\n\t- IERC20(_dsgToken).safeTransferFrom(msg.sender,address(this),dsgAmount) (vDSGToken.sol#1141)\n\tEvent emitted after the call(s):\n\t- MintVDSG(msg.sender,superiorAddress,dsgAmount) (vDSGToken.sol#1147)\n",
            "name": "reentrancy-events",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DSG/core-6f607f77698936e132e4e9b5cb4d75580636d919/contracts/token/vDSGToken.sol",
            "impact": "Informational",
            "line": 946,
            "message": "DecimalMath.ONE (vDSGToken.sol#946) is never used in DecimalMath (vDSGToken.sol#943-972)\n",
            "name": "unused-state",
            "check": "FP"
        },
        {
            "confidence": "High",
            "filename": "Dapp_dataset/positive/DAppSCAN-source/contracts/PeckShield-DSG/core-6f607f77698936e132e4e9b5cb4d75580636d919/contracts/token/vDSGToken.sol",
            "impact": "Informational",
            "line": 947,
            "message": "DecimalMath.ONE2 (vDSGToken.sol#947) is never used in DecimalMath (vDSGToken.sol#943-972)\n",
            "name": "unused-state",
            "check": "FP"
        }
    ],
    "infos": [],
    "parser": {
        "id": "slither-0.10.0",
        "mode": "solidity",
        "version": "2024/04/30"
    }
}